(global["webpackJsonp"] = global["webpackJsonp"] || []).push([["common/vendor"],[
/* 0 */,
/* 1 */
/*!************************************************************!*\
  !*** ./node_modules/@dcloudio/uni-mp-weixin/dist/index.js ***!
  \************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
Object.defineProperty(exports, "__esModule", { value: true });exports.createApp = createApp;exports.createComponent = createComponent;exports.createPage = createPage;exports.createPlugin = createPlugin;exports.createSubpackageApp = createSubpackageApp;exports.default = void 0;var _vue = _interopRequireDefault(__webpack_require__(/*! vue */ 2));function _interopRequireDefault(obj) {return obj && obj.__esModule ? obj : { default: obj };}function ownKeys(object, enumerableOnly) {var keys = Object.keys(object);if (Object.getOwnPropertySymbols) {var symbols = Object.getOwnPropertySymbols(object);if (enumerableOnly) symbols = symbols.filter(function (sym) {return Object.getOwnPropertyDescriptor(object, sym).enumerable;});keys.push.apply(keys, symbols);}return keys;}function _objectSpread(target) {for (var i = 1; i < arguments.length; i++) {var source = arguments[i] != null ? arguments[i] : {};if (i % 2) {ownKeys(Object(source), true).forEach(function (key) {_defineProperty(target, key, source[key]);});} else if (Object.getOwnPropertyDescriptors) {Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));} else {ownKeys(Object(source)).forEach(function (key) {Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));});}}return target;}function _slicedToArray(arr, i) {return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest();}function _nonIterableRest() {throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");}function _iterableToArrayLimit(arr, i) {if (typeof Symbol === "undefined" || !(Symbol.iterator in Object(arr))) return;var _arr = [];var _n = true;var _d = false;var _e = undefined;try {for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {_arr.push(_s.value);if (i && _arr.length === i) break;}} catch (err) {_d = true;_e = err;} finally {try {if (!_n && _i["return"] != null) _i["return"]();} finally {if (_d) throw _e;}}return _arr;}function _arrayWithHoles(arr) {if (Array.isArray(arr)) return arr;}function _defineProperty(obj, key, value) {if (key in obj) {Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true });} else {obj[key] = value;}return obj;}function _toConsumableArray(arr) {return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _unsupportedIterableToArray(arr) || _nonIterableSpread();}function _nonIterableSpread() {throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");}function _unsupportedIterableToArray(o, minLen) {if (!o) return;if (typeof o === "string") return _arrayLikeToArray(o, minLen);var n = Object.prototype.toString.call(o).slice(8, -1);if (n === "Object" && o.constructor) n = o.constructor.name;if (n === "Map" || n === "Set") return Array.from(o);if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen);}function _iterableToArray(iter) {if (typeof Symbol !== "undefined" && Symbol.iterator in Object(iter)) return Array.from(iter);}function _arrayWithoutHoles(arr) {if (Array.isArray(arr)) return _arrayLikeToArray(arr);}function _arrayLikeToArray(arr, len) {if (len == null || len > arr.length) len = arr.length;for (var i = 0, arr2 = new Array(len); i < len; i++) {arr2[i] = arr[i];}return arr2;}

var _toString = Object.prototype.toString;
var hasOwnProperty = Object.prototype.hasOwnProperty;

function isFn(fn) {
  return typeof fn === 'function';
}

function isStr(str) {
  return typeof str === 'string';
}

function isPlainObject(obj) {
  return _toString.call(obj) === '[object Object]';
}

function hasOwn(obj, key) {
  return hasOwnProperty.call(obj, key);
}

function noop() {}

/**
                    * Create a cached version of a pure function.
                    */
function cached(fn) {
  var cache = Object.create(null);
  return function cachedFn(str) {
    var hit = cache[str];
    return hit || (cache[str] = fn(str));
  };
}

/**
   * Camelize a hyphen-delimited string.
   */
var camelizeRE = /-(\w)/g;
var camelize = cached(function (str) {
  return str.replace(camelizeRE, function (_, c) {return c ? c.toUpperCase() : '';});
});

var HOOKS = [
'invoke',
'success',
'fail',
'complete',
'returnValue'];


var globalInterceptors = {};
var scopedInterceptors = {};

function mergeHook(parentVal, childVal) {
  var res = childVal ?
  parentVal ?
  parentVal.concat(childVal) :
  Array.isArray(childVal) ?
  childVal : [childVal] :
  parentVal;
  return res ?
  dedupeHooks(res) :
  res;
}

function dedupeHooks(hooks) {
  var res = [];
  for (var i = 0; i < hooks.length; i++) {
    if (res.indexOf(hooks[i]) === -1) {
      res.push(hooks[i]);
    }
  }
  return res;
}

function removeHook(hooks, hook) {
  var index = hooks.indexOf(hook);
  if (index !== -1) {
    hooks.splice(index, 1);
  }
}

function mergeInterceptorHook(interceptor, option) {
  Object.keys(option).forEach(function (hook) {
    if (HOOKS.indexOf(hook) !== -1 && isFn(option[hook])) {
      interceptor[hook] = mergeHook(interceptor[hook], option[hook]);
    }
  });
}

function removeInterceptorHook(interceptor, option) {
  if (!interceptor || !option) {
    return;
  }
  Object.keys(option).forEach(function (hook) {
    if (HOOKS.indexOf(hook) !== -1 && isFn(option[hook])) {
      removeHook(interceptor[hook], option[hook]);
    }
  });
}

function addInterceptor(method, option) {
  if (typeof method === 'string' && isPlainObject(option)) {
    mergeInterceptorHook(scopedInterceptors[method] || (scopedInterceptors[method] = {}), option);
  } else if (isPlainObject(method)) {
    mergeInterceptorHook(globalInterceptors, method);
  }
}

function removeInterceptor(method, option) {
  if (typeof method === 'string') {
    if (isPlainObject(option)) {
      removeInterceptorHook(scopedInterceptors[method], option);
    } else {
      delete scopedInterceptors[method];
    }
  } else if (isPlainObject(method)) {
    removeInterceptorHook(globalInterceptors, method);
  }
}

function wrapperHook(hook) {
  return function (data) {
    return hook(data) || data;
  };
}

function isPromise(obj) {
  return !!obj && (typeof obj === 'object' || typeof obj === 'function') && typeof obj.then === 'function';
}

function queue(hooks, data) {
  var promise = false;
  for (var i = 0; i < hooks.length; i++) {
    var hook = hooks[i];
    if (promise) {
      promise = Promise.resolve(wrapperHook(hook));
    } else {
      var res = hook(data);
      if (isPromise(res)) {
        promise = Promise.resolve(res);
      }
      if (res === false) {
        return {
          then: function then() {} };

      }
    }
  }
  return promise || {
    then: function then(callback) {
      return callback(data);
    } };

}

function wrapperOptions(interceptor) {var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};
  ['success', 'fail', 'complete'].forEach(function (name) {
    if (Array.isArray(interceptor[name])) {
      var oldCallback = options[name];
      options[name] = function callbackInterceptor(res) {
        queue(interceptor[name], res).then(function (res) {
          /* eslint-disable no-mixed-operators */
          return isFn(oldCallback) && oldCallback(res) || res;
        });
      };
    }
  });
  return options;
}

function wrapperReturnValue(method, returnValue) {
  var returnValueHooks = [];
  if (Array.isArray(globalInterceptors.returnValue)) {
    returnValueHooks.push.apply(returnValueHooks, _toConsumableArray(globalInterceptors.returnValue));
  }
  var interceptor = scopedInterceptors[method];
  if (interceptor && Array.isArray(interceptor.returnValue)) {
    returnValueHooks.push.apply(returnValueHooks, _toConsumableArray(interceptor.returnValue));
  }
  returnValueHooks.forEach(function (hook) {
    returnValue = hook(returnValue) || returnValue;
  });
  return returnValue;
}

function getApiInterceptorHooks(method) {
  var interceptor = Object.create(null);
  Object.keys(globalInterceptors).forEach(function (hook) {
    if (hook !== 'returnValue') {
      interceptor[hook] = globalInterceptors[hook].slice();
    }
  });
  var scopedInterceptor = scopedInterceptors[method];
  if (scopedInterceptor) {
    Object.keys(scopedInterceptor).forEach(function (hook) {
      if (hook !== 'returnValue') {
        interceptor[hook] = (interceptor[hook] || []).concat(scopedInterceptor[hook]);
      }
    });
  }
  return interceptor;
}

function invokeApi(method, api, options) {for (var _len = arguments.length, params = new Array(_len > 3 ? _len - 3 : 0), _key = 3; _key < _len; _key++) {params[_key - 3] = arguments[_key];}
  var interceptor = getApiInterceptorHooks(method);
  if (interceptor && Object.keys(interceptor).length) {
    if (Array.isArray(interceptor.invoke)) {
      var res = queue(interceptor.invoke, options);
      return res.then(function (options) {
        return api.apply(void 0, [wrapperOptions(interceptor, options)].concat(params));
      });
    } else {
      return api.apply(void 0, [wrapperOptions(interceptor, options)].concat(params));
    }
  }
  return api.apply(void 0, [options].concat(params));
}

var promiseInterceptor = {
  returnValue: function returnValue(res) {
    if (!isPromise(res)) {
      return res;
    }
    return res.then(function (res) {
      return res[1];
    }).catch(function (res) {
      return res[0];
    });
  } };


var SYNC_API_RE =
/^\$|Window$|WindowStyle$|sendNativeEvent|restoreGlobal|getCurrentSubNVue|getMenuButtonBoundingClientRect|^report|interceptors|Interceptor$|getSubNVueById|requireNativePlugin|upx2px|hideKeyboard|canIUse|^create|Sync$|Manager$|base64ToArrayBuffer|arrayBufferToBase64/;

var CONTEXT_API_RE = /^create|Manager$/;

// Context例外情况
var CONTEXT_API_RE_EXC = ['createBLEConnection'];

// 同步例外情况
var ASYNC_API = ['createBLEConnection'];

var CALLBACK_API_RE = /^on|^off/;

function isContextApi(name) {
  return CONTEXT_API_RE.test(name) && CONTEXT_API_RE_EXC.indexOf(name) === -1;
}
function isSyncApi(name) {
  return SYNC_API_RE.test(name) && ASYNC_API.indexOf(name) === -1;
}

function isCallbackApi(name) {
  return CALLBACK_API_RE.test(name) && name !== 'onPush';
}

function handlePromise(promise) {
  return promise.then(function (data) {
    return [null, data];
  }).
  catch(function (err) {return [err];});
}

function shouldPromise(name) {
  if (
  isContextApi(name) ||
  isSyncApi(name) ||
  isCallbackApi(name))
  {
    return false;
  }
  return true;
}

/* eslint-disable no-extend-native */
if (!Promise.prototype.finally) {
  Promise.prototype.finally = function (callback) {
    var promise = this.constructor;
    return this.then(
    function (value) {return promise.resolve(callback()).then(function () {return value;});},
    function (reason) {return promise.resolve(callback()).then(function () {
        throw reason;
      });});

  };
}

function promisify(name, api) {
  if (!shouldPromise(name)) {
    return api;
  }
  return function promiseApi() {var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};for (var _len2 = arguments.length, params = new Array(_len2 > 1 ? _len2 - 1 : 0), _key2 = 1; _key2 < _len2; _key2++) {params[_key2 - 1] = arguments[_key2];}
    if (isFn(options.success) || isFn(options.fail) || isFn(options.complete)) {
      return wrapperReturnValue(name, invokeApi.apply(void 0, [name, api, options].concat(params)));
    }
    return wrapperReturnValue(name, handlePromise(new Promise(function (resolve, reject) {
      invokeApi.apply(void 0, [name, api, Object.assign({}, options, {
        success: resolve,
        fail: reject })].concat(
      params));
    })));
  };
}

var EPS = 1e-4;
var BASE_DEVICE_WIDTH = 750;
var isIOS = false;
var deviceWidth = 0;
var deviceDPR = 0;

function checkDeviceWidth() {var _wx$getSystemInfoSync =




  wx.getSystemInfoSync(),platform = _wx$getSystemInfoSync.platform,pixelRatio = _wx$getSystemInfoSync.pixelRatio,windowWidth = _wx$getSystemInfoSync.windowWidth; // uni=>wx runtime 编译目标是 uni 对象，内部不允许直接使用 uni

  deviceWidth = windowWidth;
  deviceDPR = pixelRatio;
  isIOS = platform === 'ios';
}

function upx2px(number, newDeviceWidth) {
  if (deviceWidth === 0) {
    checkDeviceWidth();
  }

  number = Number(number);
  if (number === 0) {
    return 0;
  }
  var result = number / BASE_DEVICE_WIDTH * (newDeviceWidth || deviceWidth);
  if (result < 0) {
    result = -result;
  }
  result = Math.floor(result + EPS);
  if (result === 0) {
    if (deviceDPR === 1 || !isIOS) {
      result = 1;
    } else {
      result = 0.5;
    }
  }
  return number < 0 ? -result : result;
}

var interceptors = {
  promiseInterceptor: promiseInterceptor };


var baseApi = /*#__PURE__*/Object.freeze({
  __proto__: null,
  upx2px: upx2px,
  addInterceptor: addInterceptor,
  removeInterceptor: removeInterceptor,
  interceptors: interceptors });


function findExistsPageIndex(url) {
  var pages = getCurrentPages();
  var len = pages.length;
  while (len--) {
    var page = pages[len];
    if (page.$page && page.$page.fullPath === url) {
      return len;
    }
  }
  return -1;
}

var redirectTo = {
  name: function name(fromArgs) {
    if (fromArgs.exists === 'back' && fromArgs.delta) {
      return 'navigateBack';
    }
    return 'redirectTo';
  },
  args: function args(fromArgs) {
    if (fromArgs.exists === 'back' && fromArgs.url) {
      var existsPageIndex = findExistsPageIndex(fromArgs.url);
      if (existsPageIndex !== -1) {
        var delta = getCurrentPages().length - 1 - existsPageIndex;
        if (delta > 0) {
          fromArgs.delta = delta;
        }
      }
    }
  } };


var previewImage = {
  args: function args(fromArgs) {
    var currentIndex = parseInt(fromArgs.current);
    if (isNaN(currentIndex)) {
      return;
    }
    var urls = fromArgs.urls;
    if (!Array.isArray(urls)) {
      return;
    }
    var len = urls.length;
    if (!len) {
      return;
    }
    if (currentIndex < 0) {
      currentIndex = 0;
    } else if (currentIndex >= len) {
      currentIndex = len - 1;
    }
    if (currentIndex > 0) {
      fromArgs.current = urls[currentIndex];
      fromArgs.urls = urls.filter(
      function (item, index) {return index < currentIndex ? item !== urls[currentIndex] : true;});

    } else {
      fromArgs.current = urls[0];
    }
    return {
      indicator: false,
      loop: false };

  } };


var UUID_KEY = '__DC_STAT_UUID';
var deviceId;
function addUuid(result) {
  deviceId = deviceId || wx.getStorageSync(UUID_KEY);
  if (!deviceId) {
    deviceId = Date.now() + '' + Math.floor(Math.random() * 1e7);
    wx.setStorage({
      key: UUID_KEY,
      data: deviceId });

  }
  result.deviceId = deviceId;
}

function addSafeAreaInsets(result) {
  if (result.safeArea) {
    var safeArea = result.safeArea;
    result.safeAreaInsets = {
      top: safeArea.top,
      left: safeArea.left,
      right: result.windowWidth - safeArea.right,
      bottom: result.windowHeight - safeArea.bottom };

  }
}

var getSystemInfo = {
  returnValue: function returnValue(result) {
    addUuid(result);
    addSafeAreaInsets(result);
  } };


// import navigateTo from 'uni-helpers/navigate-to'

var protocols = {
  redirectTo: redirectTo,
  // navigateTo,  // 由于在微信开发者工具的页面参数，会显示__id__参数，因此暂时关闭mp-weixin对于navigateTo的AOP
  previewImage: previewImage,
  getSystemInfo: getSystemInfo,
  getSystemInfoSync: getSystemInfo };

var todos = [
'vibrate',
'preloadPage',
'unPreloadPage',
'loadSubPackage'];

var canIUses = [];

var CALLBACKS = ['success', 'fail', 'cancel', 'complete'];

function processCallback(methodName, method, returnValue) {
  return function (res) {
    return method(processReturnValue(methodName, res, returnValue));
  };
}

function processArgs(methodName, fromArgs) {var argsOption = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};var returnValue = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : {};var keepFromArgs = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : false;
  if (isPlainObject(fromArgs)) {// 一般 api 的参数解析
    var toArgs = keepFromArgs === true ? fromArgs : {}; // returnValue 为 false 时，说明是格式化返回值，直接在返回值对象上修改赋值
    if (isFn(argsOption)) {
      argsOption = argsOption(fromArgs, toArgs) || {};
    }
    for (var key in fromArgs) {
      if (hasOwn(argsOption, key)) {
        var keyOption = argsOption[key];
        if (isFn(keyOption)) {
          keyOption = keyOption(fromArgs[key], fromArgs, toArgs);
        }
        if (!keyOption) {// 不支持的参数
          console.warn("The '".concat(methodName, "' method of platform '\u5FAE\u4FE1\u5C0F\u7A0B\u5E8F' does not support option '").concat(key, "'"));
        } else if (isStr(keyOption)) {// 重写参数 key
          toArgs[keyOption] = fromArgs[key];
        } else if (isPlainObject(keyOption)) {// {name:newName,value:value}可重新指定参数 key:value
          toArgs[keyOption.name ? keyOption.name : key] = keyOption.value;
        }
      } else if (CALLBACKS.indexOf(key) !== -1) {
        if (isFn(fromArgs[key])) {
          toArgs[key] = processCallback(methodName, fromArgs[key], returnValue);
        }
      } else {
        if (!keepFromArgs) {
          toArgs[key] = fromArgs[key];
        }
      }
    }
    return toArgs;
  } else if (isFn(fromArgs)) {
    fromArgs = processCallback(methodName, fromArgs, returnValue);
  }
  return fromArgs;
}

function processReturnValue(methodName, res, returnValue) {var keepReturnValue = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : false;
  if (isFn(protocols.returnValue)) {// 处理通用 returnValue
    res = protocols.returnValue(methodName, res);
  }
  return processArgs(methodName, res, returnValue, {}, keepReturnValue);
}

function wrapper(methodName, method) {
  if (hasOwn(protocols, methodName)) {
    var protocol = protocols[methodName];
    if (!protocol) {// 暂不支持的 api
      return function () {
        console.error("Platform '\u5FAE\u4FE1\u5C0F\u7A0B\u5E8F' does not support '".concat(methodName, "'."));
      };
    }
    return function (arg1, arg2) {// 目前 api 最多两个参数
      var options = protocol;
      if (isFn(protocol)) {
        options = protocol(arg1);
      }

      arg1 = processArgs(methodName, arg1, options.args, options.returnValue);

      var args = [arg1];
      if (typeof arg2 !== 'undefined') {
        args.push(arg2);
      }
      if (isFn(options.name)) {
        methodName = options.name(arg1);
      } else if (isStr(options.name)) {
        methodName = options.name;
      }
      var returnValue = wx[methodName].apply(wx, args);
      if (isSyncApi(methodName)) {// 同步 api
        return processReturnValue(methodName, returnValue, options.returnValue, isContextApi(methodName));
      }
      return returnValue;
    };
  }
  return method;
}

var todoApis = Object.create(null);

var TODOS = [
'onTabBarMidButtonTap',
'subscribePush',
'unsubscribePush',
'onPush',
'offPush',
'share'];


function createTodoApi(name) {
  return function todoApi(_ref)


  {var fail = _ref.fail,complete = _ref.complete;
    var res = {
      errMsg: "".concat(name, ":fail method '").concat(name, "' not supported") };

    isFn(fail) && fail(res);
    isFn(complete) && complete(res);
  };
}

TODOS.forEach(function (name) {
  todoApis[name] = createTodoApi(name);
});

var providers = {
  oauth: ['weixin'],
  share: ['weixin'],
  payment: ['wxpay'],
  push: ['weixin'] };


function getProvider(_ref2)




{var service = _ref2.service,success = _ref2.success,fail = _ref2.fail,complete = _ref2.complete;
  var res = false;
  if (providers[service]) {
    res = {
      errMsg: 'getProvider:ok',
      service: service,
      provider: providers[service] };

    isFn(success) && success(res);
  } else {
    res = {
      errMsg: 'getProvider:fail service not found' };

    isFn(fail) && fail(res);
  }
  isFn(complete) && complete(res);
}

var extraApi = /*#__PURE__*/Object.freeze({
  __proto__: null,
  getProvider: getProvider });


var getEmitter = function () {
  var Emitter;
  return function getUniEmitter() {
    if (!Emitter) {
      Emitter = new _vue.default();
    }
    return Emitter;
  };
}();

function apply(ctx, method, args) {
  return ctx[method].apply(ctx, args);
}

function $on() {
  return apply(getEmitter(), '$on', Array.prototype.slice.call(arguments));
}
function $off() {
  return apply(getEmitter(), '$off', Array.prototype.slice.call(arguments));
}
function $once() {
  return apply(getEmitter(), '$once', Array.prototype.slice.call(arguments));
}
function $emit() {
  return apply(getEmitter(), '$emit', Array.prototype.slice.call(arguments));
}

var eventApi = /*#__PURE__*/Object.freeze({
  __proto__: null,
  $on: $on,
  $off: $off,
  $once: $once,
  $emit: $emit });


var api = /*#__PURE__*/Object.freeze({
  __proto__: null });


var MPPage = Page;
var MPComponent = Component;

var customizeRE = /:/g;

var customize = cached(function (str) {
  return camelize(str.replace(customizeRE, '-'));
});

function initTriggerEvent(mpInstance) {
  {
    if (!wx.canIUse || !wx.canIUse('nextTick')) {
      return;
    }
  }
  var oldTriggerEvent = mpInstance.triggerEvent;
  mpInstance.triggerEvent = function (event) {for (var _len3 = arguments.length, args = new Array(_len3 > 1 ? _len3 - 1 : 0), _key3 = 1; _key3 < _len3; _key3++) {args[_key3 - 1] = arguments[_key3];}
    return oldTriggerEvent.apply(mpInstance, [customize(event)].concat(args));
  };
}

function initHook(name, options) {
  var oldHook = options[name];
  if (!oldHook) {
    options[name] = function () {
      initTriggerEvent(this);
    };
  } else {
    options[name] = function () {
      initTriggerEvent(this);for (var _len4 = arguments.length, args = new Array(_len4), _key4 = 0; _key4 < _len4; _key4++) {args[_key4] = arguments[_key4];}
      return oldHook.apply(this, args);
    };
  }
}
if (!MPPage.__$wrappered) {
  MPPage.__$wrappered = true;
  Page = function Page() {var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};
    initHook('onLoad', options);
    return MPPage(options);
  };
  Page.after = MPPage.after;

  Component = function Component() {var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};
    initHook('created', options);
    return MPComponent(options);
  };
}

var PAGE_EVENT_HOOKS = [
'onPullDownRefresh',
'onReachBottom',
'onAddToFavorites',
'onShareTimeline',
'onShareAppMessage',
'onPageScroll',
'onResize',
'onTabItemTap'];


function initMocks(vm, mocks) {
  var mpInstance = vm.$mp[vm.mpType];
  mocks.forEach(function (mock) {
    if (hasOwn(mpInstance, mock)) {
      vm[mock] = mpInstance[mock];
    }
  });
}

function hasHook(hook, vueOptions) {
  if (!vueOptions) {
    return true;
  }

  if (_vue.default.options && Array.isArray(_vue.default.options[hook])) {
    return true;
  }

  vueOptions = vueOptions.default || vueOptions;

  if (isFn(vueOptions)) {
    if (isFn(vueOptions.extendOptions[hook])) {
      return true;
    }
    if (vueOptions.super &&
    vueOptions.super.options &&
    Array.isArray(vueOptions.super.options[hook])) {
      return true;
    }
    return false;
  }

  if (isFn(vueOptions[hook])) {
    return true;
  }
  var mixins = vueOptions.mixins;
  if (Array.isArray(mixins)) {
    return !!mixins.find(function (mixin) {return hasHook(hook, mixin);});
  }
}

function initHooks(mpOptions, hooks, vueOptions) {
  hooks.forEach(function (hook) {
    if (hasHook(hook, vueOptions)) {
      mpOptions[hook] = function (args) {
        return this.$vm && this.$vm.__call_hook(hook, args);
      };
    }
  });
}

function initVueComponent(Vue, vueOptions) {
  vueOptions = vueOptions.default || vueOptions;
  var VueComponent;
  if (isFn(vueOptions)) {
    VueComponent = vueOptions;
  } else {
    VueComponent = Vue.extend(vueOptions);
  }
  vueOptions = VueComponent.options;
  return [VueComponent, vueOptions];
}

function initSlots(vm, vueSlots) {
  if (Array.isArray(vueSlots) && vueSlots.length) {
    var $slots = Object.create(null);
    vueSlots.forEach(function (slotName) {
      $slots[slotName] = true;
    });
    vm.$scopedSlots = vm.$slots = $slots;
  }
}

function initVueIds(vueIds, mpInstance) {
  vueIds = (vueIds || '').split(',');
  var len = vueIds.length;

  if (len === 1) {
    mpInstance._$vueId = vueIds[0];
  } else if (len === 2) {
    mpInstance._$vueId = vueIds[0];
    mpInstance._$vuePid = vueIds[1];
  }
}

function initData(vueOptions, context) {
  var data = vueOptions.data || {};
  var methods = vueOptions.methods || {};

  if (typeof data === 'function') {
    try {
      data = data.call(context); // 支持 Vue.prototype 上挂的数据
    } catch (e) {
      if (Object({"NODE_ENV":"development","VUE_APP_NAME":"bookingVaccineMini","VUE_APP_PLATFORM":"mp-weixin","BASE_URL":"/"}).VUE_APP_DEBUG) {
        console.warn('根据 Vue 的 data 函数初始化小程序 data 失败，请尽量确保 data 函数中不访问 vm 对象，否则可能影响首次数据渲染速度。', data);
      }
    }
  } else {
    try {
      // 对 data 格式化
      data = JSON.parse(JSON.stringify(data));
    } catch (e) {}
  }

  if (!isPlainObject(data)) {
    data = {};
  }

  Object.keys(methods).forEach(function (methodName) {
    if (context.__lifecycle_hooks__.indexOf(methodName) === -1 && !hasOwn(data, methodName)) {
      data[methodName] = methods[methodName];
    }
  });

  return data;
}

var PROP_TYPES = [String, Number, Boolean, Object, Array, null];

function createObserver(name) {
  return function observer(newVal, oldVal) {
    if (this.$vm) {
      this.$vm[name] = newVal; // 为了触发其他非 render watcher
    }
  };
}

function initBehaviors(vueOptions, initBehavior) {
  var vueBehaviors = vueOptions.behaviors;
  var vueExtends = vueOptions.extends;
  var vueMixins = vueOptions.mixins;

  var vueProps = vueOptions.props;

  if (!vueProps) {
    vueOptions.props = vueProps = [];
  }

  var behaviors = [];
  if (Array.isArray(vueBehaviors)) {
    vueBehaviors.forEach(function (behavior) {
      behaviors.push(behavior.replace('uni://', "wx".concat("://")));
      if (behavior === 'uni://form-field') {
        if (Array.isArray(vueProps)) {
          vueProps.push('name');
          vueProps.push('value');
        } else {
          vueProps.name = {
            type: String,
            default: '' };

          vueProps.value = {
            type: [String, Number, Boolean, Array, Object, Date],
            default: '' };

        }
      }
    });
  }
  if (isPlainObject(vueExtends) && vueExtends.props) {
    behaviors.push(
    initBehavior({
      properties: initProperties(vueExtends.props, true) }));


  }
  if (Array.isArray(vueMixins)) {
    vueMixins.forEach(function (vueMixin) {
      if (isPlainObject(vueMixin) && vueMixin.props) {
        behaviors.push(
        initBehavior({
          properties: initProperties(vueMixin.props, true) }));


      }
    });
  }
  return behaviors;
}

function parsePropType(key, type, defaultValue, file) {
  // [String]=>String
  if (Array.isArray(type) && type.length === 1) {
    return type[0];
  }
  return type;
}

function initProperties(props) {var isBehavior = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;var file = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : '';
  var properties = {};
  if (!isBehavior) {
    properties.vueId = {
      type: String,
      value: '' };

    // 用于字节跳动小程序模拟抽象节点
    properties.generic = {
      type: Object,
      value: null };

    properties.vueSlots = { // 小程序不能直接定义 $slots 的 props，所以通过 vueSlots 转换到 $slots
      type: null,
      value: [],
      observer: function observer(newVal, oldVal) {
        var $slots = Object.create(null);
        newVal.forEach(function (slotName) {
          $slots[slotName] = true;
        });
        this.setData({
          $slots: $slots });

      } };

  }
  if (Array.isArray(props)) {// ['title']
    props.forEach(function (key) {
      properties[key] = {
        type: null,
        observer: createObserver(key) };

    });
  } else if (isPlainObject(props)) {// {title:{type:String,default:''},content:String}
    Object.keys(props).forEach(function (key) {
      var opts = props[key];
      if (isPlainObject(opts)) {// title:{type:String,default:''}
        var value = opts.default;
        if (isFn(value)) {
          value = value();
        }

        opts.type = parsePropType(key, opts.type);

        properties[key] = {
          type: PROP_TYPES.indexOf(opts.type) !== -1 ? opts.type : null,
          value: value,
          observer: createObserver(key) };

      } else {// content:String
        var type = parsePropType(key, opts);
        properties[key] = {
          type: PROP_TYPES.indexOf(type) !== -1 ? type : null,
          observer: createObserver(key) };

      }
    });
  }
  return properties;
}

function wrapper$1(event) {
  // TODO 又得兼容 mpvue 的 mp 对象
  try {
    event.mp = JSON.parse(JSON.stringify(event));
  } catch (e) {}

  event.stopPropagation = noop;
  event.preventDefault = noop;

  event.target = event.target || {};

  if (!hasOwn(event, 'detail')) {
    event.detail = {};
  }

  if (hasOwn(event, 'markerId')) {
    event.detail = typeof event.detail === 'object' ? event.detail : {};
    event.detail.markerId = event.markerId;
  }

  if (isPlainObject(event.detail)) {
    event.target = Object.assign({}, event.target, event.detail);
  }

  return event;
}

function getExtraValue(vm, dataPathsArray) {
  var context = vm;
  dataPathsArray.forEach(function (dataPathArray) {
    var dataPath = dataPathArray[0];
    var value = dataPathArray[2];
    if (dataPath || typeof value !== 'undefined') {// ['','',index,'disable']
      var propPath = dataPathArray[1];
      var valuePath = dataPathArray[3];

      var vFor;
      if (Number.isInteger(dataPath)) {
        vFor = dataPath;
      } else if (!dataPath) {
        vFor = context;
      } else if (typeof dataPath === 'string' && dataPath) {
        if (dataPath.indexOf('#s#') === 0) {
          vFor = dataPath.substr(3);
        } else {
          vFor = vm.__get_value(dataPath, context);
        }
      }

      if (Number.isInteger(vFor)) {
        context = value;
      } else if (!propPath) {
        context = vFor[value];
      } else {
        if (Array.isArray(vFor)) {
          context = vFor.find(function (vForItem) {
            return vm.__get_value(propPath, vForItem) === value;
          });
        } else if (isPlainObject(vFor)) {
          context = Object.keys(vFor).find(function (vForKey) {
            return vm.__get_value(propPath, vFor[vForKey]) === value;
          });
        } else {
          console.error('v-for 暂不支持循环数据：', vFor);
        }
      }

      if (valuePath) {
        context = vm.__get_value(valuePath, context);
      }
    }
  });
  return context;
}

function processEventExtra(vm, extra, event) {
  var extraObj = {};

  if (Array.isArray(extra) && extra.length) {
    /**
                                              *[
                                              *    ['data.items', 'data.id', item.data.id],
                                              *    ['metas', 'id', meta.id]
                                              *],
                                              *[
                                              *    ['data.items', 'data.id', item.data.id],
                                              *    ['metas', 'id', meta.id]
                                              *],
                                              *'test'
                                              */
    extra.forEach(function (dataPath, index) {
      if (typeof dataPath === 'string') {
        if (!dataPath) {// model,prop.sync
          extraObj['$' + index] = vm;
        } else {
          if (dataPath === '$event') {// $event
            extraObj['$' + index] = event;
          } else if (dataPath === 'arguments') {
            if (event.detail && event.detail.__args__) {
              extraObj['$' + index] = event.detail.__args__;
            } else {
              extraObj['$' + index] = [event];
            }
          } else if (dataPath.indexOf('$event.') === 0) {// $event.target.value
            extraObj['$' + index] = vm.__get_value(dataPath.replace('$event.', ''), event);
          } else {
            extraObj['$' + index] = vm.__get_value(dataPath);
          }
        }
      } else {
        extraObj['$' + index] = getExtraValue(vm, dataPath);
      }
    });
  }

  return extraObj;
}

function getObjByArray(arr) {
  var obj = {};
  for (var i = 1; i < arr.length; i++) {
    var element = arr[i];
    obj[element[0]] = element[1];
  }
  return obj;
}

function processEventArgs(vm, event) {var args = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : [];var extra = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : [];var isCustom = arguments.length > 4 ? arguments[4] : undefined;var methodName = arguments.length > 5 ? arguments[5] : undefined;
  var isCustomMPEvent = false; // wxcomponent 组件，传递原始 event 对象
  if (isCustom) {// 自定义事件
    isCustomMPEvent = event.currentTarget &&
    event.currentTarget.dataset &&
    event.currentTarget.dataset.comType === 'wx';
    if (!args.length) {// 无参数，直接传入 event 或 detail 数组
      if (isCustomMPEvent) {
        return [event];
      }
      return event.detail.__args__ || event.detail;
    }
  }

  var extraObj = processEventExtra(vm, extra, event);

  var ret = [];
  args.forEach(function (arg) {
    if (arg === '$event') {
      if (methodName === '__set_model' && !isCustom) {// input v-model value
        ret.push(event.target.value);
      } else {
        if (isCustom && !isCustomMPEvent) {
          ret.push(event.detail.__args__[0]);
        } else {// wxcomponent 组件或内置组件
          ret.push(event);
        }
      }
    } else {
      if (Array.isArray(arg) && arg[0] === 'o') {
        ret.push(getObjByArray(arg));
      } else if (typeof arg === 'string' && hasOwn(extraObj, arg)) {
        ret.push(extraObj[arg]);
      } else {
        ret.push(arg);
      }
    }
  });

  return ret;
}

var ONCE = '~';
var CUSTOM = '^';

function isMatchEventType(eventType, optType) {
  return eventType === optType ||

  optType === 'regionchange' && (

  eventType === 'begin' ||
  eventType === 'end');


}

function getContextVm(vm) {
  var $parent = vm.$parent;
  // 父组件是 scoped slots 或者其他自定义组件时继续查找
  while ($parent && $parent.$parent && ($parent.$options.generic || $parent.$parent.$options.generic || $parent.$scope._$vuePid)) {
    $parent = $parent.$parent;
  }
  return $parent && $parent.$parent;
}

function handleEvent(event) {var _this = this;
  event = wrapper$1(event);

  // [['tap',[['handle',[1,2,a]],['handle1',[1,2,a]]]]]
  var dataset = (event.currentTarget || event.target).dataset;
  if (!dataset) {
    return console.warn('事件信息不存在');
  }
  var eventOpts = dataset.eventOpts || dataset['event-opts']; // 支付宝 web-view 组件 dataset 非驼峰
  if (!eventOpts) {
    return console.warn('事件信息不存在');
  }

  // [['handle',[1,2,a]],['handle1',[1,2,a]]]
  var eventType = event.type;

  var ret = [];

  eventOpts.forEach(function (eventOpt) {
    var type = eventOpt[0];
    var eventsArray = eventOpt[1];

    var isCustom = type.charAt(0) === CUSTOM;
    type = isCustom ? type.slice(1) : type;
    var isOnce = type.charAt(0) === ONCE;
    type = isOnce ? type.slice(1) : type;

    if (eventsArray && isMatchEventType(eventType, type)) {
      eventsArray.forEach(function (eventArray) {
        var methodName = eventArray[0];
        if (methodName) {
          var handlerCtx = _this.$vm;
          if (handlerCtx.$options.generic) {// mp-weixin,mp-toutiao 抽象节点模拟 scoped slots
            handlerCtx = getContextVm(handlerCtx) || handlerCtx;
          }
          if (methodName === '$emit') {
            handlerCtx.$emit.apply(handlerCtx,
            processEventArgs(
            _this.$vm,
            event,
            eventArray[1],
            eventArray[2],
            isCustom,
            methodName));

            return;
          }
          var handler = handlerCtx[methodName];
          if (!isFn(handler)) {
            throw new Error(" _vm.".concat(methodName, " is not a function"));
          }
          if (isOnce) {
            if (handler.once) {
              return;
            }
            handler.once = true;
          }
          var params = processEventArgs(
          _this.$vm,
          event,
          eventArray[1],
          eventArray[2],
          isCustom,
          methodName);

          params = Array.isArray(params) ? params : [];
          // 参数尾部增加原始事件对象用于复杂表达式内获取额外数据
          if (/=\s*\S+\.eventParams\s*\|\|\s*\S+\[['"]event-params['"]\]/.test(handler.toString())) {
            // eslint-disable-next-line no-sparse-arrays
            params = params.concat([,,,,,,,,,, event]);
          }
          ret.push(handler.apply(handlerCtx, params));
        }
      });
    }
  });

  if (
  eventType === 'input' &&
  ret.length === 1 &&
  typeof ret[0] !== 'undefined')
  {
    return ret[0];
  }
}

var eventChannels = {};

var eventChannelStack = [];

function getEventChannel(id) {
  if (id) {
    var eventChannel = eventChannels[id];
    delete eventChannels[id];
    return eventChannel;
  }
  return eventChannelStack.shift();
}

var hooks = [
'onShow',
'onHide',
'onError',
'onPageNotFound',
'onThemeChange',
'onUnhandledRejection'];


function initEventChannel() {
  _vue.default.prototype.getOpenerEventChannel = function () {
    // 微信小程序使用自身getOpenerEventChannel
    {
      return this.$scope.getOpenerEventChannel();
    }
  };
  var callHook = _vue.default.prototype.__call_hook;
  _vue.default.prototype.__call_hook = function (hook, args) {
    if (hook === 'onLoad' && args && args.__id__) {
      this.__eventChannel__ = getEventChannel(args.__id__);
      delete args.__id__;
    }
    return callHook.call(this, hook, args);
  };
}

function initScopedSlotsParams() {
  var center = {};
  var parents = {};

  _vue.default.prototype.$hasScopedSlotsParams = function (vueId) {
    var has = center[vueId];
    if (!has) {
      parents[vueId] = this;
      this.$on('hook:destory', function () {
        delete parents[vueId];
      });
    }
    return has;
  };

  _vue.default.prototype.$getScopedSlotsParams = function (vueId, name, key) {
    var data = center[vueId];
    if (data) {
      var object = data[name] || {};
      return key ? object[key] : object;
    } else {
      parents[vueId] = this;
      this.$on('hook:destory', function () {
        delete parents[vueId];
      });
    }
  };

  _vue.default.prototype.$setScopedSlotsParams = function (name, value) {
    var vueId = this.$options.propsData.vueId;
    var object = center[vueId] = center[vueId] || {};
    object[name] = value;
    if (parents[vueId]) {
      parents[vueId].$forceUpdate();
    }
  };

  _vue.default.mixin({
    destroyed: function destroyed() {
      var propsData = this.$options.propsData;
      var vueId = propsData && propsData.vueId;
      if (vueId) {
        delete center[vueId];
        delete parents[vueId];
      }
    } });

}

function parseBaseApp(vm, _ref3)


{var mocks = _ref3.mocks,initRefs = _ref3.initRefs;
  initEventChannel();
  {
    initScopedSlotsParams();
  }
  if (vm.$options.store) {
    _vue.default.prototype.$store = vm.$options.store;
  }

  _vue.default.prototype.mpHost = "mp-weixin";

  _vue.default.mixin({
    beforeCreate: function beforeCreate() {
      if (!this.$options.mpType) {
        return;
      }

      this.mpType = this.$options.mpType;

      this.$mp = _defineProperty({
        data: {} },
      this.mpType, this.$options.mpInstance);


      this.$scope = this.$options.mpInstance;

      delete this.$options.mpType;
      delete this.$options.mpInstance;
      if (this.mpType === 'page' && typeof getApp === 'function') {// hack vue-i18n
        var app = getApp();
        if (app.$vm && app.$vm.$i18n) {
          this._i18n = app.$vm.$i18n;
        }
      }
      if (this.mpType !== 'app') {
        initRefs(this);
        initMocks(this, mocks);
      }
    } });


  var appOptions = {
    onLaunch: function onLaunch(args) {
      if (this.$vm) {// 已经初始化过了，主要是为了百度，百度 onShow 在 onLaunch 之前
        return;
      }
      {
        if (wx.canIUse && !wx.canIUse('nextTick')) {// 事实 上2.2.3 即可，简单使用 2.3.0 的 nextTick 判断
          console.error('当前微信基础库版本过低，请将 微信开发者工具-详情-项目设置-调试基础库版本 更换为`2.3.0`以上');
        }
      }

      this.$vm = vm;

      this.$vm.$mp = {
        app: this };


      this.$vm.$scope = this;
      // vm 上也挂载 globalData
      this.$vm.globalData = this.globalData;

      this.$vm._isMounted = true;
      this.$vm.__call_hook('mounted', args);

      this.$vm.__call_hook('onLaunch', args);
    } };


  // 兼容旧版本 globalData
  appOptions.globalData = vm.$options.globalData || {};
  // 将 methods 中的方法挂在 getApp() 中
  var methods = vm.$options.methods;
  if (methods) {
    Object.keys(methods).forEach(function (name) {
      appOptions[name] = methods[name];
    });
  }

  initHooks(appOptions, hooks);

  return appOptions;
}

var mocks = ['__route__', '__wxExparserNodeId__', '__wxWebviewId__'];

function findVmByVueId(vm, vuePid) {
  var $children = vm.$children;
  // 优先查找直属(反向查找:https://github.com/dcloudio/uni-app/issues/1200)
  for (var i = $children.length - 1; i >= 0; i--) {
    var childVm = $children[i];
    if (childVm.$scope._$vueId === vuePid) {
      return childVm;
    }
  }
  // 反向递归查找
  var parentVm;
  for (var _i = $children.length - 1; _i >= 0; _i--) {
    parentVm = findVmByVueId($children[_i], vuePid);
    if (parentVm) {
      return parentVm;
    }
  }
}

function initBehavior(options) {
  return Behavior(options);
}

function isPage() {
  return !!this.route;
}

function initRelation(detail) {
  this.triggerEvent('__l', detail);
}

function selectAllComponents(mpInstance, selector, $refs) {
  var components = mpInstance.selectAllComponents(selector);
  components.forEach(function (component) {
    var ref = component.dataset.ref;
    $refs[ref] = component.$vm || component;
    {
      if (component.dataset.vueGeneric === 'scoped') {
        component.selectAllComponents('.scoped-ref').forEach(function (scopedComponent) {
          selectAllComponents(scopedComponent, selector, $refs);
        });
      }
    }
  });
}

function initRefs(vm) {
  var mpInstance = vm.$scope;
  Object.defineProperty(vm, '$refs', {
    get: function get() {
      var $refs = {};
      selectAllComponents(mpInstance, '.vue-ref', $refs);
      // TODO 暂不考虑 for 中的 scoped
      var forComponents = mpInstance.selectAllComponents('.vue-ref-in-for');
      forComponents.forEach(function (component) {
        var ref = component.dataset.ref;
        if (!$refs[ref]) {
          $refs[ref] = [];
        }
        $refs[ref].push(component.$vm || component);
      });
      return $refs;
    } });

}

function handleLink(event) {var _ref4 =



  event.detail || event.value,vuePid = _ref4.vuePid,vueOptions = _ref4.vueOptions; // detail 是微信,value 是百度(dipatch)

  var parentVm;

  if (vuePid) {
    parentVm = findVmByVueId(this.$vm, vuePid);
  }

  if (!parentVm) {
    parentVm = this.$vm;
  }

  vueOptions.parent = parentVm;
}

function parseApp(vm) {
  return parseBaseApp(vm, {
    mocks: mocks,
    initRefs: initRefs });

}

function createApp(vm) {
  App(parseApp(vm));
  return vm;
}

var encodeReserveRE = /[!'()*]/g;
var encodeReserveReplacer = function encodeReserveReplacer(c) {return '%' + c.charCodeAt(0).toString(16);};
var commaRE = /%2C/g;

// fixed encodeURIComponent which is more conformant to RFC3986:
// - escapes [!'()*]
// - preserve commas
var encode = function encode(str) {return encodeURIComponent(str).
  replace(encodeReserveRE, encodeReserveReplacer).
  replace(commaRE, ',');};

function stringifyQuery(obj) {var encodeStr = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : encode;
  var res = obj ? Object.keys(obj).map(function (key) {
    var val = obj[key];

    if (val === undefined) {
      return '';
    }

    if (val === null) {
      return encodeStr(key);
    }

    if (Array.isArray(val)) {
      var result = [];
      val.forEach(function (val2) {
        if (val2 === undefined) {
          return;
        }
        if (val2 === null) {
          result.push(encodeStr(key));
        } else {
          result.push(encodeStr(key) + '=' + encodeStr(val2));
        }
      });
      return result.join('&');
    }

    return encodeStr(key) + '=' + encodeStr(val);
  }).filter(function (x) {return x.length > 0;}).join('&') : null;
  return res ? "?".concat(res) : '';
}

function parseBaseComponent(vueComponentOptions)


{var _ref5 = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {},isPage = _ref5.isPage,initRelation = _ref5.initRelation;var _initVueComponent =
  initVueComponent(_vue.default, vueComponentOptions),_initVueComponent2 = _slicedToArray(_initVueComponent, 2),VueComponent = _initVueComponent2[0],vueOptions = _initVueComponent2[1];

  var options = _objectSpread({
    multipleSlots: true,
    addGlobalClass: true },
  vueOptions.options || {});


  {
    // 微信 multipleSlots 部分情况有 bug，导致内容顺序错乱 如 u-list，提供覆盖选项
    if (vueOptions['mp-weixin'] && vueOptions['mp-weixin'].options) {
      Object.assign(options, vueOptions['mp-weixin'].options);
    }
  }

  var componentOptions = {
    options: options,
    data: initData(vueOptions, _vue.default.prototype),
    behaviors: initBehaviors(vueOptions, initBehavior),
    properties: initProperties(vueOptions.props, false, vueOptions.__file),
    lifetimes: {
      attached: function attached() {
        var properties = this.properties;

        var options = {
          mpType: isPage.call(this) ? 'page' : 'component',
          mpInstance: this,
          propsData: properties };


        initVueIds(properties.vueId, this);

        // 处理父子关系
        initRelation.call(this, {
          vuePid: this._$vuePid,
          vueOptions: options });


        // 初始化 vue 实例
        this.$vm = new VueComponent(options);

        // 处理$slots,$scopedSlots（暂不支持动态变化$slots）
        initSlots(this.$vm, properties.vueSlots);

        // 触发首次 setData
        this.$vm.$mount();
      },
      ready: function ready() {
        // 当组件 props 默认值为 true，初始化时传入 false 会导致 created,ready 触发, 但 attached 不触发
        // https://developers.weixin.qq.com/community/develop/doc/00066ae2844cc0f8eb883e2a557800
        if (this.$vm) {
          this.$vm._isMounted = true;
          this.$vm.__call_hook('mounted');
          this.$vm.__call_hook('onReady');
        }
      },
      detached: function detached() {
        this.$vm && this.$vm.$destroy();
      } },

    pageLifetimes: {
      show: function show(args) {
        this.$vm && this.$vm.__call_hook('onPageShow', args);
      },
      hide: function hide() {
        this.$vm && this.$vm.__call_hook('onPageHide');
      },
      resize: function resize(size) {
        this.$vm && this.$vm.__call_hook('onPageResize', size);
      } },

    methods: {
      __l: handleLink,
      __e: handleEvent } };


  // externalClasses
  if (vueOptions.externalClasses) {
    componentOptions.externalClasses = vueOptions.externalClasses;
  }

  if (Array.isArray(vueOptions.wxsCallMethods)) {
    vueOptions.wxsCallMethods.forEach(function (callMethod) {
      componentOptions.methods[callMethod] = function (args) {
        return this.$vm[callMethod](args);
      };
    });
  }

  if (isPage) {
    return componentOptions;
  }
  return [componentOptions, VueComponent];
}

function parseComponent(vueComponentOptions) {
  return parseBaseComponent(vueComponentOptions, {
    isPage: isPage,
    initRelation: initRelation });

}

var hooks$1 = [
'onShow',
'onHide',
'onUnload'];


hooks$1.push.apply(hooks$1, PAGE_EVENT_HOOKS);

function parseBasePage(vuePageOptions, _ref6)


{var isPage = _ref6.isPage,initRelation = _ref6.initRelation;
  var pageOptions = parseComponent(vuePageOptions);

  initHooks(pageOptions.methods, hooks$1, vuePageOptions);

  pageOptions.methods.onLoad = function (query) {
    this.options = query;
    var copyQuery = Object.assign({}, query);
    delete copyQuery.__id__;
    this.$page = {
      fullPath: '/' + (this.route || this.is) + stringifyQuery(copyQuery) };

    this.$vm.$mp.query = query; // 兼容 mpvue
    this.$vm.__call_hook('onLoad', query);
  };

  return pageOptions;
}

function parsePage(vuePageOptions) {
  return parseBasePage(vuePageOptions, {
    isPage: isPage,
    initRelation: initRelation });

}

function createPage(vuePageOptions) {
  {
    return Component(parsePage(vuePageOptions));
  }
}

function createComponent(vueOptions) {
  {
    return Component(parseComponent(vueOptions));
  }
}

function createSubpackageApp(vm) {
  var appOptions = parseApp(vm);
  var app = getApp({
    allowDefault: true });

  var globalData = app.globalData;
  if (globalData) {
    Object.keys(appOptions.globalData).forEach(function (name) {
      if (!hasOwn(globalData, name)) {
        globalData[name] = appOptions.globalData[name];
      }
    });
  }
  Object.keys(appOptions).forEach(function (name) {
    if (!hasOwn(app, name)) {
      app[name] = appOptions[name];
    }
  });
  if (isFn(appOptions.onShow) && wx.onAppShow) {
    wx.onAppShow(function () {for (var _len5 = arguments.length, args = new Array(_len5), _key5 = 0; _key5 < _len5; _key5++) {args[_key5] = arguments[_key5];}
      appOptions.onShow.apply(app, args);
    });
  }
  if (isFn(appOptions.onHide) && wx.onAppHide) {
    wx.onAppHide(function () {for (var _len6 = arguments.length, args = new Array(_len6), _key6 = 0; _key6 < _len6; _key6++) {args[_key6] = arguments[_key6];}
      appOptions.onHide.apply(app, args);
    });
  }
  if (isFn(appOptions.onLaunch)) {
    var args = wx.getLaunchOptionsSync && wx.getLaunchOptionsSync();
    appOptions.onLaunch.call(app, args);
  }
  return vm;
}

function createPlugin(vm) {
  var appOptions = parseApp(vm);
  if (isFn(appOptions.onShow) && wx.onAppShow) {
    wx.onAppShow(function () {for (var _len7 = arguments.length, args = new Array(_len7), _key7 = 0; _key7 < _len7; _key7++) {args[_key7] = arguments[_key7];}
      appOptions.onShow.apply(vm, args);
    });
  }
  if (isFn(appOptions.onHide) && wx.onAppHide) {
    wx.onAppHide(function () {for (var _len8 = arguments.length, args = new Array(_len8), _key8 = 0; _key8 < _len8; _key8++) {args[_key8] = arguments[_key8];}
      appOptions.onHide.apply(vm, args);
    });
  }
  if (isFn(appOptions.onLaunch)) {
    var args = wx.getLaunchOptionsSync && wx.getLaunchOptionsSync();
    appOptions.onLaunch.call(vm, args);
  }
  return vm;
}

todos.forEach(function (todoApi) {
  protocols[todoApi] = false;
});

canIUses.forEach(function (canIUseApi) {
  var apiName = protocols[canIUseApi] && protocols[canIUseApi].name ? protocols[canIUseApi].name :
  canIUseApi;
  if (!wx.canIUse(apiName)) {
    protocols[canIUseApi] = false;
  }
});

var uni = {};

if (typeof Proxy !== 'undefined' && "mp-weixin" !== 'app-plus') {
  uni = new Proxy({}, {
    get: function get(target, name) {
      if (hasOwn(target, name)) {
        return target[name];
      }
      if (baseApi[name]) {
        return baseApi[name];
      }
      if (api[name]) {
        return promisify(name, api[name]);
      }
      {
        if (extraApi[name]) {
          return promisify(name, extraApi[name]);
        }
        if (todoApis[name]) {
          return promisify(name, todoApis[name]);
        }
      }
      if (eventApi[name]) {
        return eventApi[name];
      }
      if (!hasOwn(wx, name) && !hasOwn(protocols, name)) {
        return;
      }
      return promisify(name, wrapper(name, wx[name]));
    },
    set: function set(target, name, value) {
      target[name] = value;
      return true;
    } });

} else {
  Object.keys(baseApi).forEach(function (name) {
    uni[name] = baseApi[name];
  });

  {
    Object.keys(todoApis).forEach(function (name) {
      uni[name] = promisify(name, todoApis[name]);
    });
    Object.keys(extraApi).forEach(function (name) {
      uni[name] = promisify(name, todoApis[name]);
    });
  }

  Object.keys(eventApi).forEach(function (name) {
    uni[name] = eventApi[name];
  });

  Object.keys(api).forEach(function (name) {
    uni[name] = promisify(name, api[name]);
  });

  Object.keys(wx).forEach(function (name) {
    if (hasOwn(wx, name) || hasOwn(protocols, name)) {
      uni[name] = promisify(name, wrapper(name, wx[name]));
    }
  });
}

wx.createApp = createApp;
wx.createPage = createPage;
wx.createComponent = createComponent;
wx.createSubpackageApp = createSubpackageApp;
wx.createPlugin = createPlugin;

var uni$1 = uni;var _default =

uni$1;exports.default = _default;

/***/ }),
/* 2 */
/*!******************************************************************************************!*\
  !*** ./node_modules/@dcloudio/vue-cli-plugin-uni/packages/mp-vue/dist/mp.runtime.esm.js ***!
  \******************************************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* WEBPACK VAR INJECTION */(function(global) {/*!
 * Vue.js v2.6.11
 * (c) 2014-2021 Evan You
 * Released under the MIT License.
 */
/*  */

var emptyObject = Object.freeze({});

// These helpers produce better VM code in JS engines due to their
// explicitness and function inlining.
function isUndef (v) {
  return v === undefined || v === null
}

function isDef (v) {
  return v !== undefined && v !== null
}

function isTrue (v) {
  return v === true
}

function isFalse (v) {
  return v === false
}

/**
 * Check if value is primitive.
 */
function isPrimitive (value) {
  return (
    typeof value === 'string' ||
    typeof value === 'number' ||
    // $flow-disable-line
    typeof value === 'symbol' ||
    typeof value === 'boolean'
  )
}

/**
 * Quick object check - this is primarily used to tell
 * Objects from primitive values when we know the value
 * is a JSON-compliant type.
 */
function isObject (obj) {
  return obj !== null && typeof obj === 'object'
}

/**
 * Get the raw type string of a value, e.g., [object Object].
 */
var _toString = Object.prototype.toString;

function toRawType (value) {
  return _toString.call(value).slice(8, -1)
}

/**
 * Strict object type check. Only returns true
 * for plain JavaScript objects.
 */
function isPlainObject (obj) {
  return _toString.call(obj) === '[object Object]'
}

function isRegExp (v) {
  return _toString.call(v) === '[object RegExp]'
}

/**
 * Check if val is a valid array index.
 */
function isValidArrayIndex (val) {
  var n = parseFloat(String(val));
  return n >= 0 && Math.floor(n) === n && isFinite(val)
}

function isPromise (val) {
  return (
    isDef(val) &&
    typeof val.then === 'function' &&
    typeof val.catch === 'function'
  )
}

/**
 * Convert a value to a string that is actually rendered.
 */
function toString (val) {
  return val == null
    ? ''
    : Array.isArray(val) || (isPlainObject(val) && val.toString === _toString)
      ? JSON.stringify(val, null, 2)
      : String(val)
}

/**
 * Convert an input value to a number for persistence.
 * If the conversion fails, return original string.
 */
function toNumber (val) {
  var n = parseFloat(val);
  return isNaN(n) ? val : n
}

/**
 * Make a map and return a function for checking if a key
 * is in that map.
 */
function makeMap (
  str,
  expectsLowerCase
) {
  var map = Object.create(null);
  var list = str.split(',');
  for (var i = 0; i < list.length; i++) {
    map[list[i]] = true;
  }
  return expectsLowerCase
    ? function (val) { return map[val.toLowerCase()]; }
    : function (val) { return map[val]; }
}

/**
 * Check if a tag is a built-in tag.
 */
var isBuiltInTag = makeMap('slot,component', true);

/**
 * Check if an attribute is a reserved attribute.
 */
var isReservedAttribute = makeMap('key,ref,slot,slot-scope,is');

/**
 * Remove an item from an array.
 */
function remove (arr, item) {
  if (arr.length) {
    var index = arr.indexOf(item);
    if (index > -1) {
      return arr.splice(index, 1)
    }
  }
}

/**
 * Check whether an object has the property.
 */
var hasOwnProperty = Object.prototype.hasOwnProperty;
function hasOwn (obj, key) {
  return hasOwnProperty.call(obj, key)
}

/**
 * Create a cached version of a pure function.
 */
function cached (fn) {
  var cache = Object.create(null);
  return (function cachedFn (str) {
    var hit = cache[str];
    return hit || (cache[str] = fn(str))
  })
}

/**
 * Camelize a hyphen-delimited string.
 */
var camelizeRE = /-(\w)/g;
var camelize = cached(function (str) {
  return str.replace(camelizeRE, function (_, c) { return c ? c.toUpperCase() : ''; })
});

/**
 * Capitalize a string.
 */
var capitalize = cached(function (str) {
  return str.charAt(0).toUpperCase() + str.slice(1)
});

/**
 * Hyphenate a camelCase string.
 */
var hyphenateRE = /\B([A-Z])/g;
var hyphenate = cached(function (str) {
  return str.replace(hyphenateRE, '-$1').toLowerCase()
});

/**
 * Simple bind polyfill for environments that do not support it,
 * e.g., PhantomJS 1.x. Technically, we don't need this anymore
 * since native bind is now performant enough in most browsers.
 * But removing it would mean breaking code that was able to run in
 * PhantomJS 1.x, so this must be kept for backward compatibility.
 */

/* istanbul ignore next */
function polyfillBind (fn, ctx) {
  function boundFn (a) {
    var l = arguments.length;
    return l
      ? l > 1
        ? fn.apply(ctx, arguments)
        : fn.call(ctx, a)
      : fn.call(ctx)
  }

  boundFn._length = fn.length;
  return boundFn
}

function nativeBind (fn, ctx) {
  return fn.bind(ctx)
}

var bind = Function.prototype.bind
  ? nativeBind
  : polyfillBind;

/**
 * Convert an Array-like object to a real Array.
 */
function toArray (list, start) {
  start = start || 0;
  var i = list.length - start;
  var ret = new Array(i);
  while (i--) {
    ret[i] = list[i + start];
  }
  return ret
}

/**
 * Mix properties into target object.
 */
function extend (to, _from) {
  for (var key in _from) {
    to[key] = _from[key];
  }
  return to
}

/**
 * Merge an Array of Objects into a single Object.
 */
function toObject (arr) {
  var res = {};
  for (var i = 0; i < arr.length; i++) {
    if (arr[i]) {
      extend(res, arr[i]);
    }
  }
  return res
}

/* eslint-disable no-unused-vars */

/**
 * Perform no operation.
 * Stubbing args to make Flow happy without leaving useless transpiled code
 * with ...rest (https://flow.org/blog/2017/05/07/Strict-Function-Call-Arity/).
 */
function noop (a, b, c) {}

/**
 * Always return false.
 */
var no = function (a, b, c) { return false; };

/* eslint-enable no-unused-vars */

/**
 * Return the same value.
 */
var identity = function (_) { return _; };

/**
 * Check if two values are loosely equal - that is,
 * if they are plain objects, do they have the same shape?
 */
function looseEqual (a, b) {
  if (a === b) { return true }
  var isObjectA = isObject(a);
  var isObjectB = isObject(b);
  if (isObjectA && isObjectB) {
    try {
      var isArrayA = Array.isArray(a);
      var isArrayB = Array.isArray(b);
      if (isArrayA && isArrayB) {
        return a.length === b.length && a.every(function (e, i) {
          return looseEqual(e, b[i])
        })
      } else if (a instanceof Date && b instanceof Date) {
        return a.getTime() === b.getTime()
      } else if (!isArrayA && !isArrayB) {
        var keysA = Object.keys(a);
        var keysB = Object.keys(b);
        return keysA.length === keysB.length && keysA.every(function (key) {
          return looseEqual(a[key], b[key])
        })
      } else {
        /* istanbul ignore next */
        return false
      }
    } catch (e) {
      /* istanbul ignore next */
      return false
    }
  } else if (!isObjectA && !isObjectB) {
    return String(a) === String(b)
  } else {
    return false
  }
}

/**
 * Return the first index at which a loosely equal value can be
 * found in the array (if value is a plain object, the array must
 * contain an object of the same shape), or -1 if it is not present.
 */
function looseIndexOf (arr, val) {
  for (var i = 0; i < arr.length; i++) {
    if (looseEqual(arr[i], val)) { return i }
  }
  return -1
}

/**
 * Ensure a function is called only once.
 */
function once (fn) {
  var called = false;
  return function () {
    if (!called) {
      called = true;
      fn.apply(this, arguments);
    }
  }
}

var ASSET_TYPES = [
  'component',
  'directive',
  'filter'
];

var LIFECYCLE_HOOKS = [
  'beforeCreate',
  'created',
  'beforeMount',
  'mounted',
  'beforeUpdate',
  'updated',
  'beforeDestroy',
  'destroyed',
  'activated',
  'deactivated',
  'errorCaptured',
  'serverPrefetch'
];

/*  */



var config = ({
  /**
   * Option merge strategies (used in core/util/options)
   */
  // $flow-disable-line
  optionMergeStrategies: Object.create(null),

  /**
   * Whether to suppress warnings.
   */
  silent: false,

  /**
   * Show production mode tip message on boot?
   */
  productionTip: "development" !== 'production',

  /**
   * Whether to enable devtools
   */
  devtools: "development" !== 'production',

  /**
   * Whether to record perf
   */
  performance: false,

  /**
   * Error handler for watcher errors
   */
  errorHandler: null,

  /**
   * Warn handler for watcher warns
   */
  warnHandler: null,

  /**
   * Ignore certain custom elements
   */
  ignoredElements: [],

  /**
   * Custom user key aliases for v-on
   */
  // $flow-disable-line
  keyCodes: Object.create(null),

  /**
   * Check if a tag is reserved so that it cannot be registered as a
   * component. This is platform-dependent and may be overwritten.
   */
  isReservedTag: no,

  /**
   * Check if an attribute is reserved so that it cannot be used as a component
   * prop. This is platform-dependent and may be overwritten.
   */
  isReservedAttr: no,

  /**
   * Check if a tag is an unknown element.
   * Platform-dependent.
   */
  isUnknownElement: no,

  /**
   * Get the namespace of an element
   */
  getTagNamespace: noop,

  /**
   * Parse the real tag name for the specific platform.
   */
  parsePlatformTagName: identity,

  /**
   * Check if an attribute must be bound using property, e.g. value
   * Platform-dependent.
   */
  mustUseProp: no,

  /**
   * Perform updates asynchronously. Intended to be used by Vue Test Utils
   * This will significantly reduce performance if set to false.
   */
  async: true,

  /**
   * Exposed for legacy reasons
   */
  _lifecycleHooks: LIFECYCLE_HOOKS
});

/*  */

/**
 * unicode letters used for parsing html tags, component names and property paths.
 * using https://www.w3.org/TR/html53/semantics-scripting.html#potentialcustomelementname
 * skipping \u10000-\uEFFFF due to it freezing up PhantomJS
 */
var unicodeRegExp = /a-zA-Z\u00B7\u00C0-\u00D6\u00D8-\u00F6\u00F8-\u037D\u037F-\u1FFF\u200C-\u200D\u203F-\u2040\u2070-\u218F\u2C00-\u2FEF\u3001-\uD7FF\uF900-\uFDCF\uFDF0-\uFFFD/;

/**
 * Check if a string starts with $ or _
 */
function isReserved (str) {
  var c = (str + '').charCodeAt(0);
  return c === 0x24 || c === 0x5F
}

/**
 * Define a property.
 */
function def (obj, key, val, enumerable) {
  Object.defineProperty(obj, key, {
    value: val,
    enumerable: !!enumerable,
    writable: true,
    configurable: true
  });
}

/**
 * Parse simple path.
 */
var bailRE = new RegExp(("[^" + (unicodeRegExp.source) + ".$_\\d]"));
function parsePath (path) {
  if (bailRE.test(path)) {
    return
  }
  var segments = path.split('.');
  return function (obj) {
    for (var i = 0; i < segments.length; i++) {
      if (!obj) { return }
      obj = obj[segments[i]];
    }
    return obj
  }
}

/*  */

// can we use __proto__?
var hasProto = '__proto__' in {};

// Browser environment sniffing
var inBrowser = typeof window !== 'undefined';
var inWeex = typeof WXEnvironment !== 'undefined' && !!WXEnvironment.platform;
var weexPlatform = inWeex && WXEnvironment.platform.toLowerCase();
var UA = inBrowser && window.navigator.userAgent.toLowerCase();
var isIE = UA && /msie|trident/.test(UA);
var isIE9 = UA && UA.indexOf('msie 9.0') > 0;
var isEdge = UA && UA.indexOf('edge/') > 0;
var isAndroid = (UA && UA.indexOf('android') > 0) || (weexPlatform === 'android');
var isIOS = (UA && /iphone|ipad|ipod|ios/.test(UA)) || (weexPlatform === 'ios');
var isChrome = UA && /chrome\/\d+/.test(UA) && !isEdge;
var isPhantomJS = UA && /phantomjs/.test(UA);
var isFF = UA && UA.match(/firefox\/(\d+)/);

// Firefox has a "watch" function on Object.prototype...
var nativeWatch = ({}).watch;
if (inBrowser) {
  try {
    var opts = {};
    Object.defineProperty(opts, 'passive', ({
      get: function get () {
      }
    })); // https://github.com/facebook/flow/issues/285
    window.addEventListener('test-passive', null, opts);
  } catch (e) {}
}

// this needs to be lazy-evaled because vue may be required before
// vue-server-renderer can set VUE_ENV
var _isServer;
var isServerRendering = function () {
  if (_isServer === undefined) {
    /* istanbul ignore if */
    if (!inBrowser && !inWeex && typeof global !== 'undefined') {
      // detect presence of vue-server-renderer and avoid
      // Webpack shimming the process
      _isServer = global['process'] && global['process'].env.VUE_ENV === 'server';
    } else {
      _isServer = false;
    }
  }
  return _isServer
};

// detect devtools
var devtools = inBrowser && window.__VUE_DEVTOOLS_GLOBAL_HOOK__;

/* istanbul ignore next */
function isNative (Ctor) {
  return typeof Ctor === 'function' && /native code/.test(Ctor.toString())
}

var hasSymbol =
  typeof Symbol !== 'undefined' && isNative(Symbol) &&
  typeof Reflect !== 'undefined' && isNative(Reflect.ownKeys);

var _Set;
/* istanbul ignore if */ // $flow-disable-line
if (typeof Set !== 'undefined' && isNative(Set)) {
  // use native Set when available.
  _Set = Set;
} else {
  // a non-standard Set polyfill that only works with primitive keys.
  _Set = /*@__PURE__*/(function () {
    function Set () {
      this.set = Object.create(null);
    }
    Set.prototype.has = function has (key) {
      return this.set[key] === true
    };
    Set.prototype.add = function add (key) {
      this.set[key] = true;
    };
    Set.prototype.clear = function clear () {
      this.set = Object.create(null);
    };

    return Set;
  }());
}

/*  */

var warn = noop;
var tip = noop;
var generateComponentTrace = (noop); // work around flow check
var formatComponentName = (noop);

if (true) {
  var hasConsole = typeof console !== 'undefined';
  var classifyRE = /(?:^|[-_])(\w)/g;
  var classify = function (str) { return str
    .replace(classifyRE, function (c) { return c.toUpperCase(); })
    .replace(/[-_]/g, ''); };

  warn = function (msg, vm) {
    var trace = vm ? generateComponentTrace(vm) : '';

    if (config.warnHandler) {
      config.warnHandler.call(null, msg, vm, trace);
    } else if (hasConsole && (!config.silent)) {
      console.error(("[Vue warn]: " + msg + trace));
    }
  };

  tip = function (msg, vm) {
    if (hasConsole && (!config.silent)) {
      console.warn("[Vue tip]: " + msg + (
        vm ? generateComponentTrace(vm) : ''
      ));
    }
  };

  formatComponentName = function (vm, includeFile) {
    if (vm.$root === vm) {
      if (vm.$options && vm.$options.__file) { // fixed by xxxxxx
        return ('') + vm.$options.__file
      }
      return '<Root>'
    }
    var options = typeof vm === 'function' && vm.cid != null
      ? vm.options
      : vm._isVue
        ? vm.$options || vm.constructor.options
        : vm;
    var name = options.name || options._componentTag;
    var file = options.__file;
    if (!name && file) {
      var match = file.match(/([^/\\]+)\.vue$/);
      name = match && match[1];
    }

    return (
      (name ? ("<" + (classify(name)) + ">") : "<Anonymous>") +
      (file && includeFile !== false ? (" at " + file) : '')
    )
  };

  var repeat = function (str, n) {
    var res = '';
    while (n) {
      if (n % 2 === 1) { res += str; }
      if (n > 1) { str += str; }
      n >>= 1;
    }
    return res
  };

  generateComponentTrace = function (vm) {
    if (vm._isVue && vm.$parent) {
      var tree = [];
      var currentRecursiveSequence = 0;
      while (vm && vm.$options.name !== 'PageBody') {
        if (tree.length > 0) {
          var last = tree[tree.length - 1];
          if (last.constructor === vm.constructor) {
            currentRecursiveSequence++;
            vm = vm.$parent;
            continue
          } else if (currentRecursiveSequence > 0) {
            tree[tree.length - 1] = [last, currentRecursiveSequence];
            currentRecursiveSequence = 0;
          }
        }
        !vm.$options.isReserved && tree.push(vm);
        vm = vm.$parent;
      }
      return '\n\nfound in\n\n' + tree
        .map(function (vm, i) { return ("" + (i === 0 ? '---> ' : repeat(' ', 5 + i * 2)) + (Array.isArray(vm)
            ? ((formatComponentName(vm[0])) + "... (" + (vm[1]) + " recursive calls)")
            : formatComponentName(vm))); })
        .join('\n')
    } else {
      return ("\n\n(found in " + (formatComponentName(vm)) + ")")
    }
  };
}

/*  */

var uid = 0;

/**
 * A dep is an observable that can have multiple
 * directives subscribing to it.
 */
var Dep = function Dep () {
  this.id = uid++;
  this.subs = [];
};

Dep.prototype.addSub = function addSub (sub) {
  this.subs.push(sub);
};

Dep.prototype.removeSub = function removeSub (sub) {
  remove(this.subs, sub);
};

Dep.prototype.depend = function depend () {
  if (Dep.SharedObject.target) {
    Dep.SharedObject.target.addDep(this);
  }
};

Dep.prototype.notify = function notify () {
  // stabilize the subscriber list first
  var subs = this.subs.slice();
  if ( true && !config.async) {
    // subs aren't sorted in scheduler if not running async
    // we need to sort them now to make sure they fire in correct
    // order
    subs.sort(function (a, b) { return a.id - b.id; });
  }
  for (var i = 0, l = subs.length; i < l; i++) {
    subs[i].update();
  }
};

// The current target watcher being evaluated.
// This is globally unique because only one watcher
// can be evaluated at a time.
// fixed by xxxxxx (nvue shared vuex)
/* eslint-disable no-undef */
Dep.SharedObject = {};
Dep.SharedObject.target = null;
Dep.SharedObject.targetStack = [];

function pushTarget (target) {
  Dep.SharedObject.targetStack.push(target);
  Dep.SharedObject.target = target;
  Dep.target = target;
}

function popTarget () {
  Dep.SharedObject.targetStack.pop();
  Dep.SharedObject.target = Dep.SharedObject.targetStack[Dep.SharedObject.targetStack.length - 1];
  Dep.target = Dep.SharedObject.target;
}

/*  */

var VNode = function VNode (
  tag,
  data,
  children,
  text,
  elm,
  context,
  componentOptions,
  asyncFactory
) {
  this.tag = tag;
  this.data = data;
  this.children = children;
  this.text = text;
  this.elm = elm;
  this.ns = undefined;
  this.context = context;
  this.fnContext = undefined;
  this.fnOptions = undefined;
  this.fnScopeId = undefined;
  this.key = data && data.key;
  this.componentOptions = componentOptions;
  this.componentInstance = undefined;
  this.parent = undefined;
  this.raw = false;
  this.isStatic = false;
  this.isRootInsert = true;
  this.isComment = false;
  this.isCloned = false;
  this.isOnce = false;
  this.asyncFactory = asyncFactory;
  this.asyncMeta = undefined;
  this.isAsyncPlaceholder = false;
};

var prototypeAccessors = { child: { configurable: true } };

// DEPRECATED: alias for componentInstance for backwards compat.
/* istanbul ignore next */
prototypeAccessors.child.get = function () {
  return this.componentInstance
};

Object.defineProperties( VNode.prototype, prototypeAccessors );

var createEmptyVNode = function (text) {
  if ( text === void 0 ) text = '';

  var node = new VNode();
  node.text = text;
  node.isComment = true;
  return node
};

function createTextVNode (val) {
  return new VNode(undefined, undefined, undefined, String(val))
}

// optimized shallow clone
// used for static nodes and slot nodes because they may be reused across
// multiple renders, cloning them avoids errors when DOM manipulations rely
// on their elm reference.
function cloneVNode (vnode) {
  var cloned = new VNode(
    vnode.tag,
    vnode.data,
    // #7975
    // clone children array to avoid mutating original in case of cloning
    // a child.
    vnode.children && vnode.children.slice(),
    vnode.text,
    vnode.elm,
    vnode.context,
    vnode.componentOptions,
    vnode.asyncFactory
  );
  cloned.ns = vnode.ns;
  cloned.isStatic = vnode.isStatic;
  cloned.key = vnode.key;
  cloned.isComment = vnode.isComment;
  cloned.fnContext = vnode.fnContext;
  cloned.fnOptions = vnode.fnOptions;
  cloned.fnScopeId = vnode.fnScopeId;
  cloned.asyncMeta = vnode.asyncMeta;
  cloned.isCloned = true;
  return cloned
}

/*
 * not type checking this file because flow doesn't play well with
 * dynamically accessing methods on Array prototype
 */

var arrayProto = Array.prototype;
var arrayMethods = Object.create(arrayProto);

var methodsToPatch = [
  'push',
  'pop',
  'shift',
  'unshift',
  'splice',
  'sort',
  'reverse'
];

/**
 * Intercept mutating methods and emit events
 */
methodsToPatch.forEach(function (method) {
  // cache original method
  var original = arrayProto[method];
  def(arrayMethods, method, function mutator () {
    var args = [], len = arguments.length;
    while ( len-- ) args[ len ] = arguments[ len ];

    var result = original.apply(this, args);
    var ob = this.__ob__;
    var inserted;
    switch (method) {
      case 'push':
      case 'unshift':
        inserted = args;
        break
      case 'splice':
        inserted = args.slice(2);
        break
    }
    if (inserted) { ob.observeArray(inserted); }
    // notify change
    ob.dep.notify();
    return result
  });
});

/*  */

var arrayKeys = Object.getOwnPropertyNames(arrayMethods);

/**
 * In some cases we may want to disable observation inside a component's
 * update computation.
 */
var shouldObserve = true;

function toggleObserving (value) {
  shouldObserve = value;
}

/**
 * Observer class that is attached to each observed
 * object. Once attached, the observer converts the target
 * object's property keys into getter/setters that
 * collect dependencies and dispatch updates.
 */
var Observer = function Observer (value) {
  this.value = value;
  this.dep = new Dep();
  this.vmCount = 0;
  def(value, '__ob__', this);
  if (Array.isArray(value)) {
    if (hasProto) {
      {// fixed by xxxxxx 微信小程序使用 plugins 之后，数组方法被直接挂载到了数组对象上，需要执行 copyAugment 逻辑
        if(value.push !== value.__proto__.push){
          copyAugment(value, arrayMethods, arrayKeys);
        } else {
          protoAugment(value, arrayMethods);
        }
      }
    } else {
      copyAugment(value, arrayMethods, arrayKeys);
    }
    this.observeArray(value);
  } else {
    this.walk(value);
  }
};

/**
 * Walk through all properties and convert them into
 * getter/setters. This method should only be called when
 * value type is Object.
 */
Observer.prototype.walk = function walk (obj) {
  var keys = Object.keys(obj);
  for (var i = 0; i < keys.length; i++) {
    defineReactive$$1(obj, keys[i]);
  }
};

/**
 * Observe a list of Array items.
 */
Observer.prototype.observeArray = function observeArray (items) {
  for (var i = 0, l = items.length; i < l; i++) {
    observe(items[i]);
  }
};

// helpers

/**
 * Augment a target Object or Array by intercepting
 * the prototype chain using __proto__
 */
function protoAugment (target, src) {
  /* eslint-disable no-proto */
  target.__proto__ = src;
  /* eslint-enable no-proto */
}

/**
 * Augment a target Object or Array by defining
 * hidden properties.
 */
/* istanbul ignore next */
function copyAugment (target, src, keys) {
  for (var i = 0, l = keys.length; i < l; i++) {
    var key = keys[i];
    def(target, key, src[key]);
  }
}

/**
 * Attempt to create an observer instance for a value,
 * returns the new observer if successfully observed,
 * or the existing observer if the value already has one.
 */
function observe (value, asRootData) {
  if (!isObject(value) || value instanceof VNode) {
    return
  }
  var ob;
  if (hasOwn(value, '__ob__') && value.__ob__ instanceof Observer) {
    ob = value.__ob__;
  } else if (
    shouldObserve &&
    !isServerRendering() &&
    (Array.isArray(value) || isPlainObject(value)) &&
    Object.isExtensible(value) &&
    !value._isVue
  ) {
    ob = new Observer(value);
  }
  if (asRootData && ob) {
    ob.vmCount++;
  }
  return ob
}

/**
 * Define a reactive property on an Object.
 */
function defineReactive$$1 (
  obj,
  key,
  val,
  customSetter,
  shallow
) {
  var dep = new Dep();

  var property = Object.getOwnPropertyDescriptor(obj, key);
  if (property && property.configurable === false) {
    return
  }

  // cater for pre-defined getter/setters
  var getter = property && property.get;
  var setter = property && property.set;
  if ((!getter || setter) && arguments.length === 2) {
    val = obj[key];
  }

  var childOb = !shallow && observe(val);
  Object.defineProperty(obj, key, {
    enumerable: true,
    configurable: true,
    get: function reactiveGetter () {
      var value = getter ? getter.call(obj) : val;
      if (Dep.SharedObject.target) { // fixed by xxxxxx
        dep.depend();
        if (childOb) {
          childOb.dep.depend();
          if (Array.isArray(value)) {
            dependArray(value);
          }
        }
      }
      return value
    },
    set: function reactiveSetter (newVal) {
      var value = getter ? getter.call(obj) : val;
      /* eslint-disable no-self-compare */
      if (newVal === value || (newVal !== newVal && value !== value)) {
        return
      }
      /* eslint-enable no-self-compare */
      if ( true && customSetter) {
        customSetter();
      }
      // #7981: for accessor properties without setter
      if (getter && !setter) { return }
      if (setter) {
        setter.call(obj, newVal);
      } else {
        val = newVal;
      }
      childOb = !shallow && observe(newVal);
      dep.notify();
    }
  });
}

/**
 * Set a property on an object. Adds the new property and
 * triggers change notification if the property doesn't
 * already exist.
 */
function set (target, key, val) {
  if ( true &&
    (isUndef(target) || isPrimitive(target))
  ) {
    warn(("Cannot set reactive property on undefined, null, or primitive value: " + ((target))));
  }
  if (Array.isArray(target) && isValidArrayIndex(key)) {
    target.length = Math.max(target.length, key);
    target.splice(key, 1, val);
    return val
  }
  if (key in target && !(key in Object.prototype)) {
    target[key] = val;
    return val
  }
  var ob = (target).__ob__;
  if (target._isVue || (ob && ob.vmCount)) {
     true && warn(
      'Avoid adding reactive properties to a Vue instance or its root $data ' +
      'at runtime - declare it upfront in the data option.'
    );
    return val
  }
  if (!ob) {
    target[key] = val;
    return val
  }
  defineReactive$$1(ob.value, key, val);
  ob.dep.notify();
  return val
}

/**
 * Delete a property and trigger change if necessary.
 */
function del (target, key) {
  if ( true &&
    (isUndef(target) || isPrimitive(target))
  ) {
    warn(("Cannot delete reactive property on undefined, null, or primitive value: " + ((target))));
  }
  if (Array.isArray(target) && isValidArrayIndex(key)) {
    target.splice(key, 1);
    return
  }
  var ob = (target).__ob__;
  if (target._isVue || (ob && ob.vmCount)) {
     true && warn(
      'Avoid deleting properties on a Vue instance or its root $data ' +
      '- just set it to null.'
    );
    return
  }
  if (!hasOwn(target, key)) {
    return
  }
  delete target[key];
  if (!ob) {
    return
  }
  ob.dep.notify();
}

/**
 * Collect dependencies on array elements when the array is touched, since
 * we cannot intercept array element access like property getters.
 */
function dependArray (value) {
  for (var e = (void 0), i = 0, l = value.length; i < l; i++) {
    e = value[i];
    e && e.__ob__ && e.__ob__.dep.depend();
    if (Array.isArray(e)) {
      dependArray(e);
    }
  }
}

/*  */

/**
 * Option overwriting strategies are functions that handle
 * how to merge a parent option value and a child option
 * value into the final value.
 */
var strats = config.optionMergeStrategies;

/**
 * Options with restrictions
 */
if (true) {
  strats.el = strats.propsData = function (parent, child, vm, key) {
    if (!vm) {
      warn(
        "option \"" + key + "\" can only be used during instance " +
        'creation with the `new` keyword.'
      );
    }
    return defaultStrat(parent, child)
  };
}

/**
 * Helper that recursively merges two data objects together.
 */
function mergeData (to, from) {
  if (!from) { return to }
  var key, toVal, fromVal;

  var keys = hasSymbol
    ? Reflect.ownKeys(from)
    : Object.keys(from);

  for (var i = 0; i < keys.length; i++) {
    key = keys[i];
    // in case the object is already observed...
    if (key === '__ob__') { continue }
    toVal = to[key];
    fromVal = from[key];
    if (!hasOwn(to, key)) {
      set(to, key, fromVal);
    } else if (
      toVal !== fromVal &&
      isPlainObject(toVal) &&
      isPlainObject(fromVal)
    ) {
      mergeData(toVal, fromVal);
    }
  }
  return to
}

/**
 * Data
 */
function mergeDataOrFn (
  parentVal,
  childVal,
  vm
) {
  if (!vm) {
    // in a Vue.extend merge, both should be functions
    if (!childVal) {
      return parentVal
    }
    if (!parentVal) {
      return childVal
    }
    // when parentVal & childVal are both present,
    // we need to return a function that returns the
    // merged result of both functions... no need to
    // check if parentVal is a function here because
    // it has to be a function to pass previous merges.
    return function mergedDataFn () {
      return mergeData(
        typeof childVal === 'function' ? childVal.call(this, this) : childVal,
        typeof parentVal === 'function' ? parentVal.call(this, this) : parentVal
      )
    }
  } else {
    return function mergedInstanceDataFn () {
      // instance merge
      var instanceData = typeof childVal === 'function'
        ? childVal.call(vm, vm)
        : childVal;
      var defaultData = typeof parentVal === 'function'
        ? parentVal.call(vm, vm)
        : parentVal;
      if (instanceData) {
        return mergeData(instanceData, defaultData)
      } else {
        return defaultData
      }
    }
  }
}

strats.data = function (
  parentVal,
  childVal,
  vm
) {
  if (!vm) {
    if (childVal && typeof childVal !== 'function') {
       true && warn(
        'The "data" option should be a function ' +
        'that returns a per-instance value in component ' +
        'definitions.',
        vm
      );

      return parentVal
    }
    return mergeDataOrFn(parentVal, childVal)
  }

  return mergeDataOrFn(parentVal, childVal, vm)
};

/**
 * Hooks and props are merged as arrays.
 */
function mergeHook (
  parentVal,
  childVal
) {
  var res = childVal
    ? parentVal
      ? parentVal.concat(childVal)
      : Array.isArray(childVal)
        ? childVal
        : [childVal]
    : parentVal;
  return res
    ? dedupeHooks(res)
    : res
}

function dedupeHooks (hooks) {
  var res = [];
  for (var i = 0; i < hooks.length; i++) {
    if (res.indexOf(hooks[i]) === -1) {
      res.push(hooks[i]);
    }
  }
  return res
}

LIFECYCLE_HOOKS.forEach(function (hook) {
  strats[hook] = mergeHook;
});

/**
 * Assets
 *
 * When a vm is present (instance creation), we need to do
 * a three-way merge between constructor options, instance
 * options and parent options.
 */
function mergeAssets (
  parentVal,
  childVal,
  vm,
  key
) {
  var res = Object.create(parentVal || null);
  if (childVal) {
     true && assertObjectType(key, childVal, vm);
    return extend(res, childVal)
  } else {
    return res
  }
}

ASSET_TYPES.forEach(function (type) {
  strats[type + 's'] = mergeAssets;
});

/**
 * Watchers.
 *
 * Watchers hashes should not overwrite one
 * another, so we merge them as arrays.
 */
strats.watch = function (
  parentVal,
  childVal,
  vm,
  key
) {
  // work around Firefox's Object.prototype.watch...
  if (parentVal === nativeWatch) { parentVal = undefined; }
  if (childVal === nativeWatch) { childVal = undefined; }
  /* istanbul ignore if */
  if (!childVal) { return Object.create(parentVal || null) }
  if (true) {
    assertObjectType(key, childVal, vm);
  }
  if (!parentVal) { return childVal }
  var ret = {};
  extend(ret, parentVal);
  for (var key$1 in childVal) {
    var parent = ret[key$1];
    var child = childVal[key$1];
    if (parent && !Array.isArray(parent)) {
      parent = [parent];
    }
    ret[key$1] = parent
      ? parent.concat(child)
      : Array.isArray(child) ? child : [child];
  }
  return ret
};

/**
 * Other object hashes.
 */
strats.props =
strats.methods =
strats.inject =
strats.computed = function (
  parentVal,
  childVal,
  vm,
  key
) {
  if (childVal && "development" !== 'production') {
    assertObjectType(key, childVal, vm);
  }
  if (!parentVal) { return childVal }
  var ret = Object.create(null);
  extend(ret, parentVal);
  if (childVal) { extend(ret, childVal); }
  return ret
};
strats.provide = mergeDataOrFn;

/**
 * Default strategy.
 */
var defaultStrat = function (parentVal, childVal) {
  return childVal === undefined
    ? parentVal
    : childVal
};

/**
 * Validate component names
 */
function checkComponents (options) {
  for (var key in options.components) {
    validateComponentName(key);
  }
}

function validateComponentName (name) {
  if (!new RegExp(("^[a-zA-Z][\\-\\.0-9_" + (unicodeRegExp.source) + "]*$")).test(name)) {
    warn(
      'Invalid component name: "' + name + '". Component names ' +
      'should conform to valid custom element name in html5 specification.'
    );
  }
  if (isBuiltInTag(name) || config.isReservedTag(name)) {
    warn(
      'Do not use built-in or reserved HTML elements as component ' +
      'id: ' + name
    );
  }
}

/**
 * Ensure all props option syntax are normalized into the
 * Object-based format.
 */
function normalizeProps (options, vm) {
  var props = options.props;
  if (!props) { return }
  var res = {};
  var i, val, name;
  if (Array.isArray(props)) {
    i = props.length;
    while (i--) {
      val = props[i];
      if (typeof val === 'string') {
        name = camelize(val);
        res[name] = { type: null };
      } else if (true) {
        warn('props must be strings when using array syntax.');
      }
    }
  } else if (isPlainObject(props)) {
    for (var key in props) {
      val = props[key];
      name = camelize(key);
      res[name] = isPlainObject(val)
        ? val
        : { type: val };
    }
  } else if (true) {
    warn(
      "Invalid value for option \"props\": expected an Array or an Object, " +
      "but got " + (toRawType(props)) + ".",
      vm
    );
  }
  options.props = res;
}

/**
 * Normalize all injections into Object-based format
 */
function normalizeInject (options, vm) {
  var inject = options.inject;
  if (!inject) { return }
  var normalized = options.inject = {};
  if (Array.isArray(inject)) {
    for (var i = 0; i < inject.length; i++) {
      normalized[inject[i]] = { from: inject[i] };
    }
  } else if (isPlainObject(inject)) {
    for (var key in inject) {
      var val = inject[key];
      normalized[key] = isPlainObject(val)
        ? extend({ from: key }, val)
        : { from: val };
    }
  } else if (true) {
    warn(
      "Invalid value for option \"inject\": expected an Array or an Object, " +
      "but got " + (toRawType(inject)) + ".",
      vm
    );
  }
}

/**
 * Normalize raw function directives into object format.
 */
function normalizeDirectives (options) {
  var dirs = options.directives;
  if (dirs) {
    for (var key in dirs) {
      var def$$1 = dirs[key];
      if (typeof def$$1 === 'function') {
        dirs[key] = { bind: def$$1, update: def$$1 };
      }
    }
  }
}

function assertObjectType (name, value, vm) {
  if (!isPlainObject(value)) {
    warn(
      "Invalid value for option \"" + name + "\": expected an Object, " +
      "but got " + (toRawType(value)) + ".",
      vm
    );
  }
}

/**
 * Merge two option objects into a new one.
 * Core utility used in both instantiation and inheritance.
 */
function mergeOptions (
  parent,
  child,
  vm
) {
  if (true) {
    checkComponents(child);
  }

  if (typeof child === 'function') {
    child = child.options;
  }

  normalizeProps(child, vm);
  normalizeInject(child, vm);
  normalizeDirectives(child);

  // Apply extends and mixins on the child options,
  // but only if it is a raw options object that isn't
  // the result of another mergeOptions call.
  // Only merged options has the _base property.
  if (!child._base) {
    if (child.extends) {
      parent = mergeOptions(parent, child.extends, vm);
    }
    if (child.mixins) {
      for (var i = 0, l = child.mixins.length; i < l; i++) {
        parent = mergeOptions(parent, child.mixins[i], vm);
      }
    }
  }

  var options = {};
  var key;
  for (key in parent) {
    mergeField(key);
  }
  for (key in child) {
    if (!hasOwn(parent, key)) {
      mergeField(key);
    }
  }
  function mergeField (key) {
    var strat = strats[key] || defaultStrat;
    options[key] = strat(parent[key], child[key], vm, key);
  }
  return options
}

/**
 * Resolve an asset.
 * This function is used because child instances need access
 * to assets defined in its ancestor chain.
 */
function resolveAsset (
  options,
  type,
  id,
  warnMissing
) {
  /* istanbul ignore if */
  if (typeof id !== 'string') {
    return
  }
  var assets = options[type];
  // check local registration variations first
  if (hasOwn(assets, id)) { return assets[id] }
  var camelizedId = camelize(id);
  if (hasOwn(assets, camelizedId)) { return assets[camelizedId] }
  var PascalCaseId = capitalize(camelizedId);
  if (hasOwn(assets, PascalCaseId)) { return assets[PascalCaseId] }
  // fallback to prototype chain
  var res = assets[id] || assets[camelizedId] || assets[PascalCaseId];
  if ( true && warnMissing && !res) {
    warn(
      'Failed to resolve ' + type.slice(0, -1) + ': ' + id,
      options
    );
  }
  return res
}

/*  */



function validateProp (
  key,
  propOptions,
  propsData,
  vm
) {
  var prop = propOptions[key];
  var absent = !hasOwn(propsData, key);
  var value = propsData[key];
  // boolean casting
  var booleanIndex = getTypeIndex(Boolean, prop.type);
  if (booleanIndex > -1) {
    if (absent && !hasOwn(prop, 'default')) {
      value = false;
    } else if (value === '' || value === hyphenate(key)) {
      // only cast empty string / same name to boolean if
      // boolean has higher priority
      var stringIndex = getTypeIndex(String, prop.type);
      if (stringIndex < 0 || booleanIndex < stringIndex) {
        value = true;
      }
    }
  }
  // check default value
  if (value === undefined) {
    value = getPropDefaultValue(vm, prop, key);
    // since the default value is a fresh copy,
    // make sure to observe it.
    var prevShouldObserve = shouldObserve;
    toggleObserving(true);
    observe(value);
    toggleObserving(prevShouldObserve);
  }
  if (
    true
  ) {
    assertProp(prop, key, value, vm, absent);
  }
  return value
}

/**
 * Get the default value of a prop.
 */
function getPropDefaultValue (vm, prop, key) {
  // no default, return undefined
  if (!hasOwn(prop, 'default')) {
    return undefined
  }
  var def = prop.default;
  // warn against non-factory defaults for Object & Array
  if ( true && isObject(def)) {
    warn(
      'Invalid default value for prop "' + key + '": ' +
      'Props with type Object/Array must use a factory function ' +
      'to return the default value.',
      vm
    );
  }
  // the raw prop value was also undefined from previous render,
  // return previous default value to avoid unnecessary watcher trigger
  if (vm && vm.$options.propsData &&
    vm.$options.propsData[key] === undefined &&
    vm._props[key] !== undefined
  ) {
    return vm._props[key]
  }
  // call factory function for non-Function types
  // a value is Function if its prototype is function even across different execution context
  return typeof def === 'function' && getType(prop.type) !== 'Function'
    ? def.call(vm)
    : def
}

/**
 * Assert whether a prop is valid.
 */
function assertProp (
  prop,
  name,
  value,
  vm,
  absent
) {
  if (prop.required && absent) {
    warn(
      'Missing required prop: "' + name + '"',
      vm
    );
    return
  }
  if (value == null && !prop.required) {
    return
  }
  var type = prop.type;
  var valid = !type || type === true;
  var expectedTypes = [];
  if (type) {
    if (!Array.isArray(type)) {
      type = [type];
    }
    for (var i = 0; i < type.length && !valid; i++) {
      var assertedType = assertType(value, type[i]);
      expectedTypes.push(assertedType.expectedType || '');
      valid = assertedType.valid;
    }
  }

  if (!valid) {
    warn(
      getInvalidTypeMessage(name, value, expectedTypes),
      vm
    );
    return
  }
  var validator = prop.validator;
  if (validator) {
    if (!validator(value)) {
      warn(
        'Invalid prop: custom validator check failed for prop "' + name + '".',
        vm
      );
    }
  }
}

var simpleCheckRE = /^(String|Number|Boolean|Function|Symbol)$/;

function assertType (value, type) {
  var valid;
  var expectedType = getType(type);
  if (simpleCheckRE.test(expectedType)) {
    var t = typeof value;
    valid = t === expectedType.toLowerCase();
    // for primitive wrapper objects
    if (!valid && t === 'object') {
      valid = value instanceof type;
    }
  } else if (expectedType === 'Object') {
    valid = isPlainObject(value);
  } else if (expectedType === 'Array') {
    valid = Array.isArray(value);
  } else {
    valid = value instanceof type;
  }
  return {
    valid: valid,
    expectedType: expectedType
  }
}

/**
 * Use function string name to check built-in types,
 * because a simple equality check will fail when running
 * across different vms / iframes.
 */
function getType (fn) {
  var match = fn && fn.toString().match(/^\s*function (\w+)/);
  return match ? match[1] : ''
}

function isSameType (a, b) {
  return getType(a) === getType(b)
}

function getTypeIndex (type, expectedTypes) {
  if (!Array.isArray(expectedTypes)) {
    return isSameType(expectedTypes, type) ? 0 : -1
  }
  for (var i = 0, len = expectedTypes.length; i < len; i++) {
    if (isSameType(expectedTypes[i], type)) {
      return i
    }
  }
  return -1
}

function getInvalidTypeMessage (name, value, expectedTypes) {
  var message = "Invalid prop: type check failed for prop \"" + name + "\"." +
    " Expected " + (expectedTypes.map(capitalize).join(', '));
  var expectedType = expectedTypes[0];
  var receivedType = toRawType(value);
  var expectedValue = styleValue(value, expectedType);
  var receivedValue = styleValue(value, receivedType);
  // check if we need to specify expected value
  if (expectedTypes.length === 1 &&
      isExplicable(expectedType) &&
      !isBoolean(expectedType, receivedType)) {
    message += " with value " + expectedValue;
  }
  message += ", got " + receivedType + " ";
  // check if we need to specify received value
  if (isExplicable(receivedType)) {
    message += "with value " + receivedValue + ".";
  }
  return message
}

function styleValue (value, type) {
  if (type === 'String') {
    return ("\"" + value + "\"")
  } else if (type === 'Number') {
    return ("" + (Number(value)))
  } else {
    return ("" + value)
  }
}

function isExplicable (value) {
  var explicitTypes = ['string', 'number', 'boolean'];
  return explicitTypes.some(function (elem) { return value.toLowerCase() === elem; })
}

function isBoolean () {
  var args = [], len = arguments.length;
  while ( len-- ) args[ len ] = arguments[ len ];

  return args.some(function (elem) { return elem.toLowerCase() === 'boolean'; })
}

/*  */

function handleError (err, vm, info) {
  // Deactivate deps tracking while processing error handler to avoid possible infinite rendering.
  // See: https://github.com/vuejs/vuex/issues/1505
  pushTarget();
  try {
    if (vm) {
      var cur = vm;
      while ((cur = cur.$parent)) {
        var hooks = cur.$options.errorCaptured;
        if (hooks) {
          for (var i = 0; i < hooks.length; i++) {
            try {
              var capture = hooks[i].call(cur, err, vm, info) === false;
              if (capture) { return }
            } catch (e) {
              globalHandleError(e, cur, 'errorCaptured hook');
            }
          }
        }
      }
    }
    globalHandleError(err, vm, info);
  } finally {
    popTarget();
  }
}

function invokeWithErrorHandling (
  handler,
  context,
  args,
  vm,
  info
) {
  var res;
  try {
    res = args ? handler.apply(context, args) : handler.call(context);
    if (res && !res._isVue && isPromise(res) && !res._handled) {
      res.catch(function (e) { return handleError(e, vm, info + " (Promise/async)"); });
      // issue #9511
      // avoid catch triggering multiple times when nested calls
      res._handled = true;
    }
  } catch (e) {
    handleError(e, vm, info);
  }
  return res
}

function globalHandleError (err, vm, info) {
  if (config.errorHandler) {
    try {
      return config.errorHandler.call(null, err, vm, info)
    } catch (e) {
      // if the user intentionally throws the original error in the handler,
      // do not log it twice
      if (e !== err) {
        logError(e, null, 'config.errorHandler');
      }
    }
  }
  logError(err, vm, info);
}

function logError (err, vm, info) {
  if (true) {
    warn(("Error in " + info + ": \"" + (err.toString()) + "\""), vm);
  }
  /* istanbul ignore else */
  if ((inBrowser || inWeex) && typeof console !== 'undefined') {
    console.error(err);
  } else {
    throw err
  }
}

/*  */

var callbacks = [];
var pending = false;

function flushCallbacks () {
  pending = false;
  var copies = callbacks.slice(0);
  callbacks.length = 0;
  for (var i = 0; i < copies.length; i++) {
    copies[i]();
  }
}

// Here we have async deferring wrappers using microtasks.
// In 2.5 we used (macro) tasks (in combination with microtasks).
// However, it has subtle problems when state is changed right before repaint
// (e.g. #6813, out-in transitions).
// Also, using (macro) tasks in event handler would cause some weird behaviors
// that cannot be circumvented (e.g. #7109, #7153, #7546, #7834, #8109).
// So we now use microtasks everywhere, again.
// A major drawback of this tradeoff is that there are some scenarios
// where microtasks have too high a priority and fire in between supposedly
// sequential events (e.g. #4521, #6690, which have workarounds)
// or even between bubbling of the same event (#6566).
var timerFunc;

// The nextTick behavior leverages the microtask queue, which can be accessed
// via either native Promise.then or MutationObserver.
// MutationObserver has wider support, however it is seriously bugged in
// UIWebView in iOS >= 9.3.3 when triggered in touch event handlers. It
// completely stops working after triggering a few times... so, if native
// Promise is available, we will use it:
/* istanbul ignore next, $flow-disable-line */
if (typeof Promise !== 'undefined' && isNative(Promise)) {
  var p = Promise.resolve();
  timerFunc = function () {
    p.then(flushCallbacks);
    // In problematic UIWebViews, Promise.then doesn't completely break, but
    // it can get stuck in a weird state where callbacks are pushed into the
    // microtask queue but the queue isn't being flushed, until the browser
    // needs to do some other work, e.g. handle a timer. Therefore we can
    // "force" the microtask queue to be flushed by adding an empty timer.
    if (isIOS) { setTimeout(noop); }
  };
} else if (!isIE && typeof MutationObserver !== 'undefined' && (
  isNative(MutationObserver) ||
  // PhantomJS and iOS 7.x
  MutationObserver.toString() === '[object MutationObserverConstructor]'
)) {
  // Use MutationObserver where native Promise is not available,
  // e.g. PhantomJS, iOS7, Android 4.4
  // (#6466 MutationObserver is unreliable in IE11)
  var counter = 1;
  var observer = new MutationObserver(flushCallbacks);
  var textNode = document.createTextNode(String(counter));
  observer.observe(textNode, {
    characterData: true
  });
  timerFunc = function () {
    counter = (counter + 1) % 2;
    textNode.data = String(counter);
  };
} else if (typeof setImmediate !== 'undefined' && isNative(setImmediate)) {
  // Fallback to setImmediate.
  // Technically it leverages the (macro) task queue,
  // but it is still a better choice than setTimeout.
  timerFunc = function () {
    setImmediate(flushCallbacks);
  };
} else {
  // Fallback to setTimeout.
  timerFunc = function () {
    setTimeout(flushCallbacks, 0);
  };
}

function nextTick (cb, ctx) {
  var _resolve;
  callbacks.push(function () {
    if (cb) {
      try {
        cb.call(ctx);
      } catch (e) {
        handleError(e, ctx, 'nextTick');
      }
    } else if (_resolve) {
      _resolve(ctx);
    }
  });
  if (!pending) {
    pending = true;
    timerFunc();
  }
  // $flow-disable-line
  if (!cb && typeof Promise !== 'undefined') {
    return new Promise(function (resolve) {
      _resolve = resolve;
    })
  }
}

/*  */

/* not type checking this file because flow doesn't play well with Proxy */

var initProxy;

if (true) {
  var allowedGlobals = makeMap(
    'Infinity,undefined,NaN,isFinite,isNaN,' +
    'parseFloat,parseInt,decodeURI,decodeURIComponent,encodeURI,encodeURIComponent,' +
    'Math,Number,Date,Array,Object,Boolean,String,RegExp,Map,Set,JSON,Intl,' +
    'require' // for Webpack/Browserify
  );

  var warnNonPresent = function (target, key) {
    warn(
      "Property or method \"" + key + "\" is not defined on the instance but " +
      'referenced during render. Make sure that this property is reactive, ' +
      'either in the data option, or for class-based components, by ' +
      'initializing the property. ' +
      'See: https://vuejs.org/v2/guide/reactivity.html#Declaring-Reactive-Properties.',
      target
    );
  };

  var warnReservedPrefix = function (target, key) {
    warn(
      "Property \"" + key + "\" must be accessed with \"$data." + key + "\" because " +
      'properties starting with "$" or "_" are not proxied in the Vue instance to ' +
      'prevent conflicts with Vue internals. ' +
      'See: https://vuejs.org/v2/api/#data',
      target
    );
  };

  var hasProxy =
    typeof Proxy !== 'undefined' && isNative(Proxy);

  if (hasProxy) {
    var isBuiltInModifier = makeMap('stop,prevent,self,ctrl,shift,alt,meta,exact');
    config.keyCodes = new Proxy(config.keyCodes, {
      set: function set (target, key, value) {
        if (isBuiltInModifier(key)) {
          warn(("Avoid overwriting built-in modifier in config.keyCodes: ." + key));
          return false
        } else {
          target[key] = value;
          return true
        }
      }
    });
  }

  var hasHandler = {
    has: function has (target, key) {
      var has = key in target;
      var isAllowed = allowedGlobals(key) ||
        (typeof key === 'string' && key.charAt(0) === '_' && !(key in target.$data));
      if (!has && !isAllowed) {
        if (key in target.$data) { warnReservedPrefix(target, key); }
        else { warnNonPresent(target, key); }
      }
      return has || !isAllowed
    }
  };

  var getHandler = {
    get: function get (target, key) {
      if (typeof key === 'string' && !(key in target)) {
        if (key in target.$data) { warnReservedPrefix(target, key); }
        else { warnNonPresent(target, key); }
      }
      return target[key]
    }
  };

  initProxy = function initProxy (vm) {
    if (hasProxy) {
      // determine which proxy handler to use
      var options = vm.$options;
      var handlers = options.render && options.render._withStripped
        ? getHandler
        : hasHandler;
      vm._renderProxy = new Proxy(vm, handlers);
    } else {
      vm._renderProxy = vm;
    }
  };
}

/*  */

var seenObjects = new _Set();

/**
 * Recursively traverse an object to evoke all converted
 * getters, so that every nested property inside the object
 * is collected as a "deep" dependency.
 */
function traverse (val) {
  _traverse(val, seenObjects);
  seenObjects.clear();
}

function _traverse (val, seen) {
  var i, keys;
  var isA = Array.isArray(val);
  if ((!isA && !isObject(val)) || Object.isFrozen(val) || val instanceof VNode) {
    return
  }
  if (val.__ob__) {
    var depId = val.__ob__.dep.id;
    if (seen.has(depId)) {
      return
    }
    seen.add(depId);
  }
  if (isA) {
    i = val.length;
    while (i--) { _traverse(val[i], seen); }
  } else {
    keys = Object.keys(val);
    i = keys.length;
    while (i--) { _traverse(val[keys[i]], seen); }
  }
}

var mark;
var measure;

if (true) {
  var perf = inBrowser && window.performance;
  /* istanbul ignore if */
  if (
    perf &&
    perf.mark &&
    perf.measure &&
    perf.clearMarks &&
    perf.clearMeasures
  ) {
    mark = function (tag) { return perf.mark(tag); };
    measure = function (name, startTag, endTag) {
      perf.measure(name, startTag, endTag);
      perf.clearMarks(startTag);
      perf.clearMarks(endTag);
      // perf.clearMeasures(name)
    };
  }
}

/*  */

var normalizeEvent = cached(function (name) {
  var passive = name.charAt(0) === '&';
  name = passive ? name.slice(1) : name;
  var once$$1 = name.charAt(0) === '~'; // Prefixed last, checked first
  name = once$$1 ? name.slice(1) : name;
  var capture = name.charAt(0) === '!';
  name = capture ? name.slice(1) : name;
  return {
    name: name,
    once: once$$1,
    capture: capture,
    passive: passive
  }
});

function createFnInvoker (fns, vm) {
  function invoker () {
    var arguments$1 = arguments;

    var fns = invoker.fns;
    if (Array.isArray(fns)) {
      var cloned = fns.slice();
      for (var i = 0; i < cloned.length; i++) {
        invokeWithErrorHandling(cloned[i], null, arguments$1, vm, "v-on handler");
      }
    } else {
      // return handler return value for single handlers
      return invokeWithErrorHandling(fns, null, arguments, vm, "v-on handler")
    }
  }
  invoker.fns = fns;
  return invoker
}

function updateListeners (
  on,
  oldOn,
  add,
  remove$$1,
  createOnceHandler,
  vm
) {
  var name, def$$1, cur, old, event;
  for (name in on) {
    def$$1 = cur = on[name];
    old = oldOn[name];
    event = normalizeEvent(name);
    if (isUndef(cur)) {
       true && warn(
        "Invalid handler for event \"" + (event.name) + "\": got " + String(cur),
        vm
      );
    } else if (isUndef(old)) {
      if (isUndef(cur.fns)) {
        cur = on[name] = createFnInvoker(cur, vm);
      }
      if (isTrue(event.once)) {
        cur = on[name] = createOnceHandler(event.name, cur, event.capture);
      }
      add(event.name, cur, event.capture, event.passive, event.params);
    } else if (cur !== old) {
      old.fns = cur;
      on[name] = old;
    }
  }
  for (name in oldOn) {
    if (isUndef(on[name])) {
      event = normalizeEvent(name);
      remove$$1(event.name, oldOn[name], event.capture);
    }
  }
}

/*  */

/*  */

// fixed by xxxxxx (mp properties)
function extractPropertiesFromVNodeData(data, Ctor, res, context) {
  var propOptions = Ctor.options.mpOptions && Ctor.options.mpOptions.properties;
  if (isUndef(propOptions)) {
    return res
  }
  var externalClasses = Ctor.options.mpOptions.externalClasses || [];
  var attrs = data.attrs;
  var props = data.props;
  if (isDef(attrs) || isDef(props)) {
    for (var key in propOptions) {
      var altKey = hyphenate(key);
      var result = checkProp(res, props, key, altKey, true) ||
          checkProp(res, attrs, key, altKey, false);
      // externalClass
      if (
        result &&
        res[key] &&
        externalClasses.indexOf(altKey) !== -1 &&
        context[camelize(res[key])]
      ) {
        // 赋值 externalClass 真正的值(模板里 externalClass 的值可能是字符串)
        res[key] = context[camelize(res[key])];
      }
    }
  }
  return res
}

function extractPropsFromVNodeData (
  data,
  Ctor,
  tag,
  context// fixed by xxxxxx
) {
  // we are only extracting raw values here.
  // validation and default values are handled in the child
  // component itself.
  var propOptions = Ctor.options.props;
  if (isUndef(propOptions)) {
    // fixed by xxxxxx
    return extractPropertiesFromVNodeData(data, Ctor, {}, context)
  }
  var res = {};
  var attrs = data.attrs;
  var props = data.props;
  if (isDef(attrs) || isDef(props)) {
    for (var key in propOptions) {
      var altKey = hyphenate(key);
      if (true) {
        var keyInLowerCase = key.toLowerCase();
        if (
          key !== keyInLowerCase &&
          attrs && hasOwn(attrs, keyInLowerCase)
        ) {
          tip(
            "Prop \"" + keyInLowerCase + "\" is passed to component " +
            (formatComponentName(tag || Ctor)) + ", but the declared prop name is" +
            " \"" + key + "\". " +
            "Note that HTML attributes are case-insensitive and camelCased " +
            "props need to use their kebab-case equivalents when using in-DOM " +
            "templates. You should probably use \"" + altKey + "\" instead of \"" + key + "\"."
          );
        }
      }
      checkProp(res, props, key, altKey, true) ||
      checkProp(res, attrs, key, altKey, false);
    }
  }
  // fixed by xxxxxx
  return extractPropertiesFromVNodeData(data, Ctor, res, context)
}

function checkProp (
  res,
  hash,
  key,
  altKey,
  preserve
) {
  if (isDef(hash)) {
    if (hasOwn(hash, key)) {
      res[key] = hash[key];
      if (!preserve) {
        delete hash[key];
      }
      return true
    } else if (hasOwn(hash, altKey)) {
      res[key] = hash[altKey];
      if (!preserve) {
        delete hash[altKey];
      }
      return true
    }
  }
  return false
}

/*  */

// The template compiler attempts to minimize the need for normalization by
// statically analyzing the template at compile time.
//
// For plain HTML markup, normalization can be completely skipped because the
// generated render function is guaranteed to return Array<VNode>. There are
// two cases where extra normalization is needed:

// 1. When the children contains components - because a functional component
// may return an Array instead of a single root. In this case, just a simple
// normalization is needed - if any child is an Array, we flatten the whole
// thing with Array.prototype.concat. It is guaranteed to be only 1-level deep
// because functional components already normalize their own children.
function simpleNormalizeChildren (children) {
  for (var i = 0; i < children.length; i++) {
    if (Array.isArray(children[i])) {
      return Array.prototype.concat.apply([], children)
    }
  }
  return children
}

// 2. When the children contains constructs that always generated nested Arrays,
// e.g. <template>, <slot>, v-for, or when the children is provided by user
// with hand-written render functions / JSX. In such cases a full normalization
// is needed to cater to all possible types of children values.
function normalizeChildren (children) {
  return isPrimitive(children)
    ? [createTextVNode(children)]
    : Array.isArray(children)
      ? normalizeArrayChildren(children)
      : undefined
}

function isTextNode (node) {
  return isDef(node) && isDef(node.text) && isFalse(node.isComment)
}

function normalizeArrayChildren (children, nestedIndex) {
  var res = [];
  var i, c, lastIndex, last;
  for (i = 0; i < children.length; i++) {
    c = children[i];
    if (isUndef(c) || typeof c === 'boolean') { continue }
    lastIndex = res.length - 1;
    last = res[lastIndex];
    //  nested
    if (Array.isArray(c)) {
      if (c.length > 0) {
        c = normalizeArrayChildren(c, ((nestedIndex || '') + "_" + i));
        // merge adjacent text nodes
        if (isTextNode(c[0]) && isTextNode(last)) {
          res[lastIndex] = createTextVNode(last.text + (c[0]).text);
          c.shift();
        }
        res.push.apply(res, c);
      }
    } else if (isPrimitive(c)) {
      if (isTextNode(last)) {
        // merge adjacent text nodes
        // this is necessary for SSR hydration because text nodes are
        // essentially merged when rendered to HTML strings
        res[lastIndex] = createTextVNode(last.text + c);
      } else if (c !== '') {
        // convert primitive to vnode
        res.push(createTextVNode(c));
      }
    } else {
      if (isTextNode(c) && isTextNode(last)) {
        // merge adjacent text nodes
        res[lastIndex] = createTextVNode(last.text + c.text);
      } else {
        // default key for nested array children (likely generated by v-for)
        if (isTrue(children._isVList) &&
          isDef(c.tag) &&
          isUndef(c.key) &&
          isDef(nestedIndex)) {
          c.key = "__vlist" + nestedIndex + "_" + i + "__";
        }
        res.push(c);
      }
    }
  }
  return res
}

/*  */

function initProvide (vm) {
  var provide = vm.$options.provide;
  if (provide) {
    vm._provided = typeof provide === 'function'
      ? provide.call(vm)
      : provide;
  }
}

function initInjections (vm) {
  var result = resolveInject(vm.$options.inject, vm);
  if (result) {
    toggleObserving(false);
    Object.keys(result).forEach(function (key) {
      /* istanbul ignore else */
      if (true) {
        defineReactive$$1(vm, key, result[key], function () {
          warn(
            "Avoid mutating an injected value directly since the changes will be " +
            "overwritten whenever the provided component re-renders. " +
            "injection being mutated: \"" + key + "\"",
            vm
          );
        });
      } else {}
    });
    toggleObserving(true);
  }
}

function resolveInject (inject, vm) {
  if (inject) {
    // inject is :any because flow is not smart enough to figure out cached
    var result = Object.create(null);
    var keys = hasSymbol
      ? Reflect.ownKeys(inject)
      : Object.keys(inject);

    for (var i = 0; i < keys.length; i++) {
      var key = keys[i];
      // #6574 in case the inject object is observed...
      if (key === '__ob__') { continue }
      var provideKey = inject[key].from;
      var source = vm;
      while (source) {
        if (source._provided && hasOwn(source._provided, provideKey)) {
          result[key] = source._provided[provideKey];
          break
        }
        source = source.$parent;
      }
      if (!source) {
        if ('default' in inject[key]) {
          var provideDefault = inject[key].default;
          result[key] = typeof provideDefault === 'function'
            ? provideDefault.call(vm)
            : provideDefault;
        } else if (true) {
          warn(("Injection \"" + key + "\" not found"), vm);
        }
      }
    }
    return result
  }
}

/*  */



/**
 * Runtime helper for resolving raw children VNodes into a slot object.
 */
function resolveSlots (
  children,
  context
) {
  if (!children || !children.length) {
    return {}
  }
  var slots = {};
  for (var i = 0, l = children.length; i < l; i++) {
    var child = children[i];
    var data = child.data;
    // remove slot attribute if the node is resolved as a Vue slot node
    if (data && data.attrs && data.attrs.slot) {
      delete data.attrs.slot;
    }
    // named slots should only be respected if the vnode was rendered in the
    // same context.
    if ((child.context === context || child.fnContext === context) &&
      data && data.slot != null
    ) {
      var name = data.slot;
      var slot = (slots[name] || (slots[name] = []));
      if (child.tag === 'template') {
        slot.push.apply(slot, child.children || []);
      } else {
        slot.push(child);
      }
    } else {
      // fixed by xxxxxx 临时 hack 掉 uni-app 中的异步 name slot page
      if(child.asyncMeta && child.asyncMeta.data && child.asyncMeta.data.slot === 'page'){
        (slots['page'] || (slots['page'] = [])).push(child);
      }else{
        (slots.default || (slots.default = [])).push(child);
      }
    }
  }
  // ignore slots that contains only whitespace
  for (var name$1 in slots) {
    if (slots[name$1].every(isWhitespace)) {
      delete slots[name$1];
    }
  }
  return slots
}

function isWhitespace (node) {
  return (node.isComment && !node.asyncFactory) || node.text === ' '
}

/*  */

function normalizeScopedSlots (
  slots,
  normalSlots,
  prevSlots
) {
  var res;
  var hasNormalSlots = Object.keys(normalSlots).length > 0;
  var isStable = slots ? !!slots.$stable : !hasNormalSlots;
  var key = slots && slots.$key;
  if (!slots) {
    res = {};
  } else if (slots._normalized) {
    // fast path 1: child component re-render only, parent did not change
    return slots._normalized
  } else if (
    isStable &&
    prevSlots &&
    prevSlots !== emptyObject &&
    key === prevSlots.$key &&
    !hasNormalSlots &&
    !prevSlots.$hasNormal
  ) {
    // fast path 2: stable scoped slots w/ no normal slots to proxy,
    // only need to normalize once
    return prevSlots
  } else {
    res = {};
    for (var key$1 in slots) {
      if (slots[key$1] && key$1[0] !== '$') {
        res[key$1] = normalizeScopedSlot(normalSlots, key$1, slots[key$1]);
      }
    }
  }
  // expose normal slots on scopedSlots
  for (var key$2 in normalSlots) {
    if (!(key$2 in res)) {
      res[key$2] = proxyNormalSlot(normalSlots, key$2);
    }
  }
  // avoriaz seems to mock a non-extensible $scopedSlots object
  // and when that is passed down this would cause an error
  if (slots && Object.isExtensible(slots)) {
    (slots)._normalized = res;
  }
  def(res, '$stable', isStable);
  def(res, '$key', key);
  def(res, '$hasNormal', hasNormalSlots);
  return res
}

function normalizeScopedSlot(normalSlots, key, fn) {
  var normalized = function () {
    var res = arguments.length ? fn.apply(null, arguments) : fn({});
    res = res && typeof res === 'object' && !Array.isArray(res)
      ? [res] // single vnode
      : normalizeChildren(res);
    return res && (
      res.length === 0 ||
      (res.length === 1 && res[0].isComment) // #9658
    ) ? undefined
      : res
  };
  // this is a slot using the new v-slot syntax without scope. although it is
  // compiled as a scoped slot, render fn users would expect it to be present
  // on this.$slots because the usage is semantically a normal slot.
  if (fn.proxy) {
    Object.defineProperty(normalSlots, key, {
      get: normalized,
      enumerable: true,
      configurable: true
    });
  }
  return normalized
}

function proxyNormalSlot(slots, key) {
  return function () { return slots[key]; }
}

/*  */

/**
 * Runtime helper for rendering v-for lists.
 */
function renderList (
  val,
  render
) {
  var ret, i, l, keys, key;
  if (Array.isArray(val) || typeof val === 'string') {
    ret = new Array(val.length);
    for (i = 0, l = val.length; i < l; i++) {
      ret[i] = render(val[i], i, i, i); // fixed by xxxxxx
    }
  } else if (typeof val === 'number') {
    ret = new Array(val);
    for (i = 0; i < val; i++) {
      ret[i] = render(i + 1, i, i, i); // fixed by xxxxxx
    }
  } else if (isObject(val)) {
    if (hasSymbol && val[Symbol.iterator]) {
      ret = [];
      var iterator = val[Symbol.iterator]();
      var result = iterator.next();
      while (!result.done) {
        ret.push(render(result.value, ret.length, i, i++)); // fixed by xxxxxx
        result = iterator.next();
      }
    } else {
      keys = Object.keys(val);
      ret = new Array(keys.length);
      for (i = 0, l = keys.length; i < l; i++) {
        key = keys[i];
        ret[i] = render(val[key], key, i, i); // fixed by xxxxxx
      }
    }
  }
  if (!isDef(ret)) {
    ret = [];
  }
  (ret)._isVList = true;
  return ret
}

/*  */

/**
 * Runtime helper for rendering <slot>
 */
function renderSlot (
  name,
  fallback,
  props,
  bindObject
) {
  var scopedSlotFn = this.$scopedSlots[name];
  var nodes;
  if (scopedSlotFn) { // scoped slot
    props = props || {};
    if (bindObject) {
      if ( true && !isObject(bindObject)) {
        warn(
          'slot v-bind without argument expects an Object',
          this
        );
      }
      props = extend(extend({}, bindObject), props);
    }
    // fixed by xxxxxx app-plus scopedSlot
    nodes = scopedSlotFn(props, this, props._i) || fallback;
  } else {
    nodes = this.$slots[name] || fallback;
  }

  var target = props && props.slot;
  if (target) {
    return this.$createElement('template', { slot: target }, nodes)
  } else {
    return nodes
  }
}

/*  */

/**
 * Runtime helper for resolving filters
 */
function resolveFilter (id) {
  return resolveAsset(this.$options, 'filters', id, true) || identity
}

/*  */

function isKeyNotMatch (expect, actual) {
  if (Array.isArray(expect)) {
    return expect.indexOf(actual) === -1
  } else {
    return expect !== actual
  }
}

/**
 * Runtime helper for checking keyCodes from config.
 * exposed as Vue.prototype._k
 * passing in eventKeyName as last argument separately for backwards compat
 */
function checkKeyCodes (
  eventKeyCode,
  key,
  builtInKeyCode,
  eventKeyName,
  builtInKeyName
) {
  var mappedKeyCode = config.keyCodes[key] || builtInKeyCode;
  if (builtInKeyName && eventKeyName && !config.keyCodes[key]) {
    return isKeyNotMatch(builtInKeyName, eventKeyName)
  } else if (mappedKeyCode) {
    return isKeyNotMatch(mappedKeyCode, eventKeyCode)
  } else if (eventKeyName) {
    return hyphenate(eventKeyName) !== key
  }
}

/*  */

/**
 * Runtime helper for merging v-bind="object" into a VNode's data.
 */
function bindObjectProps (
  data,
  tag,
  value,
  asProp,
  isSync
) {
  if (value) {
    if (!isObject(value)) {
       true && warn(
        'v-bind without argument expects an Object or Array value',
        this
      );
    } else {
      if (Array.isArray(value)) {
        value = toObject(value);
      }
      var hash;
      var loop = function ( key ) {
        if (
          key === 'class' ||
          key === 'style' ||
          isReservedAttribute(key)
        ) {
          hash = data;
        } else {
          var type = data.attrs && data.attrs.type;
          hash = asProp || config.mustUseProp(tag, type, key)
            ? data.domProps || (data.domProps = {})
            : data.attrs || (data.attrs = {});
        }
        var camelizedKey = camelize(key);
        var hyphenatedKey = hyphenate(key);
        if (!(camelizedKey in hash) && !(hyphenatedKey in hash)) {
          hash[key] = value[key];

          if (isSync) {
            var on = data.on || (data.on = {});
            on[("update:" + key)] = function ($event) {
              value[key] = $event;
            };
          }
        }
      };

      for (var key in value) loop( key );
    }
  }
  return data
}

/*  */

/**
 * Runtime helper for rendering static trees.
 */
function renderStatic (
  index,
  isInFor
) {
  var cached = this._staticTrees || (this._staticTrees = []);
  var tree = cached[index];
  // if has already-rendered static tree and not inside v-for,
  // we can reuse the same tree.
  if (tree && !isInFor) {
    return tree
  }
  // otherwise, render a fresh tree.
  tree = cached[index] = this.$options.staticRenderFns[index].call(
    this._renderProxy,
    null,
    this // for render fns generated for functional component templates
  );
  markStatic(tree, ("__static__" + index), false);
  return tree
}

/**
 * Runtime helper for v-once.
 * Effectively it means marking the node as static with a unique key.
 */
function markOnce (
  tree,
  index,
  key
) {
  markStatic(tree, ("__once__" + index + (key ? ("_" + key) : "")), true);
  return tree
}

function markStatic (
  tree,
  key,
  isOnce
) {
  if (Array.isArray(tree)) {
    for (var i = 0; i < tree.length; i++) {
      if (tree[i] && typeof tree[i] !== 'string') {
        markStaticNode(tree[i], (key + "_" + i), isOnce);
      }
    }
  } else {
    markStaticNode(tree, key, isOnce);
  }
}

function markStaticNode (node, key, isOnce) {
  node.isStatic = true;
  node.key = key;
  node.isOnce = isOnce;
}

/*  */

function bindObjectListeners (data, value) {
  if (value) {
    if (!isPlainObject(value)) {
       true && warn(
        'v-on without argument expects an Object value',
        this
      );
    } else {
      var on = data.on = data.on ? extend({}, data.on) : {};
      for (var key in value) {
        var existing = on[key];
        var ours = value[key];
        on[key] = existing ? [].concat(existing, ours) : ours;
      }
    }
  }
  return data
}

/*  */

function resolveScopedSlots (
  fns, // see flow/vnode
  res,
  // the following are added in 2.6
  hasDynamicKeys,
  contentHashKey
) {
  res = res || { $stable: !hasDynamicKeys };
  for (var i = 0; i < fns.length; i++) {
    var slot = fns[i];
    if (Array.isArray(slot)) {
      resolveScopedSlots(slot, res, hasDynamicKeys);
    } else if (slot) {
      // marker for reverse proxying v-slot without scope on this.$slots
      if (slot.proxy) {
        slot.fn.proxy = true;
      }
      res[slot.key] = slot.fn;
    }
  }
  if (contentHashKey) {
    (res).$key = contentHashKey;
  }
  return res
}

/*  */

function bindDynamicKeys (baseObj, values) {
  for (var i = 0; i < values.length; i += 2) {
    var key = values[i];
    if (typeof key === 'string' && key) {
      baseObj[values[i]] = values[i + 1];
    } else if ( true && key !== '' && key !== null) {
      // null is a special value for explicitly removing a binding
      warn(
        ("Invalid value for dynamic directive argument (expected string or null): " + key),
        this
      );
    }
  }
  return baseObj
}

// helper to dynamically append modifier runtime markers to event names.
// ensure only append when value is already string, otherwise it will be cast
// to string and cause the type check to miss.
function prependModifier (value, symbol) {
  return typeof value === 'string' ? symbol + value : value
}

/*  */

function installRenderHelpers (target) {
  target._o = markOnce;
  target._n = toNumber;
  target._s = toString;
  target._l = renderList;
  target._t = renderSlot;
  target._q = looseEqual;
  target._i = looseIndexOf;
  target._m = renderStatic;
  target._f = resolveFilter;
  target._k = checkKeyCodes;
  target._b = bindObjectProps;
  target._v = createTextVNode;
  target._e = createEmptyVNode;
  target._u = resolveScopedSlots;
  target._g = bindObjectListeners;
  target._d = bindDynamicKeys;
  target._p = prependModifier;
}

/*  */

function FunctionalRenderContext (
  data,
  props,
  children,
  parent,
  Ctor
) {
  var this$1 = this;

  var options = Ctor.options;
  // ensure the createElement function in functional components
  // gets a unique context - this is necessary for correct named slot check
  var contextVm;
  if (hasOwn(parent, '_uid')) {
    contextVm = Object.create(parent);
    // $flow-disable-line
    contextVm._original = parent;
  } else {
    // the context vm passed in is a functional context as well.
    // in this case we want to make sure we are able to get a hold to the
    // real context instance.
    contextVm = parent;
    // $flow-disable-line
    parent = parent._original;
  }
  var isCompiled = isTrue(options._compiled);
  var needNormalization = !isCompiled;

  this.data = data;
  this.props = props;
  this.children = children;
  this.parent = parent;
  this.listeners = data.on || emptyObject;
  this.injections = resolveInject(options.inject, parent);
  this.slots = function () {
    if (!this$1.$slots) {
      normalizeScopedSlots(
        data.scopedSlots,
        this$1.$slots = resolveSlots(children, parent)
      );
    }
    return this$1.$slots
  };

  Object.defineProperty(this, 'scopedSlots', ({
    enumerable: true,
    get: function get () {
      return normalizeScopedSlots(data.scopedSlots, this.slots())
    }
  }));

  // support for compiled functional template
  if (isCompiled) {
    // exposing $options for renderStatic()
    this.$options = options;
    // pre-resolve slots for renderSlot()
    this.$slots = this.slots();
    this.$scopedSlots = normalizeScopedSlots(data.scopedSlots, this.$slots);
  }

  if (options._scopeId) {
    this._c = function (a, b, c, d) {
      var vnode = createElement(contextVm, a, b, c, d, needNormalization);
      if (vnode && !Array.isArray(vnode)) {
        vnode.fnScopeId = options._scopeId;
        vnode.fnContext = parent;
      }
      return vnode
    };
  } else {
    this._c = function (a, b, c, d) { return createElement(contextVm, a, b, c, d, needNormalization); };
  }
}

installRenderHelpers(FunctionalRenderContext.prototype);

function createFunctionalComponent (
  Ctor,
  propsData,
  data,
  contextVm,
  children
) {
  var options = Ctor.options;
  var props = {};
  var propOptions = options.props;
  if (isDef(propOptions)) {
    for (var key in propOptions) {
      props[key] = validateProp(key, propOptions, propsData || emptyObject);
    }
  } else {
    if (isDef(data.attrs)) { mergeProps(props, data.attrs); }
    if (isDef(data.props)) { mergeProps(props, data.props); }
  }

  var renderContext = new FunctionalRenderContext(
    data,
    props,
    children,
    contextVm,
    Ctor
  );

  var vnode = options.render.call(null, renderContext._c, renderContext);

  if (vnode instanceof VNode) {
    return cloneAndMarkFunctionalResult(vnode, data, renderContext.parent, options, renderContext)
  } else if (Array.isArray(vnode)) {
    var vnodes = normalizeChildren(vnode) || [];
    var res = new Array(vnodes.length);
    for (var i = 0; i < vnodes.length; i++) {
      res[i] = cloneAndMarkFunctionalResult(vnodes[i], data, renderContext.parent, options, renderContext);
    }
    return res
  }
}

function cloneAndMarkFunctionalResult (vnode, data, contextVm, options, renderContext) {
  // #7817 clone node before setting fnContext, otherwise if the node is reused
  // (e.g. it was from a cached normal slot) the fnContext causes named slots
  // that should not be matched to match.
  var clone = cloneVNode(vnode);
  clone.fnContext = contextVm;
  clone.fnOptions = options;
  if (true) {
    (clone.devtoolsMeta = clone.devtoolsMeta || {}).renderContext = renderContext;
  }
  if (data.slot) {
    (clone.data || (clone.data = {})).slot = data.slot;
  }
  return clone
}

function mergeProps (to, from) {
  for (var key in from) {
    to[camelize(key)] = from[key];
  }
}

/*  */

/*  */

/*  */

/*  */

// inline hooks to be invoked on component VNodes during patch
var componentVNodeHooks = {
  init: function init (vnode, hydrating) {
    if (
      vnode.componentInstance &&
      !vnode.componentInstance._isDestroyed &&
      vnode.data.keepAlive
    ) {
      // kept-alive components, treat as a patch
      var mountedNode = vnode; // work around flow
      componentVNodeHooks.prepatch(mountedNode, mountedNode);
    } else {
      var child = vnode.componentInstance = createComponentInstanceForVnode(
        vnode,
        activeInstance
      );
      child.$mount(hydrating ? vnode.elm : undefined, hydrating);
    }
  },

  prepatch: function prepatch (oldVnode, vnode) {
    var options = vnode.componentOptions;
    var child = vnode.componentInstance = oldVnode.componentInstance;
    updateChildComponent(
      child,
      options.propsData, // updated props
      options.listeners, // updated listeners
      vnode, // new parent vnode
      options.children // new children
    );
  },

  insert: function insert (vnode) {
    var context = vnode.context;
    var componentInstance = vnode.componentInstance;
    if (!componentInstance._isMounted) {
      callHook(componentInstance, 'onServiceCreated');
      callHook(componentInstance, 'onServiceAttached');
      componentInstance._isMounted = true;
      callHook(componentInstance, 'mounted');
    }
    if (vnode.data.keepAlive) {
      if (context._isMounted) {
        // vue-router#1212
        // During updates, a kept-alive component's child components may
        // change, so directly walking the tree here may call activated hooks
        // on incorrect children. Instead we push them into a queue which will
        // be processed after the whole patch process ended.
        queueActivatedComponent(componentInstance);
      } else {
        activateChildComponent(componentInstance, true /* direct */);
      }
    }
  },

  destroy: function destroy (vnode) {
    var componentInstance = vnode.componentInstance;
    if (!componentInstance._isDestroyed) {
      if (!vnode.data.keepAlive) {
        componentInstance.$destroy();
      } else {
        deactivateChildComponent(componentInstance, true /* direct */);
      }
    }
  }
};

var hooksToMerge = Object.keys(componentVNodeHooks);

function createComponent (
  Ctor,
  data,
  context,
  children,
  tag
) {
  if (isUndef(Ctor)) {
    return
  }

  var baseCtor = context.$options._base;

  // plain options object: turn it into a constructor
  if (isObject(Ctor)) {
    Ctor = baseCtor.extend(Ctor);
  }

  // if at this stage it's not a constructor or an async component factory,
  // reject.
  if (typeof Ctor !== 'function') {
    if (true) {
      warn(("Invalid Component definition: " + (String(Ctor))), context);
    }
    return
  }

  // async component
  var asyncFactory;
  if (isUndef(Ctor.cid)) {
    asyncFactory = Ctor;
    Ctor = resolveAsyncComponent(asyncFactory, baseCtor);
    if (Ctor === undefined) {
      // return a placeholder node for async component, which is rendered
      // as a comment node but preserves all the raw information for the node.
      // the information will be used for async server-rendering and hydration.
      return createAsyncPlaceholder(
        asyncFactory,
        data,
        context,
        children,
        tag
      )
    }
  }

  data = data || {};

  // resolve constructor options in case global mixins are applied after
  // component constructor creation
  resolveConstructorOptions(Ctor);

  // transform component v-model data into props & events
  if (isDef(data.model)) {
    transformModel(Ctor.options, data);
  }

  // extract props
  var propsData = extractPropsFromVNodeData(data, Ctor, tag, context); // fixed by xxxxxx

  // functional component
  if (isTrue(Ctor.options.functional)) {
    return createFunctionalComponent(Ctor, propsData, data, context, children)
  }

  // extract listeners, since these needs to be treated as
  // child component listeners instead of DOM listeners
  var listeners = data.on;
  // replace with listeners with .native modifier
  // so it gets processed during parent component patch.
  data.on = data.nativeOn;

  if (isTrue(Ctor.options.abstract)) {
    // abstract components do not keep anything
    // other than props & listeners & slot

    // work around flow
    var slot = data.slot;
    data = {};
    if (slot) {
      data.slot = slot;
    }
  }

  // install component management hooks onto the placeholder node
  installComponentHooks(data);

  // return a placeholder vnode
  var name = Ctor.options.name || tag;
  var vnode = new VNode(
    ("vue-component-" + (Ctor.cid) + (name ? ("-" + name) : '')),
    data, undefined, undefined, undefined, context,
    { Ctor: Ctor, propsData: propsData, listeners: listeners, tag: tag, children: children },
    asyncFactory
  );

  return vnode
}

function createComponentInstanceForVnode (
  vnode, // we know it's MountedComponentVNode but flow doesn't
  parent // activeInstance in lifecycle state
) {
  var options = {
    _isComponent: true,
    _parentVnode: vnode,
    parent: parent
  };
  // check inline-template render functions
  var inlineTemplate = vnode.data.inlineTemplate;
  if (isDef(inlineTemplate)) {
    options.render = inlineTemplate.render;
    options.staticRenderFns = inlineTemplate.staticRenderFns;
  }
  return new vnode.componentOptions.Ctor(options)
}

function installComponentHooks (data) {
  var hooks = data.hook || (data.hook = {});
  for (var i = 0; i < hooksToMerge.length; i++) {
    var key = hooksToMerge[i];
    var existing = hooks[key];
    var toMerge = componentVNodeHooks[key];
    if (existing !== toMerge && !(existing && existing._merged)) {
      hooks[key] = existing ? mergeHook$1(toMerge, existing) : toMerge;
    }
  }
}

function mergeHook$1 (f1, f2) {
  var merged = function (a, b) {
    // flow complains about extra args which is why we use any
    f1(a, b);
    f2(a, b);
  };
  merged._merged = true;
  return merged
}

// transform component v-model info (value and callback) into
// prop and event handler respectively.
function transformModel (options, data) {
  var prop = (options.model && options.model.prop) || 'value';
  var event = (options.model && options.model.event) || 'input'
  ;(data.attrs || (data.attrs = {}))[prop] = data.model.value;
  var on = data.on || (data.on = {});
  var existing = on[event];
  var callback = data.model.callback;
  if (isDef(existing)) {
    if (
      Array.isArray(existing)
        ? existing.indexOf(callback) === -1
        : existing !== callback
    ) {
      on[event] = [callback].concat(existing);
    }
  } else {
    on[event] = callback;
  }
}

/*  */

var SIMPLE_NORMALIZE = 1;
var ALWAYS_NORMALIZE = 2;

// wrapper function for providing a more flexible interface
// without getting yelled at by flow
function createElement (
  context,
  tag,
  data,
  children,
  normalizationType,
  alwaysNormalize
) {
  if (Array.isArray(data) || isPrimitive(data)) {
    normalizationType = children;
    children = data;
    data = undefined;
  }
  if (isTrue(alwaysNormalize)) {
    normalizationType = ALWAYS_NORMALIZE;
  }
  return _createElement(context, tag, data, children, normalizationType)
}

function _createElement (
  context,
  tag,
  data,
  children,
  normalizationType
) {
  if (isDef(data) && isDef((data).__ob__)) {
     true && warn(
      "Avoid using observed data object as vnode data: " + (JSON.stringify(data)) + "\n" +
      'Always create fresh vnode data objects in each render!',
      context
    );
    return createEmptyVNode()
  }
  // object syntax in v-bind
  if (isDef(data) && isDef(data.is)) {
    tag = data.is;
  }
  if (!tag) {
    // in case of component :is set to falsy value
    return createEmptyVNode()
  }
  // warn against non-primitive key
  if ( true &&
    isDef(data) && isDef(data.key) && !isPrimitive(data.key)
  ) {
    {
      warn(
        'Avoid using non-primitive value as key, ' +
        'use string/number value instead.',
        context
      );
    }
  }
  // support single function children as default scoped slot
  if (Array.isArray(children) &&
    typeof children[0] === 'function'
  ) {
    data = data || {};
    data.scopedSlots = { default: children[0] };
    children.length = 0;
  }
  if (normalizationType === ALWAYS_NORMALIZE) {
    children = normalizeChildren(children);
  } else if (normalizationType === SIMPLE_NORMALIZE) {
    children = simpleNormalizeChildren(children);
  }
  var vnode, ns;
  if (typeof tag === 'string') {
    var Ctor;
    ns = (context.$vnode && context.$vnode.ns) || config.getTagNamespace(tag);
    if (config.isReservedTag(tag)) {
      // platform built-in elements
      if ( true && isDef(data) && isDef(data.nativeOn)) {
        warn(
          ("The .native modifier for v-on is only valid on components but it was used on <" + tag + ">."),
          context
        );
      }
      vnode = new VNode(
        config.parsePlatformTagName(tag), data, children,
        undefined, undefined, context
      );
    } else if ((!data || !data.pre) && isDef(Ctor = resolveAsset(context.$options, 'components', tag))) {
      // component
      vnode = createComponent(Ctor, data, context, children, tag);
    } else {
      // unknown or unlisted namespaced elements
      // check at runtime because it may get assigned a namespace when its
      // parent normalizes children
      vnode = new VNode(
        tag, data, children,
        undefined, undefined, context
      );
    }
  } else {
    // direct component options / constructor
    vnode = createComponent(tag, data, context, children);
  }
  if (Array.isArray(vnode)) {
    return vnode
  } else if (isDef(vnode)) {
    if (isDef(ns)) { applyNS(vnode, ns); }
    if (isDef(data)) { registerDeepBindings(data); }
    return vnode
  } else {
    return createEmptyVNode()
  }
}

function applyNS (vnode, ns, force) {
  vnode.ns = ns;
  if (vnode.tag === 'foreignObject') {
    // use default namespace inside foreignObject
    ns = undefined;
    force = true;
  }
  if (isDef(vnode.children)) {
    for (var i = 0, l = vnode.children.length; i < l; i++) {
      var child = vnode.children[i];
      if (isDef(child.tag) && (
        isUndef(child.ns) || (isTrue(force) && child.tag !== 'svg'))) {
        applyNS(child, ns, force);
      }
    }
  }
}

// ref #5318
// necessary to ensure parent re-render when deep bindings like :style and
// :class are used on slot nodes
function registerDeepBindings (data) {
  if (isObject(data.style)) {
    traverse(data.style);
  }
  if (isObject(data.class)) {
    traverse(data.class);
  }
}

/*  */

function initRender (vm) {
  vm._vnode = null; // the root of the child tree
  vm._staticTrees = null; // v-once cached trees
  var options = vm.$options;
  var parentVnode = vm.$vnode = options._parentVnode; // the placeholder node in parent tree
  var renderContext = parentVnode && parentVnode.context;
  vm.$slots = resolveSlots(options._renderChildren, renderContext);
  vm.$scopedSlots = emptyObject;
  // bind the createElement fn to this instance
  // so that we get proper render context inside it.
  // args order: tag, data, children, normalizationType, alwaysNormalize
  // internal version is used by render functions compiled from templates
  vm._c = function (a, b, c, d) { return createElement(vm, a, b, c, d, false); };
  // normalization is always applied for the public version, used in
  // user-written render functions.
  vm.$createElement = function (a, b, c, d) { return createElement(vm, a, b, c, d, true); };

  // $attrs & $listeners are exposed for easier HOC creation.
  // they need to be reactive so that HOCs using them are always updated
  var parentData = parentVnode && parentVnode.data;

  /* istanbul ignore else */
  if (true) {
    defineReactive$$1(vm, '$attrs', parentData && parentData.attrs || emptyObject, function () {
      !isUpdatingChildComponent && warn("$attrs is readonly.", vm);
    }, true);
    defineReactive$$1(vm, '$listeners', options._parentListeners || emptyObject, function () {
      !isUpdatingChildComponent && warn("$listeners is readonly.", vm);
    }, true);
  } else {}
}

var currentRenderingInstance = null;

function renderMixin (Vue) {
  // install runtime convenience helpers
  installRenderHelpers(Vue.prototype);

  Vue.prototype.$nextTick = function (fn) {
    return nextTick(fn, this)
  };

  Vue.prototype._render = function () {
    var vm = this;
    var ref = vm.$options;
    var render = ref.render;
    var _parentVnode = ref._parentVnode;

    if (_parentVnode) {
      vm.$scopedSlots = normalizeScopedSlots(
        _parentVnode.data.scopedSlots,
        vm.$slots,
        vm.$scopedSlots
      );
    }

    // set parent vnode. this allows render functions to have access
    // to the data on the placeholder node.
    vm.$vnode = _parentVnode;
    // render self
    var vnode;
    try {
      // There's no need to maintain a stack because all render fns are called
      // separately from one another. Nested component's render fns are called
      // when parent component is patched.
      currentRenderingInstance = vm;
      vnode = render.call(vm._renderProxy, vm.$createElement);
    } catch (e) {
      handleError(e, vm, "render");
      // return error render result,
      // or previous vnode to prevent render error causing blank component
      /* istanbul ignore else */
      if ( true && vm.$options.renderError) {
        try {
          vnode = vm.$options.renderError.call(vm._renderProxy, vm.$createElement, e);
        } catch (e) {
          handleError(e, vm, "renderError");
          vnode = vm._vnode;
        }
      } else {
        vnode = vm._vnode;
      }
    } finally {
      currentRenderingInstance = null;
    }
    // if the returned array contains only a single node, allow it
    if (Array.isArray(vnode) && vnode.length === 1) {
      vnode = vnode[0];
    }
    // return empty vnode in case the render function errored out
    if (!(vnode instanceof VNode)) {
      if ( true && Array.isArray(vnode)) {
        warn(
          'Multiple root nodes returned from render function. Render function ' +
          'should return a single root node.',
          vm
        );
      }
      vnode = createEmptyVNode();
    }
    // set parent
    vnode.parent = _parentVnode;
    return vnode
  };
}

/*  */

function ensureCtor (comp, base) {
  if (
    comp.__esModule ||
    (hasSymbol && comp[Symbol.toStringTag] === 'Module')
  ) {
    comp = comp.default;
  }
  return isObject(comp)
    ? base.extend(comp)
    : comp
}

function createAsyncPlaceholder (
  factory,
  data,
  context,
  children,
  tag
) {
  var node = createEmptyVNode();
  node.asyncFactory = factory;
  node.asyncMeta = { data: data, context: context, children: children, tag: tag };
  return node
}

function resolveAsyncComponent (
  factory,
  baseCtor
) {
  if (isTrue(factory.error) && isDef(factory.errorComp)) {
    return factory.errorComp
  }

  if (isDef(factory.resolved)) {
    return factory.resolved
  }

  var owner = currentRenderingInstance;
  if (owner && isDef(factory.owners) && factory.owners.indexOf(owner) === -1) {
    // already pending
    factory.owners.push(owner);
  }

  if (isTrue(factory.loading) && isDef(factory.loadingComp)) {
    return factory.loadingComp
  }

  if (owner && !isDef(factory.owners)) {
    var owners = factory.owners = [owner];
    var sync = true;
    var timerLoading = null;
    var timerTimeout = null

    ;(owner).$on('hook:destroyed', function () { return remove(owners, owner); });

    var forceRender = function (renderCompleted) {
      for (var i = 0, l = owners.length; i < l; i++) {
        (owners[i]).$forceUpdate();
      }

      if (renderCompleted) {
        owners.length = 0;
        if (timerLoading !== null) {
          clearTimeout(timerLoading);
          timerLoading = null;
        }
        if (timerTimeout !== null) {
          clearTimeout(timerTimeout);
          timerTimeout = null;
        }
      }
    };

    var resolve = once(function (res) {
      // cache resolved
      factory.resolved = ensureCtor(res, baseCtor);
      // invoke callbacks only if this is not a synchronous resolve
      // (async resolves are shimmed as synchronous during SSR)
      if (!sync) {
        forceRender(true);
      } else {
        owners.length = 0;
      }
    });

    var reject = once(function (reason) {
       true && warn(
        "Failed to resolve async component: " + (String(factory)) +
        (reason ? ("\nReason: " + reason) : '')
      );
      if (isDef(factory.errorComp)) {
        factory.error = true;
        forceRender(true);
      }
    });

    var res = factory(resolve, reject);

    if (isObject(res)) {
      if (isPromise(res)) {
        // () => Promise
        if (isUndef(factory.resolved)) {
          res.then(resolve, reject);
        }
      } else if (isPromise(res.component)) {
        res.component.then(resolve, reject);

        if (isDef(res.error)) {
          factory.errorComp = ensureCtor(res.error, baseCtor);
        }

        if (isDef(res.loading)) {
          factory.loadingComp = ensureCtor(res.loading, baseCtor);
          if (res.delay === 0) {
            factory.loading = true;
          } else {
            timerLoading = setTimeout(function () {
              timerLoading = null;
              if (isUndef(factory.resolved) && isUndef(factory.error)) {
                factory.loading = true;
                forceRender(false);
              }
            }, res.delay || 200);
          }
        }

        if (isDef(res.timeout)) {
          timerTimeout = setTimeout(function () {
            timerTimeout = null;
            if (isUndef(factory.resolved)) {
              reject(
                 true
                  ? ("timeout (" + (res.timeout) + "ms)")
                  : undefined
              );
            }
          }, res.timeout);
        }
      }
    }

    sync = false;
    // return in case resolved synchronously
    return factory.loading
      ? factory.loadingComp
      : factory.resolved
  }
}

/*  */

function isAsyncPlaceholder (node) {
  return node.isComment && node.asyncFactory
}

/*  */

function getFirstComponentChild (children) {
  if (Array.isArray(children)) {
    for (var i = 0; i < children.length; i++) {
      var c = children[i];
      if (isDef(c) && (isDef(c.componentOptions) || isAsyncPlaceholder(c))) {
        return c
      }
    }
  }
}

/*  */

/*  */

function initEvents (vm) {
  vm._events = Object.create(null);
  vm._hasHookEvent = false;
  // init parent attached events
  var listeners = vm.$options._parentListeners;
  if (listeners) {
    updateComponentListeners(vm, listeners);
  }
}

var target;

function add (event, fn) {
  target.$on(event, fn);
}

function remove$1 (event, fn) {
  target.$off(event, fn);
}

function createOnceHandler (event, fn) {
  var _target = target;
  return function onceHandler () {
    var res = fn.apply(null, arguments);
    if (res !== null) {
      _target.$off(event, onceHandler);
    }
  }
}

function updateComponentListeners (
  vm,
  listeners,
  oldListeners
) {
  target = vm;
  updateListeners(listeners, oldListeners || {}, add, remove$1, createOnceHandler, vm);
  target = undefined;
}

function eventsMixin (Vue) {
  var hookRE = /^hook:/;
  Vue.prototype.$on = function (event, fn) {
    var vm = this;
    if (Array.isArray(event)) {
      for (var i = 0, l = event.length; i < l; i++) {
        vm.$on(event[i], fn);
      }
    } else {
      (vm._events[event] || (vm._events[event] = [])).push(fn);
      // optimize hook:event cost by using a boolean flag marked at registration
      // instead of a hash lookup
      if (hookRE.test(event)) {
        vm._hasHookEvent = true;
      }
    }
    return vm
  };

  Vue.prototype.$once = function (event, fn) {
    var vm = this;
    function on () {
      vm.$off(event, on);
      fn.apply(vm, arguments);
    }
    on.fn = fn;
    vm.$on(event, on);
    return vm
  };

  Vue.prototype.$off = function (event, fn) {
    var vm = this;
    // all
    if (!arguments.length) {
      vm._events = Object.create(null);
      return vm
    }
    // array of events
    if (Array.isArray(event)) {
      for (var i$1 = 0, l = event.length; i$1 < l; i$1++) {
        vm.$off(event[i$1], fn);
      }
      return vm
    }
    // specific event
    var cbs = vm._events[event];
    if (!cbs) {
      return vm
    }
    if (!fn) {
      vm._events[event] = null;
      return vm
    }
    // specific handler
    var cb;
    var i = cbs.length;
    while (i--) {
      cb = cbs[i];
      if (cb === fn || cb.fn === fn) {
        cbs.splice(i, 1);
        break
      }
    }
    return vm
  };

  Vue.prototype.$emit = function (event) {
    var vm = this;
    if (true) {
      var lowerCaseEvent = event.toLowerCase();
      if (lowerCaseEvent !== event && vm._events[lowerCaseEvent]) {
        tip(
          "Event \"" + lowerCaseEvent + "\" is emitted in component " +
          (formatComponentName(vm)) + " but the handler is registered for \"" + event + "\". " +
          "Note that HTML attributes are case-insensitive and you cannot use " +
          "v-on to listen to camelCase events when using in-DOM templates. " +
          "You should probably use \"" + (hyphenate(event)) + "\" instead of \"" + event + "\"."
        );
      }
    }
    var cbs = vm._events[event];
    if (cbs) {
      cbs = cbs.length > 1 ? toArray(cbs) : cbs;
      var args = toArray(arguments, 1);
      var info = "event handler for \"" + event + "\"";
      for (var i = 0, l = cbs.length; i < l; i++) {
        invokeWithErrorHandling(cbs[i], vm, args, vm, info);
      }
    }
    return vm
  };
}

/*  */

var activeInstance = null;
var isUpdatingChildComponent = false;

function setActiveInstance(vm) {
  var prevActiveInstance = activeInstance;
  activeInstance = vm;
  return function () {
    activeInstance = prevActiveInstance;
  }
}

function initLifecycle (vm) {
  var options = vm.$options;

  // locate first non-abstract parent
  var parent = options.parent;
  if (parent && !options.abstract) {
    while (parent.$options.abstract && parent.$parent) {
      parent = parent.$parent;
    }
    parent.$children.push(vm);
  }

  vm.$parent = parent;
  vm.$root = parent ? parent.$root : vm;

  vm.$children = [];
  vm.$refs = {};

  vm._watcher = null;
  vm._inactive = null;
  vm._directInactive = false;
  vm._isMounted = false;
  vm._isDestroyed = false;
  vm._isBeingDestroyed = false;
}

function lifecycleMixin (Vue) {
  Vue.prototype._update = function (vnode, hydrating) {
    var vm = this;
    var prevEl = vm.$el;
    var prevVnode = vm._vnode;
    var restoreActiveInstance = setActiveInstance(vm);
    vm._vnode = vnode;
    // Vue.prototype.__patch__ is injected in entry points
    // based on the rendering backend used.
    if (!prevVnode) {
      // initial render
      vm.$el = vm.__patch__(vm.$el, vnode, hydrating, false /* removeOnly */);
    } else {
      // updates
      vm.$el = vm.__patch__(prevVnode, vnode);
    }
    restoreActiveInstance();
    // update __vue__ reference
    if (prevEl) {
      prevEl.__vue__ = null;
    }
    if (vm.$el) {
      vm.$el.__vue__ = vm;
    }
    // if parent is an HOC, update its $el as well
    if (vm.$vnode && vm.$parent && vm.$vnode === vm.$parent._vnode) {
      vm.$parent.$el = vm.$el;
    }
    // updated hook is called by the scheduler to ensure that children are
    // updated in a parent's updated hook.
  };

  Vue.prototype.$forceUpdate = function () {
    var vm = this;
    if (vm._watcher) {
      vm._watcher.update();
    }
  };

  Vue.prototype.$destroy = function () {
    var vm = this;
    if (vm._isBeingDestroyed) {
      return
    }
    callHook(vm, 'beforeDestroy');
    vm._isBeingDestroyed = true;
    // remove self from parent
    var parent = vm.$parent;
    if (parent && !parent._isBeingDestroyed && !vm.$options.abstract) {
      remove(parent.$children, vm);
    }
    // teardown watchers
    if (vm._watcher) {
      vm._watcher.teardown();
    }
    var i = vm._watchers.length;
    while (i--) {
      vm._watchers[i].teardown();
    }
    // remove reference from data ob
    // frozen object may not have observer.
    if (vm._data.__ob__) {
      vm._data.__ob__.vmCount--;
    }
    // call the last hook...
    vm._isDestroyed = true;
    // invoke destroy hooks on current rendered tree
    vm.__patch__(vm._vnode, null);
    // fire destroyed hook
    callHook(vm, 'destroyed');
    // turn off all instance listeners.
    vm.$off();
    // remove __vue__ reference
    if (vm.$el) {
      vm.$el.__vue__ = null;
    }
    // release circular reference (#6759)
    if (vm.$vnode) {
      vm.$vnode.parent = null;
    }
  };
}

function updateChildComponent (
  vm,
  propsData,
  listeners,
  parentVnode,
  renderChildren
) {
  if (true) {
    isUpdatingChildComponent = true;
  }

  // determine whether component has slot children
  // we need to do this before overwriting $options._renderChildren.

  // check if there are dynamic scopedSlots (hand-written or compiled but with
  // dynamic slot names). Static scoped slots compiled from template has the
  // "$stable" marker.
  var newScopedSlots = parentVnode.data.scopedSlots;
  var oldScopedSlots = vm.$scopedSlots;
  var hasDynamicScopedSlot = !!(
    (newScopedSlots && !newScopedSlots.$stable) ||
    (oldScopedSlots !== emptyObject && !oldScopedSlots.$stable) ||
    (newScopedSlots && vm.$scopedSlots.$key !== newScopedSlots.$key)
  );

  // Any static slot children from the parent may have changed during parent's
  // update. Dynamic scoped slots may also have changed. In such cases, a forced
  // update is necessary to ensure correctness.
  var needsForceUpdate = !!(
    renderChildren ||               // has new static slots
    vm.$options._renderChildren ||  // has old static slots
    hasDynamicScopedSlot
  );

  vm.$options._parentVnode = parentVnode;
  vm.$vnode = parentVnode; // update vm's placeholder node without re-render

  if (vm._vnode) { // update child tree's parent
    vm._vnode.parent = parentVnode;
  }
  vm.$options._renderChildren = renderChildren;

  // update $attrs and $listeners hash
  // these are also reactive so they may trigger child update if the child
  // used them during render
  vm.$attrs = parentVnode.data.attrs || emptyObject;
  vm.$listeners = listeners || emptyObject;

  // update props
  if (propsData && vm.$options.props) {
    toggleObserving(false);
    var props = vm._props;
    var propKeys = vm.$options._propKeys || [];
    for (var i = 0; i < propKeys.length; i++) {
      var key = propKeys[i];
      var propOptions = vm.$options.props; // wtf flow?
      props[key] = validateProp(key, propOptions, propsData, vm);
    }
    toggleObserving(true);
    // keep a copy of raw propsData
    vm.$options.propsData = propsData;
  }
  
  // fixed by xxxxxx update properties(mp runtime)
  vm._$updateProperties && vm._$updateProperties(vm);
  
  // update listeners
  listeners = listeners || emptyObject;
  var oldListeners = vm.$options._parentListeners;
  vm.$options._parentListeners = listeners;
  updateComponentListeners(vm, listeners, oldListeners);

  // resolve slots + force update if has children
  if (needsForceUpdate) {
    vm.$slots = resolveSlots(renderChildren, parentVnode.context);
    vm.$forceUpdate();
  }

  if (true) {
    isUpdatingChildComponent = false;
  }
}

function isInInactiveTree (vm) {
  while (vm && (vm = vm.$parent)) {
    if (vm._inactive) { return true }
  }
  return false
}

function activateChildComponent (vm, direct) {
  if (direct) {
    vm._directInactive = false;
    if (isInInactiveTree(vm)) {
      return
    }
  } else if (vm._directInactive) {
    return
  }
  if (vm._inactive || vm._inactive === null) {
    vm._inactive = false;
    for (var i = 0; i < vm.$children.length; i++) {
      activateChildComponent(vm.$children[i]);
    }
    callHook(vm, 'activated');
  }
}

function deactivateChildComponent (vm, direct) {
  if (direct) {
    vm._directInactive = true;
    if (isInInactiveTree(vm)) {
      return
    }
  }
  if (!vm._inactive) {
    vm._inactive = true;
    for (var i = 0; i < vm.$children.length; i++) {
      deactivateChildComponent(vm.$children[i]);
    }
    callHook(vm, 'deactivated');
  }
}

function callHook (vm, hook) {
  // #7573 disable dep collection when invoking lifecycle hooks
  pushTarget();
  var handlers = vm.$options[hook];
  var info = hook + " hook";
  if (handlers) {
    for (var i = 0, j = handlers.length; i < j; i++) {
      invokeWithErrorHandling(handlers[i], vm, null, vm, info);
    }
  }
  if (vm._hasHookEvent) {
    vm.$emit('hook:' + hook);
  }
  popTarget();
}

/*  */

var MAX_UPDATE_COUNT = 100;

var queue = [];
var activatedChildren = [];
var has = {};
var circular = {};
var waiting = false;
var flushing = false;
var index = 0;

/**
 * Reset the scheduler's state.
 */
function resetSchedulerState () {
  index = queue.length = activatedChildren.length = 0;
  has = {};
  if (true) {
    circular = {};
  }
  waiting = flushing = false;
}

// Async edge case #6566 requires saving the timestamp when event listeners are
// attached. However, calling performance.now() has a perf overhead especially
// if the page has thousands of event listeners. Instead, we take a timestamp
// every time the scheduler flushes and use that for all event listeners
// attached during that flush.
var currentFlushTimestamp = 0;

// Async edge case fix requires storing an event listener's attach timestamp.
var getNow = Date.now;

// Determine what event timestamp the browser is using. Annoyingly, the
// timestamp can either be hi-res (relative to page load) or low-res
// (relative to UNIX epoch), so in order to compare time we have to use the
// same timestamp type when saving the flush timestamp.
// All IE versions use low-res event timestamps, and have problematic clock
// implementations (#9632)
if (inBrowser && !isIE) {
  var performance = window.performance;
  if (
    performance &&
    typeof performance.now === 'function' &&
    getNow() > document.createEvent('Event').timeStamp
  ) {
    // if the event timestamp, although evaluated AFTER the Date.now(), is
    // smaller than it, it means the event is using a hi-res timestamp,
    // and we need to use the hi-res version for event listener timestamps as
    // well.
    getNow = function () { return performance.now(); };
  }
}

/**
 * Flush both queues and run the watchers.
 */
function flushSchedulerQueue () {
  currentFlushTimestamp = getNow();
  flushing = true;
  var watcher, id;

  // Sort queue before flush.
  // This ensures that:
  // 1. Components are updated from parent to child. (because parent is always
  //    created before the child)
  // 2. A component's user watchers are run before its render watcher (because
  //    user watchers are created before the render watcher)
  // 3. If a component is destroyed during a parent component's watcher run,
  //    its watchers can be skipped.
  queue.sort(function (a, b) { return a.id - b.id; });

  // do not cache length because more watchers might be pushed
  // as we run existing watchers
  for (index = 0; index < queue.length; index++) {
    watcher = queue[index];
    if (watcher.before) {
      watcher.before();
    }
    id = watcher.id;
    has[id] = null;
    watcher.run();
    // in dev build, check and stop circular updates.
    if ( true && has[id] != null) {
      circular[id] = (circular[id] || 0) + 1;
      if (circular[id] > MAX_UPDATE_COUNT) {
        warn(
          'You may have an infinite update loop ' + (
            watcher.user
              ? ("in watcher with expression \"" + (watcher.expression) + "\"")
              : "in a component render function."
          ),
          watcher.vm
        );
        break
      }
    }
  }

  // keep copies of post queues before resetting state
  var activatedQueue = activatedChildren.slice();
  var updatedQueue = queue.slice();

  resetSchedulerState();

  // call component updated and activated hooks
  callActivatedHooks(activatedQueue);
  callUpdatedHooks(updatedQueue);

  // devtool hook
  /* istanbul ignore if */
  if (devtools && config.devtools) {
    devtools.emit('flush');
  }
}

function callUpdatedHooks (queue) {
  var i = queue.length;
  while (i--) {
    var watcher = queue[i];
    var vm = watcher.vm;
    if (vm._watcher === watcher && vm._isMounted && !vm._isDestroyed) {
      callHook(vm, 'updated');
    }
  }
}

/**
 * Queue a kept-alive component that was activated during patch.
 * The queue will be processed after the entire tree has been patched.
 */
function queueActivatedComponent (vm) {
  // setting _inactive to false here so that a render function can
  // rely on checking whether it's in an inactive tree (e.g. router-view)
  vm._inactive = false;
  activatedChildren.push(vm);
}

function callActivatedHooks (queue) {
  for (var i = 0; i < queue.length; i++) {
    queue[i]._inactive = true;
    activateChildComponent(queue[i], true /* true */);
  }
}

/**
 * Push a watcher into the watcher queue.
 * Jobs with duplicate IDs will be skipped unless it's
 * pushed when the queue is being flushed.
 */
function queueWatcher (watcher) {
  var id = watcher.id;
  if (has[id] == null) {
    has[id] = true;
    if (!flushing) {
      queue.push(watcher);
    } else {
      // if already flushing, splice the watcher based on its id
      // if already past its id, it will be run next immediately.
      var i = queue.length - 1;
      while (i > index && queue[i].id > watcher.id) {
        i--;
      }
      queue.splice(i + 1, 0, watcher);
    }
    // queue the flush
    if (!waiting) {
      waiting = true;

      if ( true && !config.async) {
        flushSchedulerQueue();
        return
      }
      nextTick(flushSchedulerQueue);
    }
  }
}

/*  */



var uid$2 = 0;

/**
 * A watcher parses an expression, collects dependencies,
 * and fires callback when the expression value changes.
 * This is used for both the $watch() api and directives.
 */
var Watcher = function Watcher (
  vm,
  expOrFn,
  cb,
  options,
  isRenderWatcher
) {
  this.vm = vm;
  if (isRenderWatcher) {
    vm._watcher = this;
  }
  vm._watchers.push(this);
  // options
  if (options) {
    this.deep = !!options.deep;
    this.user = !!options.user;
    this.lazy = !!options.lazy;
    this.sync = !!options.sync;
    this.before = options.before;
  } else {
    this.deep = this.user = this.lazy = this.sync = false;
  }
  this.cb = cb;
  this.id = ++uid$2; // uid for batching
  this.active = true;
  this.dirty = this.lazy; // for lazy watchers
  this.deps = [];
  this.newDeps = [];
  this.depIds = new _Set();
  this.newDepIds = new _Set();
  this.expression =  true
    ? expOrFn.toString()
    : undefined;
  // parse expression for getter
  if (typeof expOrFn === 'function') {
    this.getter = expOrFn;
  } else {
    this.getter = parsePath(expOrFn);
    if (!this.getter) {
      this.getter = noop;
       true && warn(
        "Failed watching path: \"" + expOrFn + "\" " +
        'Watcher only accepts simple dot-delimited paths. ' +
        'For full control, use a function instead.',
        vm
      );
    }
  }
  this.value = this.lazy
    ? undefined
    : this.get();
};

/**
 * Evaluate the getter, and re-collect dependencies.
 */
Watcher.prototype.get = function get () {
  pushTarget(this);
  var value;
  var vm = this.vm;
  try {
    value = this.getter.call(vm, vm);
  } catch (e) {
    if (this.user) {
      handleError(e, vm, ("getter for watcher \"" + (this.expression) + "\""));
    } else {
      throw e
    }
  } finally {
    // "touch" every property so they are all tracked as
    // dependencies for deep watching
    if (this.deep) {
      traverse(value);
    }
    popTarget();
    this.cleanupDeps();
  }
  return value
};

/**
 * Add a dependency to this directive.
 */
Watcher.prototype.addDep = function addDep (dep) {
  var id = dep.id;
  if (!this.newDepIds.has(id)) {
    this.newDepIds.add(id);
    this.newDeps.push(dep);
    if (!this.depIds.has(id)) {
      dep.addSub(this);
    }
  }
};

/**
 * Clean up for dependency collection.
 */
Watcher.prototype.cleanupDeps = function cleanupDeps () {
  var i = this.deps.length;
  while (i--) {
    var dep = this.deps[i];
    if (!this.newDepIds.has(dep.id)) {
      dep.removeSub(this);
    }
  }
  var tmp = this.depIds;
  this.depIds = this.newDepIds;
  this.newDepIds = tmp;
  this.newDepIds.clear();
  tmp = this.deps;
  this.deps = this.newDeps;
  this.newDeps = tmp;
  this.newDeps.length = 0;
};

/**
 * Subscriber interface.
 * Will be called when a dependency changes.
 */
Watcher.prototype.update = function update () {
  /* istanbul ignore else */
  if (this.lazy) {
    this.dirty = true;
  } else if (this.sync) {
    this.run();
  } else {
    queueWatcher(this);
  }
};

/**
 * Scheduler job interface.
 * Will be called by the scheduler.
 */
Watcher.prototype.run = function run () {
  if (this.active) {
    var value = this.get();
    if (
      value !== this.value ||
      // Deep watchers and watchers on Object/Arrays should fire even
      // when the value is the same, because the value may
      // have mutated.
      isObject(value) ||
      this.deep
    ) {
      // set new value
      var oldValue = this.value;
      this.value = value;
      if (this.user) {
        try {
          this.cb.call(this.vm, value, oldValue);
        } catch (e) {
          handleError(e, this.vm, ("callback for watcher \"" + (this.expression) + "\""));
        }
      } else {
        this.cb.call(this.vm, value, oldValue);
      }
    }
  }
};

/**
 * Evaluate the value of the watcher.
 * This only gets called for lazy watchers.
 */
Watcher.prototype.evaluate = function evaluate () {
  this.value = this.get();
  this.dirty = false;
};

/**
 * Depend on all deps collected by this watcher.
 */
Watcher.prototype.depend = function depend () {
  var i = this.deps.length;
  while (i--) {
    this.deps[i].depend();
  }
};

/**
 * Remove self from all dependencies' subscriber list.
 */
Watcher.prototype.teardown = function teardown () {
  if (this.active) {
    // remove self from vm's watcher list
    // this is a somewhat expensive operation so we skip it
    // if the vm is being destroyed.
    if (!this.vm._isBeingDestroyed) {
      remove(this.vm._watchers, this);
    }
    var i = this.deps.length;
    while (i--) {
      this.deps[i].removeSub(this);
    }
    this.active = false;
  }
};

/*  */

var sharedPropertyDefinition = {
  enumerable: true,
  configurable: true,
  get: noop,
  set: noop
};

function proxy (target, sourceKey, key) {
  sharedPropertyDefinition.get = function proxyGetter () {
    return this[sourceKey][key]
  };
  sharedPropertyDefinition.set = function proxySetter (val) {
    this[sourceKey][key] = val;
  };
  Object.defineProperty(target, key, sharedPropertyDefinition);
}

function initState (vm) {
  vm._watchers = [];
  var opts = vm.$options;
  if (opts.props) { initProps(vm, opts.props); }
  if (opts.methods) { initMethods(vm, opts.methods); }
  if (opts.data) {
    initData(vm);
  } else {
    observe(vm._data = {}, true /* asRootData */);
  }
  if (opts.computed) { initComputed(vm, opts.computed); }
  if (opts.watch && opts.watch !== nativeWatch) {
    initWatch(vm, opts.watch);
  }
}

function initProps (vm, propsOptions) {
  var propsData = vm.$options.propsData || {};
  var props = vm._props = {};
  // cache prop keys so that future props updates can iterate using Array
  // instead of dynamic object key enumeration.
  var keys = vm.$options._propKeys = [];
  var isRoot = !vm.$parent;
  // root instance props should be converted
  if (!isRoot) {
    toggleObserving(false);
  }
  var loop = function ( key ) {
    keys.push(key);
    var value = validateProp(key, propsOptions, propsData, vm);
    /* istanbul ignore else */
    if (true) {
      var hyphenatedKey = hyphenate(key);
      if (isReservedAttribute(hyphenatedKey) ||
          config.isReservedAttr(hyphenatedKey)) {
        warn(
          ("\"" + hyphenatedKey + "\" is a reserved attribute and cannot be used as component prop."),
          vm
        );
      }
      defineReactive$$1(props, key, value, function () {
        if (!isRoot && !isUpdatingChildComponent) {
          {
            if(vm.mpHost === 'mp-baidu'){//百度 observer 在 setData callback 之后触发，直接忽略该 warn
                return
            }
            //fixed by xxxxxx __next_tick_pending,uni://form-field 时不告警
            if(
                key === 'value' && 
                Array.isArray(vm.$options.behaviors) &&
                vm.$options.behaviors.indexOf('uni://form-field') !== -1
              ){
              return
            }
            if(vm._getFormData){
              return
            }
            var $parent = vm.$parent;
            while($parent){
              if($parent.__next_tick_pending){
                return  
              }
              $parent = $parent.$parent;
            }
          }
          warn(
            "Avoid mutating a prop directly since the value will be " +
            "overwritten whenever the parent component re-renders. " +
            "Instead, use a data or computed property based on the prop's " +
            "value. Prop being mutated: \"" + key + "\"",
            vm
          );
        }
      });
    } else {}
    // static props are already proxied on the component's prototype
    // during Vue.extend(). We only need to proxy props defined at
    // instantiation here.
    if (!(key in vm)) {
      proxy(vm, "_props", key);
    }
  };

  for (var key in propsOptions) loop( key );
  toggleObserving(true);
}

function initData (vm) {
  var data = vm.$options.data;
  data = vm._data = typeof data === 'function'
    ? getData(data, vm)
    : data || {};
  if (!isPlainObject(data)) {
    data = {};
     true && warn(
      'data functions should return an object:\n' +
      'https://vuejs.org/v2/guide/components.html#data-Must-Be-a-Function',
      vm
    );
  }
  // proxy data on instance
  var keys = Object.keys(data);
  var props = vm.$options.props;
  var methods = vm.$options.methods;
  var i = keys.length;
  while (i--) {
    var key = keys[i];
    if (true) {
      if (methods && hasOwn(methods, key)) {
        warn(
          ("Method \"" + key + "\" has already been defined as a data property."),
          vm
        );
      }
    }
    if (props && hasOwn(props, key)) {
       true && warn(
        "The data property \"" + key + "\" is already declared as a prop. " +
        "Use prop default value instead.",
        vm
      );
    } else if (!isReserved(key)) {
      proxy(vm, "_data", key);
    }
  }
  // observe data
  observe(data, true /* asRootData */);
}

function getData (data, vm) {
  // #7573 disable dep collection when invoking data getters
  pushTarget();
  try {
    return data.call(vm, vm)
  } catch (e) {
    handleError(e, vm, "data()");
    return {}
  } finally {
    popTarget();
  }
}

var computedWatcherOptions = { lazy: true };

function initComputed (vm, computed) {
  // $flow-disable-line
  var watchers = vm._computedWatchers = Object.create(null);
  // computed properties are just getters during SSR
  var isSSR = isServerRendering();

  for (var key in computed) {
    var userDef = computed[key];
    var getter = typeof userDef === 'function' ? userDef : userDef.get;
    if ( true && getter == null) {
      warn(
        ("Getter is missing for computed property \"" + key + "\"."),
        vm
      );
    }

    if (!isSSR) {
      // create internal watcher for the computed property.
      watchers[key] = new Watcher(
        vm,
        getter || noop,
        noop,
        computedWatcherOptions
      );
    }

    // component-defined computed properties are already defined on the
    // component prototype. We only need to define computed properties defined
    // at instantiation here.
    if (!(key in vm)) {
      defineComputed(vm, key, userDef);
    } else if (true) {
      if (key in vm.$data) {
        warn(("The computed property \"" + key + "\" is already defined in data."), vm);
      } else if (vm.$options.props && key in vm.$options.props) {
        warn(("The computed property \"" + key + "\" is already defined as a prop."), vm);
      }
    }
  }
}

function defineComputed (
  target,
  key,
  userDef
) {
  var shouldCache = !isServerRendering();
  if (typeof userDef === 'function') {
    sharedPropertyDefinition.get = shouldCache
      ? createComputedGetter(key)
      : createGetterInvoker(userDef);
    sharedPropertyDefinition.set = noop;
  } else {
    sharedPropertyDefinition.get = userDef.get
      ? shouldCache && userDef.cache !== false
        ? createComputedGetter(key)
        : createGetterInvoker(userDef.get)
      : noop;
    sharedPropertyDefinition.set = userDef.set || noop;
  }
  if ( true &&
      sharedPropertyDefinition.set === noop) {
    sharedPropertyDefinition.set = function () {
      warn(
        ("Computed property \"" + key + "\" was assigned to but it has no setter."),
        this
      );
    };
  }
  Object.defineProperty(target, key, sharedPropertyDefinition);
}

function createComputedGetter (key) {
  return function computedGetter () {
    var watcher = this._computedWatchers && this._computedWatchers[key];
    if (watcher) {
      if (watcher.dirty) {
        watcher.evaluate();
      }
      if (Dep.SharedObject.target) {// fixed by xxxxxx
        watcher.depend();
      }
      return watcher.value
    }
  }
}

function createGetterInvoker(fn) {
  return function computedGetter () {
    return fn.call(this, this)
  }
}

function initMethods (vm, methods) {
  var props = vm.$options.props;
  for (var key in methods) {
    if (true) {
      if (typeof methods[key] !== 'function') {
        warn(
          "Method \"" + key + "\" has type \"" + (typeof methods[key]) + "\" in the component definition. " +
          "Did you reference the function correctly?",
          vm
        );
      }
      if (props && hasOwn(props, key)) {
        warn(
          ("Method \"" + key + "\" has already been defined as a prop."),
          vm
        );
      }
      if ((key in vm) && isReserved(key)) {
        warn(
          "Method \"" + key + "\" conflicts with an existing Vue instance method. " +
          "Avoid defining component methods that start with _ or $."
        );
      }
    }
    vm[key] = typeof methods[key] !== 'function' ? noop : bind(methods[key], vm);
  }
}

function initWatch (vm, watch) {
  for (var key in watch) {
    var handler = watch[key];
    if (Array.isArray(handler)) {
      for (var i = 0; i < handler.length; i++) {
        createWatcher(vm, key, handler[i]);
      }
    } else {
      createWatcher(vm, key, handler);
    }
  }
}

function createWatcher (
  vm,
  expOrFn,
  handler,
  options
) {
  if (isPlainObject(handler)) {
    options = handler;
    handler = handler.handler;
  }
  if (typeof handler === 'string') {
    handler = vm[handler];
  }
  return vm.$watch(expOrFn, handler, options)
}

function stateMixin (Vue) {
  // flow somehow has problems with directly declared definition object
  // when using Object.defineProperty, so we have to procedurally build up
  // the object here.
  var dataDef = {};
  dataDef.get = function () { return this._data };
  var propsDef = {};
  propsDef.get = function () { return this._props };
  if (true) {
    dataDef.set = function () {
      warn(
        'Avoid replacing instance root $data. ' +
        'Use nested data properties instead.',
        this
      );
    };
    propsDef.set = function () {
      warn("$props is readonly.", this);
    };
  }
  Object.defineProperty(Vue.prototype, '$data', dataDef);
  Object.defineProperty(Vue.prototype, '$props', propsDef);

  Vue.prototype.$set = set;
  Vue.prototype.$delete = del;

  Vue.prototype.$watch = function (
    expOrFn,
    cb,
    options
  ) {
    var vm = this;
    if (isPlainObject(cb)) {
      return createWatcher(vm, expOrFn, cb, options)
    }
    options = options || {};
    options.user = true;
    var watcher = new Watcher(vm, expOrFn, cb, options);
    if (options.immediate) {
      try {
        cb.call(vm, watcher.value);
      } catch (error) {
        handleError(error, vm, ("callback for immediate watcher \"" + (watcher.expression) + "\""));
      }
    }
    return function unwatchFn () {
      watcher.teardown();
    }
  };
}

/*  */

var uid$3 = 0;

function initMixin (Vue) {
  Vue.prototype._init = function (options) {
    var vm = this;
    // a uid
    vm._uid = uid$3++;

    var startTag, endTag;
    /* istanbul ignore if */
    if ( true && config.performance && mark) {
      startTag = "vue-perf-start:" + (vm._uid);
      endTag = "vue-perf-end:" + (vm._uid);
      mark(startTag);
    }

    // a flag to avoid this being observed
    vm._isVue = true;
    // merge options
    if (options && options._isComponent) {
      // optimize internal component instantiation
      // since dynamic options merging is pretty slow, and none of the
      // internal component options needs special treatment.
      initInternalComponent(vm, options);
    } else {
      vm.$options = mergeOptions(
        resolveConstructorOptions(vm.constructor),
        options || {},
        vm
      );
    }
    /* istanbul ignore else */
    if (true) {
      initProxy(vm);
    } else {}
    // expose real self
    vm._self = vm;
    initLifecycle(vm);
    initEvents(vm);
    initRender(vm);
    callHook(vm, 'beforeCreate');
    !vm._$fallback && initInjections(vm); // resolve injections before data/props  
    initState(vm);
    !vm._$fallback && initProvide(vm); // resolve provide after data/props
    !vm._$fallback && callHook(vm, 'created');      

    /* istanbul ignore if */
    if ( true && config.performance && mark) {
      vm._name = formatComponentName(vm, false);
      mark(endTag);
      measure(("vue " + (vm._name) + " init"), startTag, endTag);
    }

    if (vm.$options.el) {
      vm.$mount(vm.$options.el);
    }
  };
}

function initInternalComponent (vm, options) {
  var opts = vm.$options = Object.create(vm.constructor.options);
  // doing this because it's faster than dynamic enumeration.
  var parentVnode = options._parentVnode;
  opts.parent = options.parent;
  opts._parentVnode = parentVnode;

  var vnodeComponentOptions = parentVnode.componentOptions;
  opts.propsData = vnodeComponentOptions.propsData;
  opts._parentListeners = vnodeComponentOptions.listeners;
  opts._renderChildren = vnodeComponentOptions.children;
  opts._componentTag = vnodeComponentOptions.tag;

  if (options.render) {
    opts.render = options.render;
    opts.staticRenderFns = options.staticRenderFns;
  }
}

function resolveConstructorOptions (Ctor) {
  var options = Ctor.options;
  if (Ctor.super) {
    var superOptions = resolveConstructorOptions(Ctor.super);
    var cachedSuperOptions = Ctor.superOptions;
    if (superOptions !== cachedSuperOptions) {
      // super option changed,
      // need to resolve new options.
      Ctor.superOptions = superOptions;
      // check if there are any late-modified/attached options (#4976)
      var modifiedOptions = resolveModifiedOptions(Ctor);
      // update base extend options
      if (modifiedOptions) {
        extend(Ctor.extendOptions, modifiedOptions);
      }
      options = Ctor.options = mergeOptions(superOptions, Ctor.extendOptions);
      if (options.name) {
        options.components[options.name] = Ctor;
      }
    }
  }
  return options
}

function resolveModifiedOptions (Ctor) {
  var modified;
  var latest = Ctor.options;
  var sealed = Ctor.sealedOptions;
  for (var key in latest) {
    if (latest[key] !== sealed[key]) {
      if (!modified) { modified = {}; }
      modified[key] = latest[key];
    }
  }
  return modified
}

function Vue (options) {
  if ( true &&
    !(this instanceof Vue)
  ) {
    warn('Vue is a constructor and should be called with the `new` keyword');
  }
  this._init(options);
}

initMixin(Vue);
stateMixin(Vue);
eventsMixin(Vue);
lifecycleMixin(Vue);
renderMixin(Vue);

/*  */

function initUse (Vue) {
  Vue.use = function (plugin) {
    var installedPlugins = (this._installedPlugins || (this._installedPlugins = []));
    if (installedPlugins.indexOf(plugin) > -1) {
      return this
    }

    // additional parameters
    var args = toArray(arguments, 1);
    args.unshift(this);
    if (typeof plugin.install === 'function') {
      plugin.install.apply(plugin, args);
    } else if (typeof plugin === 'function') {
      plugin.apply(null, args);
    }
    installedPlugins.push(plugin);
    return this
  };
}

/*  */

function initMixin$1 (Vue) {
  Vue.mixin = function (mixin) {
    this.options = mergeOptions(this.options, mixin);
    return this
  };
}

/*  */

function initExtend (Vue) {
  /**
   * Each instance constructor, including Vue, has a unique
   * cid. This enables us to create wrapped "child
   * constructors" for prototypal inheritance and cache them.
   */
  Vue.cid = 0;
  var cid = 1;

  /**
   * Class inheritance
   */
  Vue.extend = function (extendOptions) {
    extendOptions = extendOptions || {};
    var Super = this;
    var SuperId = Super.cid;
    var cachedCtors = extendOptions._Ctor || (extendOptions._Ctor = {});
    if (cachedCtors[SuperId]) {
      return cachedCtors[SuperId]
    }

    var name = extendOptions.name || Super.options.name;
    if ( true && name) {
      validateComponentName(name);
    }

    var Sub = function VueComponent (options) {
      this._init(options);
    };
    Sub.prototype = Object.create(Super.prototype);
    Sub.prototype.constructor = Sub;
    Sub.cid = cid++;
    Sub.options = mergeOptions(
      Super.options,
      extendOptions
    );
    Sub['super'] = Super;

    // For props and computed properties, we define the proxy getters on
    // the Vue instances at extension time, on the extended prototype. This
    // avoids Object.defineProperty calls for each instance created.
    if (Sub.options.props) {
      initProps$1(Sub);
    }
    if (Sub.options.computed) {
      initComputed$1(Sub);
    }

    // allow further extension/mixin/plugin usage
    Sub.extend = Super.extend;
    Sub.mixin = Super.mixin;
    Sub.use = Super.use;

    // create asset registers, so extended classes
    // can have their private assets too.
    ASSET_TYPES.forEach(function (type) {
      Sub[type] = Super[type];
    });
    // enable recursive self-lookup
    if (name) {
      Sub.options.components[name] = Sub;
    }

    // keep a reference to the super options at extension time.
    // later at instantiation we can check if Super's options have
    // been updated.
    Sub.superOptions = Super.options;
    Sub.extendOptions = extendOptions;
    Sub.sealedOptions = extend({}, Sub.options);

    // cache constructor
    cachedCtors[SuperId] = Sub;
    return Sub
  };
}

function initProps$1 (Comp) {
  var props = Comp.options.props;
  for (var key in props) {
    proxy(Comp.prototype, "_props", key);
  }
}

function initComputed$1 (Comp) {
  var computed = Comp.options.computed;
  for (var key in computed) {
    defineComputed(Comp.prototype, key, computed[key]);
  }
}

/*  */

function initAssetRegisters (Vue) {
  /**
   * Create asset registration methods.
   */
  ASSET_TYPES.forEach(function (type) {
    Vue[type] = function (
      id,
      definition
    ) {
      if (!definition) {
        return this.options[type + 's'][id]
      } else {
        /* istanbul ignore if */
        if ( true && type === 'component') {
          validateComponentName(id);
        }
        if (type === 'component' && isPlainObject(definition)) {
          definition.name = definition.name || id;
          definition = this.options._base.extend(definition);
        }
        if (type === 'directive' && typeof definition === 'function') {
          definition = { bind: definition, update: definition };
        }
        this.options[type + 's'][id] = definition;
        return definition
      }
    };
  });
}

/*  */



function getComponentName (opts) {
  return opts && (opts.Ctor.options.name || opts.tag)
}

function matches (pattern, name) {
  if (Array.isArray(pattern)) {
    return pattern.indexOf(name) > -1
  } else if (typeof pattern === 'string') {
    return pattern.split(',').indexOf(name) > -1
  } else if (isRegExp(pattern)) {
    return pattern.test(name)
  }
  /* istanbul ignore next */
  return false
}

function pruneCache (keepAliveInstance, filter) {
  var cache = keepAliveInstance.cache;
  var keys = keepAliveInstance.keys;
  var _vnode = keepAliveInstance._vnode;
  for (var key in cache) {
    var cachedNode = cache[key];
    if (cachedNode) {
      var name = getComponentName(cachedNode.componentOptions);
      if (name && !filter(name)) {
        pruneCacheEntry(cache, key, keys, _vnode);
      }
    }
  }
}

function pruneCacheEntry (
  cache,
  key,
  keys,
  current
) {
  var cached$$1 = cache[key];
  if (cached$$1 && (!current || cached$$1.tag !== current.tag)) {
    cached$$1.componentInstance.$destroy();
  }
  cache[key] = null;
  remove(keys, key);
}

var patternTypes = [String, RegExp, Array];

var KeepAlive = {
  name: 'keep-alive',
  abstract: true,

  props: {
    include: patternTypes,
    exclude: patternTypes,
    max: [String, Number]
  },

  created: function created () {
    this.cache = Object.create(null);
    this.keys = [];
  },

  destroyed: function destroyed () {
    for (var key in this.cache) {
      pruneCacheEntry(this.cache, key, this.keys);
    }
  },

  mounted: function mounted () {
    var this$1 = this;

    this.$watch('include', function (val) {
      pruneCache(this$1, function (name) { return matches(val, name); });
    });
    this.$watch('exclude', function (val) {
      pruneCache(this$1, function (name) { return !matches(val, name); });
    });
  },

  render: function render () {
    var slot = this.$slots.default;
    var vnode = getFirstComponentChild(slot);
    var componentOptions = vnode && vnode.componentOptions;
    if (componentOptions) {
      // check pattern
      var name = getComponentName(componentOptions);
      var ref = this;
      var include = ref.include;
      var exclude = ref.exclude;
      if (
        // not included
        (include && (!name || !matches(include, name))) ||
        // excluded
        (exclude && name && matches(exclude, name))
      ) {
        return vnode
      }

      var ref$1 = this;
      var cache = ref$1.cache;
      var keys = ref$1.keys;
      var key = vnode.key == null
        // same constructor may get registered as different local components
        // so cid alone is not enough (#3269)
        ? componentOptions.Ctor.cid + (componentOptions.tag ? ("::" + (componentOptions.tag)) : '')
        : vnode.key;
      if (cache[key]) {
        vnode.componentInstance = cache[key].componentInstance;
        // make current key freshest
        remove(keys, key);
        keys.push(key);
      } else {
        cache[key] = vnode;
        keys.push(key);
        // prune oldest entry
        if (this.max && keys.length > parseInt(this.max)) {
          pruneCacheEntry(cache, keys[0], keys, this._vnode);
        }
      }

      vnode.data.keepAlive = true;
    }
    return vnode || (slot && slot[0])
  }
};

var builtInComponents = {
  KeepAlive: KeepAlive
};

/*  */

function initGlobalAPI (Vue) {
  // config
  var configDef = {};
  configDef.get = function () { return config; };
  if (true) {
    configDef.set = function () {
      warn(
        'Do not replace the Vue.config object, set individual fields instead.'
      );
    };
  }
  Object.defineProperty(Vue, 'config', configDef);

  // exposed util methods.
  // NOTE: these are not considered part of the public API - avoid relying on
  // them unless you are aware of the risk.
  Vue.util = {
    warn: warn,
    extend: extend,
    mergeOptions: mergeOptions,
    defineReactive: defineReactive$$1
  };

  Vue.set = set;
  Vue.delete = del;
  Vue.nextTick = nextTick;

  // 2.6 explicit observable API
  Vue.observable = function (obj) {
    observe(obj);
    return obj
  };

  Vue.options = Object.create(null);
  ASSET_TYPES.forEach(function (type) {
    Vue.options[type + 's'] = Object.create(null);
  });

  // this is used to identify the "base" constructor to extend all plain-object
  // components with in Weex's multi-instance scenarios.
  Vue.options._base = Vue;

  extend(Vue.options.components, builtInComponents);

  initUse(Vue);
  initMixin$1(Vue);
  initExtend(Vue);
  initAssetRegisters(Vue);
}

initGlobalAPI(Vue);

Object.defineProperty(Vue.prototype, '$isServer', {
  get: isServerRendering
});

Object.defineProperty(Vue.prototype, '$ssrContext', {
  get: function get () {
    /* istanbul ignore next */
    return this.$vnode && this.$vnode.ssrContext
  }
});

// expose FunctionalRenderContext for ssr runtime helper installation
Object.defineProperty(Vue, 'FunctionalRenderContext', {
  value: FunctionalRenderContext
});

Vue.version = '2.6.11';

/**
 * https://raw.githubusercontent.com/Tencent/westore/master/packages/westore/utils/diff.js
 */
var ARRAYTYPE = '[object Array]';
var OBJECTTYPE = '[object Object]';
// const FUNCTIONTYPE = '[object Function]'

function diff(current, pre) {
    var result = {};
    syncKeys(current, pre);
    _diff(current, pre, '', result);
    return result
}

function syncKeys(current, pre) {
    if (current === pre) { return }
    var rootCurrentType = type(current);
    var rootPreType = type(pre);
    if (rootCurrentType == OBJECTTYPE && rootPreType == OBJECTTYPE) {
        if(Object.keys(current).length >= Object.keys(pre).length){
            for (var key in pre) {
                var currentValue = current[key];
                if (currentValue === undefined) {
                    current[key] = null;
                } else {
                    syncKeys(currentValue, pre[key]);
                }
            }
        }
    } else if (rootCurrentType == ARRAYTYPE && rootPreType == ARRAYTYPE) {
        if (current.length >= pre.length) {
            pre.forEach(function (item, index) {
                syncKeys(current[index], item);
            });
        }
    }
}

function _diff(current, pre, path, result) {
    if (current === pre) { return }
    var rootCurrentType = type(current);
    var rootPreType = type(pre);
    if (rootCurrentType == OBJECTTYPE) {
        if (rootPreType != OBJECTTYPE || Object.keys(current).length < Object.keys(pre).length) {
            setResult(result, path, current);
        } else {
            var loop = function ( key ) {
                var currentValue = current[key];
                var preValue = pre[key];
                var currentType = type(currentValue);
                var preType = type(preValue);
                if (currentType != ARRAYTYPE && currentType != OBJECTTYPE) {
                    if (currentValue != pre[key]) {
                        setResult(result, (path == '' ? '' : path + ".") + key, currentValue);
                    }
                } else if (currentType == ARRAYTYPE) {
                    if (preType != ARRAYTYPE) {
                        setResult(result, (path == '' ? '' : path + ".") + key, currentValue);
                    } else {
                        if (currentValue.length < preValue.length) {
                            setResult(result, (path == '' ? '' : path + ".") + key, currentValue);
                        } else {
                            currentValue.forEach(function (item, index) {
                                _diff(item, preValue[index], (path == '' ? '' : path + ".") + key + '[' + index + ']', result);
                            });
                        }
                    }
                } else if (currentType == OBJECTTYPE) {
                    if (preType != OBJECTTYPE || Object.keys(currentValue).length < Object.keys(preValue).length) {
                        setResult(result, (path == '' ? '' : path + ".") + key, currentValue);
                    } else {
                        for (var subKey in currentValue) {
                            _diff(currentValue[subKey], preValue[subKey], (path == '' ? '' : path + ".") + key + '.' + subKey, result);
                        }
                    }
                }
            };

            for (var key in current) loop( key );
        }
    } else if (rootCurrentType == ARRAYTYPE) {
        if (rootPreType != ARRAYTYPE) {
            setResult(result, path, current);
        } else {
            if (current.length < pre.length) {
                setResult(result, path, current);
            } else {
                current.forEach(function (item, index) {
                    _diff(item, pre[index], path + '[' + index + ']', result);
                });
            }
        }
    } else {
        setResult(result, path, current);
    }
}

function setResult(result, k, v) {
    // if (type(v) != FUNCTIONTYPE) {
        result[k] = v;
    // }
}

function type(obj) {
    return Object.prototype.toString.call(obj)
}

/*  */

function flushCallbacks$1(vm) {
    if (vm.__next_tick_callbacks && vm.__next_tick_callbacks.length) {
        if (Object({"NODE_ENV":"development","VUE_APP_NAME":"bookingVaccineMini","VUE_APP_PLATFORM":"mp-weixin","BASE_URL":"/"}).VUE_APP_DEBUG) {
            var mpInstance = vm.$scope;
            console.log('[' + (+new Date) + '][' + (mpInstance.is || mpInstance.route) + '][' + vm._uid +
                ']:flushCallbacks[' + vm.__next_tick_callbacks.length + ']');
        }
        var copies = vm.__next_tick_callbacks.slice(0);
        vm.__next_tick_callbacks.length = 0;
        for (var i = 0; i < copies.length; i++) {
            copies[i]();
        }
    }
}

function hasRenderWatcher(vm) {
    return queue.find(function (watcher) { return vm._watcher === watcher; })
}

function nextTick$1(vm, cb) {
    //1.nextTick 之前 已 setData 且 setData 还未回调完成
    //2.nextTick 之前存在 render watcher
    if (!vm.__next_tick_pending && !hasRenderWatcher(vm)) {
        if(Object({"NODE_ENV":"development","VUE_APP_NAME":"bookingVaccineMini","VUE_APP_PLATFORM":"mp-weixin","BASE_URL":"/"}).VUE_APP_DEBUG){
            var mpInstance = vm.$scope;
            console.log('[' + (+new Date) + '][' + (mpInstance.is || mpInstance.route) + '][' + vm._uid +
                ']:nextVueTick');
        }
        return nextTick(cb, vm)
    }else{
        if(Object({"NODE_ENV":"development","VUE_APP_NAME":"bookingVaccineMini","VUE_APP_PLATFORM":"mp-weixin","BASE_URL":"/"}).VUE_APP_DEBUG){
            var mpInstance$1 = vm.$scope;
            console.log('[' + (+new Date) + '][' + (mpInstance$1.is || mpInstance$1.route) + '][' + vm._uid +
                ']:nextMPTick');
        }
    }
    var _resolve;
    if (!vm.__next_tick_callbacks) {
        vm.__next_tick_callbacks = [];
    }
    vm.__next_tick_callbacks.push(function () {
        if (cb) {
            try {
                cb.call(vm);
            } catch (e) {
                handleError(e, vm, 'nextTick');
            }
        } else if (_resolve) {
            _resolve(vm);
        }
    });
    // $flow-disable-line
    if (!cb && typeof Promise !== 'undefined') {
        return new Promise(function (resolve) {
            _resolve = resolve;
        })
    }
}

/*  */

function cloneWithData(vm) {
  // 确保当前 vm 所有数据被同步
  var ret = Object.create(null);
  var dataKeys = [].concat(
    Object.keys(vm._data || {}),
    Object.keys(vm._computedWatchers || {}));

  dataKeys.reduce(function(ret, key) {
    ret[key] = vm[key];
    return ret
  }, ret);

  // vue-composition-api
  var compositionApiState = vm.__composition_api_state__ || vm.__secret_vfa_state__;
  var rawBindings = compositionApiState && compositionApiState.rawBindings;
  if (rawBindings) {
    Object.keys(rawBindings).forEach(function (key) {
      ret[key] = vm[key];
    });
  }

  //TODO 需要把无用数据处理掉，比如 list=>l0 则 list 需要移除，否则多传输一份数据
  Object.assign(ret, vm.$mp.data || {});
  if (
    Array.isArray(vm.$options.behaviors) &&
    vm.$options.behaviors.indexOf('uni://form-field') !== -1
  ) { //form-field
    ret['name'] = vm.name;
    ret['value'] = vm.value;
  }

  return JSON.parse(JSON.stringify(ret))
}

var patch = function(oldVnode, vnode) {
  var this$1 = this;

  if (vnode === null) { //destroy
    return
  }
  if (this.mpType === 'page' || this.mpType === 'component') {
    var mpInstance = this.$scope;
    var data = Object.create(null);
    try {
      data = cloneWithData(this);
    } catch (err) {
      console.error(err);
    }
    data.__webviewId__ = mpInstance.data.__webviewId__;
    var mpData = Object.create(null);
    Object.keys(data).forEach(function (key) { //仅同步 data 中有的数据
      mpData[key] = mpInstance.data[key];
    });
    var diffData = this.$shouldDiffData === false ? data : diff(data, mpData);
    if (Object.keys(diffData).length) {
      if (Object({"NODE_ENV":"development","VUE_APP_NAME":"bookingVaccineMini","VUE_APP_PLATFORM":"mp-weixin","BASE_URL":"/"}).VUE_APP_DEBUG) {
        console.log('[' + (+new Date) + '][' + (mpInstance.is || mpInstance.route) + '][' + this._uid +
          ']差量更新',
          JSON.stringify(diffData));
      }
      this.__next_tick_pending = true;
      mpInstance.setData(diffData, function () {
        this$1.__next_tick_pending = false;
        flushCallbacks$1(this$1);
      });
    } else {
      flushCallbacks$1(this);
    }
  }
};

/*  */

function createEmptyRender() {

}

function mountComponent$1(
  vm,
  el,
  hydrating
) {
  if (!vm.mpType) {//main.js 中的 new Vue
    return vm
  }
  if (vm.mpType === 'app') {
    vm.$options.render = createEmptyRender;
  }
  if (!vm.$options.render) {
    vm.$options.render = createEmptyRender;
    if (true) {
      /* istanbul ignore if */
      if ((vm.$options.template && vm.$options.template.charAt(0) !== '#') ||
        vm.$options.el || el) {
        warn(
          'You are using the runtime-only build of Vue where the template ' +
          'compiler is not available. Either pre-compile the templates into ' +
          'render functions, or use the compiler-included build.',
          vm
        );
      } else {
        warn(
          'Failed to mount component: template or render function not defined.',
          vm
        );
      }
    }
  }
  
  !vm._$fallback && callHook(vm, 'beforeMount');

  var updateComponent = function () {
    vm._update(vm._render(), hydrating);
  };

  // we set this to vm._watcher inside the watcher's constructor
  // since the watcher's initial patch may call $forceUpdate (e.g. inside child
  // component's mounted hook), which relies on vm._watcher being already defined
  new Watcher(vm, updateComponent, noop, {
    before: function before() {
      if (vm._isMounted && !vm._isDestroyed) {
        callHook(vm, 'beforeUpdate');
      }
    }
  }, true /* isRenderWatcher */);
  hydrating = false;
  return vm
}

/*  */

function renderClass (
  staticClass,
  dynamicClass
) {
  if (isDef(staticClass) || isDef(dynamicClass)) {
    return concat(staticClass, stringifyClass(dynamicClass))
  }
  /* istanbul ignore next */
  return ''
}

function concat (a, b) {
  return a ? b ? (a + ' ' + b) : a : (b || '')
}

function stringifyClass (value) {
  if (Array.isArray(value)) {
    return stringifyArray(value)
  }
  if (isObject(value)) {
    return stringifyObject(value)
  }
  if (typeof value === 'string') {
    return value
  }
  /* istanbul ignore next */
  return ''
}

function stringifyArray (value) {
  var res = '';
  var stringified;
  for (var i = 0, l = value.length; i < l; i++) {
    if (isDef(stringified = stringifyClass(value[i])) && stringified !== '') {
      if (res) { res += ' '; }
      res += stringified;
    }
  }
  return res
}

function stringifyObject (value) {
  var res = '';
  for (var key in value) {
    if (value[key]) {
      if (res) { res += ' '; }
      res += key;
    }
  }
  return res
}

/*  */

var parseStyleText = cached(function (cssText) {
  var res = {};
  var listDelimiter = /;(?![^(]*\))/g;
  var propertyDelimiter = /:(.+)/;
  cssText.split(listDelimiter).forEach(function (item) {
    if (item) {
      var tmp = item.split(propertyDelimiter);
      tmp.length > 1 && (res[tmp[0].trim()] = tmp[1].trim());
    }
  });
  return res
});

// normalize possible array / string values into Object
function normalizeStyleBinding (bindingStyle) {
  if (Array.isArray(bindingStyle)) {
    return toObject(bindingStyle)
  }
  if (typeof bindingStyle === 'string') {
    return parseStyleText(bindingStyle)
  }
  return bindingStyle
}

/*  */

var MP_METHODS = ['createSelectorQuery', 'createIntersectionObserver', 'selectAllComponents', 'selectComponent'];

function getTarget(obj, path) {
  var parts = path.split('.');
  var key = parts[0];
  if (key.indexOf('__$n') === 0) { //number index
    key = parseInt(key.replace('__$n', ''));
  }
  if (parts.length === 1) {
    return obj[key]
  }
  return getTarget(obj[key], parts.slice(1).join('.'))
}

function internalMixin(Vue) {

  Vue.config.errorHandler = function(err, vm, info) {
    Vue.util.warn(("Error in " + info + ": \"" + (err.toString()) + "\""), vm);
    console.error(err);
    /* eslint-disable no-undef */
    var app = typeof getApp === 'function' && getApp();
    if (app && app.onError) {
      app.onError(err);
    }
  };

  var oldEmit = Vue.prototype.$emit;

  Vue.prototype.$emit = function(event) {
    if (this.$scope && event) {
      this.$scope['triggerEvent'](event, {
        __args__: toArray(arguments, 1)
      });
    }
    return oldEmit.apply(this, arguments)
  };

  Vue.prototype.$nextTick = function(fn) {
    return nextTick$1(this, fn)
  };

  MP_METHODS.forEach(function (method) {
    Vue.prototype[method] = function(args) {
      if (this.$scope && this.$scope[method]) {
        return this.$scope[method](args)
      }
      // mp-alipay
      if (typeof my === 'undefined') {
        return
      }
      if (method === 'createSelectorQuery') {
        /* eslint-disable no-undef */
        return my.createSelectorQuery(args)
      } else if (method === 'createIntersectionObserver') {
        /* eslint-disable no-undef */
        return my.createIntersectionObserver(args)
      }
      // TODO mp-alipay 暂不支持 selectAllComponents,selectComponent
    };
  });

  Vue.prototype.__init_provide = initProvide;

  Vue.prototype.__init_injections = initInjections;

  Vue.prototype.__call_hook = function(hook, args) {
    var vm = this;
    // #7573 disable dep collection when invoking lifecycle hooks
    pushTarget();
    var handlers = vm.$options[hook];
    var info = hook + " hook";
    var ret;
    if (handlers) {
      for (var i = 0, j = handlers.length; i < j; i++) {
        ret = invokeWithErrorHandling(handlers[i], vm, args ? [args] : null, vm, info);
      }
    }
    if (vm._hasHookEvent) {
      vm.$emit('hook:' + hook, args);
    }
    popTarget();
    return ret
  };

  Vue.prototype.__set_model = function(target, key, value, modifiers) {
    if (Array.isArray(modifiers)) {
      if (modifiers.indexOf('trim') !== -1) {
        value = value.trim();
      }
      if (modifiers.indexOf('number') !== -1) {
        value = this._n(value);
      }
    }
    if (!target) {
      target = this;
    }
    target[key] = value;
  };

  Vue.prototype.__set_sync = function(target, key, value) {
    if (!target) {
      target = this;
    }
    target[key] = value;
  };

  Vue.prototype.__get_orig = function(item) {
    if (isPlainObject(item)) {
      return item['$orig'] || item
    }
    return item
  };

  Vue.prototype.__get_value = function(dataPath, target) {
    return getTarget(target || this, dataPath)
  };


  Vue.prototype.__get_class = function(dynamicClass, staticClass) {
    return renderClass(staticClass, dynamicClass)
  };

  Vue.prototype.__get_style = function(dynamicStyle, staticStyle) {
    if (!dynamicStyle && !staticStyle) {
      return ''
    }
    var dynamicStyleObj = normalizeStyleBinding(dynamicStyle);
    var styleObj = staticStyle ? extend(staticStyle, dynamicStyleObj) : dynamicStyleObj;
    return Object.keys(styleObj).map(function (name) { return ((hyphenate(name)) + ":" + (styleObj[name])); }).join(';')
  };

  Vue.prototype.__map = function(val, iteratee) {
    //TODO 暂不考虑 string
    var ret, i, l, keys, key;
    if (Array.isArray(val)) {
      ret = new Array(val.length);
      for (i = 0, l = val.length; i < l; i++) {
        ret[i] = iteratee(val[i], i);
      }
      return ret
    } else if (isObject(val)) {
      keys = Object.keys(val);
      ret = Object.create(null);
      for (i = 0, l = keys.length; i < l; i++) {
        key = keys[i];
        ret[key] = iteratee(val[key], key, i);
      }
      return ret
    } else if (typeof val === 'number') {
      ret = new Array(val);
      for (i = 0, l = val; i < l; i++) {
        // 第一个参数暂时仍和小程序一致
        ret[i] = iteratee(i, i);
      }
      return ret
    }
    return []
  };

}

/*  */

var LIFECYCLE_HOOKS$1 = [
    //App
    'onLaunch',
    'onShow',
    'onHide',
    'onUniNViewMessage',
    'onPageNotFound',
    'onThemeChange',
    'onError',
    'onUnhandledRejection',
    //Page
    'onInit',
    'onLoad',
    // 'onShow',
    'onReady',
    // 'onHide',
    'onUnload',
    'onPullDownRefresh',
    'onReachBottom',
    'onTabItemTap',
    'onAddToFavorites',
    'onShareTimeline',
    'onShareAppMessage',
    'onResize',
    'onPageScroll',
    'onNavigationBarButtonTap',
    'onBackPress',
    'onNavigationBarSearchInputChanged',
    'onNavigationBarSearchInputConfirmed',
    'onNavigationBarSearchInputClicked',
    //Component
    // 'onReady', // 兼容旧版本，应该移除该事件
    'onPageShow',
    'onPageHide',
    'onPageResize'
];
function lifecycleMixin$1(Vue) {

    //fixed vue-class-component
    var oldExtend = Vue.extend;
    Vue.extend = function(extendOptions) {
        extendOptions = extendOptions || {};

        var methods = extendOptions.methods;
        if (methods) {
            Object.keys(methods).forEach(function (methodName) {
                if (LIFECYCLE_HOOKS$1.indexOf(methodName)!==-1) {
                    extendOptions[methodName] = methods[methodName];
                    delete methods[methodName];
                }
            });
        }

        return oldExtend.call(this, extendOptions)
    };

    var strategies = Vue.config.optionMergeStrategies;
    var mergeHook = strategies.created;
    LIFECYCLE_HOOKS$1.forEach(function (hook) {
        strategies[hook] = mergeHook;
    });

    Vue.prototype.__lifecycle_hooks__ = LIFECYCLE_HOOKS$1;
}

/*  */

// install platform patch function
Vue.prototype.__patch__ = patch;

// public mount method
Vue.prototype.$mount = function(
    el ,
    hydrating 
) {
    return mountComponent$1(this, el, hydrating)
};

lifecycleMixin$1(Vue);
internalMixin(Vue);

/*  */

/* harmony default export */ __webpack_exports__["default"] = (Vue);

/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! ./../../../../../webpack/buildin/global.js */ 3)))

/***/ }),
/* 3 */
/*!***********************************!*\
  !*** (webpack)/buildin/global.js ***!
  \***********************************/
/*! no static exports found */
/***/ (function(module, exports) {

var g;

// This works in non-strict mode
g = (function() {
	return this;
})();

try {
	// This works if eval is allowed (see CSP)
	g = g || new Function("return this")();
} catch (e) {
	// This works if the window reference is available
	if (typeof window === "object") g = window;
}

// g can still be undefined, but nothing to do about it...
// We return undefined, instead of nothing here, so it's
// easier to handle this case. if(!global) { ...}

module.exports = g;


/***/ }),
/* 4 */
/*!****************************************************************!*\
  !*** D:/projects/bookingVaccine/bookingVaccineMini/pages.json ***!
  \****************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {



/***/ }),
/* 5 */,
/* 6 */,
/* 7 */,
/* 8 */,
/* 9 */,
/* 10 */
/*!**********************************************************************************************************!*\
  !*** ./node_modules/@dcloudio/vue-cli-plugin-uni/packages/vue-loader/lib/runtime/componentNormalizer.js ***!
  \**********************************************************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "default", function() { return normalizeComponent; });
/* globals __VUE_SSR_CONTEXT__ */

// IMPORTANT: Do NOT use ES2015 features in this file (except for modules).
// This module is a runtime utility for cleaner component module output and will
// be included in the final webpack user bundle.

function normalizeComponent (
  scriptExports,
  render,
  staticRenderFns,
  functionalTemplate,
  injectStyles,
  scopeId,
  moduleIdentifier, /* server only */
  shadowMode, /* vue-cli only */
  components, // fixed by xxxxxx auto components
  renderjs // fixed by xxxxxx renderjs
) {
  // Vue.extend constructor export interop
  var options = typeof scriptExports === 'function'
    ? scriptExports.options
    : scriptExports

  // fixed by xxxxxx auto components
  if (components) {
    if (!options.components) {
      options.components = {}
    }
    var hasOwn = Object.prototype.hasOwnProperty
    for (var name in components) {
      if (hasOwn.call(components, name) && !hasOwn.call(options.components, name)) {
        options.components[name] = components[name]
      }
    }
  }
  // fixed by xxxxxx renderjs
  if (renderjs) {
    (renderjs.beforeCreate || (renderjs.beforeCreate = [])).unshift(function() {
      this[renderjs.__module] = this
    });
    (options.mixins || (options.mixins = [])).push(renderjs)
  }

  // render functions
  if (render) {
    options.render = render
    options.staticRenderFns = staticRenderFns
    options._compiled = true
  }

  // functional template
  if (functionalTemplate) {
    options.functional = true
  }

  // scopedId
  if (scopeId) {
    options._scopeId = 'data-v-' + scopeId
  }

  var hook
  if (moduleIdentifier) { // server build
    hook = function (context) {
      // 2.3 injection
      context =
        context || // cached call
        (this.$vnode && this.$vnode.ssrContext) || // stateful
        (this.parent && this.parent.$vnode && this.parent.$vnode.ssrContext) // functional
      // 2.2 with runInNewContext: true
      if (!context && typeof __VUE_SSR_CONTEXT__ !== 'undefined') {
        context = __VUE_SSR_CONTEXT__
      }
      // inject component styles
      if (injectStyles) {
        injectStyles.call(this, context)
      }
      // register component module identifier for async chunk inferrence
      if (context && context._registeredComponents) {
        context._registeredComponents.add(moduleIdentifier)
      }
    }
    // used by ssr in case component is cached and beforeCreate
    // never gets called
    options._ssrRegister = hook
  } else if (injectStyles) {
    hook = shadowMode
      ? function () { injectStyles.call(this, this.$root.$options.shadowRoot) }
      : injectStyles
  }

  if (hook) {
    if (options.functional) {
      // for template-only hot-reload because in that case the render fn doesn't
      // go through the normalizer
      options._injectStyles = hook
      // register for functioal component in vue file
      var originalRender = options.render
      options.render = function renderWithStyleInjection (h, context) {
        hook.call(context)
        return originalRender(h, context)
      }
    } else {
      // inject component registration as beforeCreate hook
      var existing = options.beforeCreate
      options.beforeCreate = existing
        ? [].concat(existing, hook)
        : [hook]
    }
  }

  return {
    exports: scriptExports,
    options: options
  }
}


/***/ }),
/* 11 */
/*!************************************************************************!*\
  !*** D:/projects/bookingVaccine/bookingVaccineMini/static/util/api.js ***!
  \************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/* WEBPACK VAR INJECTION */(function(uni) {Object.defineProperty(exports, "__esModule", { value: true });exports.myRequest = void 0;var BASE_URL = 'http://192.168.43.102:3000';
var myRequest = function myRequest(options) {
  return new Promise(function (resolve, reject) {
    uni.request({
      url: BASE_URL + options.url,
      method: options.method || 'GET',
      data: options.data || {},
      success: function success(res) {
        if (res.data.code == 200) {
          resolve(res);
        }
        if (res.data.code == 500) {
          uni.showToast({
            icon: "error",
            title: res.data.msg });

        }
        if (res.data.data.code == 'ER_DUP_ENTRY') {
          uni.showToast({
            title: '您已经绑定过了' });

        }
      },
      fail: function fail(err) {
        reject(err);
        uni.showToast({
          icon: "error",
          title: '系统繁忙！' });


      } });

  });
};exports.myRequest = myRequest;
/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! ./node_modules/@dcloudio/uni-mp-weixin/dist/index.js */ 1)["default"]))

/***/ }),
/* 12 */
/*!************************************************************************!*\
  !*** D:/projects/bookingVaccine/bookingVaccineMini/static/js/share.js ***!
  \************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
Object.defineProperty(exports, "__esModule", { value: true });exports.default = void 0;var _default = {
  onShareAppMessage: function onShareAppMessage(res) {
    return {
      path: '/pages/index/index', //不设置默认当前页面
      title: "ddd" };

  },
  onShareTimeline: function onShareTimeline() {
    return {
      path: "/pages/index/index", //不设置默认当前页面
      title: "gsdg" };

  } };exports.default = _default;

/***/ }),
/* 13 */,
/* 14 */,
/* 15 */,
/* 16 */,
/* 17 */,
/* 18 */,
/* 19 */
/*!**********************************************************!*\
  !*** ./node_modules/@babel/runtime/regenerator/index.js ***!
  \**********************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

module.exports = __webpack_require__(/*! regenerator-runtime */ 20);

/***/ }),
/* 20 */
/*!************************************************************!*\
  !*** ./node_modules/regenerator-runtime/runtime-module.js ***!
  \************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

/**
 * Copyright (c) 2014-present, Facebook, Inc.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */

// This method of obtaining a reference to the global object needs to be
// kept identical to the way it is obtained in runtime.js
var g = (function() {
  return this || (typeof self === "object" && self);
})() || Function("return this")();

// Use `getOwnPropertyNames` because not all browsers support calling
// `hasOwnProperty` on the global `self` object in a worker. See #183.
var hadRuntime = g.regeneratorRuntime &&
  Object.getOwnPropertyNames(g).indexOf("regeneratorRuntime") >= 0;

// Save the old regeneratorRuntime in case it needs to be restored later.
var oldRuntime = hadRuntime && g.regeneratorRuntime;

// Force reevalutation of runtime.js.
g.regeneratorRuntime = undefined;

module.exports = __webpack_require__(/*! ./runtime */ 21);

if (hadRuntime) {
  // Restore the original runtime.
  g.regeneratorRuntime = oldRuntime;
} else {
  // Remove the global property added by runtime.js.
  try {
    delete g.regeneratorRuntime;
  } catch(e) {
    g.regeneratorRuntime = undefined;
  }
}


/***/ }),
/* 21 */
/*!*****************************************************!*\
  !*** ./node_modules/regenerator-runtime/runtime.js ***!
  \*****************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

/**
 * Copyright (c) 2014-present, Facebook, Inc.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */

!(function(global) {
  "use strict";

  var Op = Object.prototype;
  var hasOwn = Op.hasOwnProperty;
  var undefined; // More compressible than void 0.
  var $Symbol = typeof Symbol === "function" ? Symbol : {};
  var iteratorSymbol = $Symbol.iterator || "@@iterator";
  var asyncIteratorSymbol = $Symbol.asyncIterator || "@@asyncIterator";
  var toStringTagSymbol = $Symbol.toStringTag || "@@toStringTag";

  var inModule = typeof module === "object";
  var runtime = global.regeneratorRuntime;
  if (runtime) {
    if (inModule) {
      // If regeneratorRuntime is defined globally and we're in a module,
      // make the exports object identical to regeneratorRuntime.
      module.exports = runtime;
    }
    // Don't bother evaluating the rest of this file if the runtime was
    // already defined globally.
    return;
  }

  // Define the runtime globally (as expected by generated code) as either
  // module.exports (if we're in a module) or a new, empty object.
  runtime = global.regeneratorRuntime = inModule ? module.exports : {};

  function wrap(innerFn, outerFn, self, tryLocsList) {
    // If outerFn provided and outerFn.prototype is a Generator, then outerFn.prototype instanceof Generator.
    var protoGenerator = outerFn && outerFn.prototype instanceof Generator ? outerFn : Generator;
    var generator = Object.create(protoGenerator.prototype);
    var context = new Context(tryLocsList || []);

    // The ._invoke method unifies the implementations of the .next,
    // .throw, and .return methods.
    generator._invoke = makeInvokeMethod(innerFn, self, context);

    return generator;
  }
  runtime.wrap = wrap;

  // Try/catch helper to minimize deoptimizations. Returns a completion
  // record like context.tryEntries[i].completion. This interface could
  // have been (and was previously) designed to take a closure to be
  // invoked without arguments, but in all the cases we care about we
  // already have an existing method we want to call, so there's no need
  // to create a new function object. We can even get away with assuming
  // the method takes exactly one argument, since that happens to be true
  // in every case, so we don't have to touch the arguments object. The
  // only additional allocation required is the completion record, which
  // has a stable shape and so hopefully should be cheap to allocate.
  function tryCatch(fn, obj, arg) {
    try {
      return { type: "normal", arg: fn.call(obj, arg) };
    } catch (err) {
      return { type: "throw", arg: err };
    }
  }

  var GenStateSuspendedStart = "suspendedStart";
  var GenStateSuspendedYield = "suspendedYield";
  var GenStateExecuting = "executing";
  var GenStateCompleted = "completed";

  // Returning this object from the innerFn has the same effect as
  // breaking out of the dispatch switch statement.
  var ContinueSentinel = {};

  // Dummy constructor functions that we use as the .constructor and
  // .constructor.prototype properties for functions that return Generator
  // objects. For full spec compliance, you may wish to configure your
  // minifier not to mangle the names of these two functions.
  function Generator() {}
  function GeneratorFunction() {}
  function GeneratorFunctionPrototype() {}

  // This is a polyfill for %IteratorPrototype% for environments that
  // don't natively support it.
  var IteratorPrototype = {};
  IteratorPrototype[iteratorSymbol] = function () {
    return this;
  };

  var getProto = Object.getPrototypeOf;
  var NativeIteratorPrototype = getProto && getProto(getProto(values([])));
  if (NativeIteratorPrototype &&
      NativeIteratorPrototype !== Op &&
      hasOwn.call(NativeIteratorPrototype, iteratorSymbol)) {
    // This environment has a native %IteratorPrototype%; use it instead
    // of the polyfill.
    IteratorPrototype = NativeIteratorPrototype;
  }

  var Gp = GeneratorFunctionPrototype.prototype =
    Generator.prototype = Object.create(IteratorPrototype);
  GeneratorFunction.prototype = Gp.constructor = GeneratorFunctionPrototype;
  GeneratorFunctionPrototype.constructor = GeneratorFunction;
  GeneratorFunctionPrototype[toStringTagSymbol] =
    GeneratorFunction.displayName = "GeneratorFunction";

  // Helper for defining the .next, .throw, and .return methods of the
  // Iterator interface in terms of a single ._invoke method.
  function defineIteratorMethods(prototype) {
    ["next", "throw", "return"].forEach(function(method) {
      prototype[method] = function(arg) {
        return this._invoke(method, arg);
      };
    });
  }

  runtime.isGeneratorFunction = function(genFun) {
    var ctor = typeof genFun === "function" && genFun.constructor;
    return ctor
      ? ctor === GeneratorFunction ||
        // For the native GeneratorFunction constructor, the best we can
        // do is to check its .name property.
        (ctor.displayName || ctor.name) === "GeneratorFunction"
      : false;
  };

  runtime.mark = function(genFun) {
    if (Object.setPrototypeOf) {
      Object.setPrototypeOf(genFun, GeneratorFunctionPrototype);
    } else {
      genFun.__proto__ = GeneratorFunctionPrototype;
      if (!(toStringTagSymbol in genFun)) {
        genFun[toStringTagSymbol] = "GeneratorFunction";
      }
    }
    genFun.prototype = Object.create(Gp);
    return genFun;
  };

  // Within the body of any async function, `await x` is transformed to
  // `yield regeneratorRuntime.awrap(x)`, so that the runtime can test
  // `hasOwn.call(value, "__await")` to determine if the yielded value is
  // meant to be awaited.
  runtime.awrap = function(arg) {
    return { __await: arg };
  };

  function AsyncIterator(generator) {
    function invoke(method, arg, resolve, reject) {
      var record = tryCatch(generator[method], generator, arg);
      if (record.type === "throw") {
        reject(record.arg);
      } else {
        var result = record.arg;
        var value = result.value;
        if (value &&
            typeof value === "object" &&
            hasOwn.call(value, "__await")) {
          return Promise.resolve(value.__await).then(function(value) {
            invoke("next", value, resolve, reject);
          }, function(err) {
            invoke("throw", err, resolve, reject);
          });
        }

        return Promise.resolve(value).then(function(unwrapped) {
          // When a yielded Promise is resolved, its final value becomes
          // the .value of the Promise<{value,done}> result for the
          // current iteration.
          result.value = unwrapped;
          resolve(result);
        }, function(error) {
          // If a rejected Promise was yielded, throw the rejection back
          // into the async generator function so it can be handled there.
          return invoke("throw", error, resolve, reject);
        });
      }
    }

    var previousPromise;

    function enqueue(method, arg) {
      function callInvokeWithMethodAndArg() {
        return new Promise(function(resolve, reject) {
          invoke(method, arg, resolve, reject);
        });
      }

      return previousPromise =
        // If enqueue has been called before, then we want to wait until
        // all previous Promises have been resolved before calling invoke,
        // so that results are always delivered in the correct order. If
        // enqueue has not been called before, then it is important to
        // call invoke immediately, without waiting on a callback to fire,
        // so that the async generator function has the opportunity to do
        // any necessary setup in a predictable way. This predictability
        // is why the Promise constructor synchronously invokes its
        // executor callback, and why async functions synchronously
        // execute code before the first await. Since we implement simple
        // async functions in terms of async generators, it is especially
        // important to get this right, even though it requires care.
        previousPromise ? previousPromise.then(
          callInvokeWithMethodAndArg,
          // Avoid propagating failures to Promises returned by later
          // invocations of the iterator.
          callInvokeWithMethodAndArg
        ) : callInvokeWithMethodAndArg();
    }

    // Define the unified helper method that is used to implement .next,
    // .throw, and .return (see defineIteratorMethods).
    this._invoke = enqueue;
  }

  defineIteratorMethods(AsyncIterator.prototype);
  AsyncIterator.prototype[asyncIteratorSymbol] = function () {
    return this;
  };
  runtime.AsyncIterator = AsyncIterator;

  // Note that simple async functions are implemented on top of
  // AsyncIterator objects; they just return a Promise for the value of
  // the final result produced by the iterator.
  runtime.async = function(innerFn, outerFn, self, tryLocsList) {
    var iter = new AsyncIterator(
      wrap(innerFn, outerFn, self, tryLocsList)
    );

    return runtime.isGeneratorFunction(outerFn)
      ? iter // If outerFn is a generator, return the full iterator.
      : iter.next().then(function(result) {
          return result.done ? result.value : iter.next();
        });
  };

  function makeInvokeMethod(innerFn, self, context) {
    var state = GenStateSuspendedStart;

    return function invoke(method, arg) {
      if (state === GenStateExecuting) {
        throw new Error("Generator is already running");
      }

      if (state === GenStateCompleted) {
        if (method === "throw") {
          throw arg;
        }

        // Be forgiving, per 25.3.3.3.3 of the spec:
        // https://people.mozilla.org/~jorendorff/es6-draft.html#sec-generatorresume
        return doneResult();
      }

      context.method = method;
      context.arg = arg;

      while (true) {
        var delegate = context.delegate;
        if (delegate) {
          var delegateResult = maybeInvokeDelegate(delegate, context);
          if (delegateResult) {
            if (delegateResult === ContinueSentinel) continue;
            return delegateResult;
          }
        }

        if (context.method === "next") {
          // Setting context._sent for legacy support of Babel's
          // function.sent implementation.
          context.sent = context._sent = context.arg;

        } else if (context.method === "throw") {
          if (state === GenStateSuspendedStart) {
            state = GenStateCompleted;
            throw context.arg;
          }

          context.dispatchException(context.arg);

        } else if (context.method === "return") {
          context.abrupt("return", context.arg);
        }

        state = GenStateExecuting;

        var record = tryCatch(innerFn, self, context);
        if (record.type === "normal") {
          // If an exception is thrown from innerFn, we leave state ===
          // GenStateExecuting and loop back for another invocation.
          state = context.done
            ? GenStateCompleted
            : GenStateSuspendedYield;

          if (record.arg === ContinueSentinel) {
            continue;
          }

          return {
            value: record.arg,
            done: context.done
          };

        } else if (record.type === "throw") {
          state = GenStateCompleted;
          // Dispatch the exception by looping back around to the
          // context.dispatchException(context.arg) call above.
          context.method = "throw";
          context.arg = record.arg;
        }
      }
    };
  }

  // Call delegate.iterator[context.method](context.arg) and handle the
  // result, either by returning a { value, done } result from the
  // delegate iterator, or by modifying context.method and context.arg,
  // setting context.delegate to null, and returning the ContinueSentinel.
  function maybeInvokeDelegate(delegate, context) {
    var method = delegate.iterator[context.method];
    if (method === undefined) {
      // A .throw or .return when the delegate iterator has no .throw
      // method always terminates the yield* loop.
      context.delegate = null;

      if (context.method === "throw") {
        if (delegate.iterator.return) {
          // If the delegate iterator has a return method, give it a
          // chance to clean up.
          context.method = "return";
          context.arg = undefined;
          maybeInvokeDelegate(delegate, context);

          if (context.method === "throw") {
            // If maybeInvokeDelegate(context) changed context.method from
            // "return" to "throw", let that override the TypeError below.
            return ContinueSentinel;
          }
        }

        context.method = "throw";
        context.arg = new TypeError(
          "The iterator does not provide a 'throw' method");
      }

      return ContinueSentinel;
    }

    var record = tryCatch(method, delegate.iterator, context.arg);

    if (record.type === "throw") {
      context.method = "throw";
      context.arg = record.arg;
      context.delegate = null;
      return ContinueSentinel;
    }

    var info = record.arg;

    if (! info) {
      context.method = "throw";
      context.arg = new TypeError("iterator result is not an object");
      context.delegate = null;
      return ContinueSentinel;
    }

    if (info.done) {
      // Assign the result of the finished delegate to the temporary
      // variable specified by delegate.resultName (see delegateYield).
      context[delegate.resultName] = info.value;

      // Resume execution at the desired location (see delegateYield).
      context.next = delegate.nextLoc;

      // If context.method was "throw" but the delegate handled the
      // exception, let the outer generator proceed normally. If
      // context.method was "next", forget context.arg since it has been
      // "consumed" by the delegate iterator. If context.method was
      // "return", allow the original .return call to continue in the
      // outer generator.
      if (context.method !== "return") {
        context.method = "next";
        context.arg = undefined;
      }

    } else {
      // Re-yield the result returned by the delegate method.
      return info;
    }

    // The delegate iterator is finished, so forget it and continue with
    // the outer generator.
    context.delegate = null;
    return ContinueSentinel;
  }

  // Define Generator.prototype.{next,throw,return} in terms of the
  // unified ._invoke helper method.
  defineIteratorMethods(Gp);

  Gp[toStringTagSymbol] = "Generator";

  // A Generator should always return itself as the iterator object when the
  // @@iterator function is called on it. Some browsers' implementations of the
  // iterator prototype chain incorrectly implement this, causing the Generator
  // object to not be returned from this call. This ensures that doesn't happen.
  // See https://github.com/facebook/regenerator/issues/274 for more details.
  Gp[iteratorSymbol] = function() {
    return this;
  };

  Gp.toString = function() {
    return "[object Generator]";
  };

  function pushTryEntry(locs) {
    var entry = { tryLoc: locs[0] };

    if (1 in locs) {
      entry.catchLoc = locs[1];
    }

    if (2 in locs) {
      entry.finallyLoc = locs[2];
      entry.afterLoc = locs[3];
    }

    this.tryEntries.push(entry);
  }

  function resetTryEntry(entry) {
    var record = entry.completion || {};
    record.type = "normal";
    delete record.arg;
    entry.completion = record;
  }

  function Context(tryLocsList) {
    // The root entry object (effectively a try statement without a catch
    // or a finally block) gives us a place to store values thrown from
    // locations where there is no enclosing try statement.
    this.tryEntries = [{ tryLoc: "root" }];
    tryLocsList.forEach(pushTryEntry, this);
    this.reset(true);
  }

  runtime.keys = function(object) {
    var keys = [];
    for (var key in object) {
      keys.push(key);
    }
    keys.reverse();

    // Rather than returning an object with a next method, we keep
    // things simple and return the next function itself.
    return function next() {
      while (keys.length) {
        var key = keys.pop();
        if (key in object) {
          next.value = key;
          next.done = false;
          return next;
        }
      }

      // To avoid creating an additional object, we just hang the .value
      // and .done properties off the next function object itself. This
      // also ensures that the minifier will not anonymize the function.
      next.done = true;
      return next;
    };
  };

  function values(iterable) {
    if (iterable) {
      var iteratorMethod = iterable[iteratorSymbol];
      if (iteratorMethod) {
        return iteratorMethod.call(iterable);
      }

      if (typeof iterable.next === "function") {
        return iterable;
      }

      if (!isNaN(iterable.length)) {
        var i = -1, next = function next() {
          while (++i < iterable.length) {
            if (hasOwn.call(iterable, i)) {
              next.value = iterable[i];
              next.done = false;
              return next;
            }
          }

          next.value = undefined;
          next.done = true;

          return next;
        };

        return next.next = next;
      }
    }

    // Return an iterator with no values.
    return { next: doneResult };
  }
  runtime.values = values;

  function doneResult() {
    return { value: undefined, done: true };
  }

  Context.prototype = {
    constructor: Context,

    reset: function(skipTempReset) {
      this.prev = 0;
      this.next = 0;
      // Resetting context._sent for legacy support of Babel's
      // function.sent implementation.
      this.sent = this._sent = undefined;
      this.done = false;
      this.delegate = null;

      this.method = "next";
      this.arg = undefined;

      this.tryEntries.forEach(resetTryEntry);

      if (!skipTempReset) {
        for (var name in this) {
          // Not sure about the optimal order of these conditions:
          if (name.charAt(0) === "t" &&
              hasOwn.call(this, name) &&
              !isNaN(+name.slice(1))) {
            this[name] = undefined;
          }
        }
      }
    },

    stop: function() {
      this.done = true;

      var rootEntry = this.tryEntries[0];
      var rootRecord = rootEntry.completion;
      if (rootRecord.type === "throw") {
        throw rootRecord.arg;
      }

      return this.rval;
    },

    dispatchException: function(exception) {
      if (this.done) {
        throw exception;
      }

      var context = this;
      function handle(loc, caught) {
        record.type = "throw";
        record.arg = exception;
        context.next = loc;

        if (caught) {
          // If the dispatched exception was caught by a catch block,
          // then let that catch block handle the exception normally.
          context.method = "next";
          context.arg = undefined;
        }

        return !! caught;
      }

      for (var i = this.tryEntries.length - 1; i >= 0; --i) {
        var entry = this.tryEntries[i];
        var record = entry.completion;

        if (entry.tryLoc === "root") {
          // Exception thrown outside of any try block that could handle
          // it, so set the completion value of the entire function to
          // throw the exception.
          return handle("end");
        }

        if (entry.tryLoc <= this.prev) {
          var hasCatch = hasOwn.call(entry, "catchLoc");
          var hasFinally = hasOwn.call(entry, "finallyLoc");

          if (hasCatch && hasFinally) {
            if (this.prev < entry.catchLoc) {
              return handle(entry.catchLoc, true);
            } else if (this.prev < entry.finallyLoc) {
              return handle(entry.finallyLoc);
            }

          } else if (hasCatch) {
            if (this.prev < entry.catchLoc) {
              return handle(entry.catchLoc, true);
            }

          } else if (hasFinally) {
            if (this.prev < entry.finallyLoc) {
              return handle(entry.finallyLoc);
            }

          } else {
            throw new Error("try statement without catch or finally");
          }
        }
      }
    },

    abrupt: function(type, arg) {
      for (var i = this.tryEntries.length - 1; i >= 0; --i) {
        var entry = this.tryEntries[i];
        if (entry.tryLoc <= this.prev &&
            hasOwn.call(entry, "finallyLoc") &&
            this.prev < entry.finallyLoc) {
          var finallyEntry = entry;
          break;
        }
      }

      if (finallyEntry &&
          (type === "break" ||
           type === "continue") &&
          finallyEntry.tryLoc <= arg &&
          arg <= finallyEntry.finallyLoc) {
        // Ignore the finally entry if control is not jumping to a
        // location outside the try/catch block.
        finallyEntry = null;
      }

      var record = finallyEntry ? finallyEntry.completion : {};
      record.type = type;
      record.arg = arg;

      if (finallyEntry) {
        this.method = "next";
        this.next = finallyEntry.finallyLoc;
        return ContinueSentinel;
      }

      return this.complete(record);
    },

    complete: function(record, afterLoc) {
      if (record.type === "throw") {
        throw record.arg;
      }

      if (record.type === "break" ||
          record.type === "continue") {
        this.next = record.arg;
      } else if (record.type === "return") {
        this.rval = this.arg = record.arg;
        this.method = "return";
        this.next = "end";
      } else if (record.type === "normal" && afterLoc) {
        this.next = afterLoc;
      }

      return ContinueSentinel;
    },

    finish: function(finallyLoc) {
      for (var i = this.tryEntries.length - 1; i >= 0; --i) {
        var entry = this.tryEntries[i];
        if (entry.finallyLoc === finallyLoc) {
          this.complete(entry.completion, entry.afterLoc);
          resetTryEntry(entry);
          return ContinueSentinel;
        }
      }
    },

    "catch": function(tryLoc) {
      for (var i = this.tryEntries.length - 1; i >= 0; --i) {
        var entry = this.tryEntries[i];
        if (entry.tryLoc === tryLoc) {
          var record = entry.completion;
          if (record.type === "throw") {
            var thrown = record.arg;
            resetTryEntry(entry);
          }
          return thrown;
        }
      }

      // The context.catch method must only be called with a location
      // argument that corresponds to a known catch block.
      throw new Error("illegal catch attempt");
    },

    delegateYield: function(iterable, resultName, nextLoc) {
      this.delegate = {
        iterator: values(iterable),
        resultName: resultName,
        nextLoc: nextLoc
      };

      if (this.method === "next") {
        // Deliberately forget the last sent value so that we don't
        // accidentally pass it on to the delegate.
        this.arg = undefined;
      }

      return ContinueSentinel;
    }
  };
})(
  // In sloppy mode, unbound `this` refers to the global object, fallback to
  // Function constructor if we're in global strict mode. That is sadly a form
  // of indirect eval which violates Content Security Policy.
  (function() {
    return this || (typeof self === "object" && self);
  })() || Function("return this")()
);


/***/ }),
/* 22 */,
/* 23 */,
/* 24 */,
/* 25 */,
/* 26 */,
/* 27 */,
/* 28 */,
/* 29 */
/*!**************************************************************************!*\
  !*** D:/projects/bookingVaccine/bookingVaccineMini/static/js/bmap-wx.js ***!
  \**************************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

function _classCallCheck(instance, Constructor) {if (!(instance instanceof Constructor)) {throw new TypeError("Cannot call a class as a function");}}function _defineProperties(target, props) {for (var i = 0; i < props.length; i++) {var descriptor = props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if ("value" in descriptor) descriptor.writable = true;Object.defineProperty(target, descriptor.key, descriptor);}}function _createClass(Constructor, protoProps, staticProps) {if (protoProps) _defineProperties(Constructor.prototype, protoProps);if (staticProps) _defineProperties(Constructor, staticProps);return Constructor;} /**
file 微信小程序JSAPI
author 崔健 cuijian03@baidu.com 2017.01.10
update 邓淑芳 623996689@qq.com 2019.07.03


/**
百度地图微信小程序API类
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                   *
class
var
BMapWX = /*#__PURE__*/function () {"use strict";

  /**
                                                  * 百度地图微信小程序API类
                                                  *
                                                  * @constructor
                                                  */
  function BMapWX(param) {_classCallCheck(this, BMapWX);
    this.ak = param["ak"];
  }

  /**
     * 使用微信接口进行定位
     *
     * @param {string} type 坐标类型
     * @param {Function} success 成功执行
     * @param {Function} fail 失败执行
     * @param {Function} complete 完成后执行
     */_createClass(BMapWX, [{ key: "getWXLocation", value: function getWXLocation(
    type, success, fail, complete) {
      type = type || 'gcj02',
      success = success || function () {};
      fail = fail || function () {};
      complete = complete || function () {};
      wx.getLocation({
        type: type,
        success: success,
        fail: fail,
        complete: complete });

    }

    /**
       * POI周边检索
       *
       * @param {Object} param 检索配置
       * 参数对象结构可以参考
       * http://lbsyun.baidu.com/index.php?title=webapi/guide/webservice-placeapi
       */ }, { key: "search", value: function search(
    param) {
      var that = this;
      param = param || {};
      var searchparam = {
        query: param["query"] || '生活服务$美食&酒店',
        scope: param["scope"] || 1,
        filter: param["filter"] || '',
        coord_type: param["coord_type"] || 2,
        page_size: param["page_size"] || 10,
        page_num: param["page_num"] || 0,
        output: param["output"] || 'json',
        ak: that.ak,
        sn: param["sn"] || '',
        timestamp: param["timestamp"] || '',
        radius: param["radius"] || 2000,
        ret_coordtype: 'gcj02ll' };

      var otherparam = {
        iconPath: param["iconPath"],
        iconTapPath: param["iconTapPath"],
        width: param["width"],
        height: param["height"],
        alpha: param["alpha"] || 1,
        success: param["success"] || function () {},
        fail: param["fail"] || function () {} };

      var type = 'gcj02';
      var locationsuccess = function locationsuccess(result) {
        searchparam["location"] = result["latitude"] + ',' + result["longitude"];
        wx.request({
          url: 'https://api.map.baidu.com/place/v2/search',
          data: searchparam,
          header: {
            "content-type": "application/json" },

          method: 'GET',
          success: function success(data) {
            var res = data["data"];
            if (res["status"] === 0) {
              var poiArr = res["results"];
              // outputRes 包含两个对象，
              // originalData为百度接口返回的原始数据
              // wxMarkerData为小程序规范的marker格式
              var outputRes = {};
              outputRes["originalData"] = res;
              outputRes["wxMarkerData"] = [];
              for (var i = 0; i < poiArr.length; i++) {
                outputRes["wxMarkerData"][i] = {
                  id: i,
                  latitude: poiArr[i]["location"]["lat"],
                  longitude: poiArr[i]["location"]["lng"],
                  title: poiArr[i]["name"],
                  iconPath: otherparam["iconPath"],
                  iconTapPath: otherparam["iconTapPath"],
                  address: poiArr[i]["address"],
                  telephone: poiArr[i]["telephone"],
                  alpha: otherparam["alpha"],
                  width: otherparam["width"],
                  height: otherparam["height"] };

              }
              otherparam.success(outputRes);
            } else {
              otherparam.fail({
                errMsg: res["message"],
                statusCode: res["status"] });

            }
          },
          fail: function fail(data) {
            otherparam.fail(data);
          } });

      };
      var locationfail = function locationfail(result) {
        otherparam.fail(result);
      };
      var locationcomplete = function locationcomplete(result) {
      };
      if (!param["location"]) {
        that.getWXLocation(type, locationsuccess, locationfail, locationcomplete);
      } else {
        var longitude = param.location.split(',')[1];
        var latitude = param.location.split(',')[0];
        var errMsg = 'input location';
        var res = {
          errMsg: errMsg,
          latitude: latitude,
          longitude: longitude };

        locationsuccess(res);
      }
    }

    /**
       * sug模糊检索
       *
       * @param {Object} param 检索配置
       * 参数对象结构可以参考
       * http://lbsyun.baidu.com/index.php?title=webapi/place-suggestion-api
       */ }, { key: "suggestion", value: function suggestion(
    param) {
      var that = this;
      param = param || {};
      var suggestionparam = {
        query: param["query"] || '',
        region: param["region"] || '全国',
        city_limit: param["city_limit"] || false,
        output: param["output"] || 'json',
        ak: that.ak,
        sn: param["sn"] || '',
        timestamp: param["timestamp"] || '',
        ret_coordtype: 'gcj02ll' };

      var otherparam = {
        success: param["success"] || function () {},
        fail: param["fail"] || function () {} };

      wx.request({
        url: 'https://api.map.baidu.com/place/v2/suggestion',
        data: suggestionparam,
        header: {
          "content-type": "application/json" },

        method: 'GET',
        success: function success(data) {
          var res = data["data"];
          if (res["status"] === 0) {
            otherparam.success(res);
          } else {
            otherparam.fail({
              errMsg: res["message"],
              statusCode: res["status"] });

          }
        },
        fail: function fail(data) {
          otherparam.fail(data);
        } });

    }

    /**
       * rgc检索（逆地理编码：经纬度->地点描述）
       * 
       * @param {Object} param 检索配置
       * 参数对象结构可以参考
       * https://lbs.baidu.com/index.php?title=webapi/guide/webservice-geocoding-abroad
       * 
       */ }, { key: "regeocoding", value: function regeocoding(
    param) {
      var that = this;
      param = param || {};
      var regeocodingparam = {
        coordtype: param["coordtype"] || 'gcj02ll',
        ret_coordtype: 'gcj02ll',
        radius: param["radius"] || 1000,
        ak: that.ak,
        sn: param["sn"] || '',
        output: param["output"] || 'json',
        callback: param["callback"] || function () {},
        extensions_poi: param["extensions_poi"] || 1,
        extensions_road: param["extensions_road"] || false,
        extensions_town: param["extensions_town"] || false,
        language: param["language"] || 'zh-CN',
        language_auto: param["language_auto"] || 0 };

      var otherparam = {
        iconPath: param["iconPath"],
        iconTapPath: param["iconTapPath"],
        width: param["width"],
        height: param["height"],
        alpha: param["alpha"] || 1,
        success: param["success"] || function () {},
        fail: param["fail"] || function () {} };

      var type = 'gcj02';
      var locationsuccess = function locationsuccess(result) {
        regeocodingparam["location"] = result["latitude"] + ',' + result["longitude"];
        wx.request({
          url: 'https://api.map.baidu.com/reverse_geocoding/v3',
          data: regeocodingparam,
          header: {
            "content-type": "application/json" },

          method: 'GET',
          success: function success(data) {
            var res = data["data"];
            if (res["status"] === 0) {
              var poiObj = res["result"];
              // outputRes 包含两个对象：
              // originalData为百度接口返回的原始数据
              // wxMarkerData为小程序规范的marker格式
              var outputRes = {};
              outputRes["originalData"] = res;
              outputRes["wxMarkerData"] = [];
              outputRes["wxMarkerData"][0] = {
                id: 0,
                latitude: result["latitude"],
                longitude: result["longitude"],
                address: poiObj["formatted_address"],
                iconPath: otherparam["iconPath"],
                iconTapPath: otherparam["iconTapPath"],
                desc: poiObj["sematic_description"],
                business: poiObj["business"],
                alpha: otherparam["alpha"],
                width: otherparam["width"],
                height: otherparam["height"] };

              otherparam.success(outputRes);
            } else {
              otherparam.fail({
                errMsg: res["message"],
                statusCode: res["status"] });

            }
          },
          fail: function fail(data) {
            otherparam.fail(data);
          } });

      };
      var locationfail = function locationfail(result) {
        otherparam.fail(result);
      };
      var locationcomplete = function locationcomplete(result) {
      };
      if (!param["location"]) {
        that.getWXLocation(type, locationsuccess, locationfail, locationcomplete);
      } else {
        var longitude = param.location.split(',')[1];
        var latitude = param.location.split(',')[0];
        var errMsg = 'input location';
        var res = {
          errMsg: errMsg,
          latitude: latitude,
          longitude: longitude };

        locationsuccess(res);
      }
    }

    /**
       * gc检索（地理编码：地点->经纬度）
       *
       * @param {Object} param 检索配置
       * 参数对象结构可以参考
       * https://lbs.baidu.com/index.php?title=webapi/guide/webservice-geocoding
       * 
       */ }, { key: "geocoding", value: function geocoding(
    param) {
      var that = this;
      param = param || {};
      var geocodingparam = {
        address: param["address"] || '',
        city: param["city"] || '',
        ret_coordtype: param["coordtype"] || 'gcj02ll',
        ak: that.ak,
        sn: param["sn"] || '',
        output: param["output"] || 'json',
        callback: param["callback"] || function () {} };

      var otherparam = {
        iconPath: param["iconPath"],
        iconTapPath: param["iconTapPath"],
        width: param["width"],
        height: param["height"],
        alpha: param["alpha"] || 1,
        success: param["success"] || function () {},
        fail: param["fail"] || function () {} };

      if (param["address"]) {
        wx.request({
          url: 'https://api.map.baidu.com/geocoding/v3',
          data: geocodingparam,
          header: {
            "content-type": "application/json" },

          method: 'GET',
          success: function success(data) {
            var res = data["data"];
            if (res["status"] === 0) {
              var poiObj = res["result"];
              // outputRes 包含两个对象：
              // originalData为百度接口返回的原始数据
              // wxMarkerData为小程序规范的marker格式
              var outputRes = res;
              outputRes["originalData"] = res;
              outputRes["wxMarkerData"] = [];
              outputRes["wxMarkerData"][0] = {
                id: 0,
                latitude: poiObj["location"]["lat"],
                longitude: poiObj["location"]["lng"],
                iconPath: otherparam["iconPath"],
                iconTapPath: otherparam["iconTapPath"],
                alpha: otherparam["alpha"],
                width: otherparam["width"],
                height: otherparam["height"] };

              otherparam.success(outputRes);
            } else {
              otherparam.fail({
                errMsg: res["message"],
                statusCode: res["status"] });

            }
          },
          fail: function fail(data) {
            otherparam.fail(data);
          } });

      } else {
        var errMsg = 'input address!';
        var res = {
          errMsg: errMsg };

        otherparam.fail(res);
      }
    }

    /**
       * 天气检索
       *
       * @param {Object} param 检索配置
       */ }, { key: "weather", value: function weather(
    param) {
      var that = this;
      param = param || {};
      var weatherparam = {
        coord_type: param["coord_type"] || 'gcj02',
        output: param["output"] || 'json',
        ak: that.ak,
        sn: param["sn"] || '',
        timestamp: param["timestamp"] || '' };

      var otherparam = {
        success: param["success"] || function () {},
        fail: param["fail"] || function () {} };

      var type = 'gcj02';
      var locationsuccess = function locationsuccess(result) {
        weatherparam["location"] = result["longitude"] + ',' + result["latitude"];
        wx.request({
          url: 'https://api.map.baidu.com/telematics/v3/weather',
          data: weatherparam,
          header: {
            "content-type": "application/json" },

          method: 'GET',
          success: function success(data) {
            var res = data["data"];
            if (res["error"] === 0 && res["status"] === 'success') {
              var weatherArr = res["results"];
              // outputRes 包含两个对象，
              // originalData为百度接口返回的原始数据
              // wxMarkerData为小程序规范的marker格式
              var outputRes = {};
              outputRes["originalData"] = res;
              outputRes["currentWeather"] = [];
              outputRes["currentWeather"][0] = {
                currentCity: weatherArr[0]["currentCity"],
                pm25: weatherArr[0]["pm25"],
                date: weatherArr[0]["weather_data"][0]["date"],
                temperature: weatherArr[0]["weather_data"][0]["temperature"],
                weatherDesc: weatherArr[0]["weather_data"][0]["weather"],
                wind: weatherArr[0]["weather_data"][0]["wind"] };

              otherparam.success(outputRes);
            } else {
              otherparam.fail({
                errMsg: res["message"],
                statusCode: res["status"] });

            }
          },
          fail: function fail(data) {
            otherparam.fail(data);
          } });

      };
      var locationfail = function locationfail(result) {
        otherparam.fail(result);
      };
      var locationcomplete = function locationcomplete(result) {
      };
      if (!param["location"]) {
        that.getWXLocation(type, locationsuccess, locationfail, locationcomplete);
      } else {
        var longitude = param.location.split(',')[0];
        var latitude = param.location.split(',')[1];
        var errMsg = 'input location';
        var res = {
          errMsg: errMsg,
          latitude: latitude,
          longitude: longitude };

        locationsuccess(res);
      }
    } }]);return BMapWX;}();


module.exports.BMapWX = BMapWX;

/***/ }),
/* 30 */
/*!***************************************************************************************!*\
  !*** D:/projects/bookingVaccine/bookingVaccineMini/node_modules/cheerio/lib/index.js ***!
  \***************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
exports.root = exports.parseHTML = exports.merge = exports.contains = void 0;
var tslib_1 = __webpack_require__(/*! tslib */ 31);
var cheerio_1 = tslib_1.__importDefault(__webpack_require__(/*! ./cheerio */ 32));
/**
                                                                * The default cheerio instance.
                                                                *
                                                                * @deprecated Use the function returned by `load` instead.
                                                                */
exports.default = cheerio_1.default;
/**
                                      * Types used in signatures of Cheerio methods.
                                      *
                                      * @category Cheerio
                                      */
tslib_1.__exportStar(__webpack_require__(/*! ./types */ 124), exports);
tslib_1.__exportStar(__webpack_require__(/*! ./load */ 125), exports);
var load_1 = __webpack_require__(/*! ./load */ 125);
// We add this here, to avoid a cyclic depenency
cheerio_1.default.load = load_1.load;
var staticMethods = tslib_1.__importStar(__webpack_require__(/*! ./static */ 101));
/**
                                                                * In order to promote consistency with the jQuery library, users are encouraged
                                                                * to instead use the static method of the same name.
                                                                *
                                                                * @deprecated
                                                                * @example
                                                                *
                                                                * ```js
                                                                * const $ = cheerio.load('<div><p></p></div>');
                                                                *
                                                                * $.contains($('div').get(0), $('p').get(0));
                                                                * //=> true
                                                                *
                                                                * $.contains($('p').get(0), $('div').get(0));
                                                                * //=> false
                                                                * ```
                                                                *
                                                                * @returns {boolean}
                                                                */
exports.contains = staticMethods.contains;
/**
                                            * In order to promote consistency with the jQuery library, users are encouraged
                                            * to instead use the static method of the same name.
                                            *
                                            * @deprecated
                                            * @example
                                            *
                                            * ```js
                                            * const $ = cheerio.load('');
                                            *
                                            * $.merge([1, 2], [3, 4]);
                                            * //=> [1, 2, 3, 4]
                                            * ```
                                            */
exports.merge = staticMethods.merge;
/**
                                      * In order to promote consistency with the jQuery library, users are encouraged
                                      * to instead use the static method of the same name as it is defined on the
                                      * "loaded" Cheerio factory function.
                                      *
                                      * @deprecated See {@link static/parseHTML}.
                                      * @example
                                      *
                                      * ```js
                                      * const $ = cheerio.load('');
                                      * $.parseHTML('<b>markup</b>');
                                      * ```
                                      */
exports.parseHTML = staticMethods.parseHTML;
/**
                                              * Users seeking to access the top-level element of a parsed document should
                                              * instead use the `root` static method of a "loaded" Cheerio function.
                                              *
                                              * @deprecated
                                              * @example
                                              *
                                              * ```js
                                              * const $ = cheerio.load('');
                                              * $.root();
                                              * ```
                                              */
exports.root = staticMethods.root;

/***/ }),
/* 31 */
/*!*****************************************!*\
  !*** ./node_modules/tslib/tslib.es6.js ***!
  \*****************************************/
/*! exports provided: __extends, __assign, __rest, __decorate, __param, __metadata, __awaiter, __generator, __createBinding, __exportStar, __values, __read, __spread, __spreadArrays, __await, __asyncGenerator, __asyncDelegator, __asyncValues, __makeTemplateObject, __importStar, __importDefault, __classPrivateFieldGet, __classPrivateFieldSet */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "__extends", function() { return __extends; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "__assign", function() { return __assign; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "__rest", function() { return __rest; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "__decorate", function() { return __decorate; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "__param", function() { return __param; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "__metadata", function() { return __metadata; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "__awaiter", function() { return __awaiter; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "__generator", function() { return __generator; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "__createBinding", function() { return __createBinding; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "__exportStar", function() { return __exportStar; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "__values", function() { return __values; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "__read", function() { return __read; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "__spread", function() { return __spread; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "__spreadArrays", function() { return __spreadArrays; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "__await", function() { return __await; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "__asyncGenerator", function() { return __asyncGenerator; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "__asyncDelegator", function() { return __asyncDelegator; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "__asyncValues", function() { return __asyncValues; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "__makeTemplateObject", function() { return __makeTemplateObject; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "__importStar", function() { return __importStar; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "__importDefault", function() { return __importDefault; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "__classPrivateFieldGet", function() { return __classPrivateFieldGet; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "__classPrivateFieldSet", function() { return __classPrivateFieldSet; });
/*! *****************************************************************************
Copyright (c) Microsoft Corporation.

Permission to use, copy, modify, and/or distribute this software for any
purpose with or without fee is hereby granted.

THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH
REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY
AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,
INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM
LOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR
OTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR
PERFORMANCE OF THIS SOFTWARE.
***************************************************************************** */
/* global Reflect, Promise */

var extendStatics = function(d, b) {
    extendStatics = Object.setPrototypeOf ||
        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
    return extendStatics(d, b);
};

function __extends(d, b) {
    extendStatics(d, b);
    function __() { this.constructor = d; }
    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
}

var __assign = function() {
    __assign = Object.assign || function __assign(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];
        }
        return t;
    }
    return __assign.apply(this, arguments);
}

function __rest(s, e) {
    var t = {};
    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)
        t[p] = s[p];
    if (s != null && typeof Object.getOwnPropertySymbols === "function")
        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {
            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))
                t[p[i]] = s[p[i]];
        }
    return t;
}

function __decorate(decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
}

function __param(paramIndex, decorator) {
    return function (target, key) { decorator(target, key, paramIndex); }
}

function __metadata(metadataKey, metadataValue) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(metadataKey, metadataValue);
}

function __awaiter(thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
}

function __generator(thisArg, body) {
    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;
    return g = { next: verb(0), "throw": verb(1), "return": verb(2) }, typeof Symbol === "function" && (g[Symbol.iterator] = function() { return this; }), g;
    function verb(n) { return function (v) { return step([n, v]); }; }
    function step(op) {
        if (f) throw new TypeError("Generator is already executing.");
        while (_) try {
            if (f = 1, y && (t = op[0] & 2 ? y["return"] : op[0] ? y["throw"] || ((t = y["return"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;
            if (y = 0, t) op = [op[0] & 2, t.value];
            switch (op[0]) {
                case 0: case 1: t = op; break;
                case 4: _.label++; return { value: op[1], done: false };
                case 5: _.label++; y = op[1]; op = [0]; continue;
                case 7: op = _.ops.pop(); _.trys.pop(); continue;
                default:
                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }
                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }
                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }
                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }
                    if (t[2]) _.ops.pop();
                    _.trys.pop(); continue;
            }
            op = body.call(thisArg, _);
        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }
        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };
    }
}

function __createBinding(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}

function __exportStar(m, exports) {
    for (var p in m) if (p !== "default" && !exports.hasOwnProperty(p)) exports[p] = m[p];
}

function __values(o) {
    var s = typeof Symbol === "function" && Symbol.iterator, m = s && o[s], i = 0;
    if (m) return m.call(o);
    if (o && typeof o.length === "number") return {
        next: function () {
            if (o && i >= o.length) o = void 0;
            return { value: o && o[i++], done: !o };
        }
    };
    throw new TypeError(s ? "Object is not iterable." : "Symbol.iterator is not defined.");
}

function __read(o, n) {
    var m = typeof Symbol === "function" && o[Symbol.iterator];
    if (!m) return o;
    var i = m.call(o), r, ar = [], e;
    try {
        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);
    }
    catch (error) { e = { error: error }; }
    finally {
        try {
            if (r && !r.done && (m = i["return"])) m.call(i);
        }
        finally { if (e) throw e.error; }
    }
    return ar;
}

function __spread() {
    for (var ar = [], i = 0; i < arguments.length; i++)
        ar = ar.concat(__read(arguments[i]));
    return ar;
}

function __spreadArrays() {
    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;
    for (var r = Array(s), k = 0, i = 0; i < il; i++)
        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)
            r[k] = a[j];
    return r;
};

function __await(v) {
    return this instanceof __await ? (this.v = v, this) : new __await(v);
}

function __asyncGenerator(thisArg, _arguments, generator) {
    if (!Symbol.asyncIterator) throw new TypeError("Symbol.asyncIterator is not defined.");
    var g = generator.apply(thisArg, _arguments || []), i, q = [];
    return i = {}, verb("next"), verb("throw"), verb("return"), i[Symbol.asyncIterator] = function () { return this; }, i;
    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }
    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }
    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }
    function fulfill(value) { resume("next", value); }
    function reject(value) { resume("throw", value); }
    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }
}

function __asyncDelegator(o) {
    var i, p;
    return i = {}, verb("next"), verb("throw", function (e) { throw e; }), verb("return"), i[Symbol.iterator] = function () { return this; }, i;
    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === "return" } : f ? f(v) : v; } : f; }
}

function __asyncValues(o) {
    if (!Symbol.asyncIterator) throw new TypeError("Symbol.asyncIterator is not defined.");
    var m = o[Symbol.asyncIterator], i;
    return m ? m.call(o) : (o = typeof __values === "function" ? __values(o) : o[Symbol.iterator](), i = {}, verb("next"), verb("throw"), verb("return"), i[Symbol.asyncIterator] = function () { return this; }, i);
    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }
    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }
}

function __makeTemplateObject(cooked, raw) {
    if (Object.defineProperty) { Object.defineProperty(cooked, "raw", { value: raw }); } else { cooked.raw = raw; }
    return cooked;
};

function __importStar(mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];
    result.default = mod;
    return result;
}

function __importDefault(mod) {
    return (mod && mod.__esModule) ? mod : { default: mod };
}

function __classPrivateFieldGet(receiver, privateMap) {
    if (!privateMap.has(receiver)) {
        throw new TypeError("attempted to get private field on non-instance");
    }
    return privateMap.get(receiver);
}

function __classPrivateFieldSet(receiver, privateMap, value) {
    if (!privateMap.has(receiver)) {
        throw new TypeError("attempted to set private field on non-instance");
    }
    privateMap.set(receiver, value);
    return value;
}


/***/ }),
/* 32 */
/*!*****************************************************************************************!*\
  !*** D:/projects/bookingVaccine/bookingVaccineMini/node_modules/cheerio/lib/cheerio.js ***!
  \*****************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
exports.Cheerio = void 0;
var tslib_1 = __webpack_require__(/*! tslib */ 31);
var parse_1 = tslib_1.__importDefault(__webpack_require__(/*! ./parse */ 33));
var options_1 = tslib_1.__importStar(__webpack_require__(/*! ./options */ 99));
var utils_1 = __webpack_require__(/*! ./utils */ 100);
var Static = tslib_1.__importStar(__webpack_require__(/*! ./static */ 101));
var Attributes = tslib_1.__importStar(__webpack_require__(/*! ./api/attributes */ 119));
var Traversing = tslib_1.__importStar(__webpack_require__(/*! ./api/traversing */ 120));
var Manipulation = tslib_1.__importStar(__webpack_require__(/*! ./api/manipulation */ 121));
var Css = tslib_1.__importStar(__webpack_require__(/*! ./api/css */ 122));
var Forms = tslib_1.__importStar(__webpack_require__(/*! ./api/forms */ 123));
/*
                                                           * The API
                                                           */
var api = [Attributes, Traversing, Manipulation, Css, Forms];
var Cheerio = /** @class */function () {
  /**
                                         * Instance of cheerio. Methods are specified in the modules. Usage of this
                                         * constructor is not recommended. Please use $.load instead.
                                         *
                                         * @private
                                         * @param selector - The new selection.
                                         * @param context - Context of the selection.
                                         * @param root - Sets the root node.
                                         * @param options - Options for the instance.
                                         */
  function Cheerio(selector, context, root, options) {
    var _this = this;
    if (!(this instanceof Cheerio)) {
      return new Cheerio(selector, context, root, options);
    }
    this.length = 0;
    this.options = tslib_1.__assign(tslib_1.__assign(tslib_1.__assign({}, options_1.default), this.options), options_1.flatten(options));
    // $(), $(null), $(undefined), $(false)
    if (!selector)
    return this;
    if (root) {
      if (typeof root === 'string')
      root = parse_1.default(root, this.options, false);
      this._root = Cheerio.call(this, root);
    }
    // $($)
    if (utils_1.isCheerio(selector))
    return selector;
    var elements = typeof selector === 'string' && utils_1.isHtml(selector) ?
    // $(<html>)
    parse_1.default(selector, this.options, false).children :
    isNode(selector) ?
    // $(dom)
    [selector] :
    Array.isArray(selector) ?
    // $([dom])
    selector :
    null;
    if (elements) {
      elements.forEach(function (elem, idx) {
        _this[idx] = elem;
      });
      this.length = elements.length;
      return this;
    }
    // We know that our selector is a string now.
    var search = selector;
    var searchContext = !context ?
    // If we don't have a context, maybe we have a root, from loading
    this._root :
    typeof context === 'string' ?
    utils_1.isHtml(context) ?
    // $('li', '<ul>...</ul>')
    new Cheerio(parse_1.default(context, this.options, false)) : (
    // $('li', 'ul')
    search = context + " " + search, this._root) :
    utils_1.isCheerio(context) ?
    // $('li', $)
    context :
    // $('li', node), $('li', [nodes])
    new Cheerio(context);
    // If we still don't have a context, return
    if (!searchContext)
    return this;
    /*
                  * #id, .class, tag
                  */
    // @ts-expect-error No good way to type this — we will always return `Cheerio<Element>` here.
    return searchContext.find(search);
  }
  /**
     * Make a cheerio object.
     *
     * @private
     * @param dom - The contents of the new object.
     * @param context - The context of the new object.
     * @returns The new cheerio object.
     */
  Cheerio.prototype._make = function (dom, context, root) {
    if (root === void 0) {root = this._root;}
    var cheerio = new this.constructor(dom, context, root, this.options);
    cheerio.prevObject = this;
    return cheerio;
  };
  /**
      * Retrieve all the DOM elements contained in the jQuery set as an array.
      *
      * @example
      *
      * ```js
      * $('li').toArray();
      * //=> [ {...}, {...}, {...} ]
      * ```
      *
      * @returns The contained items.
      */
  Cheerio.prototype.toArray = function () {
    return this.get();
  };
  Cheerio.html = Static.html;
  Cheerio.xml = Static.xml;
  Cheerio.text = Static.text;
  Cheerio.parseHTML = Static.parseHTML;
  Cheerio.root = Static.root;
  Cheerio.contains = Static.contains;
  Cheerio.merge = Static.merge;
  /** Mimic jQuery's prototype alias for plugin authors. */
  Cheerio.fn = Cheerio.prototype;
  return Cheerio;
}();
exports.Cheerio = Cheerio;
/** Set a signature of the object. */
Cheerio.prototype.cheerio = '[cheerio object]';
/*
                                                 * Make cheerio an array-like object
                                                 */
Cheerio.prototype.splice = Array.prototype.splice;
// Support for (const element of $(...)) iteration:
Cheerio.prototype[Symbol.iterator] = Array.prototype[Symbol.iterator];
// Plug in the API
api.forEach(function (mod) {return Object.assign(Cheerio.prototype, mod);});
function isNode(obj) {
  return !!obj.name ||
  obj.type === 'root' ||
  obj.type === 'text' ||
  obj.type === 'comment';
}
// Make it possible to call Cheerio without using `new`.
exports.default = Cheerio;

/***/ }),
/* 33 */
/*!***************************************************************************************!*\
  !*** D:/projects/bookingVaccine/bookingVaccineMini/node_modules/cheerio/lib/parse.js ***!
  \***************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/* WEBPACK VAR INJECTION */(function(Buffer) {
Object.defineProperty(exports, "__esModule", { value: true });
exports.update = void 0;
var htmlparser2_1 = __webpack_require__(/*! htmlparser2 */ 38);
var htmlparser2_2 = __webpack_require__(/*! ./parsers/htmlparser2 */ 72);
var parse5_1 = __webpack_require__(/*! ./parsers/parse5 */ 73);
var domhandler_1 = __webpack_require__(/*! domhandler */ 48);
/*
                                           * Parser
                                           */
function parse(content, options, isDocument) {
  if (typeof Buffer !== 'undefined' && Buffer.isBuffer(content)) {
    content = content.toString();
  }
  if (typeof content === 'string') {
    return options.xmlMode || options._useHtmlParser2 ?
    htmlparser2_2.parse(content, options) :
    parse5_1.parse(content, options, isDocument);
  }
  var doc = content;
  if (!Array.isArray(doc) && domhandler_1.isDocument(doc)) {
    // If `doc` is already a root, just return it
    return doc;
  }
  // Add conent to new root element
  var root = new domhandler_1.Document([]);
  // Update the DOM using the root
  update(doc, root);
  return root;
}
exports.default = parse;
/**
                          * Update the dom structure, for one changed layer.
                          *
                          * @param newChilds - The new children.
                          * @param parent - The new parent.
                          * @returns The parent node.
                          */
function update(newChilds, parent) {
  // Normalize
  var arr = Array.isArray(newChilds) ? newChilds : [newChilds];
  // Update parent
  if (parent) {
    parent.children = arr;
  } else
  {
    parent = null;
  }
  // Update neighbors
  for (var i = 0; i < arr.length; i++) {
    var node = arr[i];
    // Cleanly remove existing nodes from their previous structures.
    if (node.parent && node.parent.children !== arr) {
      htmlparser2_1.DomUtils.removeElement(node);
    }
    if (parent) {
      node.prev = arr[i - 1] || null;
      node.next = arr[i + 1] || null;
    } else
    {
      node.prev = node.next = null;
    }
    node.parent = parent;
  }
  return parent;
}
exports.update = update;
/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! ./../../../../../../软件/HBuilderX/plugins/uniapp-cli/node_modules/buffer/index.js */ 34).Buffer))

/***/ }),
/* 34 */
/*!**************************************!*\
  !*** ./node_modules/buffer/index.js ***!
  \**************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/* WEBPACK VAR INJECTION */(function(global) {/*!
 * The buffer module from node.js, for the browser.
 *
 * @author   Feross Aboukhadijeh <http://feross.org>
 * @license  MIT
 */
/* eslint-disable no-proto */



var base64 = __webpack_require__(/*! base64-js */ 35)
var ieee754 = __webpack_require__(/*! ieee754 */ 36)
var isArray = __webpack_require__(/*! isarray */ 37)

exports.Buffer = Buffer
exports.SlowBuffer = SlowBuffer
exports.INSPECT_MAX_BYTES = 50

/**
 * If `Buffer.TYPED_ARRAY_SUPPORT`:
 *   === true    Use Uint8Array implementation (fastest)
 *   === false   Use Object implementation (most compatible, even IE6)
 *
 * Browsers that support typed arrays are IE 10+, Firefox 4+, Chrome 7+, Safari 5.1+,
 * Opera 11.6+, iOS 4.2+.
 *
 * Due to various browser bugs, sometimes the Object implementation will be used even
 * when the browser supports typed arrays.
 *
 * Note:
 *
 *   - Firefox 4-29 lacks support for adding new properties to `Uint8Array` instances,
 *     See: https://bugzilla.mozilla.org/show_bug.cgi?id=695438.
 *
 *   - Chrome 9-10 is missing the `TypedArray.prototype.subarray` function.
 *
 *   - IE10 has a broken `TypedArray.prototype.subarray` function which returns arrays of
 *     incorrect length in some situations.

 * We detect these buggy browsers and set `Buffer.TYPED_ARRAY_SUPPORT` to `false` so they
 * get the Object implementation, which is slower but behaves correctly.
 */
Buffer.TYPED_ARRAY_SUPPORT = global.TYPED_ARRAY_SUPPORT !== undefined
  ? global.TYPED_ARRAY_SUPPORT
  : typedArraySupport()

/*
 * Export kMaxLength after typed array support is determined.
 */
exports.kMaxLength = kMaxLength()

function typedArraySupport () {
  try {
    var arr = new Uint8Array(1)
    arr.__proto__ = {__proto__: Uint8Array.prototype, foo: function () { return 42 }}
    return arr.foo() === 42 && // typed array instances can be augmented
        typeof arr.subarray === 'function' && // chrome 9-10 lack `subarray`
        arr.subarray(1, 1).byteLength === 0 // ie10 has broken `subarray`
  } catch (e) {
    return false
  }
}

function kMaxLength () {
  return Buffer.TYPED_ARRAY_SUPPORT
    ? 0x7fffffff
    : 0x3fffffff
}

function createBuffer (that, length) {
  if (kMaxLength() < length) {
    throw new RangeError('Invalid typed array length')
  }
  if (Buffer.TYPED_ARRAY_SUPPORT) {
    // Return an augmented `Uint8Array` instance, for best performance
    that = new Uint8Array(length)
    that.__proto__ = Buffer.prototype
  } else {
    // Fallback: Return an object instance of the Buffer class
    if (that === null) {
      that = new Buffer(length)
    }
    that.length = length
  }

  return that
}

/**
 * The Buffer constructor returns instances of `Uint8Array` that have their
 * prototype changed to `Buffer.prototype`. Furthermore, `Buffer` is a subclass of
 * `Uint8Array`, so the returned instances will have all the node `Buffer` methods
 * and the `Uint8Array` methods. Square bracket notation works as expected -- it
 * returns a single octet.
 *
 * The `Uint8Array` prototype remains unmodified.
 */

function Buffer (arg, encodingOrOffset, length) {
  if (!Buffer.TYPED_ARRAY_SUPPORT && !(this instanceof Buffer)) {
    return new Buffer(arg, encodingOrOffset, length)
  }

  // Common case.
  if (typeof arg === 'number') {
    if (typeof encodingOrOffset === 'string') {
      throw new Error(
        'If encoding is specified then the first argument must be a string'
      )
    }
    return allocUnsafe(this, arg)
  }
  return from(this, arg, encodingOrOffset, length)
}

Buffer.poolSize = 8192 // not used by this implementation

// TODO: Legacy, not needed anymore. Remove in next major version.
Buffer._augment = function (arr) {
  arr.__proto__ = Buffer.prototype
  return arr
}

function from (that, value, encodingOrOffset, length) {
  if (typeof value === 'number') {
    throw new TypeError('"value" argument must not be a number')
  }

  if (typeof ArrayBuffer !== 'undefined' && value instanceof ArrayBuffer) {
    return fromArrayBuffer(that, value, encodingOrOffset, length)
  }

  if (typeof value === 'string') {
    return fromString(that, value, encodingOrOffset)
  }

  return fromObject(that, value)
}

/**
 * Functionally equivalent to Buffer(arg, encoding) but throws a TypeError
 * if value is a number.
 * Buffer.from(str[, encoding])
 * Buffer.from(array)
 * Buffer.from(buffer)
 * Buffer.from(arrayBuffer[, byteOffset[, length]])
 **/
Buffer.from = function (value, encodingOrOffset, length) {
  return from(null, value, encodingOrOffset, length)
}

if (Buffer.TYPED_ARRAY_SUPPORT) {
  Buffer.prototype.__proto__ = Uint8Array.prototype
  Buffer.__proto__ = Uint8Array
  if (typeof Symbol !== 'undefined' && Symbol.species &&
      Buffer[Symbol.species] === Buffer) {
    // Fix subarray() in ES2016. See: https://github.com/feross/buffer/pull/97
    Object.defineProperty(Buffer, Symbol.species, {
      value: null,
      configurable: true
    })
  }
}

function assertSize (size) {
  if (typeof size !== 'number') {
    throw new TypeError('"size" argument must be a number')
  } else if (size < 0) {
    throw new RangeError('"size" argument must not be negative')
  }
}

function alloc (that, size, fill, encoding) {
  assertSize(size)
  if (size <= 0) {
    return createBuffer(that, size)
  }
  if (fill !== undefined) {
    // Only pay attention to encoding if it's a string. This
    // prevents accidentally sending in a number that would
    // be interpretted as a start offset.
    return typeof encoding === 'string'
      ? createBuffer(that, size).fill(fill, encoding)
      : createBuffer(that, size).fill(fill)
  }
  return createBuffer(that, size)
}

/**
 * Creates a new filled Buffer instance.
 * alloc(size[, fill[, encoding]])
 **/
Buffer.alloc = function (size, fill, encoding) {
  return alloc(null, size, fill, encoding)
}

function allocUnsafe (that, size) {
  assertSize(size)
  that = createBuffer(that, size < 0 ? 0 : checked(size) | 0)
  if (!Buffer.TYPED_ARRAY_SUPPORT) {
    for (var i = 0; i < size; ++i) {
      that[i] = 0
    }
  }
  return that
}

/**
 * Equivalent to Buffer(num), by default creates a non-zero-filled Buffer instance.
 * */
Buffer.allocUnsafe = function (size) {
  return allocUnsafe(null, size)
}
/**
 * Equivalent to SlowBuffer(num), by default creates a non-zero-filled Buffer instance.
 */
Buffer.allocUnsafeSlow = function (size) {
  return allocUnsafe(null, size)
}

function fromString (that, string, encoding) {
  if (typeof encoding !== 'string' || encoding === '') {
    encoding = 'utf8'
  }

  if (!Buffer.isEncoding(encoding)) {
    throw new TypeError('"encoding" must be a valid string encoding')
  }

  var length = byteLength(string, encoding) | 0
  that = createBuffer(that, length)

  var actual = that.write(string, encoding)

  if (actual !== length) {
    // Writing a hex string, for example, that contains invalid characters will
    // cause everything after the first invalid character to be ignored. (e.g.
    // 'abxxcd' will be treated as 'ab')
    that = that.slice(0, actual)
  }

  return that
}

function fromArrayLike (that, array) {
  var length = array.length < 0 ? 0 : checked(array.length) | 0
  that = createBuffer(that, length)
  for (var i = 0; i < length; i += 1) {
    that[i] = array[i] & 255
  }
  return that
}

function fromArrayBuffer (that, array, byteOffset, length) {
  array.byteLength // this throws if `array` is not a valid ArrayBuffer

  if (byteOffset < 0 || array.byteLength < byteOffset) {
    throw new RangeError('\'offset\' is out of bounds')
  }

  if (array.byteLength < byteOffset + (length || 0)) {
    throw new RangeError('\'length\' is out of bounds')
  }

  if (byteOffset === undefined && length === undefined) {
    array = new Uint8Array(array)
  } else if (length === undefined) {
    array = new Uint8Array(array, byteOffset)
  } else {
    array = new Uint8Array(array, byteOffset, length)
  }

  if (Buffer.TYPED_ARRAY_SUPPORT) {
    // Return an augmented `Uint8Array` instance, for best performance
    that = array
    that.__proto__ = Buffer.prototype
  } else {
    // Fallback: Return an object instance of the Buffer class
    that = fromArrayLike(that, array)
  }
  return that
}

function fromObject (that, obj) {
  if (Buffer.isBuffer(obj)) {
    var len = checked(obj.length) | 0
    that = createBuffer(that, len)

    if (that.length === 0) {
      return that
    }

    obj.copy(that, 0, 0, len)
    return that
  }

  if (obj) {
    if ((typeof ArrayBuffer !== 'undefined' &&
        obj.buffer instanceof ArrayBuffer) || 'length' in obj) {
      if (typeof obj.length !== 'number' || isnan(obj.length)) {
        return createBuffer(that, 0)
      }
      return fromArrayLike(that, obj)
    }

    if (obj.type === 'Buffer' && isArray(obj.data)) {
      return fromArrayLike(that, obj.data)
    }
  }

  throw new TypeError('First argument must be a string, Buffer, ArrayBuffer, Array, or array-like object.')
}

function checked (length) {
  // Note: cannot use `length < kMaxLength()` here because that fails when
  // length is NaN (which is otherwise coerced to zero.)
  if (length >= kMaxLength()) {
    throw new RangeError('Attempt to allocate Buffer larger than maximum ' +
                         'size: 0x' + kMaxLength().toString(16) + ' bytes')
  }
  return length | 0
}

function SlowBuffer (length) {
  if (+length != length) { // eslint-disable-line eqeqeq
    length = 0
  }
  return Buffer.alloc(+length)
}

Buffer.isBuffer = function isBuffer (b) {
  return !!(b != null && b._isBuffer)
}

Buffer.compare = function compare (a, b) {
  if (!Buffer.isBuffer(a) || !Buffer.isBuffer(b)) {
    throw new TypeError('Arguments must be Buffers')
  }

  if (a === b) return 0

  var x = a.length
  var y = b.length

  for (var i = 0, len = Math.min(x, y); i < len; ++i) {
    if (a[i] !== b[i]) {
      x = a[i]
      y = b[i]
      break
    }
  }

  if (x < y) return -1
  if (y < x) return 1
  return 0
}

Buffer.isEncoding = function isEncoding (encoding) {
  switch (String(encoding).toLowerCase()) {
    case 'hex':
    case 'utf8':
    case 'utf-8':
    case 'ascii':
    case 'latin1':
    case 'binary':
    case 'base64':
    case 'ucs2':
    case 'ucs-2':
    case 'utf16le':
    case 'utf-16le':
      return true
    default:
      return false
  }
}

Buffer.concat = function concat (list, length) {
  if (!isArray(list)) {
    throw new TypeError('"list" argument must be an Array of Buffers')
  }

  if (list.length === 0) {
    return Buffer.alloc(0)
  }

  var i
  if (length === undefined) {
    length = 0
    for (i = 0; i < list.length; ++i) {
      length += list[i].length
    }
  }

  var buffer = Buffer.allocUnsafe(length)
  var pos = 0
  for (i = 0; i < list.length; ++i) {
    var buf = list[i]
    if (!Buffer.isBuffer(buf)) {
      throw new TypeError('"list" argument must be an Array of Buffers')
    }
    buf.copy(buffer, pos)
    pos += buf.length
  }
  return buffer
}

function byteLength (string, encoding) {
  if (Buffer.isBuffer(string)) {
    return string.length
  }
  if (typeof ArrayBuffer !== 'undefined' && typeof ArrayBuffer.isView === 'function' &&
      (ArrayBuffer.isView(string) || string instanceof ArrayBuffer)) {
    return string.byteLength
  }
  if (typeof string !== 'string') {
    string = '' + string
  }

  var len = string.length
  if (len === 0) return 0

  // Use a for loop to avoid recursion
  var loweredCase = false
  for (;;) {
    switch (encoding) {
      case 'ascii':
      case 'latin1':
      case 'binary':
        return len
      case 'utf8':
      case 'utf-8':
      case undefined:
        return utf8ToBytes(string).length
      case 'ucs2':
      case 'ucs-2':
      case 'utf16le':
      case 'utf-16le':
        return len * 2
      case 'hex':
        return len >>> 1
      case 'base64':
        return base64ToBytes(string).length
      default:
        if (loweredCase) return utf8ToBytes(string).length // assume utf8
        encoding = ('' + encoding).toLowerCase()
        loweredCase = true
    }
  }
}
Buffer.byteLength = byteLength

function slowToString (encoding, start, end) {
  var loweredCase = false

  // No need to verify that "this.length <= MAX_UINT32" since it's a read-only
  // property of a typed array.

  // This behaves neither like String nor Uint8Array in that we set start/end
  // to their upper/lower bounds if the value passed is out of range.
  // undefined is handled specially as per ECMA-262 6th Edition,
  // Section 13.3.3.7 Runtime Semantics: KeyedBindingInitialization.
  if (start === undefined || start < 0) {
    start = 0
  }
  // Return early if start > this.length. Done here to prevent potential uint32
  // coercion fail below.
  if (start > this.length) {
    return ''
  }

  if (end === undefined || end > this.length) {
    end = this.length
  }

  if (end <= 0) {
    return ''
  }

  // Force coersion to uint32. This will also coerce falsey/NaN values to 0.
  end >>>= 0
  start >>>= 0

  if (end <= start) {
    return ''
  }

  if (!encoding) encoding = 'utf8'

  while (true) {
    switch (encoding) {
      case 'hex':
        return hexSlice(this, start, end)

      case 'utf8':
      case 'utf-8':
        return utf8Slice(this, start, end)

      case 'ascii':
        return asciiSlice(this, start, end)

      case 'latin1':
      case 'binary':
        return latin1Slice(this, start, end)

      case 'base64':
        return base64Slice(this, start, end)

      case 'ucs2':
      case 'ucs-2':
      case 'utf16le':
      case 'utf-16le':
        return utf16leSlice(this, start, end)

      default:
        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding)
        encoding = (encoding + '').toLowerCase()
        loweredCase = true
    }
  }
}

// The property is used by `Buffer.isBuffer` and `is-buffer` (in Safari 5-7) to detect
// Buffer instances.
Buffer.prototype._isBuffer = true

function swap (b, n, m) {
  var i = b[n]
  b[n] = b[m]
  b[m] = i
}

Buffer.prototype.swap16 = function swap16 () {
  var len = this.length
  if (len % 2 !== 0) {
    throw new RangeError('Buffer size must be a multiple of 16-bits')
  }
  for (var i = 0; i < len; i += 2) {
    swap(this, i, i + 1)
  }
  return this
}

Buffer.prototype.swap32 = function swap32 () {
  var len = this.length
  if (len % 4 !== 0) {
    throw new RangeError('Buffer size must be a multiple of 32-bits')
  }
  for (var i = 0; i < len; i += 4) {
    swap(this, i, i + 3)
    swap(this, i + 1, i + 2)
  }
  return this
}

Buffer.prototype.swap64 = function swap64 () {
  var len = this.length
  if (len % 8 !== 0) {
    throw new RangeError('Buffer size must be a multiple of 64-bits')
  }
  for (var i = 0; i < len; i += 8) {
    swap(this, i, i + 7)
    swap(this, i + 1, i + 6)
    swap(this, i + 2, i + 5)
    swap(this, i + 3, i + 4)
  }
  return this
}

Buffer.prototype.toString = function toString () {
  var length = this.length | 0
  if (length === 0) return ''
  if (arguments.length === 0) return utf8Slice(this, 0, length)
  return slowToString.apply(this, arguments)
}

Buffer.prototype.equals = function equals (b) {
  if (!Buffer.isBuffer(b)) throw new TypeError('Argument must be a Buffer')
  if (this === b) return true
  return Buffer.compare(this, b) === 0
}

Buffer.prototype.inspect = function inspect () {
  var str = ''
  var max = exports.INSPECT_MAX_BYTES
  if (this.length > 0) {
    str = this.toString('hex', 0, max).match(/.{2}/g).join(' ')
    if (this.length > max) str += ' ... '
  }
  return '<Buffer ' + str + '>'
}

Buffer.prototype.compare = function compare (target, start, end, thisStart, thisEnd) {
  if (!Buffer.isBuffer(target)) {
    throw new TypeError('Argument must be a Buffer')
  }

  if (start === undefined) {
    start = 0
  }
  if (end === undefined) {
    end = target ? target.length : 0
  }
  if (thisStart === undefined) {
    thisStart = 0
  }
  if (thisEnd === undefined) {
    thisEnd = this.length
  }

  if (start < 0 || end > target.length || thisStart < 0 || thisEnd > this.length) {
    throw new RangeError('out of range index')
  }

  if (thisStart >= thisEnd && start >= end) {
    return 0
  }
  if (thisStart >= thisEnd) {
    return -1
  }
  if (start >= end) {
    return 1
  }

  start >>>= 0
  end >>>= 0
  thisStart >>>= 0
  thisEnd >>>= 0

  if (this === target) return 0

  var x = thisEnd - thisStart
  var y = end - start
  var len = Math.min(x, y)

  var thisCopy = this.slice(thisStart, thisEnd)
  var targetCopy = target.slice(start, end)

  for (var i = 0; i < len; ++i) {
    if (thisCopy[i] !== targetCopy[i]) {
      x = thisCopy[i]
      y = targetCopy[i]
      break
    }
  }

  if (x < y) return -1
  if (y < x) return 1
  return 0
}

// Finds either the first index of `val` in `buffer` at offset >= `byteOffset`,
// OR the last index of `val` in `buffer` at offset <= `byteOffset`.
//
// Arguments:
// - buffer - a Buffer to search
// - val - a string, Buffer, or number
// - byteOffset - an index into `buffer`; will be clamped to an int32
// - encoding - an optional encoding, relevant is val is a string
// - dir - true for indexOf, false for lastIndexOf
function bidirectionalIndexOf (buffer, val, byteOffset, encoding, dir) {
  // Empty buffer means no match
  if (buffer.length === 0) return -1

  // Normalize byteOffset
  if (typeof byteOffset === 'string') {
    encoding = byteOffset
    byteOffset = 0
  } else if (byteOffset > 0x7fffffff) {
    byteOffset = 0x7fffffff
  } else if (byteOffset < -0x80000000) {
    byteOffset = -0x80000000
  }
  byteOffset = +byteOffset  // Coerce to Number.
  if (isNaN(byteOffset)) {
    // byteOffset: it it's undefined, null, NaN, "foo", etc, search whole buffer
    byteOffset = dir ? 0 : (buffer.length - 1)
  }

  // Normalize byteOffset: negative offsets start from the end of the buffer
  if (byteOffset < 0) byteOffset = buffer.length + byteOffset
  if (byteOffset >= buffer.length) {
    if (dir) return -1
    else byteOffset = buffer.length - 1
  } else if (byteOffset < 0) {
    if (dir) byteOffset = 0
    else return -1
  }

  // Normalize val
  if (typeof val === 'string') {
    val = Buffer.from(val, encoding)
  }

  // Finally, search either indexOf (if dir is true) or lastIndexOf
  if (Buffer.isBuffer(val)) {
    // Special case: looking for empty string/buffer always fails
    if (val.length === 0) {
      return -1
    }
    return arrayIndexOf(buffer, val, byteOffset, encoding, dir)
  } else if (typeof val === 'number') {
    val = val & 0xFF // Search for a byte value [0-255]
    if (Buffer.TYPED_ARRAY_SUPPORT &&
        typeof Uint8Array.prototype.indexOf === 'function') {
      if (dir) {
        return Uint8Array.prototype.indexOf.call(buffer, val, byteOffset)
      } else {
        return Uint8Array.prototype.lastIndexOf.call(buffer, val, byteOffset)
      }
    }
    return arrayIndexOf(buffer, [ val ], byteOffset, encoding, dir)
  }

  throw new TypeError('val must be string, number or Buffer')
}

function arrayIndexOf (arr, val, byteOffset, encoding, dir) {
  var indexSize = 1
  var arrLength = arr.length
  var valLength = val.length

  if (encoding !== undefined) {
    encoding = String(encoding).toLowerCase()
    if (encoding === 'ucs2' || encoding === 'ucs-2' ||
        encoding === 'utf16le' || encoding === 'utf-16le') {
      if (arr.length < 2 || val.length < 2) {
        return -1
      }
      indexSize = 2
      arrLength /= 2
      valLength /= 2
      byteOffset /= 2
    }
  }

  function read (buf, i) {
    if (indexSize === 1) {
      return buf[i]
    } else {
      return buf.readUInt16BE(i * indexSize)
    }
  }

  var i
  if (dir) {
    var foundIndex = -1
    for (i = byteOffset; i < arrLength; i++) {
      if (read(arr, i) === read(val, foundIndex === -1 ? 0 : i - foundIndex)) {
        if (foundIndex === -1) foundIndex = i
        if (i - foundIndex + 1 === valLength) return foundIndex * indexSize
      } else {
        if (foundIndex !== -1) i -= i - foundIndex
        foundIndex = -1
      }
    }
  } else {
    if (byteOffset + valLength > arrLength) byteOffset = arrLength - valLength
    for (i = byteOffset; i >= 0; i--) {
      var found = true
      for (var j = 0; j < valLength; j++) {
        if (read(arr, i + j) !== read(val, j)) {
          found = false
          break
        }
      }
      if (found) return i
    }
  }

  return -1
}

Buffer.prototype.includes = function includes (val, byteOffset, encoding) {
  return this.indexOf(val, byteOffset, encoding) !== -1
}

Buffer.prototype.indexOf = function indexOf (val, byteOffset, encoding) {
  return bidirectionalIndexOf(this, val, byteOffset, encoding, true)
}

Buffer.prototype.lastIndexOf = function lastIndexOf (val, byteOffset, encoding) {
  return bidirectionalIndexOf(this, val, byteOffset, encoding, false)
}

function hexWrite (buf, string, offset, length) {
  offset = Number(offset) || 0
  var remaining = buf.length - offset
  if (!length) {
    length = remaining
  } else {
    length = Number(length)
    if (length > remaining) {
      length = remaining
    }
  }

  // must be an even number of digits
  var strLen = string.length
  if (strLen % 2 !== 0) throw new TypeError('Invalid hex string')

  if (length > strLen / 2) {
    length = strLen / 2
  }
  for (var i = 0; i < length; ++i) {
    var parsed = parseInt(string.substr(i * 2, 2), 16)
    if (isNaN(parsed)) return i
    buf[offset + i] = parsed
  }
  return i
}

function utf8Write (buf, string, offset, length) {
  return blitBuffer(utf8ToBytes(string, buf.length - offset), buf, offset, length)
}

function asciiWrite (buf, string, offset, length) {
  return blitBuffer(asciiToBytes(string), buf, offset, length)
}

function latin1Write (buf, string, offset, length) {
  return asciiWrite(buf, string, offset, length)
}

function base64Write (buf, string, offset, length) {
  return blitBuffer(base64ToBytes(string), buf, offset, length)
}

function ucs2Write (buf, string, offset, length) {
  return blitBuffer(utf16leToBytes(string, buf.length - offset), buf, offset, length)
}

Buffer.prototype.write = function write (string, offset, length, encoding) {
  // Buffer#write(string)
  if (offset === undefined) {
    encoding = 'utf8'
    length = this.length
    offset = 0
  // Buffer#write(string, encoding)
  } else if (length === undefined && typeof offset === 'string') {
    encoding = offset
    length = this.length
    offset = 0
  // Buffer#write(string, offset[, length][, encoding])
  } else if (isFinite(offset)) {
    offset = offset | 0
    if (isFinite(length)) {
      length = length | 0
      if (encoding === undefined) encoding = 'utf8'
    } else {
      encoding = length
      length = undefined
    }
  // legacy write(string, encoding, offset, length) - remove in v0.13
  } else {
    throw new Error(
      'Buffer.write(string, encoding, offset[, length]) is no longer supported'
    )
  }

  var remaining = this.length - offset
  if (length === undefined || length > remaining) length = remaining

  if ((string.length > 0 && (length < 0 || offset < 0)) || offset > this.length) {
    throw new RangeError('Attempt to write outside buffer bounds')
  }

  if (!encoding) encoding = 'utf8'

  var loweredCase = false
  for (;;) {
    switch (encoding) {
      case 'hex':
        return hexWrite(this, string, offset, length)

      case 'utf8':
      case 'utf-8':
        return utf8Write(this, string, offset, length)

      case 'ascii':
        return asciiWrite(this, string, offset, length)

      case 'latin1':
      case 'binary':
        return latin1Write(this, string, offset, length)

      case 'base64':
        // Warning: maxLength not taken into account in base64Write
        return base64Write(this, string, offset, length)

      case 'ucs2':
      case 'ucs-2':
      case 'utf16le':
      case 'utf-16le':
        return ucs2Write(this, string, offset, length)

      default:
        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding)
        encoding = ('' + encoding).toLowerCase()
        loweredCase = true
    }
  }
}

Buffer.prototype.toJSON = function toJSON () {
  return {
    type: 'Buffer',
    data: Array.prototype.slice.call(this._arr || this, 0)
  }
}

function base64Slice (buf, start, end) {
  if (start === 0 && end === buf.length) {
    return base64.fromByteArray(buf)
  } else {
    return base64.fromByteArray(buf.slice(start, end))
  }
}

function utf8Slice (buf, start, end) {
  end = Math.min(buf.length, end)
  var res = []

  var i = start
  while (i < end) {
    var firstByte = buf[i]
    var codePoint = null
    var bytesPerSequence = (firstByte > 0xEF) ? 4
      : (firstByte > 0xDF) ? 3
      : (firstByte > 0xBF) ? 2
      : 1

    if (i + bytesPerSequence <= end) {
      var secondByte, thirdByte, fourthByte, tempCodePoint

      switch (bytesPerSequence) {
        case 1:
          if (firstByte < 0x80) {
            codePoint = firstByte
          }
          break
        case 2:
          secondByte = buf[i + 1]
          if ((secondByte & 0xC0) === 0x80) {
            tempCodePoint = (firstByte & 0x1F) << 0x6 | (secondByte & 0x3F)
            if (tempCodePoint > 0x7F) {
              codePoint = tempCodePoint
            }
          }
          break
        case 3:
          secondByte = buf[i + 1]
          thirdByte = buf[i + 2]
          if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80) {
            tempCodePoint = (firstByte & 0xF) << 0xC | (secondByte & 0x3F) << 0x6 | (thirdByte & 0x3F)
            if (tempCodePoint > 0x7FF && (tempCodePoint < 0xD800 || tempCodePoint > 0xDFFF)) {
              codePoint = tempCodePoint
            }
          }
          break
        case 4:
          secondByte = buf[i + 1]
          thirdByte = buf[i + 2]
          fourthByte = buf[i + 3]
          if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80 && (fourthByte & 0xC0) === 0x80) {
            tempCodePoint = (firstByte & 0xF) << 0x12 | (secondByte & 0x3F) << 0xC | (thirdByte & 0x3F) << 0x6 | (fourthByte & 0x3F)
            if (tempCodePoint > 0xFFFF && tempCodePoint < 0x110000) {
              codePoint = tempCodePoint
            }
          }
      }
    }

    if (codePoint === null) {
      // we did not generate a valid codePoint so insert a
      // replacement char (U+FFFD) and advance only 1 byte
      codePoint = 0xFFFD
      bytesPerSequence = 1
    } else if (codePoint > 0xFFFF) {
      // encode to utf16 (surrogate pair dance)
      codePoint -= 0x10000
      res.push(codePoint >>> 10 & 0x3FF | 0xD800)
      codePoint = 0xDC00 | codePoint & 0x3FF
    }

    res.push(codePoint)
    i += bytesPerSequence
  }

  return decodeCodePointsArray(res)
}

// Based on http://stackoverflow.com/a/22747272/680742, the browser with
// the lowest limit is Chrome, with 0x10000 args.
// We go 1 magnitude less, for safety
var MAX_ARGUMENTS_LENGTH = 0x1000

function decodeCodePointsArray (codePoints) {
  var len = codePoints.length
  if (len <= MAX_ARGUMENTS_LENGTH) {
    return String.fromCharCode.apply(String, codePoints) // avoid extra slice()
  }

  // Decode in chunks to avoid "call stack size exceeded".
  var res = ''
  var i = 0
  while (i < len) {
    res += String.fromCharCode.apply(
      String,
      codePoints.slice(i, i += MAX_ARGUMENTS_LENGTH)
    )
  }
  return res
}

function asciiSlice (buf, start, end) {
  var ret = ''
  end = Math.min(buf.length, end)

  for (var i = start; i < end; ++i) {
    ret += String.fromCharCode(buf[i] & 0x7F)
  }
  return ret
}

function latin1Slice (buf, start, end) {
  var ret = ''
  end = Math.min(buf.length, end)

  for (var i = start; i < end; ++i) {
    ret += String.fromCharCode(buf[i])
  }
  return ret
}

function hexSlice (buf, start, end) {
  var len = buf.length

  if (!start || start < 0) start = 0
  if (!end || end < 0 || end > len) end = len

  var out = ''
  for (var i = start; i < end; ++i) {
    out += toHex(buf[i])
  }
  return out
}

function utf16leSlice (buf, start, end) {
  var bytes = buf.slice(start, end)
  var res = ''
  for (var i = 0; i < bytes.length; i += 2) {
    res += String.fromCharCode(bytes[i] + bytes[i + 1] * 256)
  }
  return res
}

Buffer.prototype.slice = function slice (start, end) {
  var len = this.length
  start = ~~start
  end = end === undefined ? len : ~~end

  if (start < 0) {
    start += len
    if (start < 0) start = 0
  } else if (start > len) {
    start = len
  }

  if (end < 0) {
    end += len
    if (end < 0) end = 0
  } else if (end > len) {
    end = len
  }

  if (end < start) end = start

  var newBuf
  if (Buffer.TYPED_ARRAY_SUPPORT) {
    newBuf = this.subarray(start, end)
    newBuf.__proto__ = Buffer.prototype
  } else {
    var sliceLen = end - start
    newBuf = new Buffer(sliceLen, undefined)
    for (var i = 0; i < sliceLen; ++i) {
      newBuf[i] = this[i + start]
    }
  }

  return newBuf
}

/*
 * Need to make sure that buffer isn't trying to write out of bounds.
 */
function checkOffset (offset, ext, length) {
  if ((offset % 1) !== 0 || offset < 0) throw new RangeError('offset is not uint')
  if (offset + ext > length) throw new RangeError('Trying to access beyond buffer length')
}

Buffer.prototype.readUIntLE = function readUIntLE (offset, byteLength, noAssert) {
  offset = offset | 0
  byteLength = byteLength | 0
  if (!noAssert) checkOffset(offset, byteLength, this.length)

  var val = this[offset]
  var mul = 1
  var i = 0
  while (++i < byteLength && (mul *= 0x100)) {
    val += this[offset + i] * mul
  }

  return val
}

Buffer.prototype.readUIntBE = function readUIntBE (offset, byteLength, noAssert) {
  offset = offset | 0
  byteLength = byteLength | 0
  if (!noAssert) {
    checkOffset(offset, byteLength, this.length)
  }

  var val = this[offset + --byteLength]
  var mul = 1
  while (byteLength > 0 && (mul *= 0x100)) {
    val += this[offset + --byteLength] * mul
  }

  return val
}

Buffer.prototype.readUInt8 = function readUInt8 (offset, noAssert) {
  if (!noAssert) checkOffset(offset, 1, this.length)
  return this[offset]
}

Buffer.prototype.readUInt16LE = function readUInt16LE (offset, noAssert) {
  if (!noAssert) checkOffset(offset, 2, this.length)
  return this[offset] | (this[offset + 1] << 8)
}

Buffer.prototype.readUInt16BE = function readUInt16BE (offset, noAssert) {
  if (!noAssert) checkOffset(offset, 2, this.length)
  return (this[offset] << 8) | this[offset + 1]
}

Buffer.prototype.readUInt32LE = function readUInt32LE (offset, noAssert) {
  if (!noAssert) checkOffset(offset, 4, this.length)

  return ((this[offset]) |
      (this[offset + 1] << 8) |
      (this[offset + 2] << 16)) +
      (this[offset + 3] * 0x1000000)
}

Buffer.prototype.readUInt32BE = function readUInt32BE (offset, noAssert) {
  if (!noAssert) checkOffset(offset, 4, this.length)

  return (this[offset] * 0x1000000) +
    ((this[offset + 1] << 16) |
    (this[offset + 2] << 8) |
    this[offset + 3])
}

Buffer.prototype.readIntLE = function readIntLE (offset, byteLength, noAssert) {
  offset = offset | 0
  byteLength = byteLength | 0
  if (!noAssert) checkOffset(offset, byteLength, this.length)

  var val = this[offset]
  var mul = 1
  var i = 0
  while (++i < byteLength && (mul *= 0x100)) {
    val += this[offset + i] * mul
  }
  mul *= 0x80

  if (val >= mul) val -= Math.pow(2, 8 * byteLength)

  return val
}

Buffer.prototype.readIntBE = function readIntBE (offset, byteLength, noAssert) {
  offset = offset | 0
  byteLength = byteLength | 0
  if (!noAssert) checkOffset(offset, byteLength, this.length)

  var i = byteLength
  var mul = 1
  var val = this[offset + --i]
  while (i > 0 && (mul *= 0x100)) {
    val += this[offset + --i] * mul
  }
  mul *= 0x80

  if (val >= mul) val -= Math.pow(2, 8 * byteLength)

  return val
}

Buffer.prototype.readInt8 = function readInt8 (offset, noAssert) {
  if (!noAssert) checkOffset(offset, 1, this.length)
  if (!(this[offset] & 0x80)) return (this[offset])
  return ((0xff - this[offset] + 1) * -1)
}

Buffer.prototype.readInt16LE = function readInt16LE (offset, noAssert) {
  if (!noAssert) checkOffset(offset, 2, this.length)
  var val = this[offset] | (this[offset + 1] << 8)
  return (val & 0x8000) ? val | 0xFFFF0000 : val
}

Buffer.prototype.readInt16BE = function readInt16BE (offset, noAssert) {
  if (!noAssert) checkOffset(offset, 2, this.length)
  var val = this[offset + 1] | (this[offset] << 8)
  return (val & 0x8000) ? val | 0xFFFF0000 : val
}

Buffer.prototype.readInt32LE = function readInt32LE (offset, noAssert) {
  if (!noAssert) checkOffset(offset, 4, this.length)

  return (this[offset]) |
    (this[offset + 1] << 8) |
    (this[offset + 2] << 16) |
    (this[offset + 3] << 24)
}

Buffer.prototype.readInt32BE = function readInt32BE (offset, noAssert) {
  if (!noAssert) checkOffset(offset, 4, this.length)

  return (this[offset] << 24) |
    (this[offset + 1] << 16) |
    (this[offset + 2] << 8) |
    (this[offset + 3])
}

Buffer.prototype.readFloatLE = function readFloatLE (offset, noAssert) {
  if (!noAssert) checkOffset(offset, 4, this.length)
  return ieee754.read(this, offset, true, 23, 4)
}

Buffer.prototype.readFloatBE = function readFloatBE (offset, noAssert) {
  if (!noAssert) checkOffset(offset, 4, this.length)
  return ieee754.read(this, offset, false, 23, 4)
}

Buffer.prototype.readDoubleLE = function readDoubleLE (offset, noAssert) {
  if (!noAssert) checkOffset(offset, 8, this.length)
  return ieee754.read(this, offset, true, 52, 8)
}

Buffer.prototype.readDoubleBE = function readDoubleBE (offset, noAssert) {
  if (!noAssert) checkOffset(offset, 8, this.length)
  return ieee754.read(this, offset, false, 52, 8)
}

function checkInt (buf, value, offset, ext, max, min) {
  if (!Buffer.isBuffer(buf)) throw new TypeError('"buffer" argument must be a Buffer instance')
  if (value > max || value < min) throw new RangeError('"value" argument is out of bounds')
  if (offset + ext > buf.length) throw new RangeError('Index out of range')
}

Buffer.prototype.writeUIntLE = function writeUIntLE (value, offset, byteLength, noAssert) {
  value = +value
  offset = offset | 0
  byteLength = byteLength | 0
  if (!noAssert) {
    var maxBytes = Math.pow(2, 8 * byteLength) - 1
    checkInt(this, value, offset, byteLength, maxBytes, 0)
  }

  var mul = 1
  var i = 0
  this[offset] = value & 0xFF
  while (++i < byteLength && (mul *= 0x100)) {
    this[offset + i] = (value / mul) & 0xFF
  }

  return offset + byteLength
}

Buffer.prototype.writeUIntBE = function writeUIntBE (value, offset, byteLength, noAssert) {
  value = +value
  offset = offset | 0
  byteLength = byteLength | 0
  if (!noAssert) {
    var maxBytes = Math.pow(2, 8 * byteLength) - 1
    checkInt(this, value, offset, byteLength, maxBytes, 0)
  }

  var i = byteLength - 1
  var mul = 1
  this[offset + i] = value & 0xFF
  while (--i >= 0 && (mul *= 0x100)) {
    this[offset + i] = (value / mul) & 0xFF
  }

  return offset + byteLength
}

Buffer.prototype.writeUInt8 = function writeUInt8 (value, offset, noAssert) {
  value = +value
  offset = offset | 0
  if (!noAssert) checkInt(this, value, offset, 1, 0xff, 0)
  if (!Buffer.TYPED_ARRAY_SUPPORT) value = Math.floor(value)
  this[offset] = (value & 0xff)
  return offset + 1
}

function objectWriteUInt16 (buf, value, offset, littleEndian) {
  if (value < 0) value = 0xffff + value + 1
  for (var i = 0, j = Math.min(buf.length - offset, 2); i < j; ++i) {
    buf[offset + i] = (value & (0xff << (8 * (littleEndian ? i : 1 - i)))) >>>
      (littleEndian ? i : 1 - i) * 8
  }
}

Buffer.prototype.writeUInt16LE = function writeUInt16LE (value, offset, noAssert) {
  value = +value
  offset = offset | 0
  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0)
  if (Buffer.TYPED_ARRAY_SUPPORT) {
    this[offset] = (value & 0xff)
    this[offset + 1] = (value >>> 8)
  } else {
    objectWriteUInt16(this, value, offset, true)
  }
  return offset + 2
}

Buffer.prototype.writeUInt16BE = function writeUInt16BE (value, offset, noAssert) {
  value = +value
  offset = offset | 0
  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0)
  if (Buffer.TYPED_ARRAY_SUPPORT) {
    this[offset] = (value >>> 8)
    this[offset + 1] = (value & 0xff)
  } else {
    objectWriteUInt16(this, value, offset, false)
  }
  return offset + 2
}

function objectWriteUInt32 (buf, value, offset, littleEndian) {
  if (value < 0) value = 0xffffffff + value + 1
  for (var i = 0, j = Math.min(buf.length - offset, 4); i < j; ++i) {
    buf[offset + i] = (value >>> (littleEndian ? i : 3 - i) * 8) & 0xff
  }
}

Buffer.prototype.writeUInt32LE = function writeUInt32LE (value, offset, noAssert) {
  value = +value
  offset = offset | 0
  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0)
  if (Buffer.TYPED_ARRAY_SUPPORT) {
    this[offset + 3] = (value >>> 24)
    this[offset + 2] = (value >>> 16)
    this[offset + 1] = (value >>> 8)
    this[offset] = (value & 0xff)
  } else {
    objectWriteUInt32(this, value, offset, true)
  }
  return offset + 4
}

Buffer.prototype.writeUInt32BE = function writeUInt32BE (value, offset, noAssert) {
  value = +value
  offset = offset | 0
  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0)
  if (Buffer.TYPED_ARRAY_SUPPORT) {
    this[offset] = (value >>> 24)
    this[offset + 1] = (value >>> 16)
    this[offset + 2] = (value >>> 8)
    this[offset + 3] = (value & 0xff)
  } else {
    objectWriteUInt32(this, value, offset, false)
  }
  return offset + 4
}

Buffer.prototype.writeIntLE = function writeIntLE (value, offset, byteLength, noAssert) {
  value = +value
  offset = offset | 0
  if (!noAssert) {
    var limit = Math.pow(2, 8 * byteLength - 1)

    checkInt(this, value, offset, byteLength, limit - 1, -limit)
  }

  var i = 0
  var mul = 1
  var sub = 0
  this[offset] = value & 0xFF
  while (++i < byteLength && (mul *= 0x100)) {
    if (value < 0 && sub === 0 && this[offset + i - 1] !== 0) {
      sub = 1
    }
    this[offset + i] = ((value / mul) >> 0) - sub & 0xFF
  }

  return offset + byteLength
}

Buffer.prototype.writeIntBE = function writeIntBE (value, offset, byteLength, noAssert) {
  value = +value
  offset = offset | 0
  if (!noAssert) {
    var limit = Math.pow(2, 8 * byteLength - 1)

    checkInt(this, value, offset, byteLength, limit - 1, -limit)
  }

  var i = byteLength - 1
  var mul = 1
  var sub = 0
  this[offset + i] = value & 0xFF
  while (--i >= 0 && (mul *= 0x100)) {
    if (value < 0 && sub === 0 && this[offset + i + 1] !== 0) {
      sub = 1
    }
    this[offset + i] = ((value / mul) >> 0) - sub & 0xFF
  }

  return offset + byteLength
}

Buffer.prototype.writeInt8 = function writeInt8 (value, offset, noAssert) {
  value = +value
  offset = offset | 0
  if (!noAssert) checkInt(this, value, offset, 1, 0x7f, -0x80)
  if (!Buffer.TYPED_ARRAY_SUPPORT) value = Math.floor(value)
  if (value < 0) value = 0xff + value + 1
  this[offset] = (value & 0xff)
  return offset + 1
}

Buffer.prototype.writeInt16LE = function writeInt16LE (value, offset, noAssert) {
  value = +value
  offset = offset | 0
  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000)
  if (Buffer.TYPED_ARRAY_SUPPORT) {
    this[offset] = (value & 0xff)
    this[offset + 1] = (value >>> 8)
  } else {
    objectWriteUInt16(this, value, offset, true)
  }
  return offset + 2
}

Buffer.prototype.writeInt16BE = function writeInt16BE (value, offset, noAssert) {
  value = +value
  offset = offset | 0
  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000)
  if (Buffer.TYPED_ARRAY_SUPPORT) {
    this[offset] = (value >>> 8)
    this[offset + 1] = (value & 0xff)
  } else {
    objectWriteUInt16(this, value, offset, false)
  }
  return offset + 2
}

Buffer.prototype.writeInt32LE = function writeInt32LE (value, offset, noAssert) {
  value = +value
  offset = offset | 0
  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000)
  if (Buffer.TYPED_ARRAY_SUPPORT) {
    this[offset] = (value & 0xff)
    this[offset + 1] = (value >>> 8)
    this[offset + 2] = (value >>> 16)
    this[offset + 3] = (value >>> 24)
  } else {
    objectWriteUInt32(this, value, offset, true)
  }
  return offset + 4
}

Buffer.prototype.writeInt32BE = function writeInt32BE (value, offset, noAssert) {
  value = +value
  offset = offset | 0
  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000)
  if (value < 0) value = 0xffffffff + value + 1
  if (Buffer.TYPED_ARRAY_SUPPORT) {
    this[offset] = (value >>> 24)
    this[offset + 1] = (value >>> 16)
    this[offset + 2] = (value >>> 8)
    this[offset + 3] = (value & 0xff)
  } else {
    objectWriteUInt32(this, value, offset, false)
  }
  return offset + 4
}

function checkIEEE754 (buf, value, offset, ext, max, min) {
  if (offset + ext > buf.length) throw new RangeError('Index out of range')
  if (offset < 0) throw new RangeError('Index out of range')
}

function writeFloat (buf, value, offset, littleEndian, noAssert) {
  if (!noAssert) {
    checkIEEE754(buf, value, offset, 4, 3.4028234663852886e+38, -3.4028234663852886e+38)
  }
  ieee754.write(buf, value, offset, littleEndian, 23, 4)
  return offset + 4
}

Buffer.prototype.writeFloatLE = function writeFloatLE (value, offset, noAssert) {
  return writeFloat(this, value, offset, true, noAssert)
}

Buffer.prototype.writeFloatBE = function writeFloatBE (value, offset, noAssert) {
  return writeFloat(this, value, offset, false, noAssert)
}

function writeDouble (buf, value, offset, littleEndian, noAssert) {
  if (!noAssert) {
    checkIEEE754(buf, value, offset, 8, 1.7976931348623157E+308, -1.7976931348623157E+308)
  }
  ieee754.write(buf, value, offset, littleEndian, 52, 8)
  return offset + 8
}

Buffer.prototype.writeDoubleLE = function writeDoubleLE (value, offset, noAssert) {
  return writeDouble(this, value, offset, true, noAssert)
}

Buffer.prototype.writeDoubleBE = function writeDoubleBE (value, offset, noAssert) {
  return writeDouble(this, value, offset, false, noAssert)
}

// copy(targetBuffer, targetStart=0, sourceStart=0, sourceEnd=buffer.length)
Buffer.prototype.copy = function copy (target, targetStart, start, end) {
  if (!start) start = 0
  if (!end && end !== 0) end = this.length
  if (targetStart >= target.length) targetStart = target.length
  if (!targetStart) targetStart = 0
  if (end > 0 && end < start) end = start

  // Copy 0 bytes; we're done
  if (end === start) return 0
  if (target.length === 0 || this.length === 0) return 0

  // Fatal error conditions
  if (targetStart < 0) {
    throw new RangeError('targetStart out of bounds')
  }
  if (start < 0 || start >= this.length) throw new RangeError('sourceStart out of bounds')
  if (end < 0) throw new RangeError('sourceEnd out of bounds')

  // Are we oob?
  if (end > this.length) end = this.length
  if (target.length - targetStart < end - start) {
    end = target.length - targetStart + start
  }

  var len = end - start
  var i

  if (this === target && start < targetStart && targetStart < end) {
    // descending copy from end
    for (i = len - 1; i >= 0; --i) {
      target[i + targetStart] = this[i + start]
    }
  } else if (len < 1000 || !Buffer.TYPED_ARRAY_SUPPORT) {
    // ascending copy from start
    for (i = 0; i < len; ++i) {
      target[i + targetStart] = this[i + start]
    }
  } else {
    Uint8Array.prototype.set.call(
      target,
      this.subarray(start, start + len),
      targetStart
    )
  }

  return len
}

// Usage:
//    buffer.fill(number[, offset[, end]])
//    buffer.fill(buffer[, offset[, end]])
//    buffer.fill(string[, offset[, end]][, encoding])
Buffer.prototype.fill = function fill (val, start, end, encoding) {
  // Handle string cases:
  if (typeof val === 'string') {
    if (typeof start === 'string') {
      encoding = start
      start = 0
      end = this.length
    } else if (typeof end === 'string') {
      encoding = end
      end = this.length
    }
    if (val.length === 1) {
      var code = val.charCodeAt(0)
      if (code < 256) {
        val = code
      }
    }
    if (encoding !== undefined && typeof encoding !== 'string') {
      throw new TypeError('encoding must be a string')
    }
    if (typeof encoding === 'string' && !Buffer.isEncoding(encoding)) {
      throw new TypeError('Unknown encoding: ' + encoding)
    }
  } else if (typeof val === 'number') {
    val = val & 255
  }

  // Invalid ranges are not set to a default, so can range check early.
  if (start < 0 || this.length < start || this.length < end) {
    throw new RangeError('Out of range index')
  }

  if (end <= start) {
    return this
  }

  start = start >>> 0
  end = end === undefined ? this.length : end >>> 0

  if (!val) val = 0

  var i
  if (typeof val === 'number') {
    for (i = start; i < end; ++i) {
      this[i] = val
    }
  } else {
    var bytes = Buffer.isBuffer(val)
      ? val
      : utf8ToBytes(new Buffer(val, encoding).toString())
    var len = bytes.length
    for (i = 0; i < end - start; ++i) {
      this[i + start] = bytes[i % len]
    }
  }

  return this
}

// HELPER FUNCTIONS
// ================

var INVALID_BASE64_RE = /[^+\/0-9A-Za-z-_]/g

function base64clean (str) {
  // Node strips out invalid characters like \n and \t from the string, base64-js does not
  str = stringtrim(str).replace(INVALID_BASE64_RE, '')
  // Node converts strings with length < 2 to ''
  if (str.length < 2) return ''
  // Node allows for non-padded base64 strings (missing trailing ===), base64-js does not
  while (str.length % 4 !== 0) {
    str = str + '='
  }
  return str
}

function stringtrim (str) {
  if (str.trim) return str.trim()
  return str.replace(/^\s+|\s+$/g, '')
}

function toHex (n) {
  if (n < 16) return '0' + n.toString(16)
  return n.toString(16)
}

function utf8ToBytes (string, units) {
  units = units || Infinity
  var codePoint
  var length = string.length
  var leadSurrogate = null
  var bytes = []

  for (var i = 0; i < length; ++i) {
    codePoint = string.charCodeAt(i)

    // is surrogate component
    if (codePoint > 0xD7FF && codePoint < 0xE000) {
      // last char was a lead
      if (!leadSurrogate) {
        // no lead yet
        if (codePoint > 0xDBFF) {
          // unexpected trail
          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)
          continue
        } else if (i + 1 === length) {
          // unpaired lead
          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)
          continue
        }

        // valid lead
        leadSurrogate = codePoint

        continue
      }

      // 2 leads in a row
      if (codePoint < 0xDC00) {
        if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)
        leadSurrogate = codePoint
        continue
      }

      // valid surrogate pair
      codePoint = (leadSurrogate - 0xD800 << 10 | codePoint - 0xDC00) + 0x10000
    } else if (leadSurrogate) {
      // valid bmp char, but last char was a lead
      if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)
    }

    leadSurrogate = null

    // encode utf8
    if (codePoint < 0x80) {
      if ((units -= 1) < 0) break
      bytes.push(codePoint)
    } else if (codePoint < 0x800) {
      if ((units -= 2) < 0) break
      bytes.push(
        codePoint >> 0x6 | 0xC0,
        codePoint & 0x3F | 0x80
      )
    } else if (codePoint < 0x10000) {
      if ((units -= 3) < 0) break
      bytes.push(
        codePoint >> 0xC | 0xE0,
        codePoint >> 0x6 & 0x3F | 0x80,
        codePoint & 0x3F | 0x80
      )
    } else if (codePoint < 0x110000) {
      if ((units -= 4) < 0) break
      bytes.push(
        codePoint >> 0x12 | 0xF0,
        codePoint >> 0xC & 0x3F | 0x80,
        codePoint >> 0x6 & 0x3F | 0x80,
        codePoint & 0x3F | 0x80
      )
    } else {
      throw new Error('Invalid code point')
    }
  }

  return bytes
}

function asciiToBytes (str) {
  var byteArray = []
  for (var i = 0; i < str.length; ++i) {
    // Node's code seems to be doing this and not & 0x7F..
    byteArray.push(str.charCodeAt(i) & 0xFF)
  }
  return byteArray
}

function utf16leToBytes (str, units) {
  var c, hi, lo
  var byteArray = []
  for (var i = 0; i < str.length; ++i) {
    if ((units -= 2) < 0) break

    c = str.charCodeAt(i)
    hi = c >> 8
    lo = c % 256
    byteArray.push(lo)
    byteArray.push(hi)
  }

  return byteArray
}

function base64ToBytes (str) {
  return base64.toByteArray(base64clean(str))
}

function blitBuffer (src, dst, offset, length) {
  for (var i = 0; i < length; ++i) {
    if ((i + offset >= dst.length) || (i >= src.length)) break
    dst[i + offset] = src[i]
  }
  return i
}

function isnan (val) {
  return val !== val // eslint-disable-line no-self-compare
}

/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! ./../webpack/buildin/global.js */ 3)))

/***/ }),
/* 35 */
/*!*****************************************!*\
  !*** ./node_modules/base64-js/index.js ***!
  \*****************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


exports.byteLength = byteLength
exports.toByteArray = toByteArray
exports.fromByteArray = fromByteArray

var lookup = []
var revLookup = []
var Arr = typeof Uint8Array !== 'undefined' ? Uint8Array : Array

var code = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/'
for (var i = 0, len = code.length; i < len; ++i) {
  lookup[i] = code[i]
  revLookup[code.charCodeAt(i)] = i
}

// Support decoding URL-safe base64 strings, as Node.js does.
// See: https://en.wikipedia.org/wiki/Base64#URL_applications
revLookup['-'.charCodeAt(0)] = 62
revLookup['_'.charCodeAt(0)] = 63

function getLens (b64) {
  var len = b64.length

  if (len % 4 > 0) {
    throw new Error('Invalid string. Length must be a multiple of 4')
  }

  // Trim off extra bytes after placeholder bytes are found
  // See: https://github.com/beatgammit/base64-js/issues/42
  var validLen = b64.indexOf('=')
  if (validLen === -1) validLen = len

  var placeHoldersLen = validLen === len
    ? 0
    : 4 - (validLen % 4)

  return [validLen, placeHoldersLen]
}

// base64 is 4/3 + up to two characters of the original data
function byteLength (b64) {
  var lens = getLens(b64)
  var validLen = lens[0]
  var placeHoldersLen = lens[1]
  return ((validLen + placeHoldersLen) * 3 / 4) - placeHoldersLen
}

function _byteLength (b64, validLen, placeHoldersLen) {
  return ((validLen + placeHoldersLen) * 3 / 4) - placeHoldersLen
}

function toByteArray (b64) {
  var tmp
  var lens = getLens(b64)
  var validLen = lens[0]
  var placeHoldersLen = lens[1]

  var arr = new Arr(_byteLength(b64, validLen, placeHoldersLen))

  var curByte = 0

  // if there are placeholders, only get up to the last complete 4 chars
  var len = placeHoldersLen > 0
    ? validLen - 4
    : validLen

  var i
  for (i = 0; i < len; i += 4) {
    tmp =
      (revLookup[b64.charCodeAt(i)] << 18) |
      (revLookup[b64.charCodeAt(i + 1)] << 12) |
      (revLookup[b64.charCodeAt(i + 2)] << 6) |
      revLookup[b64.charCodeAt(i + 3)]
    arr[curByte++] = (tmp >> 16) & 0xFF
    arr[curByte++] = (tmp >> 8) & 0xFF
    arr[curByte++] = tmp & 0xFF
  }

  if (placeHoldersLen === 2) {
    tmp =
      (revLookup[b64.charCodeAt(i)] << 2) |
      (revLookup[b64.charCodeAt(i + 1)] >> 4)
    arr[curByte++] = tmp & 0xFF
  }

  if (placeHoldersLen === 1) {
    tmp =
      (revLookup[b64.charCodeAt(i)] << 10) |
      (revLookup[b64.charCodeAt(i + 1)] << 4) |
      (revLookup[b64.charCodeAt(i + 2)] >> 2)
    arr[curByte++] = (tmp >> 8) & 0xFF
    arr[curByte++] = tmp & 0xFF
  }

  return arr
}

function tripletToBase64 (num) {
  return lookup[num >> 18 & 0x3F] +
    lookup[num >> 12 & 0x3F] +
    lookup[num >> 6 & 0x3F] +
    lookup[num & 0x3F]
}

function encodeChunk (uint8, start, end) {
  var tmp
  var output = []
  for (var i = start; i < end; i += 3) {
    tmp =
      ((uint8[i] << 16) & 0xFF0000) +
      ((uint8[i + 1] << 8) & 0xFF00) +
      (uint8[i + 2] & 0xFF)
    output.push(tripletToBase64(tmp))
  }
  return output.join('')
}

function fromByteArray (uint8) {
  var tmp
  var len = uint8.length
  var extraBytes = len % 3 // if we have 1 byte left, pad 2 bytes
  var parts = []
  var maxChunkLength = 16383 // must be multiple of 3

  // go through the array every three bytes, we'll deal with trailing stuff later
  for (var i = 0, len2 = len - extraBytes; i < len2; i += maxChunkLength) {
    parts.push(encodeChunk(
      uint8, i, (i + maxChunkLength) > len2 ? len2 : (i + maxChunkLength)
    ))
  }

  // pad the end with zeros, but make sure to not forget the extra bytes
  if (extraBytes === 1) {
    tmp = uint8[len - 1]
    parts.push(
      lookup[tmp >> 2] +
      lookup[(tmp << 4) & 0x3F] +
      '=='
    )
  } else if (extraBytes === 2) {
    tmp = (uint8[len - 2] << 8) + uint8[len - 1]
    parts.push(
      lookup[tmp >> 10] +
      lookup[(tmp >> 4) & 0x3F] +
      lookup[(tmp << 2) & 0x3F] +
      '='
    )
  }

  return parts.join('')
}


/***/ }),
/* 36 */
/*!***************************************!*\
  !*** ./node_modules/ieee754/index.js ***!
  \***************************************/
/*! no static exports found */
/***/ (function(module, exports) {

exports.read = function (buffer, offset, isLE, mLen, nBytes) {
  var e, m
  var eLen = (nBytes * 8) - mLen - 1
  var eMax = (1 << eLen) - 1
  var eBias = eMax >> 1
  var nBits = -7
  var i = isLE ? (nBytes - 1) : 0
  var d = isLE ? -1 : 1
  var s = buffer[offset + i]

  i += d

  e = s & ((1 << (-nBits)) - 1)
  s >>= (-nBits)
  nBits += eLen
  for (; nBits > 0; e = (e * 256) + buffer[offset + i], i += d, nBits -= 8) {}

  m = e & ((1 << (-nBits)) - 1)
  e >>= (-nBits)
  nBits += mLen
  for (; nBits > 0; m = (m * 256) + buffer[offset + i], i += d, nBits -= 8) {}

  if (e === 0) {
    e = 1 - eBias
  } else if (e === eMax) {
    return m ? NaN : ((s ? -1 : 1) * Infinity)
  } else {
    m = m + Math.pow(2, mLen)
    e = e - eBias
  }
  return (s ? -1 : 1) * m * Math.pow(2, e - mLen)
}

exports.write = function (buffer, value, offset, isLE, mLen, nBytes) {
  var e, m, c
  var eLen = (nBytes * 8) - mLen - 1
  var eMax = (1 << eLen) - 1
  var eBias = eMax >> 1
  var rt = (mLen === 23 ? Math.pow(2, -24) - Math.pow(2, -77) : 0)
  var i = isLE ? 0 : (nBytes - 1)
  var d = isLE ? 1 : -1
  var s = value < 0 || (value === 0 && 1 / value < 0) ? 1 : 0

  value = Math.abs(value)

  if (isNaN(value) || value === Infinity) {
    m = isNaN(value) ? 1 : 0
    e = eMax
  } else {
    e = Math.floor(Math.log(value) / Math.LN2)
    if (value * (c = Math.pow(2, -e)) < 1) {
      e--
      c *= 2
    }
    if (e + eBias >= 1) {
      value += rt / c
    } else {
      value += rt * Math.pow(2, 1 - eBias)
    }
    if (value * c >= 2) {
      e++
      c /= 2
    }

    if (e + eBias >= eMax) {
      m = 0
      e = eMax
    } else if (e + eBias >= 1) {
      m = ((value * c) - 1) * Math.pow(2, mLen)
      e = e + eBias
    } else {
      m = value * Math.pow(2, eBias - 1) * Math.pow(2, mLen)
      e = 0
    }
  }

  for (; mLen >= 8; buffer[offset + i] = m & 0xff, i += d, m /= 256, mLen -= 8) {}

  e = (e << mLen) | m
  eLen += mLen
  for (; eLen > 0; buffer[offset + i] = e & 0xff, i += d, e /= 256, eLen -= 8) {}

  buffer[offset + i - d] |= s * 128
}


/***/ }),
/* 37 */
/*!***************************************!*\
  !*** ./node_modules/isarray/index.js ***!
  \***************************************/
/*! no static exports found */
/***/ (function(module, exports) {

var toString = {}.toString;

module.exports = Array.isArray || function (arr) {
  return toString.call(arr) == '[object Array]';
};


/***/ }),
/* 38 */
/*!***********************************************!*\
  !*** ./node_modules/htmlparser2/lib/index.js ***!
  \***********************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var Parser = __webpack_require__(/*! ./Parser.js */ 39);
var DomHandler = __webpack_require__(/*! domhandler */ 48);

function defineProp(name, value) {
    delete module.exports[name];
    module.exports[name] = value;
    return value;
}

module.exports = {
    Parser: Parser,
    Tokenizer: __webpack_require__(/*! ./Tokenizer.js */ 40),
    ElementType: __webpack_require__(/*! domelementtype */ 49),
    DomHandler: DomHandler,
    get FeedHandler() {
        return defineProp("FeedHandler", __webpack_require__(/*! ./FeedHandler.js */ 52));
    },
    get Stream() {
        return defineProp("Stream", __webpack_require__(/*! ./Stream.js */ 65));
    },
    get WritableStream() {
        return defineProp("WritableStream", __webpack_require__(/*! ./WritableStream.js */ 66));
    },
    get ProxyHandler() {
        return defineProp("ProxyHandler", __webpack_require__(/*! ./ProxyHandler.js */ 70));
    },
    get DomUtils() {
        return defineProp("DomUtils", __webpack_require__(/*! domutils */ 53));
    },
    get CollectingHandler() {
        return defineProp(
            "CollectingHandler",
            __webpack_require__(/*! ./CollectingHandler.js */ 71)
        );
    },
    // For legacy support
    DefaultHandler: DomHandler,
    get RssHandler() {
        return defineProp("RssHandler", this.FeedHandler);
    },
    //helper methods
    parseDOM: function(data, options) {
        var handler = new DomHandler(options);
        new Parser(handler, options).end(data);
        return handler.dom;
    },
    parseFeed: function(feed, options) {
        var handler = new module.exports.FeedHandler(options);
        new Parser(handler, options).end(feed);
        return handler.dom;
    },
    createDomStream: function(cb, options, elementCb) {
        var handler = new DomHandler(cb, options, elementCb);
        return new Parser(handler, options);
    },
    // List of all events that the parser emits
    EVENTS: {
        /* Format: eventname: number of arguments */
        attribute: 2,
        cdatastart: 0,
        cdataend: 0,
        text: 1,
        processinginstruction: 2,
        comment: 1,
        commentend: 0,
        closetag: 1,
        opentag: 2,
        opentagname: 1,
        error: 1,
        end: 0
    }
};


/***/ }),
/* 39 */
/*!************************************************!*\
  !*** ./node_modules/htmlparser2/lib/Parser.js ***!
  \************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var Tokenizer = __webpack_require__(/*! ./Tokenizer.js */ 40);

/*
	Options:

	xmlMode: Disables the special behavior for script/style tags (false by default)
	lowerCaseAttributeNames: call .toLowerCase for each attribute name (true if xmlMode is `false`)
	lowerCaseTags: call .toLowerCase for each tag name (true if xmlMode is `false`)
*/

/*
	Callbacks:

	oncdataend,
	oncdatastart,
	onclosetag,
	oncomment,
	oncommentend,
	onerror,
	onopentag,
	onprocessinginstruction,
	onreset,
	ontext
*/

var formTags = {
    input: true,
    option: true,
    optgroup: true,
    select: true,
    button: true,
    datalist: true,
    textarea: true
};

var openImpliesClose = {
    tr: { tr: true, th: true, td: true },
    th: { th: true },
    td: { thead: true, th: true, td: true },
    body: { head: true, link: true, script: true },
    li: { li: true },
    p: { p: true },
    h1: { p: true },
    h2: { p: true },
    h3: { p: true },
    h4: { p: true },
    h5: { p: true },
    h6: { p: true },
    select: formTags,
    input: formTags,
    output: formTags,
    button: formTags,
    datalist: formTags,
    textarea: formTags,
    option: { option: true },
    optgroup: { optgroup: true }
};

var voidElements = {
    __proto__: null,
    area: true,
    base: true,
    basefont: true,
    br: true,
    col: true,
    command: true,
    embed: true,
    frame: true,
    hr: true,
    img: true,
    input: true,
    isindex: true,
    keygen: true,
    link: true,
    meta: true,
    param: true,
    source: true,
    track: true,
    wbr: true
};

var foreignContextElements = {
    __proto__: null,
    math: true,
    svg: true
};
var htmlIntegrationElements = {
    __proto__: null,
    mi: true,
    mo: true,
    mn: true,
    ms: true,
    mtext: true,
    "annotation-xml": true,
    foreignObject: true,
    desc: true,
    title: true
};

var re_nameEnd = /\s|\//;

function Parser(cbs, options) {
    this._options = options || {};
    this._cbs = cbs || {};

    this._tagname = "";
    this._attribname = "";
    this._attribvalue = "";
    this._attribs = null;
    this._stack = [];
    this._foreignContext = [];

    this.startIndex = 0;
    this.endIndex = null;

    this._lowerCaseTagNames =
        "lowerCaseTags" in this._options
            ? !!this._options.lowerCaseTags
            : !this._options.xmlMode;
    this._lowerCaseAttributeNames =
        "lowerCaseAttributeNames" in this._options
            ? !!this._options.lowerCaseAttributeNames
            : !this._options.xmlMode;

    if (this._options.Tokenizer) {
        Tokenizer = this._options.Tokenizer;
    }
    this._tokenizer = new Tokenizer(this._options, this);

    if (this._cbs.onparserinit) this._cbs.onparserinit(this);
}

__webpack_require__(/*! inherits */ 46)(Parser, __webpack_require__(/*! events */ 47).EventEmitter);

Parser.prototype._updatePosition = function(initialOffset) {
    if (this.endIndex === null) {
        if (this._tokenizer._sectionStart <= initialOffset) {
            this.startIndex = 0;
        } else {
            this.startIndex = this._tokenizer._sectionStart - initialOffset;
        }
    } else this.startIndex = this.endIndex + 1;
    this.endIndex = this._tokenizer.getAbsoluteIndex();
};

//Tokenizer event handlers
Parser.prototype.ontext = function(data) {
    this._updatePosition(1);
    this.endIndex--;

    if (this._cbs.ontext) this._cbs.ontext(data);
};

Parser.prototype.onopentagname = function(name) {
    if (this._lowerCaseTagNames) {
        name = name.toLowerCase();
    }

    this._tagname = name;

    if (!this._options.xmlMode && name in openImpliesClose) {
        for (
            var el;
            (el = this._stack[this._stack.length - 1]) in
            openImpliesClose[name];
            this.onclosetag(el)
        );
    }

    if (this._options.xmlMode || !(name in voidElements)) {
        this._stack.push(name);
        if (name in foreignContextElements) this._foreignContext.push(true);
        else if (name in htmlIntegrationElements)
            this._foreignContext.push(false);
    }

    if (this._cbs.onopentagname) this._cbs.onopentagname(name);
    if (this._cbs.onopentag) this._attribs = {};
};

Parser.prototype.onopentagend = function() {
    this._updatePosition(1);

    if (this._attribs) {
        if (this._cbs.onopentag)
            this._cbs.onopentag(this._tagname, this._attribs);
        this._attribs = null;
    }

    if (
        !this._options.xmlMode &&
        this._cbs.onclosetag &&
        this._tagname in voidElements
    ) {
        this._cbs.onclosetag(this._tagname);
    }

    this._tagname = "";
};

Parser.prototype.onclosetag = function(name) {
    this._updatePosition(1);

    if (this._lowerCaseTagNames) {
        name = name.toLowerCase();
    }
    
    if (name in foreignContextElements || name in htmlIntegrationElements) {
        this._foreignContext.pop();
    }

    if (
        this._stack.length &&
        (!(name in voidElements) || this._options.xmlMode)
    ) {
        var pos = this._stack.lastIndexOf(name);
        if (pos !== -1) {
            if (this._cbs.onclosetag) {
                pos = this._stack.length - pos;
                while (pos--) this._cbs.onclosetag(this._stack.pop());
            } else this._stack.length = pos;
        } else if (name === "p" && !this._options.xmlMode) {
            this.onopentagname(name);
            this._closeCurrentTag();
        }
    } else if (!this._options.xmlMode && (name === "br" || name === "p")) {
        this.onopentagname(name);
        this._closeCurrentTag();
    }
};

Parser.prototype.onselfclosingtag = function() {
    if (
        this._options.xmlMode ||
        this._options.recognizeSelfClosing ||
        this._foreignContext[this._foreignContext.length - 1]
    ) {
        this._closeCurrentTag();
    } else {
        this.onopentagend();
    }
};

Parser.prototype._closeCurrentTag = function() {
    var name = this._tagname;

    this.onopentagend();

    //self-closing tags will be on the top of the stack
    //(cheaper check than in onclosetag)
    if (this._stack[this._stack.length - 1] === name) {
        if (this._cbs.onclosetag) {
            this._cbs.onclosetag(name);
        }
        this._stack.pop();
        
    }
};

Parser.prototype.onattribname = function(name) {
    if (this._lowerCaseAttributeNames) {
        name = name.toLowerCase();
    }
    this._attribname = name;
};

Parser.prototype.onattribdata = function(value) {
    this._attribvalue += value;
};

Parser.prototype.onattribend = function() {
    if (this._cbs.onattribute)
        this._cbs.onattribute(this._attribname, this._attribvalue);
    if (
        this._attribs &&
        !Object.prototype.hasOwnProperty.call(this._attribs, this._attribname)
    ) {
        this._attribs[this._attribname] = this._attribvalue;
    }
    this._attribname = "";
    this._attribvalue = "";
};

Parser.prototype._getInstructionName = function(value) {
    var idx = value.search(re_nameEnd),
        name = idx < 0 ? value : value.substr(0, idx);

    if (this._lowerCaseTagNames) {
        name = name.toLowerCase();
    }

    return name;
};

Parser.prototype.ondeclaration = function(value) {
    if (this._cbs.onprocessinginstruction) {
        var name = this._getInstructionName(value);
        this._cbs.onprocessinginstruction("!" + name, "!" + value);
    }
};

Parser.prototype.onprocessinginstruction = function(value) {
    if (this._cbs.onprocessinginstruction) {
        var name = this._getInstructionName(value);
        this._cbs.onprocessinginstruction("?" + name, "?" + value);
    }
};

Parser.prototype.oncomment = function(value) {
    this._updatePosition(4);

    if (this._cbs.oncomment) this._cbs.oncomment(value);
    if (this._cbs.oncommentend) this._cbs.oncommentend();
};

Parser.prototype.oncdata = function(value) {
    this._updatePosition(1);

    if (this._options.xmlMode || this._options.recognizeCDATA) {
        if (this._cbs.oncdatastart) this._cbs.oncdatastart();
        if (this._cbs.ontext) this._cbs.ontext(value);
        if (this._cbs.oncdataend) this._cbs.oncdataend();
    } else {
        this.oncomment("[CDATA[" + value + "]]");
    }
};

Parser.prototype.onerror = function(err) {
    if (this._cbs.onerror) this._cbs.onerror(err);
};

Parser.prototype.onend = function() {
    if (this._cbs.onclosetag) {
        for (
            var i = this._stack.length;
            i > 0;
            this._cbs.onclosetag(this._stack[--i])
        );
    }
    if (this._cbs.onend) this._cbs.onend();
};

//Resets the parser to a blank state, ready to parse a new HTML document
Parser.prototype.reset = function() {
    if (this._cbs.onreset) this._cbs.onreset();
    this._tokenizer.reset();

    this._tagname = "";
    this._attribname = "";
    this._attribs = null;
    this._stack = [];

    if (this._cbs.onparserinit) this._cbs.onparserinit(this);
};

//Parses a complete HTML document and pushes it to the handler
Parser.prototype.parseComplete = function(data) {
    this.reset();
    this.end(data);
};

Parser.prototype.write = function(chunk) {
    this._tokenizer.write(chunk);
};

Parser.prototype.end = function(chunk) {
    this._tokenizer.end(chunk);
};

Parser.prototype.pause = function() {
    this._tokenizer.pause();
};

Parser.prototype.resume = function() {
    this._tokenizer.resume();
};

//alias for backwards compat
Parser.prototype.parseChunk = Parser.prototype.write;
Parser.prototype.done = Parser.prototype.end;

module.exports = Parser;


/***/ }),
/* 40 */
/*!***************************************************!*\
  !*** ./node_modules/htmlparser2/lib/Tokenizer.js ***!
  \***************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

module.exports = Tokenizer;

var decodeCodePoint = __webpack_require__(/*! entities/lib/decode_codepoint.js */ 41);
var entityMap = __webpack_require__(/*! entities/maps/entities.json */ 43);
var legacyMap = __webpack_require__(/*! entities/maps/legacy.json */ 44);
var xmlMap = __webpack_require__(/*! entities/maps/xml.json */ 45);

var i = 0;

var TEXT = i++;
var BEFORE_TAG_NAME = i++; //after <
var IN_TAG_NAME = i++;
var IN_SELF_CLOSING_TAG = i++;
var BEFORE_CLOSING_TAG_NAME = i++;
var IN_CLOSING_TAG_NAME = i++;
var AFTER_CLOSING_TAG_NAME = i++;

//attributes
var BEFORE_ATTRIBUTE_NAME = i++;
var IN_ATTRIBUTE_NAME = i++;
var AFTER_ATTRIBUTE_NAME = i++;
var BEFORE_ATTRIBUTE_VALUE = i++;
var IN_ATTRIBUTE_VALUE_DQ = i++; // "
var IN_ATTRIBUTE_VALUE_SQ = i++; // '
var IN_ATTRIBUTE_VALUE_NQ = i++;

//declarations
var BEFORE_DECLARATION = i++; // !
var IN_DECLARATION = i++;

//processing instructions
var IN_PROCESSING_INSTRUCTION = i++; // ?

//comments
var BEFORE_COMMENT = i++;
var IN_COMMENT = i++;
var AFTER_COMMENT_1 = i++;
var AFTER_COMMENT_2 = i++;

//cdata
var BEFORE_CDATA_1 = i++; // [
var BEFORE_CDATA_2 = i++; // C
var BEFORE_CDATA_3 = i++; // D
var BEFORE_CDATA_4 = i++; // A
var BEFORE_CDATA_5 = i++; // T
var BEFORE_CDATA_6 = i++; // A
var IN_CDATA = i++; // [
var AFTER_CDATA_1 = i++; // ]
var AFTER_CDATA_2 = i++; // ]

//special tags
var BEFORE_SPECIAL = i++; //S
var BEFORE_SPECIAL_END = i++; //S

var BEFORE_SCRIPT_1 = i++; //C
var BEFORE_SCRIPT_2 = i++; //R
var BEFORE_SCRIPT_3 = i++; //I
var BEFORE_SCRIPT_4 = i++; //P
var BEFORE_SCRIPT_5 = i++; //T
var AFTER_SCRIPT_1 = i++; //C
var AFTER_SCRIPT_2 = i++; //R
var AFTER_SCRIPT_3 = i++; //I
var AFTER_SCRIPT_4 = i++; //P
var AFTER_SCRIPT_5 = i++; //T

var BEFORE_STYLE_1 = i++; //T
var BEFORE_STYLE_2 = i++; //Y
var BEFORE_STYLE_3 = i++; //L
var BEFORE_STYLE_4 = i++; //E
var AFTER_STYLE_1 = i++; //T
var AFTER_STYLE_2 = i++; //Y
var AFTER_STYLE_3 = i++; //L
var AFTER_STYLE_4 = i++; //E

var BEFORE_ENTITY = i++; //&
var BEFORE_NUMERIC_ENTITY = i++; //#
var IN_NAMED_ENTITY = i++;
var IN_NUMERIC_ENTITY = i++;
var IN_HEX_ENTITY = i++; //X

var j = 0;

var SPECIAL_NONE = j++;
var SPECIAL_SCRIPT = j++;
var SPECIAL_STYLE = j++;

function whitespace(c) {
    return c === " " || c === "\n" || c === "\t" || c === "\f" || c === "\r";
}

function ifElseState(upper, SUCCESS, FAILURE) {
    var lower = upper.toLowerCase();

    if (upper === lower) {
        return function(c) {
            if (c === lower) {
                this._state = SUCCESS;
            } else {
                this._state = FAILURE;
                this._index--;
            }
        };
    } else {
        return function(c) {
            if (c === lower || c === upper) {
                this._state = SUCCESS;
            } else {
                this._state = FAILURE;
                this._index--;
            }
        };
    }
}

function consumeSpecialNameChar(upper, NEXT_STATE) {
    var lower = upper.toLowerCase();

    return function(c) {
        if (c === lower || c === upper) {
            this._state = NEXT_STATE;
        } else {
            this._state = IN_TAG_NAME;
            this._index--; //consume the token again
        }
    };
}

function Tokenizer(options, cbs) {
    this._state = TEXT;
    this._buffer = "";
    this._sectionStart = 0;
    this._index = 0;
    this._bufferOffset = 0; //chars removed from _buffer
    this._baseState = TEXT;
    this._special = SPECIAL_NONE;
    this._cbs = cbs;
    this._running = true;
    this._ended = false;
    this._xmlMode = !!(options && options.xmlMode);
    this._decodeEntities = !!(options && options.decodeEntities);
}

Tokenizer.prototype._stateText = function(c) {
    if (c === "<") {
        if (this._index > this._sectionStart) {
            this._cbs.ontext(this._getSection());
        }
        this._state = BEFORE_TAG_NAME;
        this._sectionStart = this._index;
    } else if (
        this._decodeEntities &&
        this._special === SPECIAL_NONE &&
        c === "&"
    ) {
        if (this._index > this._sectionStart) {
            this._cbs.ontext(this._getSection());
        }
        this._baseState = TEXT;
        this._state = BEFORE_ENTITY;
        this._sectionStart = this._index;
    }
};

Tokenizer.prototype._stateBeforeTagName = function(c) {
    if (c === "/") {
        this._state = BEFORE_CLOSING_TAG_NAME;
    } else if (c === "<") {
        this._cbs.ontext(this._getSection());
        this._sectionStart = this._index;
    } else if (c === ">" || this._special !== SPECIAL_NONE || whitespace(c)) {
        this._state = TEXT;
    } else if (c === "!") {
        this._state = BEFORE_DECLARATION;
        this._sectionStart = this._index + 1;
    } else if (c === "?") {
        this._state = IN_PROCESSING_INSTRUCTION;
        this._sectionStart = this._index + 1;
    } else {
        this._state =
            !this._xmlMode && (c === "s" || c === "S")
                ? BEFORE_SPECIAL
                : IN_TAG_NAME;
        this._sectionStart = this._index;
    }
};

Tokenizer.prototype._stateInTagName = function(c) {
    if (c === "/" || c === ">" || whitespace(c)) {
        this._emitToken("onopentagname");
        this._state = BEFORE_ATTRIBUTE_NAME;
        this._index--;
    }
};

Tokenizer.prototype._stateBeforeCloseingTagName = function(c) {
    if (whitespace(c));
    else if (c === ">") {
        this._state = TEXT;
    } else if (this._special !== SPECIAL_NONE) {
        if (c === "s" || c === "S") {
            this._state = BEFORE_SPECIAL_END;
        } else {
            this._state = TEXT;
            this._index--;
        }
    } else {
        this._state = IN_CLOSING_TAG_NAME;
        this._sectionStart = this._index;
    }
};

Tokenizer.prototype._stateInCloseingTagName = function(c) {
    if (c === ">" || whitespace(c)) {
        this._emitToken("onclosetag");
        this._state = AFTER_CLOSING_TAG_NAME;
        this._index--;
    }
};

Tokenizer.prototype._stateAfterCloseingTagName = function(c) {
    //skip everything until ">"
    if (c === ">") {
        this._state = TEXT;
        this._sectionStart = this._index + 1;
    }
};

Tokenizer.prototype._stateBeforeAttributeName = function(c) {
    if (c === ">") {
        this._cbs.onopentagend();
        this._state = TEXT;
        this._sectionStart = this._index + 1;
    } else if (c === "/") {
        this._state = IN_SELF_CLOSING_TAG;
    } else if (!whitespace(c)) {
        this._state = IN_ATTRIBUTE_NAME;
        this._sectionStart = this._index;
    }
};

Tokenizer.prototype._stateInSelfClosingTag = function(c) {
    if (c === ">") {
        this._cbs.onselfclosingtag();
        this._state = TEXT;
        this._sectionStart = this._index + 1;
    } else if (!whitespace(c)) {
        this._state = BEFORE_ATTRIBUTE_NAME;
        this._index--;
    }
};

Tokenizer.prototype._stateInAttributeName = function(c) {
    if (c === "=" || c === "/" || c === ">" || whitespace(c)) {
        this._cbs.onattribname(this._getSection());
        this._sectionStart = -1;
        this._state = AFTER_ATTRIBUTE_NAME;
        this._index--;
    }
};

Tokenizer.prototype._stateAfterAttributeName = function(c) {
    if (c === "=") {
        this._state = BEFORE_ATTRIBUTE_VALUE;
    } else if (c === "/" || c === ">") {
        this._cbs.onattribend();
        this._state = BEFORE_ATTRIBUTE_NAME;
        this._index--;
    } else if (!whitespace(c)) {
        this._cbs.onattribend();
        this._state = IN_ATTRIBUTE_NAME;
        this._sectionStart = this._index;
    }
};

Tokenizer.prototype._stateBeforeAttributeValue = function(c) {
    if (c === '"') {
        this._state = IN_ATTRIBUTE_VALUE_DQ;
        this._sectionStart = this._index + 1;
    } else if (c === "'") {
        this._state = IN_ATTRIBUTE_VALUE_SQ;
        this._sectionStart = this._index + 1;
    } else if (!whitespace(c)) {
        this._state = IN_ATTRIBUTE_VALUE_NQ;
        this._sectionStart = this._index;
        this._index--; //reconsume token
    }
};

Tokenizer.prototype._stateInAttributeValueDoubleQuotes = function(c) {
    if (c === '"') {
        this._emitToken("onattribdata");
        this._cbs.onattribend();
        this._state = BEFORE_ATTRIBUTE_NAME;
    } else if (this._decodeEntities && c === "&") {
        this._emitToken("onattribdata");
        this._baseState = this._state;
        this._state = BEFORE_ENTITY;
        this._sectionStart = this._index;
    }
};

Tokenizer.prototype._stateInAttributeValueSingleQuotes = function(c) {
    if (c === "'") {
        this._emitToken("onattribdata");
        this._cbs.onattribend();
        this._state = BEFORE_ATTRIBUTE_NAME;
    } else if (this._decodeEntities && c === "&") {
        this._emitToken("onattribdata");
        this._baseState = this._state;
        this._state = BEFORE_ENTITY;
        this._sectionStart = this._index;
    }
};

Tokenizer.prototype._stateInAttributeValueNoQuotes = function(c) {
    if (whitespace(c) || c === ">") {
        this._emitToken("onattribdata");
        this._cbs.onattribend();
        this._state = BEFORE_ATTRIBUTE_NAME;
        this._index--;
    } else if (this._decodeEntities && c === "&") {
        this._emitToken("onattribdata");
        this._baseState = this._state;
        this._state = BEFORE_ENTITY;
        this._sectionStart = this._index;
    }
};

Tokenizer.prototype._stateBeforeDeclaration = function(c) {
    this._state =
        c === "["
            ? BEFORE_CDATA_1
            : c === "-"
                ? BEFORE_COMMENT
                : IN_DECLARATION;
};

Tokenizer.prototype._stateInDeclaration = function(c) {
    if (c === ">") {
        this._cbs.ondeclaration(this._getSection());
        this._state = TEXT;
        this._sectionStart = this._index + 1;
    }
};

Tokenizer.prototype._stateInProcessingInstruction = function(c) {
    if (c === ">") {
        this._cbs.onprocessinginstruction(this._getSection());
        this._state = TEXT;
        this._sectionStart = this._index + 1;
    }
};

Tokenizer.prototype._stateBeforeComment = function(c) {
    if (c === "-") {
        this._state = IN_COMMENT;
        this._sectionStart = this._index + 1;
    } else {
        this._state = IN_DECLARATION;
    }
};

Tokenizer.prototype._stateInComment = function(c) {
    if (c === "-") this._state = AFTER_COMMENT_1;
};

Tokenizer.prototype._stateAfterComment1 = function(c) {
    if (c === "-") {
        this._state = AFTER_COMMENT_2;
    } else {
        this._state = IN_COMMENT;
    }
};

Tokenizer.prototype._stateAfterComment2 = function(c) {
    if (c === ">") {
        //remove 2 trailing chars
        this._cbs.oncomment(
            this._buffer.substring(this._sectionStart, this._index - 2)
        );
        this._state = TEXT;
        this._sectionStart = this._index + 1;
    } else if (c !== "-") {
        this._state = IN_COMMENT;
    }
    // else: stay in AFTER_COMMENT_2 (`--->`)
};

Tokenizer.prototype._stateBeforeCdata1 = ifElseState(
    "C",
    BEFORE_CDATA_2,
    IN_DECLARATION
);
Tokenizer.prototype._stateBeforeCdata2 = ifElseState(
    "D",
    BEFORE_CDATA_3,
    IN_DECLARATION
);
Tokenizer.prototype._stateBeforeCdata3 = ifElseState(
    "A",
    BEFORE_CDATA_4,
    IN_DECLARATION
);
Tokenizer.prototype._stateBeforeCdata4 = ifElseState(
    "T",
    BEFORE_CDATA_5,
    IN_DECLARATION
);
Tokenizer.prototype._stateBeforeCdata5 = ifElseState(
    "A",
    BEFORE_CDATA_6,
    IN_DECLARATION
);

Tokenizer.prototype._stateBeforeCdata6 = function(c) {
    if (c === "[") {
        this._state = IN_CDATA;
        this._sectionStart = this._index + 1;
    } else {
        this._state = IN_DECLARATION;
        this._index--;
    }
};

Tokenizer.prototype._stateInCdata = function(c) {
    if (c === "]") this._state = AFTER_CDATA_1;
};

Tokenizer.prototype._stateAfterCdata1 = function(c) {
    if (c === "]") this._state = AFTER_CDATA_2;
    else this._state = IN_CDATA;
};

Tokenizer.prototype._stateAfterCdata2 = function(c) {
    if (c === ">") {
        //remove 2 trailing chars
        this._cbs.oncdata(
            this._buffer.substring(this._sectionStart, this._index - 2)
        );
        this._state = TEXT;
        this._sectionStart = this._index + 1;
    } else if (c !== "]") {
        this._state = IN_CDATA;
    }
    //else: stay in AFTER_CDATA_2 (`]]]>`)
};

Tokenizer.prototype._stateBeforeSpecial = function(c) {
    if (c === "c" || c === "C") {
        this._state = BEFORE_SCRIPT_1;
    } else if (c === "t" || c === "T") {
        this._state = BEFORE_STYLE_1;
    } else {
        this._state = IN_TAG_NAME;
        this._index--; //consume the token again
    }
};

Tokenizer.prototype._stateBeforeSpecialEnd = function(c) {
    if (this._special === SPECIAL_SCRIPT && (c === "c" || c === "C")) {
        this._state = AFTER_SCRIPT_1;
    } else if (this._special === SPECIAL_STYLE && (c === "t" || c === "T")) {
        this._state = AFTER_STYLE_1;
    } else this._state = TEXT;
};

Tokenizer.prototype._stateBeforeScript1 = consumeSpecialNameChar(
    "R",
    BEFORE_SCRIPT_2
);
Tokenizer.prototype._stateBeforeScript2 = consumeSpecialNameChar(
    "I",
    BEFORE_SCRIPT_3
);
Tokenizer.prototype._stateBeforeScript3 = consumeSpecialNameChar(
    "P",
    BEFORE_SCRIPT_4
);
Tokenizer.prototype._stateBeforeScript4 = consumeSpecialNameChar(
    "T",
    BEFORE_SCRIPT_5
);

Tokenizer.prototype._stateBeforeScript5 = function(c) {
    if (c === "/" || c === ">" || whitespace(c)) {
        this._special = SPECIAL_SCRIPT;
    }
    this._state = IN_TAG_NAME;
    this._index--; //consume the token again
};

Tokenizer.prototype._stateAfterScript1 = ifElseState("R", AFTER_SCRIPT_2, TEXT);
Tokenizer.prototype._stateAfterScript2 = ifElseState("I", AFTER_SCRIPT_3, TEXT);
Tokenizer.prototype._stateAfterScript3 = ifElseState("P", AFTER_SCRIPT_4, TEXT);
Tokenizer.prototype._stateAfterScript4 = ifElseState("T", AFTER_SCRIPT_5, TEXT);

Tokenizer.prototype._stateAfterScript5 = function(c) {
    if (c === ">" || whitespace(c)) {
        this._special = SPECIAL_NONE;
        this._state = IN_CLOSING_TAG_NAME;
        this._sectionStart = this._index - 6;
        this._index--; //reconsume the token
    } else this._state = TEXT;
};

Tokenizer.prototype._stateBeforeStyle1 = consumeSpecialNameChar(
    "Y",
    BEFORE_STYLE_2
);
Tokenizer.prototype._stateBeforeStyle2 = consumeSpecialNameChar(
    "L",
    BEFORE_STYLE_3
);
Tokenizer.prototype._stateBeforeStyle3 = consumeSpecialNameChar(
    "E",
    BEFORE_STYLE_4
);

Tokenizer.prototype._stateBeforeStyle4 = function(c) {
    if (c === "/" || c === ">" || whitespace(c)) {
        this._special = SPECIAL_STYLE;
    }
    this._state = IN_TAG_NAME;
    this._index--; //consume the token again
};

Tokenizer.prototype._stateAfterStyle1 = ifElseState("Y", AFTER_STYLE_2, TEXT);
Tokenizer.prototype._stateAfterStyle2 = ifElseState("L", AFTER_STYLE_3, TEXT);
Tokenizer.prototype._stateAfterStyle3 = ifElseState("E", AFTER_STYLE_4, TEXT);

Tokenizer.prototype._stateAfterStyle4 = function(c) {
    if (c === ">" || whitespace(c)) {
        this._special = SPECIAL_NONE;
        this._state = IN_CLOSING_TAG_NAME;
        this._sectionStart = this._index - 5;
        this._index--; //reconsume the token
    } else this._state = TEXT;
};

Tokenizer.prototype._stateBeforeEntity = ifElseState(
    "#",
    BEFORE_NUMERIC_ENTITY,
    IN_NAMED_ENTITY
);
Tokenizer.prototype._stateBeforeNumericEntity = ifElseState(
    "X",
    IN_HEX_ENTITY,
    IN_NUMERIC_ENTITY
);

//for entities terminated with a semicolon
Tokenizer.prototype._parseNamedEntityStrict = function() {
    //offset = 1
    if (this._sectionStart + 1 < this._index) {
        var entity = this._buffer.substring(
                this._sectionStart + 1,
                this._index
            ),
            map = this._xmlMode ? xmlMap : entityMap;

        if (map.hasOwnProperty(entity)) {
            this._emitPartial(map[entity]);
            this._sectionStart = this._index + 1;
        }
    }
};

//parses legacy entities (without trailing semicolon)
Tokenizer.prototype._parseLegacyEntity = function() {
    var start = this._sectionStart + 1,
        limit = this._index - start;

    if (limit > 6) limit = 6; //the max length of legacy entities is 6

    while (limit >= 2) {
        //the min length of legacy entities is 2
        var entity = this._buffer.substr(start, limit);

        if (legacyMap.hasOwnProperty(entity)) {
            this._emitPartial(legacyMap[entity]);
            this._sectionStart += limit + 1;
            return;
        } else {
            limit--;
        }
    }
};

Tokenizer.prototype._stateInNamedEntity = function(c) {
    if (c === ";") {
        this._parseNamedEntityStrict();
        if (this._sectionStart + 1 < this._index && !this._xmlMode) {
            this._parseLegacyEntity();
        }
        this._state = this._baseState;
    } else if (
        (c < "a" || c > "z") &&
        (c < "A" || c > "Z") &&
        (c < "0" || c > "9")
    ) {
        if (this._xmlMode);
        else if (this._sectionStart + 1 === this._index);
        else if (this._baseState !== TEXT) {
            if (c !== "=") {
                this._parseNamedEntityStrict();
            }
        } else {
            this._parseLegacyEntity();
        }

        this._state = this._baseState;
        this._index--;
    }
};

Tokenizer.prototype._decodeNumericEntity = function(offset, base) {
    var sectionStart = this._sectionStart + offset;

    if (sectionStart !== this._index) {
        //parse entity
        var entity = this._buffer.substring(sectionStart, this._index);
        var parsed = parseInt(entity, base);

        this._emitPartial(decodeCodePoint(parsed));
        this._sectionStart = this._index;
    } else {
        this._sectionStart--;
    }

    this._state = this._baseState;
};

Tokenizer.prototype._stateInNumericEntity = function(c) {
    if (c === ";") {
        this._decodeNumericEntity(2, 10);
        this._sectionStart++;
    } else if (c < "0" || c > "9") {
        if (!this._xmlMode) {
            this._decodeNumericEntity(2, 10);
        } else {
            this._state = this._baseState;
        }
        this._index--;
    }
};

Tokenizer.prototype._stateInHexEntity = function(c) {
    if (c === ";") {
        this._decodeNumericEntity(3, 16);
        this._sectionStart++;
    } else if (
        (c < "a" || c > "f") &&
        (c < "A" || c > "F") &&
        (c < "0" || c > "9")
    ) {
        if (!this._xmlMode) {
            this._decodeNumericEntity(3, 16);
        } else {
            this._state = this._baseState;
        }
        this._index--;
    }
};

Tokenizer.prototype._cleanup = function() {
    if (this._sectionStart < 0) {
        this._buffer = "";
        this._bufferOffset += this._index;
        this._index = 0;
    } else if (this._running) {
        if (this._state === TEXT) {
            if (this._sectionStart !== this._index) {
                this._cbs.ontext(this._buffer.substr(this._sectionStart));
            }
            this._buffer = "";
            this._bufferOffset += this._index;
            this._index = 0;
        } else if (this._sectionStart === this._index) {
            //the section just started
            this._buffer = "";
            this._bufferOffset += this._index;
            this._index = 0;
        } else {
            //remove everything unnecessary
            this._buffer = this._buffer.substr(this._sectionStart);
            this._index -= this._sectionStart;
            this._bufferOffset += this._sectionStart;
        }

        this._sectionStart = 0;
    }
};

//TODO make events conditional
Tokenizer.prototype.write = function(chunk) {
    if (this._ended) this._cbs.onerror(Error(".write() after done!"));

    this._buffer += chunk;
    this._parse();
};

Tokenizer.prototype._parse = function() {
    while (this._index < this._buffer.length && this._running) {
        var c = this._buffer.charAt(this._index);
        if (this._state === TEXT) {
            this._stateText(c);
        } else if (this._state === BEFORE_TAG_NAME) {
            this._stateBeforeTagName(c);
        } else if (this._state === IN_TAG_NAME) {
            this._stateInTagName(c);
        } else if (this._state === BEFORE_CLOSING_TAG_NAME) {
            this._stateBeforeCloseingTagName(c);
        } else if (this._state === IN_CLOSING_TAG_NAME) {
            this._stateInCloseingTagName(c);
        } else if (this._state === AFTER_CLOSING_TAG_NAME) {
            this._stateAfterCloseingTagName(c);
        } else if (this._state === IN_SELF_CLOSING_TAG) {
            this._stateInSelfClosingTag(c);
        } else if (this._state === BEFORE_ATTRIBUTE_NAME) {

        /*
		*	attributes
		*/
            this._stateBeforeAttributeName(c);
        } else if (this._state === IN_ATTRIBUTE_NAME) {
            this._stateInAttributeName(c);
        } else if (this._state === AFTER_ATTRIBUTE_NAME) {
            this._stateAfterAttributeName(c);
        } else if (this._state === BEFORE_ATTRIBUTE_VALUE) {
            this._stateBeforeAttributeValue(c);
        } else if (this._state === IN_ATTRIBUTE_VALUE_DQ) {
            this._stateInAttributeValueDoubleQuotes(c);
        } else if (this._state === IN_ATTRIBUTE_VALUE_SQ) {
            this._stateInAttributeValueSingleQuotes(c);
        } else if (this._state === IN_ATTRIBUTE_VALUE_NQ) {
            this._stateInAttributeValueNoQuotes(c);
        } else if (this._state === BEFORE_DECLARATION) {

        /*
		*	declarations
		*/
            this._stateBeforeDeclaration(c);
        } else if (this._state === IN_DECLARATION) {
            this._stateInDeclaration(c);
        } else if (this._state === IN_PROCESSING_INSTRUCTION) {

        /*
		*	processing instructions
		*/
            this._stateInProcessingInstruction(c);
        } else if (this._state === BEFORE_COMMENT) {

        /*
		*	comments
		*/
            this._stateBeforeComment(c);
        } else if (this._state === IN_COMMENT) {
            this._stateInComment(c);
        } else if (this._state === AFTER_COMMENT_1) {
            this._stateAfterComment1(c);
        } else if (this._state === AFTER_COMMENT_2) {
            this._stateAfterComment2(c);
        } else if (this._state === BEFORE_CDATA_1) {

        /*
		*	cdata
		*/
            this._stateBeforeCdata1(c);
        } else if (this._state === BEFORE_CDATA_2) {
            this._stateBeforeCdata2(c);
        } else if (this._state === BEFORE_CDATA_3) {
            this._stateBeforeCdata3(c);
        } else if (this._state === BEFORE_CDATA_4) {
            this._stateBeforeCdata4(c);
        } else if (this._state === BEFORE_CDATA_5) {
            this._stateBeforeCdata5(c);
        } else if (this._state === BEFORE_CDATA_6) {
            this._stateBeforeCdata6(c);
        } else if (this._state === IN_CDATA) {
            this._stateInCdata(c);
        } else if (this._state === AFTER_CDATA_1) {
            this._stateAfterCdata1(c);
        } else if (this._state === AFTER_CDATA_2) {
            this._stateAfterCdata2(c);
        } else if (this._state === BEFORE_SPECIAL) {

        /*
		* special tags
		*/
            this._stateBeforeSpecial(c);
        } else if (this._state === BEFORE_SPECIAL_END) {
            this._stateBeforeSpecialEnd(c);
        } else if (this._state === BEFORE_SCRIPT_1) {

        /*
		* script
		*/
            this._stateBeforeScript1(c);
        } else if (this._state === BEFORE_SCRIPT_2) {
            this._stateBeforeScript2(c);
        } else if (this._state === BEFORE_SCRIPT_3) {
            this._stateBeforeScript3(c);
        } else if (this._state === BEFORE_SCRIPT_4) {
            this._stateBeforeScript4(c);
        } else if (this._state === BEFORE_SCRIPT_5) {
            this._stateBeforeScript5(c);
        } else if (this._state === AFTER_SCRIPT_1) {
            this._stateAfterScript1(c);
        } else if (this._state === AFTER_SCRIPT_2) {
            this._stateAfterScript2(c);
        } else if (this._state === AFTER_SCRIPT_3) {
            this._stateAfterScript3(c);
        } else if (this._state === AFTER_SCRIPT_4) {
            this._stateAfterScript4(c);
        } else if (this._state === AFTER_SCRIPT_5) {
            this._stateAfterScript5(c);
        } else if (this._state === BEFORE_STYLE_1) {

        /*
		* style
		*/
            this._stateBeforeStyle1(c);
        } else if (this._state === BEFORE_STYLE_2) {
            this._stateBeforeStyle2(c);
        } else if (this._state === BEFORE_STYLE_3) {
            this._stateBeforeStyle3(c);
        } else if (this._state === BEFORE_STYLE_4) {
            this._stateBeforeStyle4(c);
        } else if (this._state === AFTER_STYLE_1) {
            this._stateAfterStyle1(c);
        } else if (this._state === AFTER_STYLE_2) {
            this._stateAfterStyle2(c);
        } else if (this._state === AFTER_STYLE_3) {
            this._stateAfterStyle3(c);
        } else if (this._state === AFTER_STYLE_4) {
            this._stateAfterStyle4(c);
        } else if (this._state === BEFORE_ENTITY) {

        /*
		* entities
		*/
            this._stateBeforeEntity(c);
        } else if (this._state === BEFORE_NUMERIC_ENTITY) {
            this._stateBeforeNumericEntity(c);
        } else if (this._state === IN_NAMED_ENTITY) {
            this._stateInNamedEntity(c);
        } else if (this._state === IN_NUMERIC_ENTITY) {
            this._stateInNumericEntity(c);
        } else if (this._state === IN_HEX_ENTITY) {
            this._stateInHexEntity(c);
        } else {
            this._cbs.onerror(Error("unknown _state"), this._state);
        }

        this._index++;
    }

    this._cleanup();
};

Tokenizer.prototype.pause = function() {
    this._running = false;
};
Tokenizer.prototype.resume = function() {
    this._running = true;

    if (this._index < this._buffer.length) {
        this._parse();
    }
    if (this._ended) {
        this._finish();
    }
};

Tokenizer.prototype.end = function(chunk) {
    if (this._ended) this._cbs.onerror(Error(".end() after done!"));
    if (chunk) this.write(chunk);

    this._ended = true;

    if (this._running) this._finish();
};

Tokenizer.prototype._finish = function() {
    //if there is remaining data, emit it in a reasonable way
    if (this._sectionStart < this._index) {
        this._handleTrailingData();
    }

    this._cbs.onend();
};

Tokenizer.prototype._handleTrailingData = function() {
    var data = this._buffer.substr(this._sectionStart);

    if (
        this._state === IN_CDATA ||
        this._state === AFTER_CDATA_1 ||
        this._state === AFTER_CDATA_2
    ) {
        this._cbs.oncdata(data);
    } else if (
        this._state === IN_COMMENT ||
        this._state === AFTER_COMMENT_1 ||
        this._state === AFTER_COMMENT_2
    ) {
        this._cbs.oncomment(data);
    } else if (this._state === IN_NAMED_ENTITY && !this._xmlMode) {
        this._parseLegacyEntity();
        if (this._sectionStart < this._index) {
            this._state = this._baseState;
            this._handleTrailingData();
        }
    } else if (this._state === IN_NUMERIC_ENTITY && !this._xmlMode) {
        this._decodeNumericEntity(2, 10);
        if (this._sectionStart < this._index) {
            this._state = this._baseState;
            this._handleTrailingData();
        }
    } else if (this._state === IN_HEX_ENTITY && !this._xmlMode) {
        this._decodeNumericEntity(3, 16);
        if (this._sectionStart < this._index) {
            this._state = this._baseState;
            this._handleTrailingData();
        }
    } else if (
        this._state !== IN_TAG_NAME &&
        this._state !== BEFORE_ATTRIBUTE_NAME &&
        this._state !== BEFORE_ATTRIBUTE_VALUE &&
        this._state !== AFTER_ATTRIBUTE_NAME &&
        this._state !== IN_ATTRIBUTE_NAME &&
        this._state !== IN_ATTRIBUTE_VALUE_SQ &&
        this._state !== IN_ATTRIBUTE_VALUE_DQ &&
        this._state !== IN_ATTRIBUTE_VALUE_NQ &&
        this._state !== IN_CLOSING_TAG_NAME
    ) {
        this._cbs.ontext(data);
    }
    //else, ignore remaining data
    //TODO add a way to remove current tag
};

Tokenizer.prototype.reset = function() {
    Tokenizer.call(
        this,
        { xmlMode: this._xmlMode, decodeEntities: this._decodeEntities },
        this._cbs
    );
};

Tokenizer.prototype.getAbsoluteIndex = function() {
    return this._bufferOffset + this._index;
};

Tokenizer.prototype._getSection = function() {
    return this._buffer.substring(this._sectionStart, this._index);
};

Tokenizer.prototype._emitToken = function(name) {
    this._cbs[name](this._getSection());
    this._sectionStart = -1;
};

Tokenizer.prototype._emitPartial = function(value) {
    if (this._baseState !== TEXT) {
        this._cbs.onattribdata(value); //TODO implement the new event
    } else {
        this._cbs.ontext(value);
    }
};


/***/ }),
/* 41 */
/*!*******************************************************!*\
  !*** ./node_modules/entities/lib/decode_codepoint.js ***!
  \*******************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var decodeMap = __webpack_require__(/*! ../maps/decode.json */ 42);

module.exports = decodeCodePoint;

// modified version of https://github.com/mathiasbynens/he/blob/master/src/he.js#L94-L119
function decodeCodePoint(codePoint) {
    if ((codePoint >= 0xd800 && codePoint <= 0xdfff) || codePoint > 0x10ffff) {
        return "\uFFFD";
    }

    if (codePoint in decodeMap) {
        codePoint = decodeMap[codePoint];
    }

    var output = "";

    if (codePoint > 0xffff) {
        codePoint -= 0x10000;
        output += String.fromCharCode(((codePoint >>> 10) & 0x3ff) | 0xd800);
        codePoint = 0xdc00 | (codePoint & 0x3ff);
    }

    output += String.fromCharCode(codePoint);
    return output;
}


/***/ }),
/* 42 */
/*!************************************************!*\
  !*** ./node_modules/entities/maps/decode.json ***!
  \************************************************/
/*! exports provided: 0, 128, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 142, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 158, 159, default */
/***/ (function(module) {

module.exports = JSON.parse("{\"0\":65533,\"128\":8364,\"130\":8218,\"131\":402,\"132\":8222,\"133\":8230,\"134\":8224,\"135\":8225,\"136\":710,\"137\":8240,\"138\":352,\"139\":8249,\"140\":338,\"142\":381,\"145\":8216,\"146\":8217,\"147\":8220,\"148\":8221,\"149\":8226,\"150\":8211,\"151\":8212,\"152\":732,\"153\":8482,\"154\":353,\"155\":8250,\"156\":339,\"158\":382,\"159\":376}");

/***/ }),
/* 43 */
/*!**************************************************!*\
  !*** ./node_modules/entities/maps/entities.json ***!
  \**************************************************/
/*! exports provided: Aacute, aacute, Abreve, abreve, ac, acd, acE, Acirc, acirc, acute, Acy, acy, AElig, aelig, af, Afr, afr, Agrave, agrave, alefsym, aleph, Alpha, alpha, Amacr, amacr, amalg, amp, AMP, andand, And, and, andd, andslope, andv, ang, ange, angle, angmsdaa, angmsdab, angmsdac, angmsdad, angmsdae, angmsdaf, angmsdag, angmsdah, angmsd, angrt, angrtvb, angrtvbd, angsph, angst, angzarr, Aogon, aogon, Aopf, aopf, apacir, ap, apE, ape, apid, apos, ApplyFunction, approx, approxeq, Aring, aring, Ascr, ascr, Assign, ast, asymp, asympeq, Atilde, atilde, Auml, auml, awconint, awint, backcong, backepsilon, backprime, backsim, backsimeq, Backslash, Barv, barvee, barwed, Barwed, barwedge, bbrk, bbrktbrk, bcong, Bcy, bcy, bdquo, becaus, because, Because, bemptyv, bepsi, bernou, Bernoullis, Beta, beta, beth, between, Bfr, bfr, bigcap, bigcirc, bigcup, bigodot, bigoplus, bigotimes, bigsqcup, bigstar, bigtriangledown, bigtriangleup, biguplus, bigvee, bigwedge, bkarow, blacklozenge, blacksquare, blacktriangle, blacktriangledown, blacktriangleleft, blacktriangleright, blank, blk12, blk14, blk34, block, bne, bnequiv, bNot, bnot, Bopf, bopf, bot, bottom, bowtie, boxbox, boxdl, boxdL, boxDl, boxDL, boxdr, boxdR, boxDr, boxDR, boxh, boxH, boxhd, boxHd, boxhD, boxHD, boxhu, boxHu, boxhU, boxHU, boxminus, boxplus, boxtimes, boxul, boxuL, boxUl, boxUL, boxur, boxuR, boxUr, boxUR, boxv, boxV, boxvh, boxvH, boxVh, boxVH, boxvl, boxvL, boxVl, boxVL, boxvr, boxvR, boxVr, boxVR, bprime, breve, Breve, brvbar, bscr, Bscr, bsemi, bsim, bsime, bsolb, bsol, bsolhsub, bull, bullet, bump, bumpE, bumpe, Bumpeq, bumpeq, Cacute, cacute, capand, capbrcup, capcap, cap, Cap, capcup, capdot, CapitalDifferentialD, caps, caret, caron, Cayleys, ccaps, Ccaron, ccaron, Ccedil, ccedil, Ccirc, ccirc, Cconint, ccups, ccupssm, Cdot, cdot, cedil, Cedilla, cemptyv, cent, centerdot, CenterDot, cfr, Cfr, CHcy, chcy, check, checkmark, Chi, chi, circ, circeq, circlearrowleft, circlearrowright, circledast, circledcirc, circleddash, CircleDot, circledR, circledS, CircleMinus, CirclePlus, CircleTimes, cir, cirE, cire, cirfnint, cirmid, cirscir, ClockwiseContourIntegral, CloseCurlyDoubleQuote, CloseCurlyQuote, clubs, clubsuit, colon, Colon, Colone, colone, coloneq, comma, commat, comp, compfn, complement, complexes, cong, congdot, Congruent, conint, Conint, ContourIntegral, copf, Copf, coprod, Coproduct, copy, COPY, copysr, CounterClockwiseContourIntegral, crarr, cross, Cross, Cscr, cscr, csub, csube, csup, csupe, ctdot, cudarrl, cudarrr, cuepr, cuesc, cularr, cularrp, cupbrcap, cupcap, CupCap, cup, Cup, cupcup, cupdot, cupor, cups, curarr, curarrm, curlyeqprec, curlyeqsucc, curlyvee, curlywedge, curren, curvearrowleft, curvearrowright, cuvee, cuwed, cwconint, cwint, cylcty, dagger, Dagger, daleth, darr, Darr, dArr, dash, Dashv, dashv, dbkarow, dblac, Dcaron, dcaron, Dcy, dcy, ddagger, ddarr, DD, dd, DDotrahd, ddotseq, deg, Del, Delta, delta, demptyv, dfisht, Dfr, dfr, dHar, dharl, dharr, DiacriticalAcute, DiacriticalDot, DiacriticalDoubleAcute, DiacriticalGrave, DiacriticalTilde, diam, diamond, Diamond, diamondsuit, diams, die, DifferentialD, digamma, disin, div, divide, divideontimes, divonx, DJcy, djcy, dlcorn, dlcrop, dollar, Dopf, dopf, Dot, dot, DotDot, doteq, doteqdot, DotEqual, dotminus, dotplus, dotsquare, doublebarwedge, DoubleContourIntegral, DoubleDot, DoubleDownArrow, DoubleLeftArrow, DoubleLeftRightArrow, DoubleLeftTee, DoubleLongLeftArrow, DoubleLongLeftRightArrow, DoubleLongRightArrow, DoubleRightArrow, DoubleRightTee, DoubleUpArrow, DoubleUpDownArrow, DoubleVerticalBar, DownArrowBar, downarrow, DownArrow, Downarrow, DownArrowUpArrow, DownBreve, downdownarrows, downharpoonleft, downharpoonright, DownLeftRightVector, DownLeftTeeVector, DownLeftVectorBar, DownLeftVector, DownRightTeeVector, DownRightVectorBar, DownRightVector, DownTeeArrow, DownTee, drbkarow, drcorn, drcrop, Dscr, dscr, DScy, dscy, dsol, Dstrok, dstrok, dtdot, dtri, dtrif, duarr, duhar, dwangle, DZcy, dzcy, dzigrarr, Eacute, eacute, easter, Ecaron, ecaron, Ecirc, ecirc, ecir, ecolon, Ecy, ecy, eDDot, Edot, edot, eDot, ee, efDot, Efr, efr, eg, Egrave, egrave, egs, egsdot, el, Element, elinters, ell, els, elsdot, Emacr, emacr, empty, emptyset, EmptySmallSquare, emptyv, EmptyVerySmallSquare, emsp13, emsp14, emsp, ENG, eng, ensp, Eogon, eogon, Eopf, eopf, epar, eparsl, eplus, epsi, Epsilon, epsilon, epsiv, eqcirc, eqcolon, eqsim, eqslantgtr, eqslantless, Equal, equals, EqualTilde, equest, Equilibrium, equiv, equivDD, eqvparsl, erarr, erDot, escr, Escr, esdot, Esim, esim, Eta, eta, ETH, eth, Euml, euml, euro, excl, exist, Exists, expectation, exponentiale, ExponentialE, fallingdotseq, Fcy, fcy, female, ffilig, fflig, ffllig, Ffr, ffr, filig, FilledSmallSquare, FilledVerySmallSquare, fjlig, flat, fllig, fltns, fnof, Fopf, fopf, forall, ForAll, fork, forkv, Fouriertrf, fpartint, frac12, frac13, frac14, frac15, frac16, frac18, frac23, frac25, frac34, frac35, frac38, frac45, frac56, frac58, frac78, frasl, frown, fscr, Fscr, gacute, Gamma, gamma, Gammad, gammad, gap, Gbreve, gbreve, Gcedil, Gcirc, gcirc, Gcy, gcy, Gdot, gdot, ge, gE, gEl, gel, geq, geqq, geqslant, gescc, ges, gesdot, gesdoto, gesdotol, gesl, gesles, Gfr, gfr, gg, Gg, ggg, gimel, GJcy, gjcy, gla, gl, glE, glj, gnap, gnapprox, gne, gnE, gneq, gneqq, gnsim, Gopf, gopf, grave, GreaterEqual, GreaterEqualLess, GreaterFullEqual, GreaterGreater, GreaterLess, GreaterSlantEqual, GreaterTilde, Gscr, gscr, gsim, gsime, gsiml, gtcc, gtcir, gt, GT, Gt, gtdot, gtlPar, gtquest, gtrapprox, gtrarr, gtrdot, gtreqless, gtreqqless, gtrless, gtrsim, gvertneqq, gvnE, Hacek, hairsp, half, hamilt, HARDcy, hardcy, harrcir, harr, hArr, harrw, Hat, hbar, Hcirc, hcirc, hearts, heartsuit, hellip, hercon, hfr, Hfr, HilbertSpace, hksearow, hkswarow, hoarr, homtht, hookleftarrow, hookrightarrow, hopf, Hopf, horbar, HorizontalLine, hscr, Hscr, hslash, Hstrok, hstrok, HumpDownHump, HumpEqual, hybull, hyphen, Iacute, iacute, ic, Icirc, icirc, Icy, icy, Idot, IEcy, iecy, iexcl, iff, ifr, Ifr, Igrave, igrave, ii, iiiint, iiint, iinfin, iiota, IJlig, ijlig, Imacr, imacr, image, ImaginaryI, imagline, imagpart, imath, Im, imof, imped, Implies, incare, in, infin, infintie, inodot, intcal, int, Int, integers, Integral, intercal, Intersection, intlarhk, intprod, InvisibleComma, InvisibleTimes, IOcy, iocy, Iogon, iogon, Iopf, iopf, Iota, iota, iprod, iquest, iscr, Iscr, isin, isindot, isinE, isins, isinsv, isinv, it, Itilde, itilde, Iukcy, iukcy, Iuml, iuml, Jcirc, jcirc, Jcy, jcy, Jfr, jfr, jmath, Jopf, jopf, Jscr, jscr, Jsercy, jsercy, Jukcy, jukcy, Kappa, kappa, kappav, Kcedil, kcedil, Kcy, kcy, Kfr, kfr, kgreen, KHcy, khcy, KJcy, kjcy, Kopf, kopf, Kscr, kscr, lAarr, Lacute, lacute, laemptyv, lagran, Lambda, lambda, lang, Lang, langd, langle, lap, Laplacetrf, laquo, larrb, larrbfs, larr, Larr, lArr, larrfs, larrhk, larrlp, larrpl, larrsim, larrtl, latail, lAtail, lat, late, lates, lbarr, lBarr, lbbrk, lbrace, lbrack, lbrke, lbrksld, lbrkslu, Lcaron, lcaron, Lcedil, lcedil, lceil, lcub, Lcy, lcy, ldca, ldquo, ldquor, ldrdhar, ldrushar, ldsh, le, lE, LeftAngleBracket, LeftArrowBar, leftarrow, LeftArrow, Leftarrow, LeftArrowRightArrow, leftarrowtail, LeftCeiling, LeftDoubleBracket, LeftDownTeeVector, LeftDownVectorBar, LeftDownVector, LeftFloor, leftharpoondown, leftharpoonup, leftleftarrows, leftrightarrow, LeftRightArrow, Leftrightarrow, leftrightarrows, leftrightharpoons, leftrightsquigarrow, LeftRightVector, LeftTeeArrow, LeftTee, LeftTeeVector, leftthreetimes, LeftTriangleBar, LeftTriangle, LeftTriangleEqual, LeftUpDownVector, LeftUpTeeVector, LeftUpVectorBar, LeftUpVector, LeftVectorBar, LeftVector, lEg, leg, leq, leqq, leqslant, lescc, les, lesdot, lesdoto, lesdotor, lesg, lesges, lessapprox, lessdot, lesseqgtr, lesseqqgtr, LessEqualGreater, LessFullEqual, LessGreater, lessgtr, LessLess, lesssim, LessSlantEqual, LessTilde, lfisht, lfloor, Lfr, lfr, lg, lgE, lHar, lhard, lharu, lharul, lhblk, LJcy, ljcy, llarr, ll, Ll, llcorner, Lleftarrow, llhard, lltri, Lmidot, lmidot, lmoustache, lmoust, lnap, lnapprox, lne, lnE, lneq, lneqq, lnsim, loang, loarr, lobrk, longleftarrow, LongLeftArrow, Longleftarrow, longleftrightarrow, LongLeftRightArrow, Longleftrightarrow, longmapsto, longrightarrow, LongRightArrow, Longrightarrow, looparrowleft, looparrowright, lopar, Lopf, lopf, loplus, lotimes, lowast, lowbar, LowerLeftArrow, LowerRightArrow, loz, lozenge, lozf, lpar, lparlt, lrarr, lrcorner, lrhar, lrhard, lrm, lrtri, lsaquo, lscr, Lscr, lsh, Lsh, lsim, lsime, lsimg, lsqb, lsquo, lsquor, Lstrok, lstrok, ltcc, ltcir, lt, LT, Lt, ltdot, lthree, ltimes, ltlarr, ltquest, ltri, ltrie, ltrif, ltrPar, lurdshar, luruhar, lvertneqq, lvnE, macr, male, malt, maltese, Map, map, mapsto, mapstodown, mapstoleft, mapstoup, marker, mcomma, Mcy, mcy, mdash, mDDot, measuredangle, MediumSpace, Mellintrf, Mfr, mfr, mho, micro, midast, midcir, mid, middot, minusb, minus, minusd, minusdu, MinusPlus, mlcp, mldr, mnplus, models, Mopf, mopf, mp, mscr, Mscr, mstpos, Mu, mu, multimap, mumap, nabla, Nacute, nacute, nang, nap, napE, napid, napos, napprox, natural, naturals, natur, nbsp, nbump, nbumpe, ncap, Ncaron, ncaron, Ncedil, ncedil, ncong, ncongdot, ncup, Ncy, ncy, ndash, nearhk, nearr, neArr, nearrow, ne, nedot, NegativeMediumSpace, NegativeThickSpace, NegativeThinSpace, NegativeVeryThinSpace, nequiv, nesear, nesim, NestedGreaterGreater, NestedLessLess, NewLine, nexist, nexists, Nfr, nfr, ngE, nge, ngeq, ngeqq, ngeqslant, nges, nGg, ngsim, nGt, ngt, ngtr, nGtv, nharr, nhArr, nhpar, ni, nis, nisd, niv, NJcy, njcy, nlarr, nlArr, nldr, nlE, nle, nleftarrow, nLeftarrow, nleftrightarrow, nLeftrightarrow, nleq, nleqq, nleqslant, nles, nless, nLl, nlsim, nLt, nlt, nltri, nltrie, nLtv, nmid, NoBreak, NonBreakingSpace, nopf, Nopf, Not, not, NotCongruent, NotCupCap, NotDoubleVerticalBar, NotElement, NotEqual, NotEqualTilde, NotExists, NotGreater, NotGreaterEqual, NotGreaterFullEqual, NotGreaterGreater, NotGreaterLess, NotGreaterSlantEqual, NotGreaterTilde, NotHumpDownHump, NotHumpEqual, notin, notindot, notinE, notinva, notinvb, notinvc, NotLeftTriangleBar, NotLeftTriangle, NotLeftTriangleEqual, NotLess, NotLessEqual, NotLessGreater, NotLessLess, NotLessSlantEqual, NotLessTilde, NotNestedGreaterGreater, NotNestedLessLess, notni, notniva, notnivb, notnivc, NotPrecedes, NotPrecedesEqual, NotPrecedesSlantEqual, NotReverseElement, NotRightTriangleBar, NotRightTriangle, NotRightTriangleEqual, NotSquareSubset, NotSquareSubsetEqual, NotSquareSuperset, NotSquareSupersetEqual, NotSubset, NotSubsetEqual, NotSucceeds, NotSucceedsEqual, NotSucceedsSlantEqual, NotSucceedsTilde, NotSuperset, NotSupersetEqual, NotTilde, NotTildeEqual, NotTildeFullEqual, NotTildeTilde, NotVerticalBar, nparallel, npar, nparsl, npart, npolint, npr, nprcue, nprec, npreceq, npre, nrarrc, nrarr, nrArr, nrarrw, nrightarrow, nRightarrow, nrtri, nrtrie, nsc, nsccue, nsce, Nscr, nscr, nshortmid, nshortparallel, nsim, nsime, nsimeq, nsmid, nspar, nsqsube, nsqsupe, nsub, nsubE, nsube, nsubset, nsubseteq, nsubseteqq, nsucc, nsucceq, nsup, nsupE, nsupe, nsupset, nsupseteq, nsupseteqq, ntgl, Ntilde, ntilde, ntlg, ntriangleleft, ntrianglelefteq, ntriangleright, ntrianglerighteq, Nu, nu, num, numero, numsp, nvap, nvdash, nvDash, nVdash, nVDash, nvge, nvgt, nvHarr, nvinfin, nvlArr, nvle, nvlt, nvltrie, nvrArr, nvrtrie, nvsim, nwarhk, nwarr, nwArr, nwarrow, nwnear, Oacute, oacute, oast, Ocirc, ocirc, ocir, Ocy, ocy, odash, Odblac, odblac, odiv, odot, odsold, OElig, oelig, ofcir, Ofr, ofr, ogon, Ograve, ograve, ogt, ohbar, ohm, oint, olarr, olcir, olcross, oline, olt, Omacr, omacr, Omega, omega, Omicron, omicron, omid, ominus, Oopf, oopf, opar, OpenCurlyDoubleQuote, OpenCurlyQuote, operp, oplus, orarr, Or, or, ord, order, orderof, ordf, ordm, origof, oror, orslope, orv, oS, Oscr, oscr, Oslash, oslash, osol, Otilde, otilde, otimesas, Otimes, otimes, Ouml, ouml, ovbar, OverBar, OverBrace, OverBracket, OverParenthesis, para, parallel, par, parsim, parsl, part, PartialD, Pcy, pcy, percnt, period, permil, perp, pertenk, Pfr, pfr, Phi, phi, phiv, phmmat, phone, Pi, pi, pitchfork, piv, planck, planckh, plankv, plusacir, plusb, pluscir, plus, plusdo, plusdu, pluse, PlusMinus, plusmn, plussim, plustwo, pm, Poincareplane, pointint, popf, Popf, pound, prap, Pr, pr, prcue, precapprox, prec, preccurlyeq, Precedes, PrecedesEqual, PrecedesSlantEqual, PrecedesTilde, preceq, precnapprox, precneqq, precnsim, pre, prE, precsim, prime, Prime, primes, prnap, prnE, prnsim, prod, Product, profalar, profline, profsurf, prop, Proportional, Proportion, propto, prsim, prurel, Pscr, pscr, Psi, psi, puncsp, Qfr, qfr, qint, qopf, Qopf, qprime, Qscr, qscr, quaternions, quatint, quest, questeq, quot, QUOT, rAarr, race, Racute, racute, radic, raemptyv, rang, Rang, rangd, range, rangle, raquo, rarrap, rarrb, rarrbfs, rarrc, rarr, Rarr, rArr, rarrfs, rarrhk, rarrlp, rarrpl, rarrsim, Rarrtl, rarrtl, rarrw, ratail, rAtail, ratio, rationals, rbarr, rBarr, RBarr, rbbrk, rbrace, rbrack, rbrke, rbrksld, rbrkslu, Rcaron, rcaron, Rcedil, rcedil, rceil, rcub, Rcy, rcy, rdca, rdldhar, rdquo, rdquor, rdsh, real, realine, realpart, reals, Re, rect, reg, REG, ReverseElement, ReverseEquilibrium, ReverseUpEquilibrium, rfisht, rfloor, rfr, Rfr, rHar, rhard, rharu, rharul, Rho, rho, rhov, RightAngleBracket, RightArrowBar, rightarrow, RightArrow, Rightarrow, RightArrowLeftArrow, rightarrowtail, RightCeiling, RightDoubleBracket, RightDownTeeVector, RightDownVectorBar, RightDownVector, RightFloor, rightharpoondown, rightharpoonup, rightleftarrows, rightleftharpoons, rightrightarrows, rightsquigarrow, RightTeeArrow, RightTee, RightTeeVector, rightthreetimes, RightTriangleBar, RightTriangle, RightTriangleEqual, RightUpDownVector, RightUpTeeVector, RightUpVectorBar, RightUpVector, RightVectorBar, RightVector, ring, risingdotseq, rlarr, rlhar, rlm, rmoustache, rmoust, rnmid, roang, roarr, robrk, ropar, ropf, Ropf, roplus, rotimes, RoundImplies, rpar, rpargt, rppolint, rrarr, Rrightarrow, rsaquo, rscr, Rscr, rsh, Rsh, rsqb, rsquo, rsquor, rthree, rtimes, rtri, rtrie, rtrif, rtriltri, RuleDelayed, ruluhar, rx, Sacute, sacute, sbquo, scap, Scaron, scaron, Sc, sc, sccue, sce, scE, Scedil, scedil, Scirc, scirc, scnap, scnE, scnsim, scpolint, scsim, Scy, scy, sdotb, sdot, sdote, searhk, searr, seArr, searrow, sect, semi, seswar, setminus, setmn, sext, Sfr, sfr, sfrown, sharp, SHCHcy, shchcy, SHcy, shcy, ShortDownArrow, ShortLeftArrow, shortmid, shortparallel, ShortRightArrow, ShortUpArrow, shy, Sigma, sigma, sigmaf, sigmav, sim, simdot, sime, simeq, simg, simgE, siml, simlE, simne, simplus, simrarr, slarr, SmallCircle, smallsetminus, smashp, smeparsl, smid, smile, smt, smte, smtes, SOFTcy, softcy, solbar, solb, sol, Sopf, sopf, spades, spadesuit, spar, sqcap, sqcaps, sqcup, sqcups, Sqrt, sqsub, sqsube, sqsubset, sqsubseteq, sqsup, sqsupe, sqsupset, sqsupseteq, square, Square, SquareIntersection, SquareSubset, SquareSubsetEqual, SquareSuperset, SquareSupersetEqual, SquareUnion, squarf, squ, squf, srarr, Sscr, sscr, ssetmn, ssmile, sstarf, Star, star, starf, straightepsilon, straightphi, strns, sub, Sub, subdot, subE, sube, subedot, submult, subnE, subne, subplus, subrarr, subset, Subset, subseteq, subseteqq, SubsetEqual, subsetneq, subsetneqq, subsim, subsub, subsup, succapprox, succ, succcurlyeq, Succeeds, SucceedsEqual, SucceedsSlantEqual, SucceedsTilde, succeq, succnapprox, succneqq, succnsim, succsim, SuchThat, sum, Sum, sung, sup1, sup2, sup3, sup, Sup, supdot, supdsub, supE, supe, supedot, Superset, SupersetEqual, suphsol, suphsub, suplarr, supmult, supnE, supne, supplus, supset, Supset, supseteq, supseteqq, supsetneq, supsetneqq, supsim, supsub, supsup, swarhk, swarr, swArr, swarrow, swnwar, szlig, Tab, target, Tau, tau, tbrk, Tcaron, tcaron, Tcedil, tcedil, Tcy, tcy, tdot, telrec, Tfr, tfr, there4, therefore, Therefore, Theta, theta, thetasym, thetav, thickapprox, thicksim, ThickSpace, ThinSpace, thinsp, thkap, thksim, THORN, thorn, tilde, Tilde, TildeEqual, TildeFullEqual, TildeTilde, timesbar, timesb, times, timesd, tint, toea, topbot, topcir, top, Topf, topf, topfork, tosa, tprime, trade, TRADE, triangle, triangledown, triangleleft, trianglelefteq, triangleq, triangleright, trianglerighteq, tridot, trie, triminus, TripleDot, triplus, trisb, tritime, trpezium, Tscr, tscr, TScy, tscy, TSHcy, tshcy, Tstrok, tstrok, twixt, twoheadleftarrow, twoheadrightarrow, Uacute, uacute, uarr, Uarr, uArr, Uarrocir, Ubrcy, ubrcy, Ubreve, ubreve, Ucirc, ucirc, Ucy, ucy, udarr, Udblac, udblac, udhar, ufisht, Ufr, ufr, Ugrave, ugrave, uHar, uharl, uharr, uhblk, ulcorn, ulcorner, ulcrop, ultri, Umacr, umacr, uml, UnderBar, UnderBrace, UnderBracket, UnderParenthesis, Union, UnionPlus, Uogon, uogon, Uopf, uopf, UpArrowBar, uparrow, UpArrow, Uparrow, UpArrowDownArrow, updownarrow, UpDownArrow, Updownarrow, UpEquilibrium, upharpoonleft, upharpoonright, uplus, UpperLeftArrow, UpperRightArrow, upsi, Upsi, upsih, Upsilon, upsilon, UpTeeArrow, UpTee, upuparrows, urcorn, urcorner, urcrop, Uring, uring, urtri, Uscr, uscr, utdot, Utilde, utilde, utri, utrif, uuarr, Uuml, uuml, uwangle, vangrt, varepsilon, varkappa, varnothing, varphi, varpi, varpropto, varr, vArr, varrho, varsigma, varsubsetneq, varsubsetneqq, varsupsetneq, varsupsetneqq, vartheta, vartriangleleft, vartriangleright, vBar, Vbar, vBarv, Vcy, vcy, vdash, vDash, Vdash, VDash, Vdashl, veebar, vee, Vee, veeeq, vellip, verbar, Verbar, vert, Vert, VerticalBar, VerticalLine, VerticalSeparator, VerticalTilde, VeryThinSpace, Vfr, vfr, vltri, vnsub, vnsup, Vopf, vopf, vprop, vrtri, Vscr, vscr, vsubnE, vsubne, vsupnE, vsupne, Vvdash, vzigzag, Wcirc, wcirc, wedbar, wedge, Wedge, wedgeq, weierp, Wfr, wfr, Wopf, wopf, wp, wr, wreath, Wscr, wscr, xcap, xcirc, xcup, xdtri, Xfr, xfr, xharr, xhArr, Xi, xi, xlarr, xlArr, xmap, xnis, xodot, Xopf, xopf, xoplus, xotime, xrarr, xrArr, Xscr, xscr, xsqcup, xuplus, xutri, xvee, xwedge, Yacute, yacute, YAcy, yacy, Ycirc, ycirc, Ycy, ycy, yen, Yfr, yfr, YIcy, yicy, Yopf, yopf, Yscr, yscr, YUcy, yucy, yuml, Yuml, Zacute, zacute, Zcaron, zcaron, Zcy, zcy, Zdot, zdot, zeetrf, ZeroWidthSpace, Zeta, zeta, zfr, Zfr, ZHcy, zhcy, zigrarr, zopf, Zopf, Zscr, zscr, zwj, zwnj, default */
/***/ (function(module) {

module.exports = JSON.parse("{\"Aacute\":\"Á\",\"aacute\":\"á\",\"Abreve\":\"Ă\",\"abreve\":\"ă\",\"ac\":\"∾\",\"acd\":\"∿\",\"acE\":\"∾̳\",\"Acirc\":\"Â\",\"acirc\":\"â\",\"acute\":\"´\",\"Acy\":\"А\",\"acy\":\"а\",\"AElig\":\"Æ\",\"aelig\":\"æ\",\"af\":\"⁡\",\"Afr\":\"𝔄\",\"afr\":\"𝔞\",\"Agrave\":\"À\",\"agrave\":\"à\",\"alefsym\":\"ℵ\",\"aleph\":\"ℵ\",\"Alpha\":\"Α\",\"alpha\":\"α\",\"Amacr\":\"Ā\",\"amacr\":\"ā\",\"amalg\":\"⨿\",\"amp\":\"&\",\"AMP\":\"&\",\"andand\":\"⩕\",\"And\":\"⩓\",\"and\":\"∧\",\"andd\":\"⩜\",\"andslope\":\"⩘\",\"andv\":\"⩚\",\"ang\":\"∠\",\"ange\":\"⦤\",\"angle\":\"∠\",\"angmsdaa\":\"⦨\",\"angmsdab\":\"⦩\",\"angmsdac\":\"⦪\",\"angmsdad\":\"⦫\",\"angmsdae\":\"⦬\",\"angmsdaf\":\"⦭\",\"angmsdag\":\"⦮\",\"angmsdah\":\"⦯\",\"angmsd\":\"∡\",\"angrt\":\"∟\",\"angrtvb\":\"⊾\",\"angrtvbd\":\"⦝\",\"angsph\":\"∢\",\"angst\":\"Å\",\"angzarr\":\"⍼\",\"Aogon\":\"Ą\",\"aogon\":\"ą\",\"Aopf\":\"𝔸\",\"aopf\":\"𝕒\",\"apacir\":\"⩯\",\"ap\":\"≈\",\"apE\":\"⩰\",\"ape\":\"≊\",\"apid\":\"≋\",\"apos\":\"'\",\"ApplyFunction\":\"⁡\",\"approx\":\"≈\",\"approxeq\":\"≊\",\"Aring\":\"Å\",\"aring\":\"å\",\"Ascr\":\"𝒜\",\"ascr\":\"𝒶\",\"Assign\":\"≔\",\"ast\":\"*\",\"asymp\":\"≈\",\"asympeq\":\"≍\",\"Atilde\":\"Ã\",\"atilde\":\"ã\",\"Auml\":\"Ä\",\"auml\":\"ä\",\"awconint\":\"∳\",\"awint\":\"⨑\",\"backcong\":\"≌\",\"backepsilon\":\"϶\",\"backprime\":\"‵\",\"backsim\":\"∽\",\"backsimeq\":\"⋍\",\"Backslash\":\"∖\",\"Barv\":\"⫧\",\"barvee\":\"⊽\",\"barwed\":\"⌅\",\"Barwed\":\"⌆\",\"barwedge\":\"⌅\",\"bbrk\":\"⎵\",\"bbrktbrk\":\"⎶\",\"bcong\":\"≌\",\"Bcy\":\"Б\",\"bcy\":\"б\",\"bdquo\":\"„\",\"becaus\":\"∵\",\"because\":\"∵\",\"Because\":\"∵\",\"bemptyv\":\"⦰\",\"bepsi\":\"϶\",\"bernou\":\"ℬ\",\"Bernoullis\":\"ℬ\",\"Beta\":\"Β\",\"beta\":\"β\",\"beth\":\"ℶ\",\"between\":\"≬\",\"Bfr\":\"𝔅\",\"bfr\":\"𝔟\",\"bigcap\":\"⋂\",\"bigcirc\":\"◯\",\"bigcup\":\"⋃\",\"bigodot\":\"⨀\",\"bigoplus\":\"⨁\",\"bigotimes\":\"⨂\",\"bigsqcup\":\"⨆\",\"bigstar\":\"★\",\"bigtriangledown\":\"▽\",\"bigtriangleup\":\"△\",\"biguplus\":\"⨄\",\"bigvee\":\"⋁\",\"bigwedge\":\"⋀\",\"bkarow\":\"⤍\",\"blacklozenge\":\"⧫\",\"blacksquare\":\"▪\",\"blacktriangle\":\"▴\",\"blacktriangledown\":\"▾\",\"blacktriangleleft\":\"◂\",\"blacktriangleright\":\"▸\",\"blank\":\"␣\",\"blk12\":\"▒\",\"blk14\":\"░\",\"blk34\":\"▓\",\"block\":\"█\",\"bne\":\"=⃥\",\"bnequiv\":\"≡⃥\",\"bNot\":\"⫭\",\"bnot\":\"⌐\",\"Bopf\":\"𝔹\",\"bopf\":\"𝕓\",\"bot\":\"⊥\",\"bottom\":\"⊥\",\"bowtie\":\"⋈\",\"boxbox\":\"⧉\",\"boxdl\":\"┐\",\"boxdL\":\"╕\",\"boxDl\":\"╖\",\"boxDL\":\"╗\",\"boxdr\":\"┌\",\"boxdR\":\"╒\",\"boxDr\":\"╓\",\"boxDR\":\"╔\",\"boxh\":\"─\",\"boxH\":\"═\",\"boxhd\":\"┬\",\"boxHd\":\"╤\",\"boxhD\":\"╥\",\"boxHD\":\"╦\",\"boxhu\":\"┴\",\"boxHu\":\"╧\",\"boxhU\":\"╨\",\"boxHU\":\"╩\",\"boxminus\":\"⊟\",\"boxplus\":\"⊞\",\"boxtimes\":\"⊠\",\"boxul\":\"┘\",\"boxuL\":\"╛\",\"boxUl\":\"╜\",\"boxUL\":\"╝\",\"boxur\":\"└\",\"boxuR\":\"╘\",\"boxUr\":\"╙\",\"boxUR\":\"╚\",\"boxv\":\"│\",\"boxV\":\"║\",\"boxvh\":\"┼\",\"boxvH\":\"╪\",\"boxVh\":\"╫\",\"boxVH\":\"╬\",\"boxvl\":\"┤\",\"boxvL\":\"╡\",\"boxVl\":\"╢\",\"boxVL\":\"╣\",\"boxvr\":\"├\",\"boxvR\":\"╞\",\"boxVr\":\"╟\",\"boxVR\":\"╠\",\"bprime\":\"‵\",\"breve\":\"˘\",\"Breve\":\"˘\",\"brvbar\":\"¦\",\"bscr\":\"𝒷\",\"Bscr\":\"ℬ\",\"bsemi\":\"⁏\",\"bsim\":\"∽\",\"bsime\":\"⋍\",\"bsolb\":\"⧅\",\"bsol\":\"\\\\\",\"bsolhsub\":\"⟈\",\"bull\":\"•\",\"bullet\":\"•\",\"bump\":\"≎\",\"bumpE\":\"⪮\",\"bumpe\":\"≏\",\"Bumpeq\":\"≎\",\"bumpeq\":\"≏\",\"Cacute\":\"Ć\",\"cacute\":\"ć\",\"capand\":\"⩄\",\"capbrcup\":\"⩉\",\"capcap\":\"⩋\",\"cap\":\"∩\",\"Cap\":\"⋒\",\"capcup\":\"⩇\",\"capdot\":\"⩀\",\"CapitalDifferentialD\":\"ⅅ\",\"caps\":\"∩︀\",\"caret\":\"⁁\",\"caron\":\"ˇ\",\"Cayleys\":\"ℭ\",\"ccaps\":\"⩍\",\"Ccaron\":\"Č\",\"ccaron\":\"č\",\"Ccedil\":\"Ç\",\"ccedil\":\"ç\",\"Ccirc\":\"Ĉ\",\"ccirc\":\"ĉ\",\"Cconint\":\"∰\",\"ccups\":\"⩌\",\"ccupssm\":\"⩐\",\"Cdot\":\"Ċ\",\"cdot\":\"ċ\",\"cedil\":\"¸\",\"Cedilla\":\"¸\",\"cemptyv\":\"⦲\",\"cent\":\"¢\",\"centerdot\":\"·\",\"CenterDot\":\"·\",\"cfr\":\"𝔠\",\"Cfr\":\"ℭ\",\"CHcy\":\"Ч\",\"chcy\":\"ч\",\"check\":\"✓\",\"checkmark\":\"✓\",\"Chi\":\"Χ\",\"chi\":\"χ\",\"circ\":\"ˆ\",\"circeq\":\"≗\",\"circlearrowleft\":\"↺\",\"circlearrowright\":\"↻\",\"circledast\":\"⊛\",\"circledcirc\":\"⊚\",\"circleddash\":\"⊝\",\"CircleDot\":\"⊙\",\"circledR\":\"®\",\"circledS\":\"Ⓢ\",\"CircleMinus\":\"⊖\",\"CirclePlus\":\"⊕\",\"CircleTimes\":\"⊗\",\"cir\":\"○\",\"cirE\":\"⧃\",\"cire\":\"≗\",\"cirfnint\":\"⨐\",\"cirmid\":\"⫯\",\"cirscir\":\"⧂\",\"ClockwiseContourIntegral\":\"∲\",\"CloseCurlyDoubleQuote\":\"”\",\"CloseCurlyQuote\":\"’\",\"clubs\":\"♣\",\"clubsuit\":\"♣\",\"colon\":\":\",\"Colon\":\"∷\",\"Colone\":\"⩴\",\"colone\":\"≔\",\"coloneq\":\"≔\",\"comma\":\",\",\"commat\":\"@\",\"comp\":\"∁\",\"compfn\":\"∘\",\"complement\":\"∁\",\"complexes\":\"ℂ\",\"cong\":\"≅\",\"congdot\":\"⩭\",\"Congruent\":\"≡\",\"conint\":\"∮\",\"Conint\":\"∯\",\"ContourIntegral\":\"∮\",\"copf\":\"𝕔\",\"Copf\":\"ℂ\",\"coprod\":\"∐\",\"Coproduct\":\"∐\",\"copy\":\"©\",\"COPY\":\"©\",\"copysr\":\"℗\",\"CounterClockwiseContourIntegral\":\"∳\",\"crarr\":\"↵\",\"cross\":\"✗\",\"Cross\":\"⨯\",\"Cscr\":\"𝒞\",\"cscr\":\"𝒸\",\"csub\":\"⫏\",\"csube\":\"⫑\",\"csup\":\"⫐\",\"csupe\":\"⫒\",\"ctdot\":\"⋯\",\"cudarrl\":\"⤸\",\"cudarrr\":\"⤵\",\"cuepr\":\"⋞\",\"cuesc\":\"⋟\",\"cularr\":\"↶\",\"cularrp\":\"⤽\",\"cupbrcap\":\"⩈\",\"cupcap\":\"⩆\",\"CupCap\":\"≍\",\"cup\":\"∪\",\"Cup\":\"⋓\",\"cupcup\":\"⩊\",\"cupdot\":\"⊍\",\"cupor\":\"⩅\",\"cups\":\"∪︀\",\"curarr\":\"↷\",\"curarrm\":\"⤼\",\"curlyeqprec\":\"⋞\",\"curlyeqsucc\":\"⋟\",\"curlyvee\":\"⋎\",\"curlywedge\":\"⋏\",\"curren\":\"¤\",\"curvearrowleft\":\"↶\",\"curvearrowright\":\"↷\",\"cuvee\":\"⋎\",\"cuwed\":\"⋏\",\"cwconint\":\"∲\",\"cwint\":\"∱\",\"cylcty\":\"⌭\",\"dagger\":\"†\",\"Dagger\":\"‡\",\"daleth\":\"ℸ\",\"darr\":\"↓\",\"Darr\":\"↡\",\"dArr\":\"⇓\",\"dash\":\"‐\",\"Dashv\":\"⫤\",\"dashv\":\"⊣\",\"dbkarow\":\"⤏\",\"dblac\":\"˝\",\"Dcaron\":\"Ď\",\"dcaron\":\"ď\",\"Dcy\":\"Д\",\"dcy\":\"д\",\"ddagger\":\"‡\",\"ddarr\":\"⇊\",\"DD\":\"ⅅ\",\"dd\":\"ⅆ\",\"DDotrahd\":\"⤑\",\"ddotseq\":\"⩷\",\"deg\":\"°\",\"Del\":\"∇\",\"Delta\":\"Δ\",\"delta\":\"δ\",\"demptyv\":\"⦱\",\"dfisht\":\"⥿\",\"Dfr\":\"𝔇\",\"dfr\":\"𝔡\",\"dHar\":\"⥥\",\"dharl\":\"⇃\",\"dharr\":\"⇂\",\"DiacriticalAcute\":\"´\",\"DiacriticalDot\":\"˙\",\"DiacriticalDoubleAcute\":\"˝\",\"DiacriticalGrave\":\"`\",\"DiacriticalTilde\":\"˜\",\"diam\":\"⋄\",\"diamond\":\"⋄\",\"Diamond\":\"⋄\",\"diamondsuit\":\"♦\",\"diams\":\"♦\",\"die\":\"¨\",\"DifferentialD\":\"ⅆ\",\"digamma\":\"ϝ\",\"disin\":\"⋲\",\"div\":\"÷\",\"divide\":\"÷\",\"divideontimes\":\"⋇\",\"divonx\":\"⋇\",\"DJcy\":\"Ђ\",\"djcy\":\"ђ\",\"dlcorn\":\"⌞\",\"dlcrop\":\"⌍\",\"dollar\":\"$\",\"Dopf\":\"𝔻\",\"dopf\":\"𝕕\",\"Dot\":\"¨\",\"dot\":\"˙\",\"DotDot\":\"⃜\",\"doteq\":\"≐\",\"doteqdot\":\"≑\",\"DotEqual\":\"≐\",\"dotminus\":\"∸\",\"dotplus\":\"∔\",\"dotsquare\":\"⊡\",\"doublebarwedge\":\"⌆\",\"DoubleContourIntegral\":\"∯\",\"DoubleDot\":\"¨\",\"DoubleDownArrow\":\"⇓\",\"DoubleLeftArrow\":\"⇐\",\"DoubleLeftRightArrow\":\"⇔\",\"DoubleLeftTee\":\"⫤\",\"DoubleLongLeftArrow\":\"⟸\",\"DoubleLongLeftRightArrow\":\"⟺\",\"DoubleLongRightArrow\":\"⟹\",\"DoubleRightArrow\":\"⇒\",\"DoubleRightTee\":\"⊨\",\"DoubleUpArrow\":\"⇑\",\"DoubleUpDownArrow\":\"⇕\",\"DoubleVerticalBar\":\"∥\",\"DownArrowBar\":\"⤓\",\"downarrow\":\"↓\",\"DownArrow\":\"↓\",\"Downarrow\":\"⇓\",\"DownArrowUpArrow\":\"⇵\",\"DownBreve\":\"̑\",\"downdownarrows\":\"⇊\",\"downharpoonleft\":\"⇃\",\"downharpoonright\":\"⇂\",\"DownLeftRightVector\":\"⥐\",\"DownLeftTeeVector\":\"⥞\",\"DownLeftVectorBar\":\"⥖\",\"DownLeftVector\":\"↽\",\"DownRightTeeVector\":\"⥟\",\"DownRightVectorBar\":\"⥗\",\"DownRightVector\":\"⇁\",\"DownTeeArrow\":\"↧\",\"DownTee\":\"⊤\",\"drbkarow\":\"⤐\",\"drcorn\":\"⌟\",\"drcrop\":\"⌌\",\"Dscr\":\"𝒟\",\"dscr\":\"𝒹\",\"DScy\":\"Ѕ\",\"dscy\":\"ѕ\",\"dsol\":\"⧶\",\"Dstrok\":\"Đ\",\"dstrok\":\"đ\",\"dtdot\":\"⋱\",\"dtri\":\"▿\",\"dtrif\":\"▾\",\"duarr\":\"⇵\",\"duhar\":\"⥯\",\"dwangle\":\"⦦\",\"DZcy\":\"Џ\",\"dzcy\":\"џ\",\"dzigrarr\":\"⟿\",\"Eacute\":\"É\",\"eacute\":\"é\",\"easter\":\"⩮\",\"Ecaron\":\"Ě\",\"ecaron\":\"ě\",\"Ecirc\":\"Ê\",\"ecirc\":\"ê\",\"ecir\":\"≖\",\"ecolon\":\"≕\",\"Ecy\":\"Э\",\"ecy\":\"э\",\"eDDot\":\"⩷\",\"Edot\":\"Ė\",\"edot\":\"ė\",\"eDot\":\"≑\",\"ee\":\"ⅇ\",\"efDot\":\"≒\",\"Efr\":\"𝔈\",\"efr\":\"𝔢\",\"eg\":\"⪚\",\"Egrave\":\"È\",\"egrave\":\"è\",\"egs\":\"⪖\",\"egsdot\":\"⪘\",\"el\":\"⪙\",\"Element\":\"∈\",\"elinters\":\"⏧\",\"ell\":\"ℓ\",\"els\":\"⪕\",\"elsdot\":\"⪗\",\"Emacr\":\"Ē\",\"emacr\":\"ē\",\"empty\":\"∅\",\"emptyset\":\"∅\",\"EmptySmallSquare\":\"◻\",\"emptyv\":\"∅\",\"EmptyVerySmallSquare\":\"▫\",\"emsp13\":\" \",\"emsp14\":\" \",\"emsp\":\" \",\"ENG\":\"Ŋ\",\"eng\":\"ŋ\",\"ensp\":\" \",\"Eogon\":\"Ę\",\"eogon\":\"ę\",\"Eopf\":\"𝔼\",\"eopf\":\"𝕖\",\"epar\":\"⋕\",\"eparsl\":\"⧣\",\"eplus\":\"⩱\",\"epsi\":\"ε\",\"Epsilon\":\"Ε\",\"epsilon\":\"ε\",\"epsiv\":\"ϵ\",\"eqcirc\":\"≖\",\"eqcolon\":\"≕\",\"eqsim\":\"≂\",\"eqslantgtr\":\"⪖\",\"eqslantless\":\"⪕\",\"Equal\":\"⩵\",\"equals\":\"=\",\"EqualTilde\":\"≂\",\"equest\":\"≟\",\"Equilibrium\":\"⇌\",\"equiv\":\"≡\",\"equivDD\":\"⩸\",\"eqvparsl\":\"⧥\",\"erarr\":\"⥱\",\"erDot\":\"≓\",\"escr\":\"ℯ\",\"Escr\":\"ℰ\",\"esdot\":\"≐\",\"Esim\":\"⩳\",\"esim\":\"≂\",\"Eta\":\"Η\",\"eta\":\"η\",\"ETH\":\"Ð\",\"eth\":\"ð\",\"Euml\":\"Ë\",\"euml\":\"ë\",\"euro\":\"€\",\"excl\":\"!\",\"exist\":\"∃\",\"Exists\":\"∃\",\"expectation\":\"ℰ\",\"exponentiale\":\"ⅇ\",\"ExponentialE\":\"ⅇ\",\"fallingdotseq\":\"≒\",\"Fcy\":\"Ф\",\"fcy\":\"ф\",\"female\":\"♀\",\"ffilig\":\"ﬃ\",\"fflig\":\"ﬀ\",\"ffllig\":\"ﬄ\",\"Ffr\":\"𝔉\",\"ffr\":\"𝔣\",\"filig\":\"ﬁ\",\"FilledSmallSquare\":\"◼\",\"FilledVerySmallSquare\":\"▪\",\"fjlig\":\"fj\",\"flat\":\"♭\",\"fllig\":\"ﬂ\",\"fltns\":\"▱\",\"fnof\":\"ƒ\",\"Fopf\":\"𝔽\",\"fopf\":\"𝕗\",\"forall\":\"∀\",\"ForAll\":\"∀\",\"fork\":\"⋔\",\"forkv\":\"⫙\",\"Fouriertrf\":\"ℱ\",\"fpartint\":\"⨍\",\"frac12\":\"½\",\"frac13\":\"⅓\",\"frac14\":\"¼\",\"frac15\":\"⅕\",\"frac16\":\"⅙\",\"frac18\":\"⅛\",\"frac23\":\"⅔\",\"frac25\":\"⅖\",\"frac34\":\"¾\",\"frac35\":\"⅗\",\"frac38\":\"⅜\",\"frac45\":\"⅘\",\"frac56\":\"⅚\",\"frac58\":\"⅝\",\"frac78\":\"⅞\",\"frasl\":\"⁄\",\"frown\":\"⌢\",\"fscr\":\"𝒻\",\"Fscr\":\"ℱ\",\"gacute\":\"ǵ\",\"Gamma\":\"Γ\",\"gamma\":\"γ\",\"Gammad\":\"Ϝ\",\"gammad\":\"ϝ\",\"gap\":\"⪆\",\"Gbreve\":\"Ğ\",\"gbreve\":\"ğ\",\"Gcedil\":\"Ģ\",\"Gcirc\":\"Ĝ\",\"gcirc\":\"ĝ\",\"Gcy\":\"Г\",\"gcy\":\"г\",\"Gdot\":\"Ġ\",\"gdot\":\"ġ\",\"ge\":\"≥\",\"gE\":\"≧\",\"gEl\":\"⪌\",\"gel\":\"⋛\",\"geq\":\"≥\",\"geqq\":\"≧\",\"geqslant\":\"⩾\",\"gescc\":\"⪩\",\"ges\":\"⩾\",\"gesdot\":\"⪀\",\"gesdoto\":\"⪂\",\"gesdotol\":\"⪄\",\"gesl\":\"⋛︀\",\"gesles\":\"⪔\",\"Gfr\":\"𝔊\",\"gfr\":\"𝔤\",\"gg\":\"≫\",\"Gg\":\"⋙\",\"ggg\":\"⋙\",\"gimel\":\"ℷ\",\"GJcy\":\"Ѓ\",\"gjcy\":\"ѓ\",\"gla\":\"⪥\",\"gl\":\"≷\",\"glE\":\"⪒\",\"glj\":\"⪤\",\"gnap\":\"⪊\",\"gnapprox\":\"⪊\",\"gne\":\"⪈\",\"gnE\":\"≩\",\"gneq\":\"⪈\",\"gneqq\":\"≩\",\"gnsim\":\"⋧\",\"Gopf\":\"𝔾\",\"gopf\":\"𝕘\",\"grave\":\"`\",\"GreaterEqual\":\"≥\",\"GreaterEqualLess\":\"⋛\",\"GreaterFullEqual\":\"≧\",\"GreaterGreater\":\"⪢\",\"GreaterLess\":\"≷\",\"GreaterSlantEqual\":\"⩾\",\"GreaterTilde\":\"≳\",\"Gscr\":\"𝒢\",\"gscr\":\"ℊ\",\"gsim\":\"≳\",\"gsime\":\"⪎\",\"gsiml\":\"⪐\",\"gtcc\":\"⪧\",\"gtcir\":\"⩺\",\"gt\":\">\",\"GT\":\">\",\"Gt\":\"≫\",\"gtdot\":\"⋗\",\"gtlPar\":\"⦕\",\"gtquest\":\"⩼\",\"gtrapprox\":\"⪆\",\"gtrarr\":\"⥸\",\"gtrdot\":\"⋗\",\"gtreqless\":\"⋛\",\"gtreqqless\":\"⪌\",\"gtrless\":\"≷\",\"gtrsim\":\"≳\",\"gvertneqq\":\"≩︀\",\"gvnE\":\"≩︀\",\"Hacek\":\"ˇ\",\"hairsp\":\" \",\"half\":\"½\",\"hamilt\":\"ℋ\",\"HARDcy\":\"Ъ\",\"hardcy\":\"ъ\",\"harrcir\":\"⥈\",\"harr\":\"↔\",\"hArr\":\"⇔\",\"harrw\":\"↭\",\"Hat\":\"^\",\"hbar\":\"ℏ\",\"Hcirc\":\"Ĥ\",\"hcirc\":\"ĥ\",\"hearts\":\"♥\",\"heartsuit\":\"♥\",\"hellip\":\"…\",\"hercon\":\"⊹\",\"hfr\":\"𝔥\",\"Hfr\":\"ℌ\",\"HilbertSpace\":\"ℋ\",\"hksearow\":\"⤥\",\"hkswarow\":\"⤦\",\"hoarr\":\"⇿\",\"homtht\":\"∻\",\"hookleftarrow\":\"↩\",\"hookrightarrow\":\"↪\",\"hopf\":\"𝕙\",\"Hopf\":\"ℍ\",\"horbar\":\"―\",\"HorizontalLine\":\"─\",\"hscr\":\"𝒽\",\"Hscr\":\"ℋ\",\"hslash\":\"ℏ\",\"Hstrok\":\"Ħ\",\"hstrok\":\"ħ\",\"HumpDownHump\":\"≎\",\"HumpEqual\":\"≏\",\"hybull\":\"⁃\",\"hyphen\":\"‐\",\"Iacute\":\"Í\",\"iacute\":\"í\",\"ic\":\"⁣\",\"Icirc\":\"Î\",\"icirc\":\"î\",\"Icy\":\"И\",\"icy\":\"и\",\"Idot\":\"İ\",\"IEcy\":\"Е\",\"iecy\":\"е\",\"iexcl\":\"¡\",\"iff\":\"⇔\",\"ifr\":\"𝔦\",\"Ifr\":\"ℑ\",\"Igrave\":\"Ì\",\"igrave\":\"ì\",\"ii\":\"ⅈ\",\"iiiint\":\"⨌\",\"iiint\":\"∭\",\"iinfin\":\"⧜\",\"iiota\":\"℩\",\"IJlig\":\"Ĳ\",\"ijlig\":\"ĳ\",\"Imacr\":\"Ī\",\"imacr\":\"ī\",\"image\":\"ℑ\",\"ImaginaryI\":\"ⅈ\",\"imagline\":\"ℐ\",\"imagpart\":\"ℑ\",\"imath\":\"ı\",\"Im\":\"ℑ\",\"imof\":\"⊷\",\"imped\":\"Ƶ\",\"Implies\":\"⇒\",\"incare\":\"℅\",\"in\":\"∈\",\"infin\":\"∞\",\"infintie\":\"⧝\",\"inodot\":\"ı\",\"intcal\":\"⊺\",\"int\":\"∫\",\"Int\":\"∬\",\"integers\":\"ℤ\",\"Integral\":\"∫\",\"intercal\":\"⊺\",\"Intersection\":\"⋂\",\"intlarhk\":\"⨗\",\"intprod\":\"⨼\",\"InvisibleComma\":\"⁣\",\"InvisibleTimes\":\"⁢\",\"IOcy\":\"Ё\",\"iocy\":\"ё\",\"Iogon\":\"Į\",\"iogon\":\"į\",\"Iopf\":\"𝕀\",\"iopf\":\"𝕚\",\"Iota\":\"Ι\",\"iota\":\"ι\",\"iprod\":\"⨼\",\"iquest\":\"¿\",\"iscr\":\"𝒾\",\"Iscr\":\"ℐ\",\"isin\":\"∈\",\"isindot\":\"⋵\",\"isinE\":\"⋹\",\"isins\":\"⋴\",\"isinsv\":\"⋳\",\"isinv\":\"∈\",\"it\":\"⁢\",\"Itilde\":\"Ĩ\",\"itilde\":\"ĩ\",\"Iukcy\":\"І\",\"iukcy\":\"і\",\"Iuml\":\"Ï\",\"iuml\":\"ï\",\"Jcirc\":\"Ĵ\",\"jcirc\":\"ĵ\",\"Jcy\":\"Й\",\"jcy\":\"й\",\"Jfr\":\"𝔍\",\"jfr\":\"𝔧\",\"jmath\":\"ȷ\",\"Jopf\":\"𝕁\",\"jopf\":\"𝕛\",\"Jscr\":\"𝒥\",\"jscr\":\"𝒿\",\"Jsercy\":\"Ј\",\"jsercy\":\"ј\",\"Jukcy\":\"Є\",\"jukcy\":\"є\",\"Kappa\":\"Κ\",\"kappa\":\"κ\",\"kappav\":\"ϰ\",\"Kcedil\":\"Ķ\",\"kcedil\":\"ķ\",\"Kcy\":\"К\",\"kcy\":\"к\",\"Kfr\":\"𝔎\",\"kfr\":\"𝔨\",\"kgreen\":\"ĸ\",\"KHcy\":\"Х\",\"khcy\":\"х\",\"KJcy\":\"Ќ\",\"kjcy\":\"ќ\",\"Kopf\":\"𝕂\",\"kopf\":\"𝕜\",\"Kscr\":\"𝒦\",\"kscr\":\"𝓀\",\"lAarr\":\"⇚\",\"Lacute\":\"Ĺ\",\"lacute\":\"ĺ\",\"laemptyv\":\"⦴\",\"lagran\":\"ℒ\",\"Lambda\":\"Λ\",\"lambda\":\"λ\",\"lang\":\"⟨\",\"Lang\":\"⟪\",\"langd\":\"⦑\",\"langle\":\"⟨\",\"lap\":\"⪅\",\"Laplacetrf\":\"ℒ\",\"laquo\":\"«\",\"larrb\":\"⇤\",\"larrbfs\":\"⤟\",\"larr\":\"←\",\"Larr\":\"↞\",\"lArr\":\"⇐\",\"larrfs\":\"⤝\",\"larrhk\":\"↩\",\"larrlp\":\"↫\",\"larrpl\":\"⤹\",\"larrsim\":\"⥳\",\"larrtl\":\"↢\",\"latail\":\"⤙\",\"lAtail\":\"⤛\",\"lat\":\"⪫\",\"late\":\"⪭\",\"lates\":\"⪭︀\",\"lbarr\":\"⤌\",\"lBarr\":\"⤎\",\"lbbrk\":\"❲\",\"lbrace\":\"{\",\"lbrack\":\"[\",\"lbrke\":\"⦋\",\"lbrksld\":\"⦏\",\"lbrkslu\":\"⦍\",\"Lcaron\":\"Ľ\",\"lcaron\":\"ľ\",\"Lcedil\":\"Ļ\",\"lcedil\":\"ļ\",\"lceil\":\"⌈\",\"lcub\":\"{\",\"Lcy\":\"Л\",\"lcy\":\"л\",\"ldca\":\"⤶\",\"ldquo\":\"“\",\"ldquor\":\"„\",\"ldrdhar\":\"⥧\",\"ldrushar\":\"⥋\",\"ldsh\":\"↲\",\"le\":\"≤\",\"lE\":\"≦\",\"LeftAngleBracket\":\"⟨\",\"LeftArrowBar\":\"⇤\",\"leftarrow\":\"←\",\"LeftArrow\":\"←\",\"Leftarrow\":\"⇐\",\"LeftArrowRightArrow\":\"⇆\",\"leftarrowtail\":\"↢\",\"LeftCeiling\":\"⌈\",\"LeftDoubleBracket\":\"⟦\",\"LeftDownTeeVector\":\"⥡\",\"LeftDownVectorBar\":\"⥙\",\"LeftDownVector\":\"⇃\",\"LeftFloor\":\"⌊\",\"leftharpoondown\":\"↽\",\"leftharpoonup\":\"↼\",\"leftleftarrows\":\"⇇\",\"leftrightarrow\":\"↔\",\"LeftRightArrow\":\"↔\",\"Leftrightarrow\":\"⇔\",\"leftrightarrows\":\"⇆\",\"leftrightharpoons\":\"⇋\",\"leftrightsquigarrow\":\"↭\",\"LeftRightVector\":\"⥎\",\"LeftTeeArrow\":\"↤\",\"LeftTee\":\"⊣\",\"LeftTeeVector\":\"⥚\",\"leftthreetimes\":\"⋋\",\"LeftTriangleBar\":\"⧏\",\"LeftTriangle\":\"⊲\",\"LeftTriangleEqual\":\"⊴\",\"LeftUpDownVector\":\"⥑\",\"LeftUpTeeVector\":\"⥠\",\"LeftUpVectorBar\":\"⥘\",\"LeftUpVector\":\"↿\",\"LeftVectorBar\":\"⥒\",\"LeftVector\":\"↼\",\"lEg\":\"⪋\",\"leg\":\"⋚\",\"leq\":\"≤\",\"leqq\":\"≦\",\"leqslant\":\"⩽\",\"lescc\":\"⪨\",\"les\":\"⩽\",\"lesdot\":\"⩿\",\"lesdoto\":\"⪁\",\"lesdotor\":\"⪃\",\"lesg\":\"⋚︀\",\"lesges\":\"⪓\",\"lessapprox\":\"⪅\",\"lessdot\":\"⋖\",\"lesseqgtr\":\"⋚\",\"lesseqqgtr\":\"⪋\",\"LessEqualGreater\":\"⋚\",\"LessFullEqual\":\"≦\",\"LessGreater\":\"≶\",\"lessgtr\":\"≶\",\"LessLess\":\"⪡\",\"lesssim\":\"≲\",\"LessSlantEqual\":\"⩽\",\"LessTilde\":\"≲\",\"lfisht\":\"⥼\",\"lfloor\":\"⌊\",\"Lfr\":\"𝔏\",\"lfr\":\"𝔩\",\"lg\":\"≶\",\"lgE\":\"⪑\",\"lHar\":\"⥢\",\"lhard\":\"↽\",\"lharu\":\"↼\",\"lharul\":\"⥪\",\"lhblk\":\"▄\",\"LJcy\":\"Љ\",\"ljcy\":\"љ\",\"llarr\":\"⇇\",\"ll\":\"≪\",\"Ll\":\"⋘\",\"llcorner\":\"⌞\",\"Lleftarrow\":\"⇚\",\"llhard\":\"⥫\",\"lltri\":\"◺\",\"Lmidot\":\"Ŀ\",\"lmidot\":\"ŀ\",\"lmoustache\":\"⎰\",\"lmoust\":\"⎰\",\"lnap\":\"⪉\",\"lnapprox\":\"⪉\",\"lne\":\"⪇\",\"lnE\":\"≨\",\"lneq\":\"⪇\",\"lneqq\":\"≨\",\"lnsim\":\"⋦\",\"loang\":\"⟬\",\"loarr\":\"⇽\",\"lobrk\":\"⟦\",\"longleftarrow\":\"⟵\",\"LongLeftArrow\":\"⟵\",\"Longleftarrow\":\"⟸\",\"longleftrightarrow\":\"⟷\",\"LongLeftRightArrow\":\"⟷\",\"Longleftrightarrow\":\"⟺\",\"longmapsto\":\"⟼\",\"longrightarrow\":\"⟶\",\"LongRightArrow\":\"⟶\",\"Longrightarrow\":\"⟹\",\"looparrowleft\":\"↫\",\"looparrowright\":\"↬\",\"lopar\":\"⦅\",\"Lopf\":\"𝕃\",\"lopf\":\"𝕝\",\"loplus\":\"⨭\",\"lotimes\":\"⨴\",\"lowast\":\"∗\",\"lowbar\":\"_\",\"LowerLeftArrow\":\"↙\",\"LowerRightArrow\":\"↘\",\"loz\":\"◊\",\"lozenge\":\"◊\",\"lozf\":\"⧫\",\"lpar\":\"(\",\"lparlt\":\"⦓\",\"lrarr\":\"⇆\",\"lrcorner\":\"⌟\",\"lrhar\":\"⇋\",\"lrhard\":\"⥭\",\"lrm\":\"‎\",\"lrtri\":\"⊿\",\"lsaquo\":\"‹\",\"lscr\":\"𝓁\",\"Lscr\":\"ℒ\",\"lsh\":\"↰\",\"Lsh\":\"↰\",\"lsim\":\"≲\",\"lsime\":\"⪍\",\"lsimg\":\"⪏\",\"lsqb\":\"[\",\"lsquo\":\"‘\",\"lsquor\":\"‚\",\"Lstrok\":\"Ł\",\"lstrok\":\"ł\",\"ltcc\":\"⪦\",\"ltcir\":\"⩹\",\"lt\":\"<\",\"LT\":\"<\",\"Lt\":\"≪\",\"ltdot\":\"⋖\",\"lthree\":\"⋋\",\"ltimes\":\"⋉\",\"ltlarr\":\"⥶\",\"ltquest\":\"⩻\",\"ltri\":\"◃\",\"ltrie\":\"⊴\",\"ltrif\":\"◂\",\"ltrPar\":\"⦖\",\"lurdshar\":\"⥊\",\"luruhar\":\"⥦\",\"lvertneqq\":\"≨︀\",\"lvnE\":\"≨︀\",\"macr\":\"¯\",\"male\":\"♂\",\"malt\":\"✠\",\"maltese\":\"✠\",\"Map\":\"⤅\",\"map\":\"↦\",\"mapsto\":\"↦\",\"mapstodown\":\"↧\",\"mapstoleft\":\"↤\",\"mapstoup\":\"↥\",\"marker\":\"▮\",\"mcomma\":\"⨩\",\"Mcy\":\"М\",\"mcy\":\"м\",\"mdash\":\"—\",\"mDDot\":\"∺\",\"measuredangle\":\"∡\",\"MediumSpace\":\" \",\"Mellintrf\":\"ℳ\",\"Mfr\":\"𝔐\",\"mfr\":\"𝔪\",\"mho\":\"℧\",\"micro\":\"µ\",\"midast\":\"*\",\"midcir\":\"⫰\",\"mid\":\"∣\",\"middot\":\"·\",\"minusb\":\"⊟\",\"minus\":\"−\",\"minusd\":\"∸\",\"minusdu\":\"⨪\",\"MinusPlus\":\"∓\",\"mlcp\":\"⫛\",\"mldr\":\"…\",\"mnplus\":\"∓\",\"models\":\"⊧\",\"Mopf\":\"𝕄\",\"mopf\":\"𝕞\",\"mp\":\"∓\",\"mscr\":\"𝓂\",\"Mscr\":\"ℳ\",\"mstpos\":\"∾\",\"Mu\":\"Μ\",\"mu\":\"μ\",\"multimap\":\"⊸\",\"mumap\":\"⊸\",\"nabla\":\"∇\",\"Nacute\":\"Ń\",\"nacute\":\"ń\",\"nang\":\"∠⃒\",\"nap\":\"≉\",\"napE\":\"⩰̸\",\"napid\":\"≋̸\",\"napos\":\"ŉ\",\"napprox\":\"≉\",\"natural\":\"♮\",\"naturals\":\"ℕ\",\"natur\":\"♮\",\"nbsp\":\" \",\"nbump\":\"≎̸\",\"nbumpe\":\"≏̸\",\"ncap\":\"⩃\",\"Ncaron\":\"Ň\",\"ncaron\":\"ň\",\"Ncedil\":\"Ņ\",\"ncedil\":\"ņ\",\"ncong\":\"≇\",\"ncongdot\":\"⩭̸\",\"ncup\":\"⩂\",\"Ncy\":\"Н\",\"ncy\":\"н\",\"ndash\":\"–\",\"nearhk\":\"⤤\",\"nearr\":\"↗\",\"neArr\":\"⇗\",\"nearrow\":\"↗\",\"ne\":\"≠\",\"nedot\":\"≐̸\",\"NegativeMediumSpace\":\"​\",\"NegativeThickSpace\":\"​\",\"NegativeThinSpace\":\"​\",\"NegativeVeryThinSpace\":\"​\",\"nequiv\":\"≢\",\"nesear\":\"⤨\",\"nesim\":\"≂̸\",\"NestedGreaterGreater\":\"≫\",\"NestedLessLess\":\"≪\",\"NewLine\":\"\\n\",\"nexist\":\"∄\",\"nexists\":\"∄\",\"Nfr\":\"𝔑\",\"nfr\":\"𝔫\",\"ngE\":\"≧̸\",\"nge\":\"≱\",\"ngeq\":\"≱\",\"ngeqq\":\"≧̸\",\"ngeqslant\":\"⩾̸\",\"nges\":\"⩾̸\",\"nGg\":\"⋙̸\",\"ngsim\":\"≵\",\"nGt\":\"≫⃒\",\"ngt\":\"≯\",\"ngtr\":\"≯\",\"nGtv\":\"≫̸\",\"nharr\":\"↮\",\"nhArr\":\"⇎\",\"nhpar\":\"⫲\",\"ni\":\"∋\",\"nis\":\"⋼\",\"nisd\":\"⋺\",\"niv\":\"∋\",\"NJcy\":\"Њ\",\"njcy\":\"њ\",\"nlarr\":\"↚\",\"nlArr\":\"⇍\",\"nldr\":\"‥\",\"nlE\":\"≦̸\",\"nle\":\"≰\",\"nleftarrow\":\"↚\",\"nLeftarrow\":\"⇍\",\"nleftrightarrow\":\"↮\",\"nLeftrightarrow\":\"⇎\",\"nleq\":\"≰\",\"nleqq\":\"≦̸\",\"nleqslant\":\"⩽̸\",\"nles\":\"⩽̸\",\"nless\":\"≮\",\"nLl\":\"⋘̸\",\"nlsim\":\"≴\",\"nLt\":\"≪⃒\",\"nlt\":\"≮\",\"nltri\":\"⋪\",\"nltrie\":\"⋬\",\"nLtv\":\"≪̸\",\"nmid\":\"∤\",\"NoBreak\":\"⁠\",\"NonBreakingSpace\":\" \",\"nopf\":\"𝕟\",\"Nopf\":\"ℕ\",\"Not\":\"⫬\",\"not\":\"¬\",\"NotCongruent\":\"≢\",\"NotCupCap\":\"≭\",\"NotDoubleVerticalBar\":\"∦\",\"NotElement\":\"∉\",\"NotEqual\":\"≠\",\"NotEqualTilde\":\"≂̸\",\"NotExists\":\"∄\",\"NotGreater\":\"≯\",\"NotGreaterEqual\":\"≱\",\"NotGreaterFullEqual\":\"≧̸\",\"NotGreaterGreater\":\"≫̸\",\"NotGreaterLess\":\"≹\",\"NotGreaterSlantEqual\":\"⩾̸\",\"NotGreaterTilde\":\"≵\",\"NotHumpDownHump\":\"≎̸\",\"NotHumpEqual\":\"≏̸\",\"notin\":\"∉\",\"notindot\":\"⋵̸\",\"notinE\":\"⋹̸\",\"notinva\":\"∉\",\"notinvb\":\"⋷\",\"notinvc\":\"⋶\",\"NotLeftTriangleBar\":\"⧏̸\",\"NotLeftTriangle\":\"⋪\",\"NotLeftTriangleEqual\":\"⋬\",\"NotLess\":\"≮\",\"NotLessEqual\":\"≰\",\"NotLessGreater\":\"≸\",\"NotLessLess\":\"≪̸\",\"NotLessSlantEqual\":\"⩽̸\",\"NotLessTilde\":\"≴\",\"NotNestedGreaterGreater\":\"⪢̸\",\"NotNestedLessLess\":\"⪡̸\",\"notni\":\"∌\",\"notniva\":\"∌\",\"notnivb\":\"⋾\",\"notnivc\":\"⋽\",\"NotPrecedes\":\"⊀\",\"NotPrecedesEqual\":\"⪯̸\",\"NotPrecedesSlantEqual\":\"⋠\",\"NotReverseElement\":\"∌\",\"NotRightTriangleBar\":\"⧐̸\",\"NotRightTriangle\":\"⋫\",\"NotRightTriangleEqual\":\"⋭\",\"NotSquareSubset\":\"⊏̸\",\"NotSquareSubsetEqual\":\"⋢\",\"NotSquareSuperset\":\"⊐̸\",\"NotSquareSupersetEqual\":\"⋣\",\"NotSubset\":\"⊂⃒\",\"NotSubsetEqual\":\"⊈\",\"NotSucceeds\":\"⊁\",\"NotSucceedsEqual\":\"⪰̸\",\"NotSucceedsSlantEqual\":\"⋡\",\"NotSucceedsTilde\":\"≿̸\",\"NotSuperset\":\"⊃⃒\",\"NotSupersetEqual\":\"⊉\",\"NotTilde\":\"≁\",\"NotTildeEqual\":\"≄\",\"NotTildeFullEqual\":\"≇\",\"NotTildeTilde\":\"≉\",\"NotVerticalBar\":\"∤\",\"nparallel\":\"∦\",\"npar\":\"∦\",\"nparsl\":\"⫽⃥\",\"npart\":\"∂̸\",\"npolint\":\"⨔\",\"npr\":\"⊀\",\"nprcue\":\"⋠\",\"nprec\":\"⊀\",\"npreceq\":\"⪯̸\",\"npre\":\"⪯̸\",\"nrarrc\":\"⤳̸\",\"nrarr\":\"↛\",\"nrArr\":\"⇏\",\"nrarrw\":\"↝̸\",\"nrightarrow\":\"↛\",\"nRightarrow\":\"⇏\",\"nrtri\":\"⋫\",\"nrtrie\":\"⋭\",\"nsc\":\"⊁\",\"nsccue\":\"⋡\",\"nsce\":\"⪰̸\",\"Nscr\":\"𝒩\",\"nscr\":\"𝓃\",\"nshortmid\":\"∤\",\"nshortparallel\":\"∦\",\"nsim\":\"≁\",\"nsime\":\"≄\",\"nsimeq\":\"≄\",\"nsmid\":\"∤\",\"nspar\":\"∦\",\"nsqsube\":\"⋢\",\"nsqsupe\":\"⋣\",\"nsub\":\"⊄\",\"nsubE\":\"⫅̸\",\"nsube\":\"⊈\",\"nsubset\":\"⊂⃒\",\"nsubseteq\":\"⊈\",\"nsubseteqq\":\"⫅̸\",\"nsucc\":\"⊁\",\"nsucceq\":\"⪰̸\",\"nsup\":\"⊅\",\"nsupE\":\"⫆̸\",\"nsupe\":\"⊉\",\"nsupset\":\"⊃⃒\",\"nsupseteq\":\"⊉\",\"nsupseteqq\":\"⫆̸\",\"ntgl\":\"≹\",\"Ntilde\":\"Ñ\",\"ntilde\":\"ñ\",\"ntlg\":\"≸\",\"ntriangleleft\":\"⋪\",\"ntrianglelefteq\":\"⋬\",\"ntriangleright\":\"⋫\",\"ntrianglerighteq\":\"⋭\",\"Nu\":\"Ν\",\"nu\":\"ν\",\"num\":\"#\",\"numero\":\"№\",\"numsp\":\" \",\"nvap\":\"≍⃒\",\"nvdash\":\"⊬\",\"nvDash\":\"⊭\",\"nVdash\":\"⊮\",\"nVDash\":\"⊯\",\"nvge\":\"≥⃒\",\"nvgt\":\">⃒\",\"nvHarr\":\"⤄\",\"nvinfin\":\"⧞\",\"nvlArr\":\"⤂\",\"nvle\":\"≤⃒\",\"nvlt\":\"<⃒\",\"nvltrie\":\"⊴⃒\",\"nvrArr\":\"⤃\",\"nvrtrie\":\"⊵⃒\",\"nvsim\":\"∼⃒\",\"nwarhk\":\"⤣\",\"nwarr\":\"↖\",\"nwArr\":\"⇖\",\"nwarrow\":\"↖\",\"nwnear\":\"⤧\",\"Oacute\":\"Ó\",\"oacute\":\"ó\",\"oast\":\"⊛\",\"Ocirc\":\"Ô\",\"ocirc\":\"ô\",\"ocir\":\"⊚\",\"Ocy\":\"О\",\"ocy\":\"о\",\"odash\":\"⊝\",\"Odblac\":\"Ő\",\"odblac\":\"ő\",\"odiv\":\"⨸\",\"odot\":\"⊙\",\"odsold\":\"⦼\",\"OElig\":\"Œ\",\"oelig\":\"œ\",\"ofcir\":\"⦿\",\"Ofr\":\"𝔒\",\"ofr\":\"𝔬\",\"ogon\":\"˛\",\"Ograve\":\"Ò\",\"ograve\":\"ò\",\"ogt\":\"⧁\",\"ohbar\":\"⦵\",\"ohm\":\"Ω\",\"oint\":\"∮\",\"olarr\":\"↺\",\"olcir\":\"⦾\",\"olcross\":\"⦻\",\"oline\":\"‾\",\"olt\":\"⧀\",\"Omacr\":\"Ō\",\"omacr\":\"ō\",\"Omega\":\"Ω\",\"omega\":\"ω\",\"Omicron\":\"Ο\",\"omicron\":\"ο\",\"omid\":\"⦶\",\"ominus\":\"⊖\",\"Oopf\":\"𝕆\",\"oopf\":\"𝕠\",\"opar\":\"⦷\",\"OpenCurlyDoubleQuote\":\"“\",\"OpenCurlyQuote\":\"‘\",\"operp\":\"⦹\",\"oplus\":\"⊕\",\"orarr\":\"↻\",\"Or\":\"⩔\",\"or\":\"∨\",\"ord\":\"⩝\",\"order\":\"ℴ\",\"orderof\":\"ℴ\",\"ordf\":\"ª\",\"ordm\":\"º\",\"origof\":\"⊶\",\"oror\":\"⩖\",\"orslope\":\"⩗\",\"orv\":\"⩛\",\"oS\":\"Ⓢ\",\"Oscr\":\"𝒪\",\"oscr\":\"ℴ\",\"Oslash\":\"Ø\",\"oslash\":\"ø\",\"osol\":\"⊘\",\"Otilde\":\"Õ\",\"otilde\":\"õ\",\"otimesas\":\"⨶\",\"Otimes\":\"⨷\",\"otimes\":\"⊗\",\"Ouml\":\"Ö\",\"ouml\":\"ö\",\"ovbar\":\"⌽\",\"OverBar\":\"‾\",\"OverBrace\":\"⏞\",\"OverBracket\":\"⎴\",\"OverParenthesis\":\"⏜\",\"para\":\"¶\",\"parallel\":\"∥\",\"par\":\"∥\",\"parsim\":\"⫳\",\"parsl\":\"⫽\",\"part\":\"∂\",\"PartialD\":\"∂\",\"Pcy\":\"П\",\"pcy\":\"п\",\"percnt\":\"%\",\"period\":\".\",\"permil\":\"‰\",\"perp\":\"⊥\",\"pertenk\":\"‱\",\"Pfr\":\"𝔓\",\"pfr\":\"𝔭\",\"Phi\":\"Φ\",\"phi\":\"φ\",\"phiv\":\"ϕ\",\"phmmat\":\"ℳ\",\"phone\":\"☎\",\"Pi\":\"Π\",\"pi\":\"π\",\"pitchfork\":\"⋔\",\"piv\":\"ϖ\",\"planck\":\"ℏ\",\"planckh\":\"ℎ\",\"plankv\":\"ℏ\",\"plusacir\":\"⨣\",\"plusb\":\"⊞\",\"pluscir\":\"⨢\",\"plus\":\"+\",\"plusdo\":\"∔\",\"plusdu\":\"⨥\",\"pluse\":\"⩲\",\"PlusMinus\":\"±\",\"plusmn\":\"±\",\"plussim\":\"⨦\",\"plustwo\":\"⨧\",\"pm\":\"±\",\"Poincareplane\":\"ℌ\",\"pointint\":\"⨕\",\"popf\":\"𝕡\",\"Popf\":\"ℙ\",\"pound\":\"£\",\"prap\":\"⪷\",\"Pr\":\"⪻\",\"pr\":\"≺\",\"prcue\":\"≼\",\"precapprox\":\"⪷\",\"prec\":\"≺\",\"preccurlyeq\":\"≼\",\"Precedes\":\"≺\",\"PrecedesEqual\":\"⪯\",\"PrecedesSlantEqual\":\"≼\",\"PrecedesTilde\":\"≾\",\"preceq\":\"⪯\",\"precnapprox\":\"⪹\",\"precneqq\":\"⪵\",\"precnsim\":\"⋨\",\"pre\":\"⪯\",\"prE\":\"⪳\",\"precsim\":\"≾\",\"prime\":\"′\",\"Prime\":\"″\",\"primes\":\"ℙ\",\"prnap\":\"⪹\",\"prnE\":\"⪵\",\"prnsim\":\"⋨\",\"prod\":\"∏\",\"Product\":\"∏\",\"profalar\":\"⌮\",\"profline\":\"⌒\",\"profsurf\":\"⌓\",\"prop\":\"∝\",\"Proportional\":\"∝\",\"Proportion\":\"∷\",\"propto\":\"∝\",\"prsim\":\"≾\",\"prurel\":\"⊰\",\"Pscr\":\"𝒫\",\"pscr\":\"𝓅\",\"Psi\":\"Ψ\",\"psi\":\"ψ\",\"puncsp\":\" \",\"Qfr\":\"𝔔\",\"qfr\":\"𝔮\",\"qint\":\"⨌\",\"qopf\":\"𝕢\",\"Qopf\":\"ℚ\",\"qprime\":\"⁗\",\"Qscr\":\"𝒬\",\"qscr\":\"𝓆\",\"quaternions\":\"ℍ\",\"quatint\":\"⨖\",\"quest\":\"?\",\"questeq\":\"≟\",\"quot\":\"\\\"\",\"QUOT\":\"\\\"\",\"rAarr\":\"⇛\",\"race\":\"∽̱\",\"Racute\":\"Ŕ\",\"racute\":\"ŕ\",\"radic\":\"√\",\"raemptyv\":\"⦳\",\"rang\":\"⟩\",\"Rang\":\"⟫\",\"rangd\":\"⦒\",\"range\":\"⦥\",\"rangle\":\"⟩\",\"raquo\":\"»\",\"rarrap\":\"⥵\",\"rarrb\":\"⇥\",\"rarrbfs\":\"⤠\",\"rarrc\":\"⤳\",\"rarr\":\"→\",\"Rarr\":\"↠\",\"rArr\":\"⇒\",\"rarrfs\":\"⤞\",\"rarrhk\":\"↪\",\"rarrlp\":\"↬\",\"rarrpl\":\"⥅\",\"rarrsim\":\"⥴\",\"Rarrtl\":\"⤖\",\"rarrtl\":\"↣\",\"rarrw\":\"↝\",\"ratail\":\"⤚\",\"rAtail\":\"⤜\",\"ratio\":\"∶\",\"rationals\":\"ℚ\",\"rbarr\":\"⤍\",\"rBarr\":\"⤏\",\"RBarr\":\"⤐\",\"rbbrk\":\"❳\",\"rbrace\":\"}\",\"rbrack\":\"]\",\"rbrke\":\"⦌\",\"rbrksld\":\"⦎\",\"rbrkslu\":\"⦐\",\"Rcaron\":\"Ř\",\"rcaron\":\"ř\",\"Rcedil\":\"Ŗ\",\"rcedil\":\"ŗ\",\"rceil\":\"⌉\",\"rcub\":\"}\",\"Rcy\":\"Р\",\"rcy\":\"р\",\"rdca\":\"⤷\",\"rdldhar\":\"⥩\",\"rdquo\":\"”\",\"rdquor\":\"”\",\"rdsh\":\"↳\",\"real\":\"ℜ\",\"realine\":\"ℛ\",\"realpart\":\"ℜ\",\"reals\":\"ℝ\",\"Re\":\"ℜ\",\"rect\":\"▭\",\"reg\":\"®\",\"REG\":\"®\",\"ReverseElement\":\"∋\",\"ReverseEquilibrium\":\"⇋\",\"ReverseUpEquilibrium\":\"⥯\",\"rfisht\":\"⥽\",\"rfloor\":\"⌋\",\"rfr\":\"𝔯\",\"Rfr\":\"ℜ\",\"rHar\":\"⥤\",\"rhard\":\"⇁\",\"rharu\":\"⇀\",\"rharul\":\"⥬\",\"Rho\":\"Ρ\",\"rho\":\"ρ\",\"rhov\":\"ϱ\",\"RightAngleBracket\":\"⟩\",\"RightArrowBar\":\"⇥\",\"rightarrow\":\"→\",\"RightArrow\":\"→\",\"Rightarrow\":\"⇒\",\"RightArrowLeftArrow\":\"⇄\",\"rightarrowtail\":\"↣\",\"RightCeiling\":\"⌉\",\"RightDoubleBracket\":\"⟧\",\"RightDownTeeVector\":\"⥝\",\"RightDownVectorBar\":\"⥕\",\"RightDownVector\":\"⇂\",\"RightFloor\":\"⌋\",\"rightharpoondown\":\"⇁\",\"rightharpoonup\":\"⇀\",\"rightleftarrows\":\"⇄\",\"rightleftharpoons\":\"⇌\",\"rightrightarrows\":\"⇉\",\"rightsquigarrow\":\"↝\",\"RightTeeArrow\":\"↦\",\"RightTee\":\"⊢\",\"RightTeeVector\":\"⥛\",\"rightthreetimes\":\"⋌\",\"RightTriangleBar\":\"⧐\",\"RightTriangle\":\"⊳\",\"RightTriangleEqual\":\"⊵\",\"RightUpDownVector\":\"⥏\",\"RightUpTeeVector\":\"⥜\",\"RightUpVectorBar\":\"⥔\",\"RightUpVector\":\"↾\",\"RightVectorBar\":\"⥓\",\"RightVector\":\"⇀\",\"ring\":\"˚\",\"risingdotseq\":\"≓\",\"rlarr\":\"⇄\",\"rlhar\":\"⇌\",\"rlm\":\"‏\",\"rmoustache\":\"⎱\",\"rmoust\":\"⎱\",\"rnmid\":\"⫮\",\"roang\":\"⟭\",\"roarr\":\"⇾\",\"robrk\":\"⟧\",\"ropar\":\"⦆\",\"ropf\":\"𝕣\",\"Ropf\":\"ℝ\",\"roplus\":\"⨮\",\"rotimes\":\"⨵\",\"RoundImplies\":\"⥰\",\"rpar\":\")\",\"rpargt\":\"⦔\",\"rppolint\":\"⨒\",\"rrarr\":\"⇉\",\"Rrightarrow\":\"⇛\",\"rsaquo\":\"›\",\"rscr\":\"𝓇\",\"Rscr\":\"ℛ\",\"rsh\":\"↱\",\"Rsh\":\"↱\",\"rsqb\":\"]\",\"rsquo\":\"’\",\"rsquor\":\"’\",\"rthree\":\"⋌\",\"rtimes\":\"⋊\",\"rtri\":\"▹\",\"rtrie\":\"⊵\",\"rtrif\":\"▸\",\"rtriltri\":\"⧎\",\"RuleDelayed\":\"⧴\",\"ruluhar\":\"⥨\",\"rx\":\"℞\",\"Sacute\":\"Ś\",\"sacute\":\"ś\",\"sbquo\":\"‚\",\"scap\":\"⪸\",\"Scaron\":\"Š\",\"scaron\":\"š\",\"Sc\":\"⪼\",\"sc\":\"≻\",\"sccue\":\"≽\",\"sce\":\"⪰\",\"scE\":\"⪴\",\"Scedil\":\"Ş\",\"scedil\":\"ş\",\"Scirc\":\"Ŝ\",\"scirc\":\"ŝ\",\"scnap\":\"⪺\",\"scnE\":\"⪶\",\"scnsim\":\"⋩\",\"scpolint\":\"⨓\",\"scsim\":\"≿\",\"Scy\":\"С\",\"scy\":\"с\",\"sdotb\":\"⊡\",\"sdot\":\"⋅\",\"sdote\":\"⩦\",\"searhk\":\"⤥\",\"searr\":\"↘\",\"seArr\":\"⇘\",\"searrow\":\"↘\",\"sect\":\"§\",\"semi\":\";\",\"seswar\":\"⤩\",\"setminus\":\"∖\",\"setmn\":\"∖\",\"sext\":\"✶\",\"Sfr\":\"𝔖\",\"sfr\":\"𝔰\",\"sfrown\":\"⌢\",\"sharp\":\"♯\",\"SHCHcy\":\"Щ\",\"shchcy\":\"щ\",\"SHcy\":\"Ш\",\"shcy\":\"ш\",\"ShortDownArrow\":\"↓\",\"ShortLeftArrow\":\"←\",\"shortmid\":\"∣\",\"shortparallel\":\"∥\",\"ShortRightArrow\":\"→\",\"ShortUpArrow\":\"↑\",\"shy\":\"­\",\"Sigma\":\"Σ\",\"sigma\":\"σ\",\"sigmaf\":\"ς\",\"sigmav\":\"ς\",\"sim\":\"∼\",\"simdot\":\"⩪\",\"sime\":\"≃\",\"simeq\":\"≃\",\"simg\":\"⪞\",\"simgE\":\"⪠\",\"siml\":\"⪝\",\"simlE\":\"⪟\",\"simne\":\"≆\",\"simplus\":\"⨤\",\"simrarr\":\"⥲\",\"slarr\":\"←\",\"SmallCircle\":\"∘\",\"smallsetminus\":\"∖\",\"smashp\":\"⨳\",\"smeparsl\":\"⧤\",\"smid\":\"∣\",\"smile\":\"⌣\",\"smt\":\"⪪\",\"smte\":\"⪬\",\"smtes\":\"⪬︀\",\"SOFTcy\":\"Ь\",\"softcy\":\"ь\",\"solbar\":\"⌿\",\"solb\":\"⧄\",\"sol\":\"/\",\"Sopf\":\"𝕊\",\"sopf\":\"𝕤\",\"spades\":\"♠\",\"spadesuit\":\"♠\",\"spar\":\"∥\",\"sqcap\":\"⊓\",\"sqcaps\":\"⊓︀\",\"sqcup\":\"⊔\",\"sqcups\":\"⊔︀\",\"Sqrt\":\"√\",\"sqsub\":\"⊏\",\"sqsube\":\"⊑\",\"sqsubset\":\"⊏\",\"sqsubseteq\":\"⊑\",\"sqsup\":\"⊐\",\"sqsupe\":\"⊒\",\"sqsupset\":\"⊐\",\"sqsupseteq\":\"⊒\",\"square\":\"□\",\"Square\":\"□\",\"SquareIntersection\":\"⊓\",\"SquareSubset\":\"⊏\",\"SquareSubsetEqual\":\"⊑\",\"SquareSuperset\":\"⊐\",\"SquareSupersetEqual\":\"⊒\",\"SquareUnion\":\"⊔\",\"squarf\":\"▪\",\"squ\":\"□\",\"squf\":\"▪\",\"srarr\":\"→\",\"Sscr\":\"𝒮\",\"sscr\":\"𝓈\",\"ssetmn\":\"∖\",\"ssmile\":\"⌣\",\"sstarf\":\"⋆\",\"Star\":\"⋆\",\"star\":\"☆\",\"starf\":\"★\",\"straightepsilon\":\"ϵ\",\"straightphi\":\"ϕ\",\"strns\":\"¯\",\"sub\":\"⊂\",\"Sub\":\"⋐\",\"subdot\":\"⪽\",\"subE\":\"⫅\",\"sube\":\"⊆\",\"subedot\":\"⫃\",\"submult\":\"⫁\",\"subnE\":\"⫋\",\"subne\":\"⊊\",\"subplus\":\"⪿\",\"subrarr\":\"⥹\",\"subset\":\"⊂\",\"Subset\":\"⋐\",\"subseteq\":\"⊆\",\"subseteqq\":\"⫅\",\"SubsetEqual\":\"⊆\",\"subsetneq\":\"⊊\",\"subsetneqq\":\"⫋\",\"subsim\":\"⫇\",\"subsub\":\"⫕\",\"subsup\":\"⫓\",\"succapprox\":\"⪸\",\"succ\":\"≻\",\"succcurlyeq\":\"≽\",\"Succeeds\":\"≻\",\"SucceedsEqual\":\"⪰\",\"SucceedsSlantEqual\":\"≽\",\"SucceedsTilde\":\"≿\",\"succeq\":\"⪰\",\"succnapprox\":\"⪺\",\"succneqq\":\"⪶\",\"succnsim\":\"⋩\",\"succsim\":\"≿\",\"SuchThat\":\"∋\",\"sum\":\"∑\",\"Sum\":\"∑\",\"sung\":\"♪\",\"sup1\":\"¹\",\"sup2\":\"²\",\"sup3\":\"³\",\"sup\":\"⊃\",\"Sup\":\"⋑\",\"supdot\":\"⪾\",\"supdsub\":\"⫘\",\"supE\":\"⫆\",\"supe\":\"⊇\",\"supedot\":\"⫄\",\"Superset\":\"⊃\",\"SupersetEqual\":\"⊇\",\"suphsol\":\"⟉\",\"suphsub\":\"⫗\",\"suplarr\":\"⥻\",\"supmult\":\"⫂\",\"supnE\":\"⫌\",\"supne\":\"⊋\",\"supplus\":\"⫀\",\"supset\":\"⊃\",\"Supset\":\"⋑\",\"supseteq\":\"⊇\",\"supseteqq\":\"⫆\",\"supsetneq\":\"⊋\",\"supsetneqq\":\"⫌\",\"supsim\":\"⫈\",\"supsub\":\"⫔\",\"supsup\":\"⫖\",\"swarhk\":\"⤦\",\"swarr\":\"↙\",\"swArr\":\"⇙\",\"swarrow\":\"↙\",\"swnwar\":\"⤪\",\"szlig\":\"ß\",\"Tab\":\"\\t\",\"target\":\"⌖\",\"Tau\":\"Τ\",\"tau\":\"τ\",\"tbrk\":\"⎴\",\"Tcaron\":\"Ť\",\"tcaron\":\"ť\",\"Tcedil\":\"Ţ\",\"tcedil\":\"ţ\",\"Tcy\":\"Т\",\"tcy\":\"т\",\"tdot\":\"⃛\",\"telrec\":\"⌕\",\"Tfr\":\"𝔗\",\"tfr\":\"𝔱\",\"there4\":\"∴\",\"therefore\":\"∴\",\"Therefore\":\"∴\",\"Theta\":\"Θ\",\"theta\":\"θ\",\"thetasym\":\"ϑ\",\"thetav\":\"ϑ\",\"thickapprox\":\"≈\",\"thicksim\":\"∼\",\"ThickSpace\":\"  \",\"ThinSpace\":\" \",\"thinsp\":\" \",\"thkap\":\"≈\",\"thksim\":\"∼\",\"THORN\":\"Þ\",\"thorn\":\"þ\",\"tilde\":\"˜\",\"Tilde\":\"∼\",\"TildeEqual\":\"≃\",\"TildeFullEqual\":\"≅\",\"TildeTilde\":\"≈\",\"timesbar\":\"⨱\",\"timesb\":\"⊠\",\"times\":\"×\",\"timesd\":\"⨰\",\"tint\":\"∭\",\"toea\":\"⤨\",\"topbot\":\"⌶\",\"topcir\":\"⫱\",\"top\":\"⊤\",\"Topf\":\"𝕋\",\"topf\":\"𝕥\",\"topfork\":\"⫚\",\"tosa\":\"⤩\",\"tprime\":\"‴\",\"trade\":\"™\",\"TRADE\":\"™\",\"triangle\":\"▵\",\"triangledown\":\"▿\",\"triangleleft\":\"◃\",\"trianglelefteq\":\"⊴\",\"triangleq\":\"≜\",\"triangleright\":\"▹\",\"trianglerighteq\":\"⊵\",\"tridot\":\"◬\",\"trie\":\"≜\",\"triminus\":\"⨺\",\"TripleDot\":\"⃛\",\"triplus\":\"⨹\",\"trisb\":\"⧍\",\"tritime\":\"⨻\",\"trpezium\":\"⏢\",\"Tscr\":\"𝒯\",\"tscr\":\"𝓉\",\"TScy\":\"Ц\",\"tscy\":\"ц\",\"TSHcy\":\"Ћ\",\"tshcy\":\"ћ\",\"Tstrok\":\"Ŧ\",\"tstrok\":\"ŧ\",\"twixt\":\"≬\",\"twoheadleftarrow\":\"↞\",\"twoheadrightarrow\":\"↠\",\"Uacute\":\"Ú\",\"uacute\":\"ú\",\"uarr\":\"↑\",\"Uarr\":\"↟\",\"uArr\":\"⇑\",\"Uarrocir\":\"⥉\",\"Ubrcy\":\"Ў\",\"ubrcy\":\"ў\",\"Ubreve\":\"Ŭ\",\"ubreve\":\"ŭ\",\"Ucirc\":\"Û\",\"ucirc\":\"û\",\"Ucy\":\"У\",\"ucy\":\"у\",\"udarr\":\"⇅\",\"Udblac\":\"Ű\",\"udblac\":\"ű\",\"udhar\":\"⥮\",\"ufisht\":\"⥾\",\"Ufr\":\"𝔘\",\"ufr\":\"𝔲\",\"Ugrave\":\"Ù\",\"ugrave\":\"ù\",\"uHar\":\"⥣\",\"uharl\":\"↿\",\"uharr\":\"↾\",\"uhblk\":\"▀\",\"ulcorn\":\"⌜\",\"ulcorner\":\"⌜\",\"ulcrop\":\"⌏\",\"ultri\":\"◸\",\"Umacr\":\"Ū\",\"umacr\":\"ū\",\"uml\":\"¨\",\"UnderBar\":\"_\",\"UnderBrace\":\"⏟\",\"UnderBracket\":\"⎵\",\"UnderParenthesis\":\"⏝\",\"Union\":\"⋃\",\"UnionPlus\":\"⊎\",\"Uogon\":\"Ų\",\"uogon\":\"ų\",\"Uopf\":\"𝕌\",\"uopf\":\"𝕦\",\"UpArrowBar\":\"⤒\",\"uparrow\":\"↑\",\"UpArrow\":\"↑\",\"Uparrow\":\"⇑\",\"UpArrowDownArrow\":\"⇅\",\"updownarrow\":\"↕\",\"UpDownArrow\":\"↕\",\"Updownarrow\":\"⇕\",\"UpEquilibrium\":\"⥮\",\"upharpoonleft\":\"↿\",\"upharpoonright\":\"↾\",\"uplus\":\"⊎\",\"UpperLeftArrow\":\"↖\",\"UpperRightArrow\":\"↗\",\"upsi\":\"υ\",\"Upsi\":\"ϒ\",\"upsih\":\"ϒ\",\"Upsilon\":\"Υ\",\"upsilon\":\"υ\",\"UpTeeArrow\":\"↥\",\"UpTee\":\"⊥\",\"upuparrows\":\"⇈\",\"urcorn\":\"⌝\",\"urcorner\":\"⌝\",\"urcrop\":\"⌎\",\"Uring\":\"Ů\",\"uring\":\"ů\",\"urtri\":\"◹\",\"Uscr\":\"𝒰\",\"uscr\":\"𝓊\",\"utdot\":\"⋰\",\"Utilde\":\"Ũ\",\"utilde\":\"ũ\",\"utri\":\"▵\",\"utrif\":\"▴\",\"uuarr\":\"⇈\",\"Uuml\":\"Ü\",\"uuml\":\"ü\",\"uwangle\":\"⦧\",\"vangrt\":\"⦜\",\"varepsilon\":\"ϵ\",\"varkappa\":\"ϰ\",\"varnothing\":\"∅\",\"varphi\":\"ϕ\",\"varpi\":\"ϖ\",\"varpropto\":\"∝\",\"varr\":\"↕\",\"vArr\":\"⇕\",\"varrho\":\"ϱ\",\"varsigma\":\"ς\",\"varsubsetneq\":\"⊊︀\",\"varsubsetneqq\":\"⫋︀\",\"varsupsetneq\":\"⊋︀\",\"varsupsetneqq\":\"⫌︀\",\"vartheta\":\"ϑ\",\"vartriangleleft\":\"⊲\",\"vartriangleright\":\"⊳\",\"vBar\":\"⫨\",\"Vbar\":\"⫫\",\"vBarv\":\"⫩\",\"Vcy\":\"В\",\"vcy\":\"в\",\"vdash\":\"⊢\",\"vDash\":\"⊨\",\"Vdash\":\"⊩\",\"VDash\":\"⊫\",\"Vdashl\":\"⫦\",\"veebar\":\"⊻\",\"vee\":\"∨\",\"Vee\":\"⋁\",\"veeeq\":\"≚\",\"vellip\":\"⋮\",\"verbar\":\"|\",\"Verbar\":\"‖\",\"vert\":\"|\",\"Vert\":\"‖\",\"VerticalBar\":\"∣\",\"VerticalLine\":\"|\",\"VerticalSeparator\":\"❘\",\"VerticalTilde\":\"≀\",\"VeryThinSpace\":\" \",\"Vfr\":\"𝔙\",\"vfr\":\"𝔳\",\"vltri\":\"⊲\",\"vnsub\":\"⊂⃒\",\"vnsup\":\"⊃⃒\",\"Vopf\":\"𝕍\",\"vopf\":\"𝕧\",\"vprop\":\"∝\",\"vrtri\":\"⊳\",\"Vscr\":\"𝒱\",\"vscr\":\"𝓋\",\"vsubnE\":\"⫋︀\",\"vsubne\":\"⊊︀\",\"vsupnE\":\"⫌︀\",\"vsupne\":\"⊋︀\",\"Vvdash\":\"⊪\",\"vzigzag\":\"⦚\",\"Wcirc\":\"Ŵ\",\"wcirc\":\"ŵ\",\"wedbar\":\"⩟\",\"wedge\":\"∧\",\"Wedge\":\"⋀\",\"wedgeq\":\"≙\",\"weierp\":\"℘\",\"Wfr\":\"𝔚\",\"wfr\":\"𝔴\",\"Wopf\":\"𝕎\",\"wopf\":\"𝕨\",\"wp\":\"℘\",\"wr\":\"≀\",\"wreath\":\"≀\",\"Wscr\":\"𝒲\",\"wscr\":\"𝓌\",\"xcap\":\"⋂\",\"xcirc\":\"◯\",\"xcup\":\"⋃\",\"xdtri\":\"▽\",\"Xfr\":\"𝔛\",\"xfr\":\"𝔵\",\"xharr\":\"⟷\",\"xhArr\":\"⟺\",\"Xi\":\"Ξ\",\"xi\":\"ξ\",\"xlarr\":\"⟵\",\"xlArr\":\"⟸\",\"xmap\":\"⟼\",\"xnis\":\"⋻\",\"xodot\":\"⨀\",\"Xopf\":\"𝕏\",\"xopf\":\"𝕩\",\"xoplus\":\"⨁\",\"xotime\":\"⨂\",\"xrarr\":\"⟶\",\"xrArr\":\"⟹\",\"Xscr\":\"𝒳\",\"xscr\":\"𝓍\",\"xsqcup\":\"⨆\",\"xuplus\":\"⨄\",\"xutri\":\"△\",\"xvee\":\"⋁\",\"xwedge\":\"⋀\",\"Yacute\":\"Ý\",\"yacute\":\"ý\",\"YAcy\":\"Я\",\"yacy\":\"я\",\"Ycirc\":\"Ŷ\",\"ycirc\":\"ŷ\",\"Ycy\":\"Ы\",\"ycy\":\"ы\",\"yen\":\"¥\",\"Yfr\":\"𝔜\",\"yfr\":\"𝔶\",\"YIcy\":\"Ї\",\"yicy\":\"ї\",\"Yopf\":\"𝕐\",\"yopf\":\"𝕪\",\"Yscr\":\"𝒴\",\"yscr\":\"𝓎\",\"YUcy\":\"Ю\",\"yucy\":\"ю\",\"yuml\":\"ÿ\",\"Yuml\":\"Ÿ\",\"Zacute\":\"Ź\",\"zacute\":\"ź\",\"Zcaron\":\"Ž\",\"zcaron\":\"ž\",\"Zcy\":\"З\",\"zcy\":\"з\",\"Zdot\":\"Ż\",\"zdot\":\"ż\",\"zeetrf\":\"ℨ\",\"ZeroWidthSpace\":\"​\",\"Zeta\":\"Ζ\",\"zeta\":\"ζ\",\"zfr\":\"𝔷\",\"Zfr\":\"ℨ\",\"ZHcy\":\"Ж\",\"zhcy\":\"ж\",\"zigrarr\":\"⇝\",\"zopf\":\"𝕫\",\"Zopf\":\"ℤ\",\"Zscr\":\"𝒵\",\"zscr\":\"𝓏\",\"zwj\":\"‍\",\"zwnj\":\"‌\"}");

/***/ }),
/* 44 */
/*!************************************************!*\
  !*** ./node_modules/entities/maps/legacy.json ***!
  \************************************************/
/*! exports provided: Aacute, aacute, Acirc, acirc, acute, AElig, aelig, Agrave, agrave, amp, AMP, Aring, aring, Atilde, atilde, Auml, auml, brvbar, Ccedil, ccedil, cedil, cent, copy, COPY, curren, deg, divide, Eacute, eacute, Ecirc, ecirc, Egrave, egrave, ETH, eth, Euml, euml, frac12, frac14, frac34, gt, GT, Iacute, iacute, Icirc, icirc, iexcl, Igrave, igrave, iquest, Iuml, iuml, laquo, lt, LT, macr, micro, middot, nbsp, not, Ntilde, ntilde, Oacute, oacute, Ocirc, ocirc, Ograve, ograve, ordf, ordm, Oslash, oslash, Otilde, otilde, Ouml, ouml, para, plusmn, pound, quot, QUOT, raquo, reg, REG, sect, shy, sup1, sup2, sup3, szlig, THORN, thorn, times, Uacute, uacute, Ucirc, ucirc, Ugrave, ugrave, uml, Uuml, uuml, Yacute, yacute, yen, yuml, default */
/***/ (function(module) {

module.exports = JSON.parse("{\"Aacute\":\"Á\",\"aacute\":\"á\",\"Acirc\":\"Â\",\"acirc\":\"â\",\"acute\":\"´\",\"AElig\":\"Æ\",\"aelig\":\"æ\",\"Agrave\":\"À\",\"agrave\":\"à\",\"amp\":\"&\",\"AMP\":\"&\",\"Aring\":\"Å\",\"aring\":\"å\",\"Atilde\":\"Ã\",\"atilde\":\"ã\",\"Auml\":\"Ä\",\"auml\":\"ä\",\"brvbar\":\"¦\",\"Ccedil\":\"Ç\",\"ccedil\":\"ç\",\"cedil\":\"¸\",\"cent\":\"¢\",\"copy\":\"©\",\"COPY\":\"©\",\"curren\":\"¤\",\"deg\":\"°\",\"divide\":\"÷\",\"Eacute\":\"É\",\"eacute\":\"é\",\"Ecirc\":\"Ê\",\"ecirc\":\"ê\",\"Egrave\":\"È\",\"egrave\":\"è\",\"ETH\":\"Ð\",\"eth\":\"ð\",\"Euml\":\"Ë\",\"euml\":\"ë\",\"frac12\":\"½\",\"frac14\":\"¼\",\"frac34\":\"¾\",\"gt\":\">\",\"GT\":\">\",\"Iacute\":\"Í\",\"iacute\":\"í\",\"Icirc\":\"Î\",\"icirc\":\"î\",\"iexcl\":\"¡\",\"Igrave\":\"Ì\",\"igrave\":\"ì\",\"iquest\":\"¿\",\"Iuml\":\"Ï\",\"iuml\":\"ï\",\"laquo\":\"«\",\"lt\":\"<\",\"LT\":\"<\",\"macr\":\"¯\",\"micro\":\"µ\",\"middot\":\"·\",\"nbsp\":\" \",\"not\":\"¬\",\"Ntilde\":\"Ñ\",\"ntilde\":\"ñ\",\"Oacute\":\"Ó\",\"oacute\":\"ó\",\"Ocirc\":\"Ô\",\"ocirc\":\"ô\",\"Ograve\":\"Ò\",\"ograve\":\"ò\",\"ordf\":\"ª\",\"ordm\":\"º\",\"Oslash\":\"Ø\",\"oslash\":\"ø\",\"Otilde\":\"Õ\",\"otilde\":\"õ\",\"Ouml\":\"Ö\",\"ouml\":\"ö\",\"para\":\"¶\",\"plusmn\":\"±\",\"pound\":\"£\",\"quot\":\"\\\"\",\"QUOT\":\"\\\"\",\"raquo\":\"»\",\"reg\":\"®\",\"REG\":\"®\",\"sect\":\"§\",\"shy\":\"­\",\"sup1\":\"¹\",\"sup2\":\"²\",\"sup3\":\"³\",\"szlig\":\"ß\",\"THORN\":\"Þ\",\"thorn\":\"þ\",\"times\":\"×\",\"Uacute\":\"Ú\",\"uacute\":\"ú\",\"Ucirc\":\"Û\",\"ucirc\":\"û\",\"Ugrave\":\"Ù\",\"ugrave\":\"ù\",\"uml\":\"¨\",\"Uuml\":\"Ü\",\"uuml\":\"ü\",\"Yacute\":\"Ý\",\"yacute\":\"ý\",\"yen\":\"¥\",\"yuml\":\"ÿ\"}");

/***/ }),
/* 45 */
/*!*********************************************!*\
  !*** ./node_modules/entities/maps/xml.json ***!
  \*********************************************/
/*! exports provided: amp, apos, gt, lt, quot, default */
/***/ (function(module) {

module.exports = JSON.parse("{\"amp\":\"&\",\"apos\":\"'\",\"gt\":\">\",\"lt\":\"<\",\"quot\":\"\\\"\"}");

/***/ }),
/* 46 */
/*!***************************************************!*\
  !*** ./node_modules/inherits/inherits_browser.js ***!
  \***************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

if (typeof Object.create === 'function') {
  // implementation from standard node.js 'util' module
  module.exports = function inherits(ctor, superCtor) {
    if (superCtor) {
      ctor.super_ = superCtor
      ctor.prototype = Object.create(superCtor.prototype, {
        constructor: {
          value: ctor,
          enumerable: false,
          writable: true,
          configurable: true
        }
      })
    }
  };
} else {
  // old school shim for old browsers
  module.exports = function inherits(ctor, superCtor) {
    if (superCtor) {
      ctor.super_ = superCtor
      var TempCtor = function () {}
      TempCtor.prototype = superCtor.prototype
      ctor.prototype = new TempCtor()
      ctor.prototype.constructor = ctor
    }
  }
}


/***/ }),
/* 47 */
/*!***************************************!*\
  !*** ./node_modules/events/events.js ***!
  \***************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
// Copyright Joyent, Inc. and other Node contributors.
//
// Permission is hereby granted, free of charge, to any person obtaining a
// copy of this software and associated documentation files (the
// "Software"), to deal in the Software without restriction, including
// without limitation the rights to use, copy, modify, merge, publish,
// distribute, sublicense, and/or sell copies of the Software, and to permit
// persons to whom the Software is furnished to do so, subject to the
// following conditions:
//
// The above copyright notice and this permission notice shall be included
// in all copies or substantial portions of the Software.
//
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS
// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN
// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,
// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR
// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE
// USE OR OTHER DEALINGS IN THE SOFTWARE.



var R = typeof Reflect === 'object' ? Reflect : null
var ReflectApply = R && typeof R.apply === 'function'
  ? R.apply
  : function ReflectApply(target, receiver, args) {
    return Function.prototype.apply.call(target, receiver, args);
  }

var ReflectOwnKeys
if (R && typeof R.ownKeys === 'function') {
  ReflectOwnKeys = R.ownKeys
} else if (Object.getOwnPropertySymbols) {
  ReflectOwnKeys = function ReflectOwnKeys(target) {
    return Object.getOwnPropertyNames(target)
      .concat(Object.getOwnPropertySymbols(target));
  };
} else {
  ReflectOwnKeys = function ReflectOwnKeys(target) {
    return Object.getOwnPropertyNames(target);
  };
}

function ProcessEmitWarning(warning) {
  if (console && console.warn) console.warn(warning);
}

var NumberIsNaN = Number.isNaN || function NumberIsNaN(value) {
  return value !== value;
}

function EventEmitter() {
  EventEmitter.init.call(this);
}
module.exports = EventEmitter;

// Backwards-compat with node 0.10.x
EventEmitter.EventEmitter = EventEmitter;

EventEmitter.prototype._events = undefined;
EventEmitter.prototype._eventsCount = 0;
EventEmitter.prototype._maxListeners = undefined;

// By default EventEmitters will print a warning if more than 10 listeners are
// added to it. This is a useful default which helps finding memory leaks.
var defaultMaxListeners = 10;

function checkListener(listener) {
  if (typeof listener !== 'function') {
    throw new TypeError('The "listener" argument must be of type Function. Received type ' + typeof listener);
  }
}

Object.defineProperty(EventEmitter, 'defaultMaxListeners', {
  enumerable: true,
  get: function() {
    return defaultMaxListeners;
  },
  set: function(arg) {
    if (typeof arg !== 'number' || arg < 0 || NumberIsNaN(arg)) {
      throw new RangeError('The value of "defaultMaxListeners" is out of range. It must be a non-negative number. Received ' + arg + '.');
    }
    defaultMaxListeners = arg;
  }
});

EventEmitter.init = function() {

  if (this._events === undefined ||
      this._events === Object.getPrototypeOf(this)._events) {
    this._events = Object.create(null);
    this._eventsCount = 0;
  }

  this._maxListeners = this._maxListeners || undefined;
};

// Obviously not all Emitters should be limited to 10. This function allows
// that to be increased. Set to zero for unlimited.
EventEmitter.prototype.setMaxListeners = function setMaxListeners(n) {
  if (typeof n !== 'number' || n < 0 || NumberIsNaN(n)) {
    throw new RangeError('The value of "n" is out of range. It must be a non-negative number. Received ' + n + '.');
  }
  this._maxListeners = n;
  return this;
};

function _getMaxListeners(that) {
  if (that._maxListeners === undefined)
    return EventEmitter.defaultMaxListeners;
  return that._maxListeners;
}

EventEmitter.prototype.getMaxListeners = function getMaxListeners() {
  return _getMaxListeners(this);
};

EventEmitter.prototype.emit = function emit(type) {
  var args = [];
  for (var i = 1; i < arguments.length; i++) args.push(arguments[i]);
  var doError = (type === 'error');

  var events = this._events;
  if (events !== undefined)
    doError = (doError && events.error === undefined);
  else if (!doError)
    return false;

  // If there is no 'error' event listener then throw.
  if (doError) {
    var er;
    if (args.length > 0)
      er = args[0];
    if (er instanceof Error) {
      // Note: The comments on the `throw` lines are intentional, they show
      // up in Node's output if this results in an unhandled exception.
      throw er; // Unhandled 'error' event
    }
    // At least give some kind of context to the user
    var err = new Error('Unhandled error.' + (er ? ' (' + er.message + ')' : ''));
    err.context = er;
    throw err; // Unhandled 'error' event
  }

  var handler = events[type];

  if (handler === undefined)
    return false;

  if (typeof handler === 'function') {
    ReflectApply(handler, this, args);
  } else {
    var len = handler.length;
    var listeners = arrayClone(handler, len);
    for (var i = 0; i < len; ++i)
      ReflectApply(listeners[i], this, args);
  }

  return true;
};

function _addListener(target, type, listener, prepend) {
  var m;
  var events;
  var existing;

  checkListener(listener);

  events = target._events;
  if (events === undefined) {
    events = target._events = Object.create(null);
    target._eventsCount = 0;
  } else {
    // To avoid recursion in the case that type === "newListener"! Before
    // adding it to the listeners, first emit "newListener".
    if (events.newListener !== undefined) {
      target.emit('newListener', type,
                  listener.listener ? listener.listener : listener);

      // Re-assign `events` because a newListener handler could have caused the
      // this._events to be assigned to a new object
      events = target._events;
    }
    existing = events[type];
  }

  if (existing === undefined) {
    // Optimize the case of one listener. Don't need the extra array object.
    existing = events[type] = listener;
    ++target._eventsCount;
  } else {
    if (typeof existing === 'function') {
      // Adding the second element, need to change to array.
      existing = events[type] =
        prepend ? [listener, existing] : [existing, listener];
      // If we've already got an array, just append.
    } else if (prepend) {
      existing.unshift(listener);
    } else {
      existing.push(listener);
    }

    // Check for listener leak
    m = _getMaxListeners(target);
    if (m > 0 && existing.length > m && !existing.warned) {
      existing.warned = true;
      // No error code for this since it is a Warning
      // eslint-disable-next-line no-restricted-syntax
      var w = new Error('Possible EventEmitter memory leak detected. ' +
                          existing.length + ' ' + String(type) + ' listeners ' +
                          'added. Use emitter.setMaxListeners() to ' +
                          'increase limit');
      w.name = 'MaxListenersExceededWarning';
      w.emitter = target;
      w.type = type;
      w.count = existing.length;
      ProcessEmitWarning(w);
    }
  }

  return target;
}

EventEmitter.prototype.addListener = function addListener(type, listener) {
  return _addListener(this, type, listener, false);
};

EventEmitter.prototype.on = EventEmitter.prototype.addListener;

EventEmitter.prototype.prependListener =
    function prependListener(type, listener) {
      return _addListener(this, type, listener, true);
    };

function onceWrapper() {
  if (!this.fired) {
    this.target.removeListener(this.type, this.wrapFn);
    this.fired = true;
    if (arguments.length === 0)
      return this.listener.call(this.target);
    return this.listener.apply(this.target, arguments);
  }
}

function _onceWrap(target, type, listener) {
  var state = { fired: false, wrapFn: undefined, target: target, type: type, listener: listener };
  var wrapped = onceWrapper.bind(state);
  wrapped.listener = listener;
  state.wrapFn = wrapped;
  return wrapped;
}

EventEmitter.prototype.once = function once(type, listener) {
  checkListener(listener);
  this.on(type, _onceWrap(this, type, listener));
  return this;
};

EventEmitter.prototype.prependOnceListener =
    function prependOnceListener(type, listener) {
      checkListener(listener);
      this.prependListener(type, _onceWrap(this, type, listener));
      return this;
    };

// Emits a 'removeListener' event if and only if the listener was removed.
EventEmitter.prototype.removeListener =
    function removeListener(type, listener) {
      var list, events, position, i, originalListener;

      checkListener(listener);

      events = this._events;
      if (events === undefined)
        return this;

      list = events[type];
      if (list === undefined)
        return this;

      if (list === listener || list.listener === listener) {
        if (--this._eventsCount === 0)
          this._events = Object.create(null);
        else {
          delete events[type];
          if (events.removeListener)
            this.emit('removeListener', type, list.listener || listener);
        }
      } else if (typeof list !== 'function') {
        position = -1;

        for (i = list.length - 1; i >= 0; i--) {
          if (list[i] === listener || list[i].listener === listener) {
            originalListener = list[i].listener;
            position = i;
            break;
          }
        }

        if (position < 0)
          return this;

        if (position === 0)
          list.shift();
        else {
          spliceOne(list, position);
        }

        if (list.length === 1)
          events[type] = list[0];

        if (events.removeListener !== undefined)
          this.emit('removeListener', type, originalListener || listener);
      }

      return this;
    };

EventEmitter.prototype.off = EventEmitter.prototype.removeListener;

EventEmitter.prototype.removeAllListeners =
    function removeAllListeners(type) {
      var listeners, events, i;

      events = this._events;
      if (events === undefined)
        return this;

      // not listening for removeListener, no need to emit
      if (events.removeListener === undefined) {
        if (arguments.length === 0) {
          this._events = Object.create(null);
          this._eventsCount = 0;
        } else if (events[type] !== undefined) {
          if (--this._eventsCount === 0)
            this._events = Object.create(null);
          else
            delete events[type];
        }
        return this;
      }

      // emit removeListener for all listeners on all events
      if (arguments.length === 0) {
        var keys = Object.keys(events);
        var key;
        for (i = 0; i < keys.length; ++i) {
          key = keys[i];
          if (key === 'removeListener') continue;
          this.removeAllListeners(key);
        }
        this.removeAllListeners('removeListener');
        this._events = Object.create(null);
        this._eventsCount = 0;
        return this;
      }

      listeners = events[type];

      if (typeof listeners === 'function') {
        this.removeListener(type, listeners);
      } else if (listeners !== undefined) {
        // LIFO order
        for (i = listeners.length - 1; i >= 0; i--) {
          this.removeListener(type, listeners[i]);
        }
      }

      return this;
    };

function _listeners(target, type, unwrap) {
  var events = target._events;

  if (events === undefined)
    return [];

  var evlistener = events[type];
  if (evlistener === undefined)
    return [];

  if (typeof evlistener === 'function')
    return unwrap ? [evlistener.listener || evlistener] : [evlistener];

  return unwrap ?
    unwrapListeners(evlistener) : arrayClone(evlistener, evlistener.length);
}

EventEmitter.prototype.listeners = function listeners(type) {
  return _listeners(this, type, true);
};

EventEmitter.prototype.rawListeners = function rawListeners(type) {
  return _listeners(this, type, false);
};

EventEmitter.listenerCount = function(emitter, type) {
  if (typeof emitter.listenerCount === 'function') {
    return emitter.listenerCount(type);
  } else {
    return listenerCount.call(emitter, type);
  }
};

EventEmitter.prototype.listenerCount = listenerCount;
function listenerCount(type) {
  var events = this._events;

  if (events !== undefined) {
    var evlistener = events[type];

    if (typeof evlistener === 'function') {
      return 1;
    } else if (evlistener !== undefined) {
      return evlistener.length;
    }
  }

  return 0;
}

EventEmitter.prototype.eventNames = function eventNames() {
  return this._eventsCount > 0 ? ReflectOwnKeys(this._events) : [];
};

function arrayClone(arr, n) {
  var copy = new Array(n);
  for (var i = 0; i < n; ++i)
    copy[i] = arr[i];
  return copy;
}

function spliceOne(list, index) {
  for (; index + 1 < list.length; index++)
    list[index] = list[index + 1];
  list.pop();
}

function unwrapListeners(arr) {
  var ret = new Array(arr.length);
  for (var i = 0; i < ret.length; ++i) {
    ret[i] = arr[i].listener || arr[i];
  }
  return ret;
}


/***/ }),
/* 48 */
/*!******************************************!*\
  !*** ./node_modules/domhandler/index.js ***!
  \******************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var ElementType = __webpack_require__(/*! domelementtype */ 49);

var re_whitespace = /\s+/g;
var NodePrototype = __webpack_require__(/*! ./lib/node */ 50);
var ElementPrototype = __webpack_require__(/*! ./lib/element */ 51);

function DomHandler(callback, options, elementCB){
	if(typeof callback === "object"){
		elementCB = options;
		options = callback;
		callback = null;
	} else if(typeof options === "function"){
		elementCB = options;
		options = defaultOpts;
	}
	this._callback = callback;
	this._options = options || defaultOpts;
	this._elementCB = elementCB;
	this.dom = [];
	this._done = false;
	this._tagStack = [];
	this._parser = this._parser || null;
}

//default options
var defaultOpts = {
	normalizeWhitespace: false, //Replace all whitespace with single spaces
	withStartIndices: false, //Add startIndex properties to nodes
	withEndIndices: false, //Add endIndex properties to nodes
};

DomHandler.prototype.onparserinit = function(parser){
	this._parser = parser;
};

//Resets the handler back to starting state
DomHandler.prototype.onreset = function(){
	DomHandler.call(this, this._callback, this._options, this._elementCB);
};

//Signals the handler that parsing is done
DomHandler.prototype.onend = function(){
	if(this._done) return;
	this._done = true;
	this._parser = null;
	this._handleCallback(null);
};

DomHandler.prototype._handleCallback =
DomHandler.prototype.onerror = function(error){
	if(typeof this._callback === "function"){
		this._callback(error, this.dom);
	} else {
		if(error) throw error;
	}
};

DomHandler.prototype.onclosetag = function(){
	//if(this._tagStack.pop().name !== name) this._handleCallback(Error("Tagname didn't match!"));
	
	var elem = this._tagStack.pop();

	if(this._options.withEndIndices && elem){
		elem.endIndex = this._parser.endIndex;
	}

	if(this._elementCB) this._elementCB(elem);
};

DomHandler.prototype._createDomElement = function(properties){
	if (!this._options.withDomLvl1) return properties;

	var element;
	if (properties.type === "tag") {
		element = Object.create(ElementPrototype);
	} else {
		element = Object.create(NodePrototype);
	}

	for (var key in properties) {
		if (properties.hasOwnProperty(key)) {
			element[key] = properties[key];
		}
	}

	return element;
};

DomHandler.prototype._addDomElement = function(element){
	var parent = this._tagStack[this._tagStack.length - 1];
	var siblings = parent ? parent.children : this.dom;
	var previousSibling = siblings[siblings.length - 1];

	element.next = null;

	if(this._options.withStartIndices){
		element.startIndex = this._parser.startIndex;
	}
	if(this._options.withEndIndices){
		element.endIndex = this._parser.endIndex;
	}

	if(previousSibling){
		element.prev = previousSibling;
		previousSibling.next = element;
	} else {
		element.prev = null;
	}

	siblings.push(element);
	element.parent = parent || null;
};

DomHandler.prototype.onopentag = function(name, attribs){
	var properties = {
		type: name === "script" ? ElementType.Script : name === "style" ? ElementType.Style : ElementType.Tag,
		name: name,
		attribs: attribs,
		children: []
	};

	var element = this._createDomElement(properties);

	this._addDomElement(element);

	this._tagStack.push(element);
};

DomHandler.prototype.ontext = function(data){
	//the ignoreWhitespace is officially dropped, but for now,
	//it's an alias for normalizeWhitespace
	var normalize = this._options.normalizeWhitespace || this._options.ignoreWhitespace;

	var lastTag;

	if(!this._tagStack.length && this.dom.length && (lastTag = this.dom[this.dom.length-1]).type === ElementType.Text){
		if(normalize){
			lastTag.data = (lastTag.data + data).replace(re_whitespace, " ");
		} else {
			lastTag.data += data;
		}
	} else {
		if(
			this._tagStack.length &&
			(lastTag = this._tagStack[this._tagStack.length - 1]) &&
			(lastTag = lastTag.children[lastTag.children.length - 1]) &&
			lastTag.type === ElementType.Text
		){
			if(normalize){
				lastTag.data = (lastTag.data + data).replace(re_whitespace, " ");
			} else {
				lastTag.data += data;
			}
		} else {
			if(normalize){
				data = data.replace(re_whitespace, " ");
			}

			var element = this._createDomElement({
				data: data,
				type: ElementType.Text
			});

			this._addDomElement(element);
		}
	}
};

DomHandler.prototype.oncomment = function(data){
	var lastTag = this._tagStack[this._tagStack.length - 1];

	if(lastTag && lastTag.type === ElementType.Comment){
		lastTag.data += data;
		return;
	}

	var properties = {
		data: data,
		type: ElementType.Comment
	};

	var element = this._createDomElement(properties);

	this._addDomElement(element);
	this._tagStack.push(element);
};

DomHandler.prototype.oncdatastart = function(){
	var properties = {
		children: [{
			data: "",
			type: ElementType.Text
		}],
		type: ElementType.CDATA
	};

	var element = this._createDomElement(properties);

	this._addDomElement(element);
	this._tagStack.push(element);
};

DomHandler.prototype.oncommentend = DomHandler.prototype.oncdataend = function(){
	this._tagStack.pop();
};

DomHandler.prototype.onprocessinginstruction = function(name, data){
	var element = this._createDomElement({
		name: name,
		data: data,
		type: ElementType.Directive
	});

	this._addDomElement(element);
};

module.exports = DomHandler;


/***/ }),
/* 49 */
/*!**********************************************!*\
  !*** ./node_modules/domelementtype/index.js ***!
  \**********************************************/
/*! no static exports found */
/***/ (function(module, exports) {

//Types of elements found in the DOM
module.exports = {
	Text: "text", //Text
	Directive: "directive", //<? ... ?>
	Comment: "comment", //<!-- ... -->
	Script: "script", //<script> tags
	Style: "style", //<style> tags
	Tag: "tag", //Any tag
	CDATA: "cdata", //<![CDATA[ ... ]]>
	Doctype: "doctype",

	isTag: function(elem){
		return elem.type === "tag" || elem.type === "script" || elem.type === "style";
	}
};


/***/ }),
/* 50 */
/*!*********************************************!*\
  !*** ./node_modules/domhandler/lib/node.js ***!
  \*********************************************/
/*! no static exports found */
/***/ (function(module, exports) {

// This object will be used as the prototype for Nodes when creating a
// DOM-Level-1-compliant structure.
var NodePrototype = module.exports = {
	get firstChild() {
		var children = this.children;
		return children && children[0] || null;
	},
	get lastChild() {
		var children = this.children;
		return children && children[children.length - 1] || null;
	},
	get nodeType() {
		return nodeTypes[this.type] || nodeTypes.element;
	}
};

var domLvl1 = {
	tagName: "name",
	childNodes: "children",
	parentNode: "parent",
	previousSibling: "prev",
	nextSibling: "next",
	nodeValue: "data"
};

var nodeTypes = {
	element: 1,
	text: 3,
	cdata: 4,
	comment: 8
};

Object.keys(domLvl1).forEach(function(key) {
	var shorthand = domLvl1[key];
	Object.defineProperty(NodePrototype, key, {
		get: function() {
			return this[shorthand] || null;
		},
		set: function(val) {
			this[shorthand] = val;
			return val;
		}
	});
});


/***/ }),
/* 51 */
/*!************************************************!*\
  !*** ./node_modules/domhandler/lib/element.js ***!
  \************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

// DOM-Level-1-compliant structure
var NodePrototype = __webpack_require__(/*! ./node */ 50);
var ElementPrototype = module.exports = Object.create(NodePrototype);

var domLvl1 = {
	tagName: "name"
};

Object.keys(domLvl1).forEach(function(key) {
	var shorthand = domLvl1[key];
	Object.defineProperty(ElementPrototype, key, {
		get: function() {
			return this[shorthand] || null;
		},
		set: function(val) {
			this[shorthand] = val;
			return val;
		}
	});
});


/***/ }),
/* 52 */
/*!*****************************************************!*\
  !*** ./node_modules/htmlparser2/lib/FeedHandler.js ***!
  \*****************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var DomHandler = __webpack_require__(/*! domhandler */ 48);
var DomUtils = __webpack_require__(/*! domutils */ 53);

//TODO: make this a streamable handler
function FeedHandler(callback, options) {
    this.init(callback, options);
}

__webpack_require__(/*! inherits */ 46)(FeedHandler, DomHandler);

FeedHandler.prototype.init = DomHandler;

function getElements(what, where) {
    return DomUtils.getElementsByTagName(what, where, true);
}
function getOneElement(what, where) {
    return DomUtils.getElementsByTagName(what, where, true, 1)[0];
}
function fetch(what, where, recurse) {
    return DomUtils.getText(
        DomUtils.getElementsByTagName(what, where, recurse, 1)
    ).trim();
}

function addConditionally(obj, prop, what, where, recurse) {
    var tmp = fetch(what, where, recurse);
    if (tmp) obj[prop] = tmp;
}

var isValidFeed = function(value) {
    return value === "rss" || value === "feed" || value === "rdf:RDF";
};

FeedHandler.prototype.onend = function() {
    var feed = {},
        feedRoot = getOneElement(isValidFeed, this.dom),
        tmp,
        childs;

    if (feedRoot) {
        if (feedRoot.name === "feed") {
            childs = feedRoot.children;

            feed.type = "atom";
            addConditionally(feed, "id", "id", childs);
            addConditionally(feed, "title", "title", childs);
            if (
                (tmp = getOneElement("link", childs)) &&
                (tmp = tmp.attribs) &&
                (tmp = tmp.href)
            )
                feed.link = tmp;
            addConditionally(feed, "description", "subtitle", childs);
            if ((tmp = fetch("updated", childs))) feed.updated = new Date(tmp);
            addConditionally(feed, "author", "email", childs, true);

            feed.items = getElements("entry", childs).map(function(item) {
                var entry = {},
                    tmp;

                item = item.children;

                addConditionally(entry, "id", "id", item);
                addConditionally(entry, "title", "title", item);
                if (
                    (tmp = getOneElement("link", item)) &&
                    (tmp = tmp.attribs) &&
                    (tmp = tmp.href)
                )
                    entry.link = tmp;
                if ((tmp = fetch("summary", item) || fetch("content", item)))
                    entry.description = tmp;
                if ((tmp = fetch("updated", item)))
                    entry.pubDate = new Date(tmp);
                return entry;
            });
        } else {
            childs = getOneElement("channel", feedRoot.children).children;

            feed.type = feedRoot.name.substr(0, 3);
            feed.id = "";
            addConditionally(feed, "title", "title", childs);
            addConditionally(feed, "link", "link", childs);
            addConditionally(feed, "description", "description", childs);
            if ((tmp = fetch("lastBuildDate", childs)))
                feed.updated = new Date(tmp);
            addConditionally(feed, "author", "managingEditor", childs, true);

            feed.items = getElements("item", feedRoot.children).map(function(
                item
            ) {
                var entry = {},
                    tmp;

                item = item.children;

                addConditionally(entry, "id", "guid", item);
                addConditionally(entry, "title", "title", item);
                addConditionally(entry, "link", "link", item);
                addConditionally(entry, "description", "description", item);
                if ((tmp = fetch("pubDate", item)))
                    entry.pubDate = new Date(tmp);
                return entry;
            });
        }
    }
    this.dom = feed;
    DomHandler.prototype._handleCallback.call(
        this,
        feedRoot ? null : Error("couldn't find root of feed")
    );
};

module.exports = FeedHandler;


/***/ }),
/* 53 */
/*!****************************************!*\
  !*** ./node_modules/domutils/index.js ***!
  \****************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var DomUtils = module.exports;

[
	__webpack_require__(/*! ./lib/stringify */ 54),
	__webpack_require__(/*! ./lib/traversal */ 60),
	__webpack_require__(/*! ./lib/manipulation */ 61),
	__webpack_require__(/*! ./lib/querying */ 62),
	__webpack_require__(/*! ./lib/legacy */ 63),
	__webpack_require__(/*! ./lib/helpers */ 64)
].forEach(function(ext){
	Object.keys(ext).forEach(function(key){
		DomUtils[key] = ext[key].bind(DomUtils);
	});
});


/***/ }),
/* 54 */
/*!************************************************!*\
  !*** ./node_modules/domutils/lib/stringify.js ***!
  \************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var ElementType = __webpack_require__(/*! domelementtype */ 49),
    getOuterHTML = __webpack_require__(/*! dom-serializer */ 55),
    isTag = ElementType.isTag;

module.exports = {
	getInnerHTML: getInnerHTML,
	getOuterHTML: getOuterHTML,
	getText: getText
};

function getInnerHTML(elem, opts){
	return elem.children ? elem.children.map(function(elem){
		return getOuterHTML(elem, opts);
	}).join("") : "";
}

function getText(elem){
	if(Array.isArray(elem)) return elem.map(getText).join("");
	if(isTag(elem)) return elem.name === "br" ? "\n" : getText(elem.children);
	if(elem.type === ElementType.CDATA) return getText(elem.children);
	if(elem.type === ElementType.Text) return elem.data;
	return "";
}


/***/ }),
/* 55 */
/*!**********************************************!*\
  !*** ./node_modules/dom-serializer/index.js ***!
  \**********************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

/*
  Module dependencies
*/
var ElementType = __webpack_require__(/*! domelementtype */ 49);
var entities = __webpack_require__(/*! entities */ 56);

/* mixed-case SVG and MathML tags & attributes
   recognized by the HTML parser, see
   https://html.spec.whatwg.org/multipage/parsing.html#parsing-main-inforeign
*/
var foreignNames = __webpack_require__(/*! ./foreignNames.json */ 59);
foreignNames.elementNames.__proto__ = null; /* use as a simple dictionary */
foreignNames.attributeNames.__proto__ = null;

var unencodedElements = {
  __proto__: null,
  style: true,
  script: true,
  xmp: true,
  iframe: true,
  noembed: true,
  noframes: true,
  plaintext: true,
  noscript: true
};

/*
  Format attributes
*/
function formatAttrs(attributes, opts) {
  if (!attributes) return;

  var output = '';
  var value;

  // Loop through the attributes
  for (var key in attributes) {
    value = attributes[key];
    if (output) {
      output += ' ';
    }

    if (opts.xmlMode === 'foreign') {
      /* fix up mixed-case attribute names */
      key = foreignNames.attributeNames[key] || key;
    }
    output += key;
    if ((value !== null && value !== '') || opts.xmlMode) {
      output +=
        '="' +
        (opts.decodeEntities
          ? entities.encodeXML(value)
          : value.replace(/\"/g, '&quot;')) +
        '"';
    }
  }

  return output;
}

/*
  Self-enclosing tags (stolen from node-htmlparser)
*/
var singleTag = {
  __proto__: null,
  area: true,
  base: true,
  basefont: true,
  br: true,
  col: true,
  command: true,
  embed: true,
  frame: true,
  hr: true,
  img: true,
  input: true,
  isindex: true,
  keygen: true,
  link: true,
  meta: true,
  param: true,
  source: true,
  track: true,
  wbr: true
};

var render = (module.exports = function(dom, opts) {
  if (!Array.isArray(dom) && !dom.cheerio) dom = [dom];
  opts = opts || {};

  var output = '';

  for (var i = 0; i < dom.length; i++) {
    var elem = dom[i];

    if (elem.type === 'root') output += render(elem.children, opts);
    else if (ElementType.isTag(elem)) output += renderTag(elem, opts);
    else if (elem.type === ElementType.Directive)
      output += renderDirective(elem);
    else if (elem.type === ElementType.Comment) output += renderComment(elem);
    else if (elem.type === ElementType.CDATA) output += renderCdata(elem);
    else output += renderText(elem, opts);
  }

  return output;
});

var foreignModeIntegrationPoints = [
  'mi',
  'mo',
  'mn',
  'ms',
  'mtext',
  'annotation-xml',
  'foreignObject',
  'desc',
  'title'
];

function renderTag(elem, opts) {
  // Handle SVG / MathML in HTML
  if (opts.xmlMode === 'foreign') {
    /* fix up mixed-case element names */
    elem.name = foreignNames.elementNames[elem.name] || elem.name;
    /* exit foreign mode at integration points */
    if (
      elem.parent &&
      foreignModeIntegrationPoints.indexOf(elem.parent.name) >= 0
    )
      opts = Object.assign({}, opts, { xmlMode: false });
  }
  if (!opts.xmlMode && ['svg', 'math'].indexOf(elem.name) >= 0) {
    opts = Object.assign({}, opts, { xmlMode: 'foreign' });
  }

  var tag = '<' + elem.name;
  var attribs = formatAttrs(elem.attribs, opts);

  if (attribs) {
    tag += ' ' + attribs;
  }

  if (opts.xmlMode && (!elem.children || elem.children.length === 0)) {
    tag += '/>';
  } else {
    tag += '>';
    if (elem.children) {
      tag += render(elem.children, opts);
    }

    if (!singleTag[elem.name] || opts.xmlMode) {
      tag += '</' + elem.name + '>';
    }
  }

  return tag;
}

function renderDirective(elem) {
  return '<' + elem.data + '>';
}

function renderText(elem, opts) {
  var data = elem.data || '';

  // if entities weren't decoded, no need to encode them back
  if (
    opts.decodeEntities &&
    !(elem.parent && elem.parent.name in unencodedElements)
  ) {
    data = entities.encodeXML(data);
  }

  return data;
}

function renderCdata(elem) {
  return '<![CDATA[' + elem.children[0].data + ']]>';
}

function renderComment(elem) {
  return '<!--' + elem.data + '-->';
}


/***/ }),
/* 56 */
/*!****************************************!*\
  !*** ./node_modules/entities/index.js ***!
  \****************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var encode = __webpack_require__(/*! ./lib/encode.js */ 57),
    decode = __webpack_require__(/*! ./lib/decode.js */ 58);

exports.decode = function(data, level) {
    return (!level || level <= 0 ? decode.XML : decode.HTML)(data);
};

exports.decodeStrict = function(data, level) {
    return (!level || level <= 0 ? decode.XML : decode.HTMLStrict)(data);
};

exports.encode = function(data, level) {
    return (!level || level <= 0 ? encode.XML : encode.HTML)(data);
};

exports.encodeXML = encode.XML;

exports.encodeHTML4 = exports.encodeHTML5 = exports.encodeHTML = encode.HTML;

exports.decodeXML = exports.decodeXMLStrict = decode.XML;

exports.decodeHTML4 = exports.decodeHTML5 = exports.decodeHTML = decode.HTML;

exports.decodeHTML4Strict = exports.decodeHTML5Strict = exports.decodeHTMLStrict = decode.HTMLStrict;

exports.escape = encode.escape;


/***/ }),
/* 57 */
/*!*********************************************!*\
  !*** ./node_modules/entities/lib/encode.js ***!
  \*********************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var inverseXML = getInverseObj(__webpack_require__(/*! ../maps/xml.json */ 45)),
    xmlReplacer = getInverseReplacer(inverseXML);

exports.XML = getInverse(inverseXML, xmlReplacer);

var inverseHTML = getInverseObj(__webpack_require__(/*! ../maps/entities.json */ 43)),
    htmlReplacer = getInverseReplacer(inverseHTML);

exports.HTML = getInverse(inverseHTML, htmlReplacer);

function getInverseObj(obj) {
    return Object.keys(obj)
        .sort()
        .reduce(function(inverse, name) {
            inverse[obj[name]] = "&" + name + ";";
            return inverse;
        }, {});
}

function getInverseReplacer(inverse) {
    var single = [],
        multiple = [];

    Object.keys(inverse).forEach(function(k) {
        if (k.length === 1) {
            single.push("\\" + k);
        } else {
            multiple.push(k);
        }
    });

    //TODO add ranges
    multiple.unshift("[" + single.join("") + "]");

    return new RegExp(multiple.join("|"), "g");
}

var re_nonASCII = /[^\0-\x7F]/g,
    re_astralSymbols = /[\uD800-\uDBFF][\uDC00-\uDFFF]/g;

function singleCharReplacer(c) {
    return (
        "&#x" +
        c
            .charCodeAt(0)
            .toString(16)
            .toUpperCase() +
        ";"
    );
}

function astralReplacer(c) {
    // http://mathiasbynens.be/notes/javascript-encoding#surrogate-formulae
    var high = c.charCodeAt(0);
    var low = c.charCodeAt(1);
    var codePoint = (high - 0xd800) * 0x400 + low - 0xdc00 + 0x10000;
    return "&#x" + codePoint.toString(16).toUpperCase() + ";";
}

function getInverse(inverse, re) {
    function func(name) {
        return inverse[name];
    }

    return function(data) {
        return data
            .replace(re, func)
            .replace(re_astralSymbols, astralReplacer)
            .replace(re_nonASCII, singleCharReplacer);
    };
}

var re_xmlChars = getInverseReplacer(inverseXML);

function escapeXML(data) {
    return data
        .replace(re_xmlChars, singleCharReplacer)
        .replace(re_astralSymbols, astralReplacer)
        .replace(re_nonASCII, singleCharReplacer);
}

exports.escape = escapeXML;


/***/ }),
/* 58 */
/*!*********************************************!*\
  !*** ./node_modules/entities/lib/decode.js ***!
  \*********************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var entityMap = __webpack_require__(/*! ../maps/entities.json */ 43),
    legacyMap = __webpack_require__(/*! ../maps/legacy.json */ 44),
    xmlMap = __webpack_require__(/*! ../maps/xml.json */ 45),
    decodeCodePoint = __webpack_require__(/*! ./decode_codepoint.js */ 41);

var decodeXMLStrict = getStrictDecoder(xmlMap),
    decodeHTMLStrict = getStrictDecoder(entityMap);

function getStrictDecoder(map) {
    var keys = Object.keys(map).join("|"),
        replace = getReplacer(map);

    keys += "|#[xX][\\da-fA-F]+|#\\d+";

    var re = new RegExp("&(?:" + keys + ");", "g");

    return function(str) {
        return String(str).replace(re, replace);
    };
}

var decodeHTML = (function() {
    var legacy = Object.keys(legacyMap).sort(sorter);

    var keys = Object.keys(entityMap).sort(sorter);

    for (var i = 0, j = 0; i < keys.length; i++) {
        if (legacy[j] === keys[i]) {
            keys[i] += ";?";
            j++;
        } else {
            keys[i] += ";";
        }
    }

    var re = new RegExp("&(?:" + keys.join("|") + "|#[xX][\\da-fA-F]+;?|#\\d+;?)", "g"),
        replace = getReplacer(entityMap);

    function replacer(str) {
        if (str.substr(-1) !== ";") str += ";";
        return replace(str);
    }

    //TODO consider creating a merged map
    return function(str) {
        return String(str).replace(re, replacer);
    };
})();

function sorter(a, b) {
    return a < b ? 1 : -1;
}

function getReplacer(map) {
    return function replace(str) {
        if (str.charAt(1) === "#") {
            if (str.charAt(2) === "X" || str.charAt(2) === "x") {
                return decodeCodePoint(parseInt(str.substr(3), 16));
            }
            return decodeCodePoint(parseInt(str.substr(2), 10));
        }
        return map[str.slice(1, -1)];
    };
}

module.exports = {
    XML: decodeXMLStrict,
    HTML: decodeHTML,
    HTMLStrict: decodeHTMLStrict
};


/***/ }),
/* 59 */
/*!*******************************************************!*\
  !*** ./node_modules/dom-serializer/foreignNames.json ***!
  \*******************************************************/
/*! exports provided: elementNames, attributeNames, default */
/***/ (function(module) {

module.exports = JSON.parse("{\"elementNames\":{\"altglyph\":\"altGlyph\",\"altglyphdef\":\"altGlyphDef\",\"altglyphitem\":\"altGlyphItem\",\"animatecolor\":\"animateColor\",\"animatemotion\":\"animateMotion\",\"animatetransform\":\"animateTransform\",\"clippath\":\"clipPath\",\"feblend\":\"feBlend\",\"fecolormatrix\":\"feColorMatrix\",\"fecomponenttransfer\":\"feComponentTransfer\",\"fecomposite\":\"feComposite\",\"feconvolvematrix\":\"feConvolveMatrix\",\"fediffuselighting\":\"feDiffuseLighting\",\"fedisplacementmap\":\"feDisplacementMap\",\"fedistantlight\":\"feDistantLight\",\"fedropshadow\":\"feDropShadow\",\"feflood\":\"feFlood\",\"fefunca\":\"feFuncA\",\"fefuncb\":\"feFuncB\",\"fefuncg\":\"feFuncG\",\"fefuncr\":\"feFuncR\",\"fegaussianblur\":\"feGaussianBlur\",\"feimage\":\"feImage\",\"femerge\":\"feMerge\",\"femergenode\":\"feMergeNode\",\"femorphology\":\"feMorphology\",\"feoffset\":\"feOffset\",\"fepointlight\":\"fePointLight\",\"fespecularlighting\":\"feSpecularLighting\",\"fespotlight\":\"feSpotLight\",\"fetile\":\"feTile\",\"feturbulence\":\"feTurbulence\",\"foreignobject\":\"foreignObject\",\"glyphref\":\"glyphRef\",\"lineargradient\":\"linearGradient\",\"radialgradient\":\"radialGradient\",\"textpath\":\"textPath\"},\"attributeNames\":{\"definitionurl\":\"definitionURL\",\"attributename\":\"attributeName\",\"attributetype\":\"attributeType\",\"basefrequency\":\"baseFrequency\",\"baseprofile\":\"baseProfile\",\"calcmode\":\"calcMode\",\"clippathunits\":\"clipPathUnits\",\"diffuseconstant\":\"diffuseConstant\",\"edgemode\":\"edgeMode\",\"filterunits\":\"filterUnits\",\"glyphref\":\"glyphRef\",\"gradienttransform\":\"gradientTransform\",\"gradientunits\":\"gradientUnits\",\"kernelmatrix\":\"kernelMatrix\",\"kernelunitlength\":\"kernelUnitLength\",\"keypoints\":\"keyPoints\",\"keysplines\":\"keySplines\",\"keytimes\":\"keyTimes\",\"lengthadjust\":\"lengthAdjust\",\"limitingconeangle\":\"limitingConeAngle\",\"markerheight\":\"markerHeight\",\"markerunits\":\"markerUnits\",\"markerwidth\":\"markerWidth\",\"maskcontentunits\":\"maskContentUnits\",\"maskunits\":\"maskUnits\",\"numoctaves\":\"numOctaves\",\"pathlength\":\"pathLength\",\"patterncontentunits\":\"patternContentUnits\",\"patterntransform\":\"patternTransform\",\"patternunits\":\"patternUnits\",\"pointsatx\":\"pointsAtX\",\"pointsaty\":\"pointsAtY\",\"pointsatz\":\"pointsAtZ\",\"preservealpha\":\"preserveAlpha\",\"preserveaspectratio\":\"preserveAspectRatio\",\"primitiveunits\":\"primitiveUnits\",\"refx\":\"refX\",\"refy\":\"refY\",\"repeatcount\":\"repeatCount\",\"repeatdur\":\"repeatDur\",\"requiredextensions\":\"requiredExtensions\",\"requiredfeatures\":\"requiredFeatures\",\"specularconstant\":\"specularConstant\",\"specularexponent\":\"specularExponent\",\"spreadmethod\":\"spreadMethod\",\"startoffset\":\"startOffset\",\"stddeviation\":\"stdDeviation\",\"stitchtiles\":\"stitchTiles\",\"surfacescale\":\"surfaceScale\",\"systemlanguage\":\"systemLanguage\",\"tablevalues\":\"tableValues\",\"targetx\":\"targetX\",\"targety\":\"targetY\",\"textlength\":\"textLength\",\"viewbox\":\"viewBox\",\"viewtarget\":\"viewTarget\",\"xchannelselector\":\"xChannelSelector\",\"ychannelselector\":\"yChannelSelector\",\"zoomandpan\":\"zoomAndPan\"}}");

/***/ }),
/* 60 */
/*!************************************************!*\
  !*** ./node_modules/domutils/lib/traversal.js ***!
  \************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

var getChildren = exports.getChildren = function(elem){
	return elem.children;
};

var getParent = exports.getParent = function(elem){
	return elem.parent;
};

exports.getSiblings = function(elem){
	var parent = getParent(elem);
	return parent ? getChildren(parent) : [elem];
};

exports.getAttributeValue = function(elem, name){
	return elem.attribs && elem.attribs[name];
};

exports.hasAttrib = function(elem, name){
	return !!elem.attribs && hasOwnProperty.call(elem.attribs, name);
};

exports.getName = function(elem){
	return elem.name;
};


/***/ }),
/* 61 */
/*!***************************************************!*\
  !*** ./node_modules/domutils/lib/manipulation.js ***!
  \***************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

exports.removeElement = function(elem){
	if(elem.prev) elem.prev.next = elem.next;
	if(elem.next) elem.next.prev = elem.prev;

	if(elem.parent){
		var childs = elem.parent.children;
		childs.splice(childs.lastIndexOf(elem), 1);
	}
};

exports.replaceElement = function(elem, replacement){
	var prev = replacement.prev = elem.prev;
	if(prev){
		prev.next = replacement;
	}

	var next = replacement.next = elem.next;
	if(next){
		next.prev = replacement;
	}

	var parent = replacement.parent = elem.parent;
	if(parent){
		var childs = parent.children;
		childs[childs.lastIndexOf(elem)] = replacement;
	}
};

exports.appendChild = function(elem, child){
	child.parent = elem;

	if(elem.children.push(child) !== 1){
		var sibling = elem.children[elem.children.length - 2];
		sibling.next = child;
		child.prev = sibling;
		child.next = null;
	}
};

exports.append = function(elem, next){
	var parent = elem.parent,
		currNext = elem.next;

	next.next = currNext;
	next.prev = elem;
	elem.next = next;
	next.parent = parent;

	if(currNext){
		currNext.prev = next;
		if(parent){
			var childs = parent.children;
			childs.splice(childs.lastIndexOf(currNext), 0, next);
		}
	} else if(parent){
		parent.children.push(next);
	}
};

exports.prepend = function(elem, prev){
	var parent = elem.parent;
	if(parent){
		var childs = parent.children;
		childs.splice(childs.lastIndexOf(elem), 0, prev);
	}

	if(elem.prev){
		elem.prev.next = prev;
	}
	
	prev.parent = parent;
	prev.prev = elem.prev;
	prev.next = elem;
	elem.prev = prev;
};




/***/ }),
/* 62 */
/*!***********************************************!*\
  !*** ./node_modules/domutils/lib/querying.js ***!
  \***********************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var isTag = __webpack_require__(/*! domelementtype */ 49).isTag;

module.exports = {
	filter: filter,
	find: find,
	findOneChild: findOneChild,
	findOne: findOne,
	existsOne: existsOne,
	findAll: findAll
};

function filter(test, element, recurse, limit){
	if(!Array.isArray(element)) element = [element];

	if(typeof limit !== "number" || !isFinite(limit)){
		limit = Infinity;
	}
	return find(test, element, recurse !== false, limit);
}

function find(test, elems, recurse, limit){
	var result = [], childs;

	for(var i = 0, j = elems.length; i < j; i++){
		if(test(elems[i])){
			result.push(elems[i]);
			if(--limit <= 0) break;
		}

		childs = elems[i].children;
		if(recurse && childs && childs.length > 0){
			childs = find(test, childs, recurse, limit);
			result = result.concat(childs);
			limit -= childs.length;
			if(limit <= 0) break;
		}
	}

	return result;
}

function findOneChild(test, elems){
	for(var i = 0, l = elems.length; i < l; i++){
		if(test(elems[i])) return elems[i];
	}

	return null;
}

function findOne(test, elems){
	var elem = null;

	for(var i = 0, l = elems.length; i < l && !elem; i++){
		if(!isTag(elems[i])){
			continue;
		} else if(test(elems[i])){
			elem = elems[i];
		} else if(elems[i].children.length > 0){
			elem = findOne(test, elems[i].children);
		}
	}

	return elem;
}

function existsOne(test, elems){
	for(var i = 0, l = elems.length; i < l; i++){
		if(
			isTag(elems[i]) && (
				test(elems[i]) || (
					elems[i].children.length > 0 &&
					existsOne(test, elems[i].children)
				)
			)
		){
			return true;
		}
	}

	return false;
}

function findAll(test, rootElems){
	var result = [];
	var stack = rootElems.slice();
	while(stack.length){
		var elem = stack.shift();
		if(!isTag(elem)) continue;
		if (elem.children && elem.children.length > 0) {
			stack.unshift.apply(stack, elem.children);
		}
		if(test(elem)) result.push(elem);
	}
	return result;
}


/***/ }),
/* 63 */
/*!*********************************************!*\
  !*** ./node_modules/domutils/lib/legacy.js ***!
  \*********************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var ElementType = __webpack_require__(/*! domelementtype */ 49);
var isTag = exports.isTag = ElementType.isTag;

exports.testElement = function(options, element){
	for(var key in options){
		if(!options.hasOwnProperty(key));
		else if(key === "tag_name"){
			if(!isTag(element) || !options.tag_name(element.name)){
				return false;
			}
		} else if(key === "tag_type"){
			if(!options.tag_type(element.type)) return false;
		} else if(key === "tag_contains"){
			if(isTag(element) || !options.tag_contains(element.data)){
				return false;
			}
		} else if(!element.attribs || !options[key](element.attribs[key])){
			return false;
		}
	}
	return true;
};

var Checks = {
	tag_name: function(name){
		if(typeof name === "function"){
			return function(elem){ return isTag(elem) && name(elem.name); };
		} else if(name === "*"){
			return isTag;
		} else {
			return function(elem){ return isTag(elem) && elem.name === name; };
		}
	},
	tag_type: function(type){
		if(typeof type === "function"){
			return function(elem){ return type(elem.type); };
		} else {
			return function(elem){ return elem.type === type; };
		}
	},
	tag_contains: function(data){
		if(typeof data === "function"){
			return function(elem){ return !isTag(elem) && data(elem.data); };
		} else {
			return function(elem){ return !isTag(elem) && elem.data === data; };
		}
	}
};

function getAttribCheck(attrib, value){
	if(typeof value === "function"){
		return function(elem){ return elem.attribs && value(elem.attribs[attrib]); };
	} else {
		return function(elem){ return elem.attribs && elem.attribs[attrib] === value; };
	}
}

function combineFuncs(a, b){
	return function(elem){
		return a(elem) || b(elem);
	};
}

exports.getElements = function(options, element, recurse, limit){
	var funcs = Object.keys(options).map(function(key){
		var value = options[key];
		return key in Checks ? Checks[key](value) : getAttribCheck(key, value);
	});

	return funcs.length === 0 ? [] : this.filter(
		funcs.reduce(combineFuncs),
		element, recurse, limit
	);
};

exports.getElementById = function(id, element, recurse){
	if(!Array.isArray(element)) element = [element];
	return this.findOne(getAttribCheck("id", id), element, recurse !== false);
};

exports.getElementsByTagName = function(name, element, recurse, limit){
	return this.filter(Checks.tag_name(name), element, recurse, limit);
};

exports.getElementsByTagType = function(type, element, recurse, limit){
	return this.filter(Checks.tag_type(type), element, recurse, limit);
};


/***/ }),
/* 64 */
/*!**********************************************!*\
  !*** ./node_modules/domutils/lib/helpers.js ***!
  \**********************************************/
/*! no static exports found */
/***/ (function(module, exports) {

// removeSubsets
// Given an array of nodes, remove any member that is contained by another.
exports.removeSubsets = function(nodes) {
	var idx = nodes.length, node, ancestor, replace;

	// Check if each node (or one of its ancestors) is already contained in the
	// array.
	while (--idx > -1) {
		node = ancestor = nodes[idx];

		// Temporarily remove the node under consideration
		nodes[idx] = null;
		replace = true;

		while (ancestor) {
			if (nodes.indexOf(ancestor) > -1) {
				replace = false;
				nodes.splice(idx, 1);
				break;
			}
			ancestor = ancestor.parent;
		}

		// If the node has been found to be unique, re-insert it.
		if (replace) {
			nodes[idx] = node;
		}
	}

	return nodes;
};

// Source: http://dom.spec.whatwg.org/#dom-node-comparedocumentposition
var POSITION = {
	DISCONNECTED: 1,
	PRECEDING: 2,
	FOLLOWING: 4,
	CONTAINS: 8,
	CONTAINED_BY: 16
};

// Compare the position of one node against another node in any other document.
// The return value is a bitmask with the following values:
//
// document order:
// > There is an ordering, document order, defined on all the nodes in the
// > document corresponding to the order in which the first character of the
// > XML representation of each node occurs in the XML representation of the
// > document after expansion of general entities. Thus, the document element
// > node will be the first node. Element nodes occur before their children.
// > Thus, document order orders element nodes in order of the occurrence of
// > their start-tag in the XML (after expansion of entities). The attribute
// > nodes of an element occur after the element and before its children. The
// > relative order of attribute nodes is implementation-dependent./
// Source:
// http://www.w3.org/TR/DOM-Level-3-Core/glossary.html#dt-document-order
//
// @argument {Node} nodaA The first node to use in the comparison
// @argument {Node} nodeB The second node to use in the comparison
//
// @return {Number} A bitmask describing the input nodes' relative position.
//         See http://dom.spec.whatwg.org/#dom-node-comparedocumentposition for
//         a description of these values.
var comparePos = exports.compareDocumentPosition = function(nodeA, nodeB) {
	var aParents = [];
	var bParents = [];
	var current, sharedParent, siblings, aSibling, bSibling, idx;

	if (nodeA === nodeB) {
		return 0;
	}

	current = nodeA;
	while (current) {
		aParents.unshift(current);
		current = current.parent;
	}
	current = nodeB;
	while (current) {
		bParents.unshift(current);
		current = current.parent;
	}

	idx = 0;
	while (aParents[idx] === bParents[idx]) {
		idx++;
	}

	if (idx === 0) {
		return POSITION.DISCONNECTED;
	}

	sharedParent = aParents[idx - 1];
	siblings = sharedParent.children;
	aSibling = aParents[idx];
	bSibling = bParents[idx];

	if (siblings.indexOf(aSibling) > siblings.indexOf(bSibling)) {
		if (sharedParent === nodeB) {
			return POSITION.FOLLOWING | POSITION.CONTAINED_BY;
		}
		return POSITION.FOLLOWING;
	} else {
		if (sharedParent === nodeA) {
			return POSITION.PRECEDING | POSITION.CONTAINS;
		}
		return POSITION.PRECEDING;
	}
};

// Sort an array of nodes based on their relative position in the document and
// remove any duplicate nodes. If the array contains nodes that do not belong
// to the same document, sort order is unspecified.
//
// @argument {Array} nodes Array of DOM nodes
//
// @returns {Array} collection of unique nodes, sorted in document order
exports.uniqueSort = function(nodes) {
	var idx = nodes.length, node, position;

	nodes = nodes.slice();

	while (--idx > -1) {
		node = nodes[idx];
		position = nodes.indexOf(node);
		if (position > -1 && position < idx) {
			nodes.splice(idx, 1);
		}
	}
	nodes.sort(function(a, b) {
		var relative = comparePos(a, b);
		if (relative & POSITION.PRECEDING) {
			return -1;
		} else if (relative & POSITION.FOLLOWING) {
			return 1;
		}
		return 0;
	});

	return nodes;
};


/***/ }),
/* 65 */
/*!************************************************!*\
  !*** ./node_modules/htmlparser2/lib/Stream.js ***!
  \************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

module.exports = Stream;

var Parser = __webpack_require__(/*! ./WritableStream.js */ 66);

function Stream(options) {
    Parser.call(this, new Cbs(this), options);
}

__webpack_require__(/*! inherits */ 46)(Stream, Parser);

Stream.prototype.readable = true;

function Cbs(scope) {
    this.scope = scope;
}

var EVENTS = __webpack_require__(/*! ../ */ 38).EVENTS;

Object.keys(EVENTS).forEach(function(name) {
    if (EVENTS[name] === 0) {
        Cbs.prototype["on" + name] = function() {
            this.scope.emit(name);
        };
    } else if (EVENTS[name] === 1) {
        Cbs.prototype["on" + name] = function(a) {
            this.scope.emit(name, a);
        };
    } else if (EVENTS[name] === 2) {
        Cbs.prototype["on" + name] = function(a, b) {
            this.scope.emit(name, a, b);
        };
    } else {
        throw Error("wrong number of arguments!");
    }
});


/***/ }),
/* 66 */
/*!********************************************************!*\
  !*** ./node_modules/htmlparser2/lib/WritableStream.js ***!
  \********************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

module.exports = Stream;

var Parser = __webpack_require__(/*! ./Parser.js */ 39);
var WritableStream = __webpack_require__(/*! readable-stream */ 67).Writable;
var StringDecoder = __webpack_require__(/*! string_decoder */ 68).StringDecoder;
var Buffer = __webpack_require__(/*! buffer */ 34).Buffer;

function Stream(cbs, options) {
    var parser = (this._parser = new Parser(cbs, options));
    var decoder = (this._decoder = new StringDecoder());

    WritableStream.call(this, { decodeStrings: false });

    this.once("finish", function() {
        parser.end(decoder.end());
    });
}

__webpack_require__(/*! inherits */ 46)(Stream, WritableStream);

Stream.prototype._write = function(chunk, encoding, cb) {
    if (chunk instanceof Buffer) chunk = this._decoder.write(chunk);
    this._parser.write(chunk);
    cb();
};


/***/ }),
/* 67 */
/*!*********************************!*\
  !*** readable-stream (ignored) ***!
  \*********************************/
/*! no static exports found */
/***/ (function(module, exports) {

/* (ignored) */

/***/ }),
/* 68 */
/*!***********************************************************!*\
  !*** ./node_modules/string_decoder/lib/string_decoder.js ***!
  \***********************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
// Copyright Joyent, Inc. and other Node contributors.
//
// Permission is hereby granted, free of charge, to any person obtaining a
// copy of this software and associated documentation files (the
// "Software"), to deal in the Software without restriction, including
// without limitation the rights to use, copy, modify, merge, publish,
// distribute, sublicense, and/or sell copies of the Software, and to permit
// persons to whom the Software is furnished to do so, subject to the
// following conditions:
//
// The above copyright notice and this permission notice shall be included
// in all copies or substantial portions of the Software.
//
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS
// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN
// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,
// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR
// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE
// USE OR OTHER DEALINGS IN THE SOFTWARE.



/*<replacement>*/

var Buffer = __webpack_require__(/*! safe-buffer */ 69).Buffer;
/*</replacement>*/

var isEncoding = Buffer.isEncoding || function (encoding) {
  encoding = '' + encoding;
  switch (encoding && encoding.toLowerCase()) {
    case 'hex':case 'utf8':case 'utf-8':case 'ascii':case 'binary':case 'base64':case 'ucs2':case 'ucs-2':case 'utf16le':case 'utf-16le':case 'raw':
      return true;
    default:
      return false;
  }
};

function _normalizeEncoding(enc) {
  if (!enc) return 'utf8';
  var retried;
  while (true) {
    switch (enc) {
      case 'utf8':
      case 'utf-8':
        return 'utf8';
      case 'ucs2':
      case 'ucs-2':
      case 'utf16le':
      case 'utf-16le':
        return 'utf16le';
      case 'latin1':
      case 'binary':
        return 'latin1';
      case 'base64':
      case 'ascii':
      case 'hex':
        return enc;
      default:
        if (retried) return; // undefined
        enc = ('' + enc).toLowerCase();
        retried = true;
    }
  }
};

// Do not cache `Buffer.isEncoding` when checking encoding names as some
// modules monkey-patch it to support additional encodings
function normalizeEncoding(enc) {
  var nenc = _normalizeEncoding(enc);
  if (typeof nenc !== 'string' && (Buffer.isEncoding === isEncoding || !isEncoding(enc))) throw new Error('Unknown encoding: ' + enc);
  return nenc || enc;
}

// StringDecoder provides an interface for efficiently splitting a series of
// buffers into a series of JS strings without breaking apart multi-byte
// characters.
exports.StringDecoder = StringDecoder;
function StringDecoder(encoding) {
  this.encoding = normalizeEncoding(encoding);
  var nb;
  switch (this.encoding) {
    case 'utf16le':
      this.text = utf16Text;
      this.end = utf16End;
      nb = 4;
      break;
    case 'utf8':
      this.fillLast = utf8FillLast;
      nb = 4;
      break;
    case 'base64':
      this.text = base64Text;
      this.end = base64End;
      nb = 3;
      break;
    default:
      this.write = simpleWrite;
      this.end = simpleEnd;
      return;
  }
  this.lastNeed = 0;
  this.lastTotal = 0;
  this.lastChar = Buffer.allocUnsafe(nb);
}

StringDecoder.prototype.write = function (buf) {
  if (buf.length === 0) return '';
  var r;
  var i;
  if (this.lastNeed) {
    r = this.fillLast(buf);
    if (r === undefined) return '';
    i = this.lastNeed;
    this.lastNeed = 0;
  } else {
    i = 0;
  }
  if (i < buf.length) return r ? r + this.text(buf, i) : this.text(buf, i);
  return r || '';
};

StringDecoder.prototype.end = utf8End;

// Returns only complete characters in a Buffer
StringDecoder.prototype.text = utf8Text;

// Attempts to complete a partial non-UTF-8 character using bytes from a Buffer
StringDecoder.prototype.fillLast = function (buf) {
  if (this.lastNeed <= buf.length) {
    buf.copy(this.lastChar, this.lastTotal - this.lastNeed, 0, this.lastNeed);
    return this.lastChar.toString(this.encoding, 0, this.lastTotal);
  }
  buf.copy(this.lastChar, this.lastTotal - this.lastNeed, 0, buf.length);
  this.lastNeed -= buf.length;
};

// Checks the type of a UTF-8 byte, whether it's ASCII, a leading byte, or a
// continuation byte. If an invalid byte is detected, -2 is returned.
function utf8CheckByte(byte) {
  if (byte <= 0x7F) return 0;else if (byte >> 5 === 0x06) return 2;else if (byte >> 4 === 0x0E) return 3;else if (byte >> 3 === 0x1E) return 4;
  return byte >> 6 === 0x02 ? -1 : -2;
}

// Checks at most 3 bytes at the end of a Buffer in order to detect an
// incomplete multi-byte UTF-8 character. The total number of bytes (2, 3, or 4)
// needed to complete the UTF-8 character (if applicable) are returned.
function utf8CheckIncomplete(self, buf, i) {
  var j = buf.length - 1;
  if (j < i) return 0;
  var nb = utf8CheckByte(buf[j]);
  if (nb >= 0) {
    if (nb > 0) self.lastNeed = nb - 1;
    return nb;
  }
  if (--j < i || nb === -2) return 0;
  nb = utf8CheckByte(buf[j]);
  if (nb >= 0) {
    if (nb > 0) self.lastNeed = nb - 2;
    return nb;
  }
  if (--j < i || nb === -2) return 0;
  nb = utf8CheckByte(buf[j]);
  if (nb >= 0) {
    if (nb > 0) {
      if (nb === 2) nb = 0;else self.lastNeed = nb - 3;
    }
    return nb;
  }
  return 0;
}

// Validates as many continuation bytes for a multi-byte UTF-8 character as
// needed or are available. If we see a non-continuation byte where we expect
// one, we "replace" the validated continuation bytes we've seen so far with
// a single UTF-8 replacement character ('\ufffd'), to match v8's UTF-8 decoding
// behavior. The continuation byte check is included three times in the case
// where all of the continuation bytes for a character exist in the same buffer.
// It is also done this way as a slight performance increase instead of using a
// loop.
function utf8CheckExtraBytes(self, buf, p) {
  if ((buf[0] & 0xC0) !== 0x80) {
    self.lastNeed = 0;
    return '\ufffd';
  }
  if (self.lastNeed > 1 && buf.length > 1) {
    if ((buf[1] & 0xC0) !== 0x80) {
      self.lastNeed = 1;
      return '\ufffd';
    }
    if (self.lastNeed > 2 && buf.length > 2) {
      if ((buf[2] & 0xC0) !== 0x80) {
        self.lastNeed = 2;
        return '\ufffd';
      }
    }
  }
}

// Attempts to complete a multi-byte UTF-8 character using bytes from a Buffer.
function utf8FillLast(buf) {
  var p = this.lastTotal - this.lastNeed;
  var r = utf8CheckExtraBytes(this, buf, p);
  if (r !== undefined) return r;
  if (this.lastNeed <= buf.length) {
    buf.copy(this.lastChar, p, 0, this.lastNeed);
    return this.lastChar.toString(this.encoding, 0, this.lastTotal);
  }
  buf.copy(this.lastChar, p, 0, buf.length);
  this.lastNeed -= buf.length;
}

// Returns all complete UTF-8 characters in a Buffer. If the Buffer ended on a
// partial character, the character's bytes are buffered until the required
// number of bytes are available.
function utf8Text(buf, i) {
  var total = utf8CheckIncomplete(this, buf, i);
  if (!this.lastNeed) return buf.toString('utf8', i);
  this.lastTotal = total;
  var end = buf.length - (total - this.lastNeed);
  buf.copy(this.lastChar, 0, end);
  return buf.toString('utf8', i, end);
}

// For UTF-8, a replacement character is added when ending on a partial
// character.
function utf8End(buf) {
  var r = buf && buf.length ? this.write(buf) : '';
  if (this.lastNeed) return r + '\ufffd';
  return r;
}

// UTF-16LE typically needs two bytes per character, but even if we have an even
// number of bytes available, we need to check if we end on a leading/high
// surrogate. In that case, we need to wait for the next two bytes in order to
// decode the last character properly.
function utf16Text(buf, i) {
  if ((buf.length - i) % 2 === 0) {
    var r = buf.toString('utf16le', i);
    if (r) {
      var c = r.charCodeAt(r.length - 1);
      if (c >= 0xD800 && c <= 0xDBFF) {
        this.lastNeed = 2;
        this.lastTotal = 4;
        this.lastChar[0] = buf[buf.length - 2];
        this.lastChar[1] = buf[buf.length - 1];
        return r.slice(0, -1);
      }
    }
    return r;
  }
  this.lastNeed = 1;
  this.lastTotal = 2;
  this.lastChar[0] = buf[buf.length - 1];
  return buf.toString('utf16le', i, buf.length - 1);
}

// For UTF-16LE we do not explicitly append special replacement characters if we
// end on a partial character, we simply let v8 handle that.
function utf16End(buf) {
  var r = buf && buf.length ? this.write(buf) : '';
  if (this.lastNeed) {
    var end = this.lastTotal - this.lastNeed;
    return r + this.lastChar.toString('utf16le', 0, end);
  }
  return r;
}

function base64Text(buf, i) {
  var n = (buf.length - i) % 3;
  if (n === 0) return buf.toString('base64', i);
  this.lastNeed = 3 - n;
  this.lastTotal = 3;
  if (n === 1) {
    this.lastChar[0] = buf[buf.length - 1];
  } else {
    this.lastChar[0] = buf[buf.length - 2];
    this.lastChar[1] = buf[buf.length - 1];
  }
  return buf.toString('base64', i, buf.length - n);
}

function base64End(buf) {
  var r = buf && buf.length ? this.write(buf) : '';
  if (this.lastNeed) return r + this.lastChar.toString('base64', 0, 3 - this.lastNeed);
  return r;
}

// Pass bytes on through for single-byte encodings (e.g. ascii, latin1, hex)
function simpleWrite(buf) {
  return buf.toString(this.encoding);
}

function simpleEnd(buf) {
  return buf && buf.length ? this.write(buf) : '';
}

/***/ }),
/* 69 */
/*!*******************************************!*\
  !*** ./node_modules/safe-buffer/index.js ***!
  \*******************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

/* eslint-disable node/no-deprecated-api */
var buffer = __webpack_require__(/*! buffer */ 34)
var Buffer = buffer.Buffer

// alternative to using Object.keys for old browsers
function copyProps (src, dst) {
  for (var key in src) {
    dst[key] = src[key]
  }
}
if (Buffer.from && Buffer.alloc && Buffer.allocUnsafe && Buffer.allocUnsafeSlow) {
  module.exports = buffer
} else {
  // Copy properties from require('buffer')
  copyProps(buffer, exports)
  exports.Buffer = SafeBuffer
}

function SafeBuffer (arg, encodingOrOffset, length) {
  return Buffer(arg, encodingOrOffset, length)
}

// Copy static methods from Buffer
copyProps(Buffer, SafeBuffer)

SafeBuffer.from = function (arg, encodingOrOffset, length) {
  if (typeof arg === 'number') {
    throw new TypeError('Argument must not be a number')
  }
  return Buffer(arg, encodingOrOffset, length)
}

SafeBuffer.alloc = function (size, fill, encoding) {
  if (typeof size !== 'number') {
    throw new TypeError('Argument must be a number')
  }
  var buf = Buffer(size)
  if (fill !== undefined) {
    if (typeof encoding === 'string') {
      buf.fill(fill, encoding)
    } else {
      buf.fill(fill)
    }
  } else {
    buf.fill(0)
  }
  return buf
}

SafeBuffer.allocUnsafe = function (size) {
  if (typeof size !== 'number') {
    throw new TypeError('Argument must be a number')
  }
  return Buffer(size)
}

SafeBuffer.allocUnsafeSlow = function (size) {
  if (typeof size !== 'number') {
    throw new TypeError('Argument must be a number')
  }
  return buffer.SlowBuffer(size)
}


/***/ }),
/* 70 */
/*!******************************************************!*\
  !*** ./node_modules/htmlparser2/lib/ProxyHandler.js ***!
  \******************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

module.exports = ProxyHandler;

function ProxyHandler(cbs) {
    this._cbs = cbs || {};
}

var EVENTS = __webpack_require__(/*! ./ */ 38).EVENTS;
Object.keys(EVENTS).forEach(function(name) {
    if (EVENTS[name] === 0) {
        name = "on" + name;
        ProxyHandler.prototype[name] = function() {
            if (this._cbs[name]) this._cbs[name]();
        };
    } else if (EVENTS[name] === 1) {
        name = "on" + name;
        ProxyHandler.prototype[name] = function(a) {
            if (this._cbs[name]) this._cbs[name](a);
        };
    } else if (EVENTS[name] === 2) {
        name = "on" + name;
        ProxyHandler.prototype[name] = function(a, b) {
            if (this._cbs[name]) this._cbs[name](a, b);
        };
    } else {
        throw Error("wrong number of arguments");
    }
});


/***/ }),
/* 71 */
/*!***********************************************************!*\
  !*** ./node_modules/htmlparser2/lib/CollectingHandler.js ***!
  \***********************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

module.exports = CollectingHandler;

function CollectingHandler(cbs) {
    this._cbs = cbs || {};
    this.events = [];
}

var EVENTS = __webpack_require__(/*! ./ */ 38).EVENTS;
Object.keys(EVENTS).forEach(function(name) {
    if (EVENTS[name] === 0) {
        name = "on" + name;
        CollectingHandler.prototype[name] = function() {
            this.events.push([name]);
            if (this._cbs[name]) this._cbs[name]();
        };
    } else if (EVENTS[name] === 1) {
        name = "on" + name;
        CollectingHandler.prototype[name] = function(a) {
            this.events.push([name, a]);
            if (this._cbs[name]) this._cbs[name](a);
        };
    } else if (EVENTS[name] === 2) {
        name = "on" + name;
        CollectingHandler.prototype[name] = function(a, b) {
            this.events.push([name, a, b]);
            if (this._cbs[name]) this._cbs[name](a, b);
        };
    } else {
        throw Error("wrong number of arguments");
    }
});

CollectingHandler.prototype.onreset = function() {
    this.events = [];
    if (this._cbs.onreset) this._cbs.onreset();
};

CollectingHandler.prototype.restart = function() {
    if (this._cbs.onreset) this._cbs.onreset();

    for (var i = 0, len = this.events.length; i < len; i++) {
        if (this._cbs[this.events[i][0]]) {
            var num = this.events[i].length;

            if (num === 1) {
                this._cbs[this.events[i][0]]();
            } else if (num === 2) {
                this._cbs[this.events[i][0]](this.events[i][1]);
            } else {
                this._cbs[this.events[i][0]](
                    this.events[i][1],
                    this.events[i][2]
                );
            }
        }
    }
};


/***/ }),
/* 72 */
/*!*****************************************************************************************************!*\
  !*** D:/projects/bookingVaccine/bookingVaccineMini/node_modules/cheerio/lib/parsers/htmlparser2.js ***!
  \*****************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __importDefault = this && this.__importDefault || function (mod) {
  return mod && mod.__esModule ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.render = exports.parse = void 0;
var htmlparser2_1 = __webpack_require__(/*! htmlparser2 */ 38);
Object.defineProperty(exports, "parse", { enumerable: true, get: function get() {return htmlparser2_1.parseDocument;} });
var dom_serializer_1 = __webpack_require__(/*! dom-serializer */ 55);
Object.defineProperty(exports, "render", { enumerable: true, get: function get() {return __importDefault(dom_serializer_1).default;} });

/***/ }),
/* 73 */
/*!************************************************************************************************!*\
  !*** D:/projects/bookingVaccine/bookingVaccineMini/node_modules/cheerio/lib/parsers/parse5.js ***!
  \************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
exports.render = exports.parse = void 0;
var tslib_1 = __webpack_require__(/*! tslib */ 31);
var domhandler_1 = __webpack_require__(/*! domhandler */ 48);
var parse5_1 = __webpack_require__(/*! parse5 */ 74);
var parse5_htmlparser2_tree_adapter_1 = tslib_1.__importDefault(__webpack_require__(/*! parse5-htmlparser2-tree-adapter */ 98));
function parse(content, options, isDocument) {
  var opts = {
    scriptingEnabled: typeof options.scriptingEnabled === 'boolean' ?
    options.scriptingEnabled :
    true,
    treeAdapter: parse5_htmlparser2_tree_adapter_1.default,
    sourceCodeLocationInfo: options.sourceCodeLocationInfo };

  var context = options.context;
  // @ts-expect-error The tree adapter unfortunately doesn't return the exact types.
  return isDocument ?
  parse5_1.parse(content, opts) :
  // @ts-expect-error Same issue again.
  parse5_1.parseFragment(context, content, opts);
}
exports.parse = parse;
function render(dom) {
  var _a;
  /*
           * `dom-serializer` passes over the special "root" node and renders the
           * node's children in its place. To mimic this behavior with `parse5`, an
           * equivalent operation must be applied to the input array.
           */
  var nodes = 'length' in dom ? dom : [dom];
  for (var index = 0; index < nodes.length; index += 1) {
    var node = nodes[index];
    if (domhandler_1.isDocument(node)) {
      (_a = Array.prototype.splice).call.apply(_a, tslib_1.__spreadArray([nodes, index, 1], node.children));
    }
  }
  // @ts-expect-error Types don't align here either.
  return parse5_1.serialize({ children: nodes }, { treeAdapter: parse5_htmlparser2_tree_adapter_1.default });
}
exports.render = render;

/***/ }),
/* 74 */
/*!******************************************!*\
  !*** ./node_modules/parse5/lib/index.js ***!
  \******************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


const Parser = __webpack_require__(/*! ./parser */ 75);
const Serializer = __webpack_require__(/*! ./serializer */ 97);

// Shorthands
exports.parse = function parse(html, options) {
    const parser = new Parser(options);

    return parser.parse(html);
};

exports.parseFragment = function parseFragment(fragmentContext, html, options) {
    if (typeof fragmentContext === 'string') {
        options = html;
        html = fragmentContext;
        fragmentContext = null;
    }

    const parser = new Parser(options);

    return parser.parseFragment(html, fragmentContext);
};

exports.serialize = function(node, options) {
    const serializer = new Serializer(node, options);

    return serializer.serialize();
};


/***/ }),
/* 75 */
/*!*************************************************!*\
  !*** ./node_modules/parse5/lib/parser/index.js ***!
  \*************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


const Tokenizer = __webpack_require__(/*! ../tokenizer */ 76);
const OpenElementStack = __webpack_require__(/*! ./open-element-stack */ 81);
const FormattingElementList = __webpack_require__(/*! ./formatting-element-list */ 83);
const LocationInfoParserMixin = __webpack_require__(/*! ../extensions/location-info/parser-mixin */ 84);
const ErrorReportingParserMixin = __webpack_require__(/*! ../extensions/error-reporting/parser-mixin */ 89);
const Mixin = __webpack_require__(/*! ../utils/mixin */ 85);
const defaultTreeAdapter = __webpack_require__(/*! ../tree-adapters/default */ 93);
const mergeOptions = __webpack_require__(/*! ../utils/merge-options */ 94);
const doctype = __webpack_require__(/*! ../common/doctype */ 95);
const foreignContent = __webpack_require__(/*! ../common/foreign-content */ 96);
const ERR = __webpack_require__(/*! ../common/error-codes */ 79);
const unicode = __webpack_require__(/*! ../common/unicode */ 78);
const HTML = __webpack_require__(/*! ../common/html */ 82);

//Aliases
const $ = HTML.TAG_NAMES;
const NS = HTML.NAMESPACES;
const ATTRS = HTML.ATTRS;

const DEFAULT_OPTIONS = {
    scriptingEnabled: true,
    sourceCodeLocationInfo: false,
    onParseError: null,
    treeAdapter: defaultTreeAdapter
};

//Misc constants
const HIDDEN_INPUT_TYPE = 'hidden';

//Adoption agency loops iteration count
const AA_OUTER_LOOP_ITER = 8;
const AA_INNER_LOOP_ITER = 3;

//Insertion modes
const INITIAL_MODE = 'INITIAL_MODE';
const BEFORE_HTML_MODE = 'BEFORE_HTML_MODE';
const BEFORE_HEAD_MODE = 'BEFORE_HEAD_MODE';
const IN_HEAD_MODE = 'IN_HEAD_MODE';
const IN_HEAD_NO_SCRIPT_MODE = 'IN_HEAD_NO_SCRIPT_MODE';
const AFTER_HEAD_MODE = 'AFTER_HEAD_MODE';
const IN_BODY_MODE = 'IN_BODY_MODE';
const TEXT_MODE = 'TEXT_MODE';
const IN_TABLE_MODE = 'IN_TABLE_MODE';
const IN_TABLE_TEXT_MODE = 'IN_TABLE_TEXT_MODE';
const IN_CAPTION_MODE = 'IN_CAPTION_MODE';
const IN_COLUMN_GROUP_MODE = 'IN_COLUMN_GROUP_MODE';
const IN_TABLE_BODY_MODE = 'IN_TABLE_BODY_MODE';
const IN_ROW_MODE = 'IN_ROW_MODE';
const IN_CELL_MODE = 'IN_CELL_MODE';
const IN_SELECT_MODE = 'IN_SELECT_MODE';
const IN_SELECT_IN_TABLE_MODE = 'IN_SELECT_IN_TABLE_MODE';
const IN_TEMPLATE_MODE = 'IN_TEMPLATE_MODE';
const AFTER_BODY_MODE = 'AFTER_BODY_MODE';
const IN_FRAMESET_MODE = 'IN_FRAMESET_MODE';
const AFTER_FRAMESET_MODE = 'AFTER_FRAMESET_MODE';
const AFTER_AFTER_BODY_MODE = 'AFTER_AFTER_BODY_MODE';
const AFTER_AFTER_FRAMESET_MODE = 'AFTER_AFTER_FRAMESET_MODE';

//Insertion mode reset map
const INSERTION_MODE_RESET_MAP = {
    [$.TR]: IN_ROW_MODE,
    [$.TBODY]: IN_TABLE_BODY_MODE,
    [$.THEAD]: IN_TABLE_BODY_MODE,
    [$.TFOOT]: IN_TABLE_BODY_MODE,
    [$.CAPTION]: IN_CAPTION_MODE,
    [$.COLGROUP]: IN_COLUMN_GROUP_MODE,
    [$.TABLE]: IN_TABLE_MODE,
    [$.BODY]: IN_BODY_MODE,
    [$.FRAMESET]: IN_FRAMESET_MODE
};

//Template insertion mode switch map
const TEMPLATE_INSERTION_MODE_SWITCH_MAP = {
    [$.CAPTION]: IN_TABLE_MODE,
    [$.COLGROUP]: IN_TABLE_MODE,
    [$.TBODY]: IN_TABLE_MODE,
    [$.TFOOT]: IN_TABLE_MODE,
    [$.THEAD]: IN_TABLE_MODE,
    [$.COL]: IN_COLUMN_GROUP_MODE,
    [$.TR]: IN_TABLE_BODY_MODE,
    [$.TD]: IN_ROW_MODE,
    [$.TH]: IN_ROW_MODE
};

//Token handlers map for insertion modes
const TOKEN_HANDLERS = {
    [INITIAL_MODE]: {
        [Tokenizer.CHARACTER_TOKEN]: tokenInInitialMode,
        [Tokenizer.NULL_CHARACTER_TOKEN]: tokenInInitialMode,
        [Tokenizer.WHITESPACE_CHARACTER_TOKEN]: ignoreToken,
        [Tokenizer.COMMENT_TOKEN]: appendComment,
        [Tokenizer.DOCTYPE_TOKEN]: doctypeInInitialMode,
        [Tokenizer.START_TAG_TOKEN]: tokenInInitialMode,
        [Tokenizer.END_TAG_TOKEN]: tokenInInitialMode,
        [Tokenizer.EOF_TOKEN]: tokenInInitialMode
    },
    [BEFORE_HTML_MODE]: {
        [Tokenizer.CHARACTER_TOKEN]: tokenBeforeHtml,
        [Tokenizer.NULL_CHARACTER_TOKEN]: tokenBeforeHtml,
        [Tokenizer.WHITESPACE_CHARACTER_TOKEN]: ignoreToken,
        [Tokenizer.COMMENT_TOKEN]: appendComment,
        [Tokenizer.DOCTYPE_TOKEN]: ignoreToken,
        [Tokenizer.START_TAG_TOKEN]: startTagBeforeHtml,
        [Tokenizer.END_TAG_TOKEN]: endTagBeforeHtml,
        [Tokenizer.EOF_TOKEN]: tokenBeforeHtml
    },
    [BEFORE_HEAD_MODE]: {
        [Tokenizer.CHARACTER_TOKEN]: tokenBeforeHead,
        [Tokenizer.NULL_CHARACTER_TOKEN]: tokenBeforeHead,
        [Tokenizer.WHITESPACE_CHARACTER_TOKEN]: ignoreToken,
        [Tokenizer.COMMENT_TOKEN]: appendComment,
        [Tokenizer.DOCTYPE_TOKEN]: misplacedDoctype,
        [Tokenizer.START_TAG_TOKEN]: startTagBeforeHead,
        [Tokenizer.END_TAG_TOKEN]: endTagBeforeHead,
        [Tokenizer.EOF_TOKEN]: tokenBeforeHead
    },
    [IN_HEAD_MODE]: {
        [Tokenizer.CHARACTER_TOKEN]: tokenInHead,
        [Tokenizer.NULL_CHARACTER_TOKEN]: tokenInHead,
        [Tokenizer.WHITESPACE_CHARACTER_TOKEN]: insertCharacters,
        [Tokenizer.COMMENT_TOKEN]: appendComment,
        [Tokenizer.DOCTYPE_TOKEN]: misplacedDoctype,
        [Tokenizer.START_TAG_TOKEN]: startTagInHead,
        [Tokenizer.END_TAG_TOKEN]: endTagInHead,
        [Tokenizer.EOF_TOKEN]: tokenInHead
    },
    [IN_HEAD_NO_SCRIPT_MODE]: {
        [Tokenizer.CHARACTER_TOKEN]: tokenInHeadNoScript,
        [Tokenizer.NULL_CHARACTER_TOKEN]: tokenInHeadNoScript,
        [Tokenizer.WHITESPACE_CHARACTER_TOKEN]: insertCharacters,
        [Tokenizer.COMMENT_TOKEN]: appendComment,
        [Tokenizer.DOCTYPE_TOKEN]: misplacedDoctype,
        [Tokenizer.START_TAG_TOKEN]: startTagInHeadNoScript,
        [Tokenizer.END_TAG_TOKEN]: endTagInHeadNoScript,
        [Tokenizer.EOF_TOKEN]: tokenInHeadNoScript
    },
    [AFTER_HEAD_MODE]: {
        [Tokenizer.CHARACTER_TOKEN]: tokenAfterHead,
        [Tokenizer.NULL_CHARACTER_TOKEN]: tokenAfterHead,
        [Tokenizer.WHITESPACE_CHARACTER_TOKEN]: insertCharacters,
        [Tokenizer.COMMENT_TOKEN]: appendComment,
        [Tokenizer.DOCTYPE_TOKEN]: misplacedDoctype,
        [Tokenizer.START_TAG_TOKEN]: startTagAfterHead,
        [Tokenizer.END_TAG_TOKEN]: endTagAfterHead,
        [Tokenizer.EOF_TOKEN]: tokenAfterHead
    },
    [IN_BODY_MODE]: {
        [Tokenizer.CHARACTER_TOKEN]: characterInBody,
        [Tokenizer.NULL_CHARACTER_TOKEN]: ignoreToken,
        [Tokenizer.WHITESPACE_CHARACTER_TOKEN]: whitespaceCharacterInBody,
        [Tokenizer.COMMENT_TOKEN]: appendComment,
        [Tokenizer.DOCTYPE_TOKEN]: ignoreToken,
        [Tokenizer.START_TAG_TOKEN]: startTagInBody,
        [Tokenizer.END_TAG_TOKEN]: endTagInBody,
        [Tokenizer.EOF_TOKEN]: eofInBody
    },
    [TEXT_MODE]: {
        [Tokenizer.CHARACTER_TOKEN]: insertCharacters,
        [Tokenizer.NULL_CHARACTER_TOKEN]: insertCharacters,
        [Tokenizer.WHITESPACE_CHARACTER_TOKEN]: insertCharacters,
        [Tokenizer.COMMENT_TOKEN]: ignoreToken,
        [Tokenizer.DOCTYPE_TOKEN]: ignoreToken,
        [Tokenizer.START_TAG_TOKEN]: ignoreToken,
        [Tokenizer.END_TAG_TOKEN]: endTagInText,
        [Tokenizer.EOF_TOKEN]: eofInText
    },
    [IN_TABLE_MODE]: {
        [Tokenizer.CHARACTER_TOKEN]: characterInTable,
        [Tokenizer.NULL_CHARACTER_TOKEN]: characterInTable,
        [Tokenizer.WHITESPACE_CHARACTER_TOKEN]: characterInTable,
        [Tokenizer.COMMENT_TOKEN]: appendComment,
        [Tokenizer.DOCTYPE_TOKEN]: ignoreToken,
        [Tokenizer.START_TAG_TOKEN]: startTagInTable,
        [Tokenizer.END_TAG_TOKEN]: endTagInTable,
        [Tokenizer.EOF_TOKEN]: eofInBody
    },
    [IN_TABLE_TEXT_MODE]: {
        [Tokenizer.CHARACTER_TOKEN]: characterInTableText,
        [Tokenizer.NULL_CHARACTER_TOKEN]: ignoreToken,
        [Tokenizer.WHITESPACE_CHARACTER_TOKEN]: whitespaceCharacterInTableText,
        [Tokenizer.COMMENT_TOKEN]: tokenInTableText,
        [Tokenizer.DOCTYPE_TOKEN]: tokenInTableText,
        [Tokenizer.START_TAG_TOKEN]: tokenInTableText,
        [Tokenizer.END_TAG_TOKEN]: tokenInTableText,
        [Tokenizer.EOF_TOKEN]: tokenInTableText
    },
    [IN_CAPTION_MODE]: {
        [Tokenizer.CHARACTER_TOKEN]: characterInBody,
        [Tokenizer.NULL_CHARACTER_TOKEN]: ignoreToken,
        [Tokenizer.WHITESPACE_CHARACTER_TOKEN]: whitespaceCharacterInBody,
        [Tokenizer.COMMENT_TOKEN]: appendComment,
        [Tokenizer.DOCTYPE_TOKEN]: ignoreToken,
        [Tokenizer.START_TAG_TOKEN]: startTagInCaption,
        [Tokenizer.END_TAG_TOKEN]: endTagInCaption,
        [Tokenizer.EOF_TOKEN]: eofInBody
    },
    [IN_COLUMN_GROUP_MODE]: {
        [Tokenizer.CHARACTER_TOKEN]: tokenInColumnGroup,
        [Tokenizer.NULL_CHARACTER_TOKEN]: tokenInColumnGroup,
        [Tokenizer.WHITESPACE_CHARACTER_TOKEN]: insertCharacters,
        [Tokenizer.COMMENT_TOKEN]: appendComment,
        [Tokenizer.DOCTYPE_TOKEN]: ignoreToken,
        [Tokenizer.START_TAG_TOKEN]: startTagInColumnGroup,
        [Tokenizer.END_TAG_TOKEN]: endTagInColumnGroup,
        [Tokenizer.EOF_TOKEN]: eofInBody
    },
    [IN_TABLE_BODY_MODE]: {
        [Tokenizer.CHARACTER_TOKEN]: characterInTable,
        [Tokenizer.NULL_CHARACTER_TOKEN]: characterInTable,
        [Tokenizer.WHITESPACE_CHARACTER_TOKEN]: characterInTable,
        [Tokenizer.COMMENT_TOKEN]: appendComment,
        [Tokenizer.DOCTYPE_TOKEN]: ignoreToken,
        [Tokenizer.START_TAG_TOKEN]: startTagInTableBody,
        [Tokenizer.END_TAG_TOKEN]: endTagInTableBody,
        [Tokenizer.EOF_TOKEN]: eofInBody
    },
    [IN_ROW_MODE]: {
        [Tokenizer.CHARACTER_TOKEN]: characterInTable,
        [Tokenizer.NULL_CHARACTER_TOKEN]: characterInTable,
        [Tokenizer.WHITESPACE_CHARACTER_TOKEN]: characterInTable,
        [Tokenizer.COMMENT_TOKEN]: appendComment,
        [Tokenizer.DOCTYPE_TOKEN]: ignoreToken,
        [Tokenizer.START_TAG_TOKEN]: startTagInRow,
        [Tokenizer.END_TAG_TOKEN]: endTagInRow,
        [Tokenizer.EOF_TOKEN]: eofInBody
    },
    [IN_CELL_MODE]: {
        [Tokenizer.CHARACTER_TOKEN]: characterInBody,
        [Tokenizer.NULL_CHARACTER_TOKEN]: ignoreToken,
        [Tokenizer.WHITESPACE_CHARACTER_TOKEN]: whitespaceCharacterInBody,
        [Tokenizer.COMMENT_TOKEN]: appendComment,
        [Tokenizer.DOCTYPE_TOKEN]: ignoreToken,
        [Tokenizer.START_TAG_TOKEN]: startTagInCell,
        [Tokenizer.END_TAG_TOKEN]: endTagInCell,
        [Tokenizer.EOF_TOKEN]: eofInBody
    },
    [IN_SELECT_MODE]: {
        [Tokenizer.CHARACTER_TOKEN]: insertCharacters,
        [Tokenizer.NULL_CHARACTER_TOKEN]: ignoreToken,
        [Tokenizer.WHITESPACE_CHARACTER_TOKEN]: insertCharacters,
        [Tokenizer.COMMENT_TOKEN]: appendComment,
        [Tokenizer.DOCTYPE_TOKEN]: ignoreToken,
        [Tokenizer.START_TAG_TOKEN]: startTagInSelect,
        [Tokenizer.END_TAG_TOKEN]: endTagInSelect,
        [Tokenizer.EOF_TOKEN]: eofInBody
    },
    [IN_SELECT_IN_TABLE_MODE]: {
        [Tokenizer.CHARACTER_TOKEN]: insertCharacters,
        [Tokenizer.NULL_CHARACTER_TOKEN]: ignoreToken,
        [Tokenizer.WHITESPACE_CHARACTER_TOKEN]: insertCharacters,
        [Tokenizer.COMMENT_TOKEN]: appendComment,
        [Tokenizer.DOCTYPE_TOKEN]: ignoreToken,
        [Tokenizer.START_TAG_TOKEN]: startTagInSelectInTable,
        [Tokenizer.END_TAG_TOKEN]: endTagInSelectInTable,
        [Tokenizer.EOF_TOKEN]: eofInBody
    },
    [IN_TEMPLATE_MODE]: {
        [Tokenizer.CHARACTER_TOKEN]: characterInBody,
        [Tokenizer.NULL_CHARACTER_TOKEN]: ignoreToken,
        [Tokenizer.WHITESPACE_CHARACTER_TOKEN]: whitespaceCharacterInBody,
        [Tokenizer.COMMENT_TOKEN]: appendComment,
        [Tokenizer.DOCTYPE_TOKEN]: ignoreToken,
        [Tokenizer.START_TAG_TOKEN]: startTagInTemplate,
        [Tokenizer.END_TAG_TOKEN]: endTagInTemplate,
        [Tokenizer.EOF_TOKEN]: eofInTemplate
    },
    [AFTER_BODY_MODE]: {
        [Tokenizer.CHARACTER_TOKEN]: tokenAfterBody,
        [Tokenizer.NULL_CHARACTER_TOKEN]: tokenAfterBody,
        [Tokenizer.WHITESPACE_CHARACTER_TOKEN]: whitespaceCharacterInBody,
        [Tokenizer.COMMENT_TOKEN]: appendCommentToRootHtmlElement,
        [Tokenizer.DOCTYPE_TOKEN]: ignoreToken,
        [Tokenizer.START_TAG_TOKEN]: startTagAfterBody,
        [Tokenizer.END_TAG_TOKEN]: endTagAfterBody,
        [Tokenizer.EOF_TOKEN]: stopParsing
    },
    [IN_FRAMESET_MODE]: {
        [Tokenizer.CHARACTER_TOKEN]: ignoreToken,
        [Tokenizer.NULL_CHARACTER_TOKEN]: ignoreToken,
        [Tokenizer.WHITESPACE_CHARACTER_TOKEN]: insertCharacters,
        [Tokenizer.COMMENT_TOKEN]: appendComment,
        [Tokenizer.DOCTYPE_TOKEN]: ignoreToken,
        [Tokenizer.START_TAG_TOKEN]: startTagInFrameset,
        [Tokenizer.END_TAG_TOKEN]: endTagInFrameset,
        [Tokenizer.EOF_TOKEN]: stopParsing
    },
    [AFTER_FRAMESET_MODE]: {
        [Tokenizer.CHARACTER_TOKEN]: ignoreToken,
        [Tokenizer.NULL_CHARACTER_TOKEN]: ignoreToken,
        [Tokenizer.WHITESPACE_CHARACTER_TOKEN]: insertCharacters,
        [Tokenizer.COMMENT_TOKEN]: appendComment,
        [Tokenizer.DOCTYPE_TOKEN]: ignoreToken,
        [Tokenizer.START_TAG_TOKEN]: startTagAfterFrameset,
        [Tokenizer.END_TAG_TOKEN]: endTagAfterFrameset,
        [Tokenizer.EOF_TOKEN]: stopParsing
    },
    [AFTER_AFTER_BODY_MODE]: {
        [Tokenizer.CHARACTER_TOKEN]: tokenAfterAfterBody,
        [Tokenizer.NULL_CHARACTER_TOKEN]: tokenAfterAfterBody,
        [Tokenizer.WHITESPACE_CHARACTER_TOKEN]: whitespaceCharacterInBody,
        [Tokenizer.COMMENT_TOKEN]: appendCommentToDocument,
        [Tokenizer.DOCTYPE_TOKEN]: ignoreToken,
        [Tokenizer.START_TAG_TOKEN]: startTagAfterAfterBody,
        [Tokenizer.END_TAG_TOKEN]: tokenAfterAfterBody,
        [Tokenizer.EOF_TOKEN]: stopParsing
    },
    [AFTER_AFTER_FRAMESET_MODE]: {
        [Tokenizer.CHARACTER_TOKEN]: ignoreToken,
        [Tokenizer.NULL_CHARACTER_TOKEN]: ignoreToken,
        [Tokenizer.WHITESPACE_CHARACTER_TOKEN]: whitespaceCharacterInBody,
        [Tokenizer.COMMENT_TOKEN]: appendCommentToDocument,
        [Tokenizer.DOCTYPE_TOKEN]: ignoreToken,
        [Tokenizer.START_TAG_TOKEN]: startTagAfterAfterFrameset,
        [Tokenizer.END_TAG_TOKEN]: ignoreToken,
        [Tokenizer.EOF_TOKEN]: stopParsing
    }
};

//Parser
class Parser {
    constructor(options) {
        this.options = mergeOptions(DEFAULT_OPTIONS, options);

        this.treeAdapter = this.options.treeAdapter;
        this.pendingScript = null;

        if (this.options.sourceCodeLocationInfo) {
            Mixin.install(this, LocationInfoParserMixin);
        }

        if (this.options.onParseError) {
            Mixin.install(this, ErrorReportingParserMixin, { onParseError: this.options.onParseError });
        }
    }

    // API
    parse(html) {
        const document = this.treeAdapter.createDocument();

        this._bootstrap(document, null);
        this.tokenizer.write(html, true);
        this._runParsingLoop(null);

        return document;
    }

    parseFragment(html, fragmentContext) {
        //NOTE: use <template> element as a fragment context if context element was not provided,
        //so we will parse in "forgiving" manner
        if (!fragmentContext) {
            fragmentContext = this.treeAdapter.createElement($.TEMPLATE, NS.HTML, []);
        }

        //NOTE: create fake element which will be used as 'document' for fragment parsing.
        //This is important for jsdom there 'document' can't be recreated, therefore
        //fragment parsing causes messing of the main `document`.
        const documentMock = this.treeAdapter.createElement('documentmock', NS.HTML, []);

        this._bootstrap(documentMock, fragmentContext);

        if (this.treeAdapter.getTagName(fragmentContext) === $.TEMPLATE) {
            this._pushTmplInsertionMode(IN_TEMPLATE_MODE);
        }

        this._initTokenizerForFragmentParsing();
        this._insertFakeRootElement();
        this._resetInsertionMode();
        this._findFormInFragmentContext();
        this.tokenizer.write(html, true);
        this._runParsingLoop(null);

        const rootElement = this.treeAdapter.getFirstChild(documentMock);
        const fragment = this.treeAdapter.createDocumentFragment();

        this._adoptNodes(rootElement, fragment);

        return fragment;
    }

    //Bootstrap parser
    _bootstrap(document, fragmentContext) {
        this.tokenizer = new Tokenizer(this.options);

        this.stopped = false;

        this.insertionMode = INITIAL_MODE;
        this.originalInsertionMode = '';

        this.document = document;
        this.fragmentContext = fragmentContext;

        this.headElement = null;
        this.formElement = null;

        this.openElements = new OpenElementStack(this.document, this.treeAdapter);
        this.activeFormattingElements = new FormattingElementList(this.treeAdapter);

        this.tmplInsertionModeStack = [];
        this.tmplInsertionModeStackTop = -1;
        this.currentTmplInsertionMode = null;

        this.pendingCharacterTokens = [];
        this.hasNonWhitespacePendingCharacterToken = false;

        this.framesetOk = true;
        this.skipNextNewLine = false;
        this.fosterParentingEnabled = false;
    }

    //Errors
    _err() {
        // NOTE: err reporting is noop by default. Enabled by mixin.
    }

    //Parsing loop
    _runParsingLoop(scriptHandler) {
        while (!this.stopped) {
            this._setupTokenizerCDATAMode();

            const token = this.tokenizer.getNextToken();

            if (token.type === Tokenizer.HIBERNATION_TOKEN) {
                break;
            }

            if (this.skipNextNewLine) {
                this.skipNextNewLine = false;

                if (token.type === Tokenizer.WHITESPACE_CHARACTER_TOKEN && token.chars[0] === '\n') {
                    if (token.chars.length === 1) {
                        continue;
                    }

                    token.chars = token.chars.substr(1);
                }
            }

            this._processInputToken(token);

            if (scriptHandler && this.pendingScript) {
                break;
            }
        }
    }

    runParsingLoopForCurrentChunk(writeCallback, scriptHandler) {
        this._runParsingLoop(scriptHandler);

        if (scriptHandler && this.pendingScript) {
            const script = this.pendingScript;

            this.pendingScript = null;

            scriptHandler(script);

            return;
        }

        if (writeCallback) {
            writeCallback();
        }
    }

    //Text parsing
    _setupTokenizerCDATAMode() {
        const current = this._getAdjustedCurrentElement();

        this.tokenizer.allowCDATA =
            current &&
            current !== this.document &&
            this.treeAdapter.getNamespaceURI(current) !== NS.HTML &&
            !this._isIntegrationPoint(current);
    }

    _switchToTextParsing(currentToken, nextTokenizerState) {
        this._insertElement(currentToken, NS.HTML);
        this.tokenizer.state = nextTokenizerState;
        this.originalInsertionMode = this.insertionMode;
        this.insertionMode = TEXT_MODE;
    }

    switchToPlaintextParsing() {
        this.insertionMode = TEXT_MODE;
        this.originalInsertionMode = IN_BODY_MODE;
        this.tokenizer.state = Tokenizer.MODE.PLAINTEXT;
    }

    //Fragment parsing
    _getAdjustedCurrentElement() {
        return this.openElements.stackTop === 0 && this.fragmentContext
            ? this.fragmentContext
            : this.openElements.current;
    }

    _findFormInFragmentContext() {
        let node = this.fragmentContext;

        do {
            if (this.treeAdapter.getTagName(node) === $.FORM) {
                this.formElement = node;
                break;
            }

            node = this.treeAdapter.getParentNode(node);
        } while (node);
    }

    _initTokenizerForFragmentParsing() {
        if (this.treeAdapter.getNamespaceURI(this.fragmentContext) === NS.HTML) {
            const tn = this.treeAdapter.getTagName(this.fragmentContext);

            if (tn === $.TITLE || tn === $.TEXTAREA) {
                this.tokenizer.state = Tokenizer.MODE.RCDATA;
            } else if (
                tn === $.STYLE ||
                tn === $.XMP ||
                tn === $.IFRAME ||
                tn === $.NOEMBED ||
                tn === $.NOFRAMES ||
                tn === $.NOSCRIPT
            ) {
                this.tokenizer.state = Tokenizer.MODE.RAWTEXT;
            } else if (tn === $.SCRIPT) {
                this.tokenizer.state = Tokenizer.MODE.SCRIPT_DATA;
            } else if (tn === $.PLAINTEXT) {
                this.tokenizer.state = Tokenizer.MODE.PLAINTEXT;
            }
        }
    }

    //Tree mutation
    _setDocumentType(token) {
        const name = token.name || '';
        const publicId = token.publicId || '';
        const systemId = token.systemId || '';

        this.treeAdapter.setDocumentType(this.document, name, publicId, systemId);
    }

    _attachElementToTree(element) {
        if (this._shouldFosterParentOnInsertion()) {
            this._fosterParentElement(element);
        } else {
            const parent = this.openElements.currentTmplContent || this.openElements.current;

            this.treeAdapter.appendChild(parent, element);
        }
    }

    _appendElement(token, namespaceURI) {
        const element = this.treeAdapter.createElement(token.tagName, namespaceURI, token.attrs);

        this._attachElementToTree(element);
    }

    _insertElement(token, namespaceURI) {
        const element = this.treeAdapter.createElement(token.tagName, namespaceURI, token.attrs);

        this._attachElementToTree(element);
        this.openElements.push(element);
    }

    _insertFakeElement(tagName) {
        const element = this.treeAdapter.createElement(tagName, NS.HTML, []);

        this._attachElementToTree(element);
        this.openElements.push(element);
    }

    _insertTemplate(token) {
        const tmpl = this.treeAdapter.createElement(token.tagName, NS.HTML, token.attrs);
        const content = this.treeAdapter.createDocumentFragment();

        this.treeAdapter.setTemplateContent(tmpl, content);
        this._attachElementToTree(tmpl);
        this.openElements.push(tmpl);
    }

    _insertFakeRootElement() {
        const element = this.treeAdapter.createElement($.HTML, NS.HTML, []);

        this.treeAdapter.appendChild(this.openElements.current, element);
        this.openElements.push(element);
    }

    _appendCommentNode(token, parent) {
        const commentNode = this.treeAdapter.createCommentNode(token.data);

        this.treeAdapter.appendChild(parent, commentNode);
    }

    _insertCharacters(token) {
        if (this._shouldFosterParentOnInsertion()) {
            this._fosterParentText(token.chars);
        } else {
            const parent = this.openElements.currentTmplContent || this.openElements.current;

            this.treeAdapter.insertText(parent, token.chars);
        }
    }

    _adoptNodes(donor, recipient) {
        for (let child = this.treeAdapter.getFirstChild(donor); child; child = this.treeAdapter.getFirstChild(donor)) {
            this.treeAdapter.detachNode(child);
            this.treeAdapter.appendChild(recipient, child);
        }
    }

    //Token processing
    _shouldProcessTokenInForeignContent(token) {
        const current = this._getAdjustedCurrentElement();

        if (!current || current === this.document) {
            return false;
        }

        const ns = this.treeAdapter.getNamespaceURI(current);

        if (ns === NS.HTML) {
            return false;
        }

        if (
            this.treeAdapter.getTagName(current) === $.ANNOTATION_XML &&
            ns === NS.MATHML &&
            token.type === Tokenizer.START_TAG_TOKEN &&
            token.tagName === $.SVG
        ) {
            return false;
        }

        const isCharacterToken =
            token.type === Tokenizer.CHARACTER_TOKEN ||
            token.type === Tokenizer.NULL_CHARACTER_TOKEN ||
            token.type === Tokenizer.WHITESPACE_CHARACTER_TOKEN;

        const isMathMLTextStartTag =
            token.type === Tokenizer.START_TAG_TOKEN && token.tagName !== $.MGLYPH && token.tagName !== $.MALIGNMARK;

        if ((isMathMLTextStartTag || isCharacterToken) && this._isIntegrationPoint(current, NS.MATHML)) {
            return false;
        }

        if (
            (token.type === Tokenizer.START_TAG_TOKEN || isCharacterToken) &&
            this._isIntegrationPoint(current, NS.HTML)
        ) {
            return false;
        }

        return token.type !== Tokenizer.EOF_TOKEN;
    }

    _processToken(token) {
        TOKEN_HANDLERS[this.insertionMode][token.type](this, token);
    }

    _processTokenInBodyMode(token) {
        TOKEN_HANDLERS[IN_BODY_MODE][token.type](this, token);
    }

    _processTokenInForeignContent(token) {
        if (token.type === Tokenizer.CHARACTER_TOKEN) {
            characterInForeignContent(this, token);
        } else if (token.type === Tokenizer.NULL_CHARACTER_TOKEN) {
            nullCharacterInForeignContent(this, token);
        } else if (token.type === Tokenizer.WHITESPACE_CHARACTER_TOKEN) {
            insertCharacters(this, token);
        } else if (token.type === Tokenizer.COMMENT_TOKEN) {
            appendComment(this, token);
        } else if (token.type === Tokenizer.START_TAG_TOKEN) {
            startTagInForeignContent(this, token);
        } else if (token.type === Tokenizer.END_TAG_TOKEN) {
            endTagInForeignContent(this, token);
        }
    }

    _processInputToken(token) {
        if (this._shouldProcessTokenInForeignContent(token)) {
            this._processTokenInForeignContent(token);
        } else {
            this._processToken(token);
        }

        if (token.type === Tokenizer.START_TAG_TOKEN && token.selfClosing && !token.ackSelfClosing) {
            this._err(ERR.nonVoidHtmlElementStartTagWithTrailingSolidus);
        }
    }

    //Integration points
    _isIntegrationPoint(element, foreignNS) {
        const tn = this.treeAdapter.getTagName(element);
        const ns = this.treeAdapter.getNamespaceURI(element);
        const attrs = this.treeAdapter.getAttrList(element);

        return foreignContent.isIntegrationPoint(tn, ns, attrs, foreignNS);
    }

    //Active formatting elements reconstruction
    _reconstructActiveFormattingElements() {
        const listLength = this.activeFormattingElements.length;

        if (listLength) {
            let unopenIdx = listLength;
            let entry = null;

            do {
                unopenIdx--;
                entry = this.activeFormattingElements.entries[unopenIdx];

                if (entry.type === FormattingElementList.MARKER_ENTRY || this.openElements.contains(entry.element)) {
                    unopenIdx++;
                    break;
                }
            } while (unopenIdx > 0);

            for (let i = unopenIdx; i < listLength; i++) {
                entry = this.activeFormattingElements.entries[i];
                this._insertElement(entry.token, this.treeAdapter.getNamespaceURI(entry.element));
                entry.element = this.openElements.current;
            }
        }
    }

    //Close elements
    _closeTableCell() {
        this.openElements.generateImpliedEndTags();
        this.openElements.popUntilTableCellPopped();
        this.activeFormattingElements.clearToLastMarker();
        this.insertionMode = IN_ROW_MODE;
    }

    _closePElement() {
        this.openElements.generateImpliedEndTagsWithExclusion($.P);
        this.openElements.popUntilTagNamePopped($.P);
    }

    //Insertion modes
    _resetInsertionMode() {
        for (let i = this.openElements.stackTop, last = false; i >= 0; i--) {
            let element = this.openElements.items[i];

            if (i === 0) {
                last = true;

                if (this.fragmentContext) {
                    element = this.fragmentContext;
                }
            }

            const tn = this.treeAdapter.getTagName(element);
            const newInsertionMode = INSERTION_MODE_RESET_MAP[tn];

            if (newInsertionMode) {
                this.insertionMode = newInsertionMode;
                break;
            } else if (!last && (tn === $.TD || tn === $.TH)) {
                this.insertionMode = IN_CELL_MODE;
                break;
            } else if (!last && tn === $.HEAD) {
                this.insertionMode = IN_HEAD_MODE;
                break;
            } else if (tn === $.SELECT) {
                this._resetInsertionModeForSelect(i);
                break;
            } else if (tn === $.TEMPLATE) {
                this.insertionMode = this.currentTmplInsertionMode;
                break;
            } else if (tn === $.HTML) {
                this.insertionMode = this.headElement ? AFTER_HEAD_MODE : BEFORE_HEAD_MODE;
                break;
            } else if (last) {
                this.insertionMode = IN_BODY_MODE;
                break;
            }
        }
    }

    _resetInsertionModeForSelect(selectIdx) {
        if (selectIdx > 0) {
            for (let i = selectIdx - 1; i > 0; i--) {
                const ancestor = this.openElements.items[i];
                const tn = this.treeAdapter.getTagName(ancestor);

                if (tn === $.TEMPLATE) {
                    break;
                } else if (tn === $.TABLE) {
                    this.insertionMode = IN_SELECT_IN_TABLE_MODE;
                    return;
                }
            }
        }

        this.insertionMode = IN_SELECT_MODE;
    }

    _pushTmplInsertionMode(mode) {
        this.tmplInsertionModeStack.push(mode);
        this.tmplInsertionModeStackTop++;
        this.currentTmplInsertionMode = mode;
    }

    _popTmplInsertionMode() {
        this.tmplInsertionModeStack.pop();
        this.tmplInsertionModeStackTop--;
        this.currentTmplInsertionMode = this.tmplInsertionModeStack[this.tmplInsertionModeStackTop];
    }

    //Foster parenting
    _isElementCausesFosterParenting(element) {
        const tn = this.treeAdapter.getTagName(element);

        return tn === $.TABLE || tn === $.TBODY || tn === $.TFOOT || tn === $.THEAD || tn === $.TR;
    }

    _shouldFosterParentOnInsertion() {
        return this.fosterParentingEnabled && this._isElementCausesFosterParenting(this.openElements.current);
    }

    _findFosterParentingLocation() {
        const location = {
            parent: null,
            beforeElement: null
        };

        for (let i = this.openElements.stackTop; i >= 0; i--) {
            const openElement = this.openElements.items[i];
            const tn = this.treeAdapter.getTagName(openElement);
            const ns = this.treeAdapter.getNamespaceURI(openElement);

            if (tn === $.TEMPLATE && ns === NS.HTML) {
                location.parent = this.treeAdapter.getTemplateContent(openElement);
                break;
            } else if (tn === $.TABLE) {
                location.parent = this.treeAdapter.getParentNode(openElement);

                if (location.parent) {
                    location.beforeElement = openElement;
                } else {
                    location.parent = this.openElements.items[i - 1];
                }

                break;
            }
        }

        if (!location.parent) {
            location.parent = this.openElements.items[0];
        }

        return location;
    }

    _fosterParentElement(element) {
        const location = this._findFosterParentingLocation();

        if (location.beforeElement) {
            this.treeAdapter.insertBefore(location.parent, element, location.beforeElement);
        } else {
            this.treeAdapter.appendChild(location.parent, element);
        }
    }

    _fosterParentText(chars) {
        const location = this._findFosterParentingLocation();

        if (location.beforeElement) {
            this.treeAdapter.insertTextBefore(location.parent, chars, location.beforeElement);
        } else {
            this.treeAdapter.insertText(location.parent, chars);
        }
    }

    //Special elements
    _isSpecialElement(element) {
        const tn = this.treeAdapter.getTagName(element);
        const ns = this.treeAdapter.getNamespaceURI(element);

        return HTML.SPECIAL_ELEMENTS[ns][tn];
    }
}

module.exports = Parser;

//Adoption agency algorithm
//(see: http://www.whatwg.org/specs/web-apps/current-work/multipage/tree-construction.html#adoptionAgency)
//------------------------------------------------------------------

//Steps 5-8 of the algorithm
function aaObtainFormattingElementEntry(p, token) {
    let formattingElementEntry = p.activeFormattingElements.getElementEntryInScopeWithTagName(token.tagName);

    if (formattingElementEntry) {
        if (!p.openElements.contains(formattingElementEntry.element)) {
            p.activeFormattingElements.removeEntry(formattingElementEntry);
            formattingElementEntry = null;
        } else if (!p.openElements.hasInScope(token.tagName)) {
            formattingElementEntry = null;
        }
    } else {
        genericEndTagInBody(p, token);
    }

    return formattingElementEntry;
}

//Steps 9 and 10 of the algorithm
function aaObtainFurthestBlock(p, formattingElementEntry) {
    let furthestBlock = null;

    for (let i = p.openElements.stackTop; i >= 0; i--) {
        const element = p.openElements.items[i];

        if (element === formattingElementEntry.element) {
            break;
        }

        if (p._isSpecialElement(element)) {
            furthestBlock = element;
        }
    }

    if (!furthestBlock) {
        p.openElements.popUntilElementPopped(formattingElementEntry.element);
        p.activeFormattingElements.removeEntry(formattingElementEntry);
    }

    return furthestBlock;
}

//Step 13 of the algorithm
function aaInnerLoop(p, furthestBlock, formattingElement) {
    let lastElement = furthestBlock;
    let nextElement = p.openElements.getCommonAncestor(furthestBlock);

    for (let i = 0, element = nextElement; element !== formattingElement; i++, element = nextElement) {
        //NOTE: store next element for the next loop iteration (it may be deleted from the stack by step 9.5)
        nextElement = p.openElements.getCommonAncestor(element);

        const elementEntry = p.activeFormattingElements.getElementEntry(element);
        const counterOverflow = elementEntry && i >= AA_INNER_LOOP_ITER;
        const shouldRemoveFromOpenElements = !elementEntry || counterOverflow;

        if (shouldRemoveFromOpenElements) {
            if (counterOverflow) {
                p.activeFormattingElements.removeEntry(elementEntry);
            }

            p.openElements.remove(element);
        } else {
            element = aaRecreateElementFromEntry(p, elementEntry);

            if (lastElement === furthestBlock) {
                p.activeFormattingElements.bookmark = elementEntry;
            }

            p.treeAdapter.detachNode(lastElement);
            p.treeAdapter.appendChild(element, lastElement);
            lastElement = element;
        }
    }

    return lastElement;
}

//Step 13.7 of the algorithm
function aaRecreateElementFromEntry(p, elementEntry) {
    const ns = p.treeAdapter.getNamespaceURI(elementEntry.element);
    const newElement = p.treeAdapter.createElement(elementEntry.token.tagName, ns, elementEntry.token.attrs);

    p.openElements.replace(elementEntry.element, newElement);
    elementEntry.element = newElement;

    return newElement;
}

//Step 14 of the algorithm
function aaInsertLastNodeInCommonAncestor(p, commonAncestor, lastElement) {
    if (p._isElementCausesFosterParenting(commonAncestor)) {
        p._fosterParentElement(lastElement);
    } else {
        const tn = p.treeAdapter.getTagName(commonAncestor);
        const ns = p.treeAdapter.getNamespaceURI(commonAncestor);

        if (tn === $.TEMPLATE && ns === NS.HTML) {
            commonAncestor = p.treeAdapter.getTemplateContent(commonAncestor);
        }

        p.treeAdapter.appendChild(commonAncestor, lastElement);
    }
}

//Steps 15-19 of the algorithm
function aaReplaceFormattingElement(p, furthestBlock, formattingElementEntry) {
    const ns = p.treeAdapter.getNamespaceURI(formattingElementEntry.element);
    const token = formattingElementEntry.token;
    const newElement = p.treeAdapter.createElement(token.tagName, ns, token.attrs);

    p._adoptNodes(furthestBlock, newElement);
    p.treeAdapter.appendChild(furthestBlock, newElement);

    p.activeFormattingElements.insertElementAfterBookmark(newElement, formattingElementEntry.token);
    p.activeFormattingElements.removeEntry(formattingElementEntry);

    p.openElements.remove(formattingElementEntry.element);
    p.openElements.insertAfter(furthestBlock, newElement);
}

//Algorithm entry point
function callAdoptionAgency(p, token) {
    let formattingElementEntry;

    for (let i = 0; i < AA_OUTER_LOOP_ITER; i++) {
        formattingElementEntry = aaObtainFormattingElementEntry(p, token, formattingElementEntry);

        if (!formattingElementEntry) {
            break;
        }

        const furthestBlock = aaObtainFurthestBlock(p, formattingElementEntry);

        if (!furthestBlock) {
            break;
        }

        p.activeFormattingElements.bookmark = formattingElementEntry;

        const lastElement = aaInnerLoop(p, furthestBlock, formattingElementEntry.element);
        const commonAncestor = p.openElements.getCommonAncestor(formattingElementEntry.element);

        p.treeAdapter.detachNode(lastElement);
        aaInsertLastNodeInCommonAncestor(p, commonAncestor, lastElement);
        aaReplaceFormattingElement(p, furthestBlock, formattingElementEntry);
    }
}

//Generic token handlers
//------------------------------------------------------------------
function ignoreToken() {
    //NOTE: do nothing =)
}

function misplacedDoctype(p) {
    p._err(ERR.misplacedDoctype);
}

function appendComment(p, token) {
    p._appendCommentNode(token, p.openElements.currentTmplContent || p.openElements.current);
}

function appendCommentToRootHtmlElement(p, token) {
    p._appendCommentNode(token, p.openElements.items[0]);
}

function appendCommentToDocument(p, token) {
    p._appendCommentNode(token, p.document);
}

function insertCharacters(p, token) {
    p._insertCharacters(token);
}

function stopParsing(p) {
    p.stopped = true;
}

// The "initial" insertion mode
//------------------------------------------------------------------
function doctypeInInitialMode(p, token) {
    p._setDocumentType(token);

    const mode = token.forceQuirks ? HTML.DOCUMENT_MODE.QUIRKS : doctype.getDocumentMode(token);

    if (!doctype.isConforming(token)) {
        p._err(ERR.nonConformingDoctype);
    }

    p.treeAdapter.setDocumentMode(p.document, mode);

    p.insertionMode = BEFORE_HTML_MODE;
}

function tokenInInitialMode(p, token) {
    p._err(ERR.missingDoctype, { beforeToken: true });
    p.treeAdapter.setDocumentMode(p.document, HTML.DOCUMENT_MODE.QUIRKS);
    p.insertionMode = BEFORE_HTML_MODE;
    p._processToken(token);
}

// The "before html" insertion mode
//------------------------------------------------------------------
function startTagBeforeHtml(p, token) {
    if (token.tagName === $.HTML) {
        p._insertElement(token, NS.HTML);
        p.insertionMode = BEFORE_HEAD_MODE;
    } else {
        tokenBeforeHtml(p, token);
    }
}

function endTagBeforeHtml(p, token) {
    const tn = token.tagName;

    if (tn === $.HTML || tn === $.HEAD || tn === $.BODY || tn === $.BR) {
        tokenBeforeHtml(p, token);
    }
}

function tokenBeforeHtml(p, token) {
    p._insertFakeRootElement();
    p.insertionMode = BEFORE_HEAD_MODE;
    p._processToken(token);
}

// The "before head" insertion mode
//------------------------------------------------------------------
function startTagBeforeHead(p, token) {
    const tn = token.tagName;

    if (tn === $.HTML) {
        startTagInBody(p, token);
    } else if (tn === $.HEAD) {
        p._insertElement(token, NS.HTML);
        p.headElement = p.openElements.current;
        p.insertionMode = IN_HEAD_MODE;
    } else {
        tokenBeforeHead(p, token);
    }
}

function endTagBeforeHead(p, token) {
    const tn = token.tagName;

    if (tn === $.HEAD || tn === $.BODY || tn === $.HTML || tn === $.BR) {
        tokenBeforeHead(p, token);
    } else {
        p._err(ERR.endTagWithoutMatchingOpenElement);
    }
}

function tokenBeforeHead(p, token) {
    p._insertFakeElement($.HEAD);
    p.headElement = p.openElements.current;
    p.insertionMode = IN_HEAD_MODE;
    p._processToken(token);
}

// The "in head" insertion mode
//------------------------------------------------------------------
function startTagInHead(p, token) {
    const tn = token.tagName;

    if (tn === $.HTML) {
        startTagInBody(p, token);
    } else if (tn === $.BASE || tn === $.BASEFONT || tn === $.BGSOUND || tn === $.LINK || tn === $.META) {
        p._appendElement(token, NS.HTML);
        token.ackSelfClosing = true;
    } else if (tn === $.TITLE) {
        p._switchToTextParsing(token, Tokenizer.MODE.RCDATA);
    } else if (tn === $.NOSCRIPT) {
        if (p.options.scriptingEnabled) {
            p._switchToTextParsing(token, Tokenizer.MODE.RAWTEXT);
        } else {
            p._insertElement(token, NS.HTML);
            p.insertionMode = IN_HEAD_NO_SCRIPT_MODE;
        }
    } else if (tn === $.NOFRAMES || tn === $.STYLE) {
        p._switchToTextParsing(token, Tokenizer.MODE.RAWTEXT);
    } else if (tn === $.SCRIPT) {
        p._switchToTextParsing(token, Tokenizer.MODE.SCRIPT_DATA);
    } else if (tn === $.TEMPLATE) {
        p._insertTemplate(token, NS.HTML);
        p.activeFormattingElements.insertMarker();
        p.framesetOk = false;
        p.insertionMode = IN_TEMPLATE_MODE;
        p._pushTmplInsertionMode(IN_TEMPLATE_MODE);
    } else if (tn === $.HEAD) {
        p._err(ERR.misplacedStartTagForHeadElement);
    } else {
        tokenInHead(p, token);
    }
}

function endTagInHead(p, token) {
    const tn = token.tagName;

    if (tn === $.HEAD) {
        p.openElements.pop();
        p.insertionMode = AFTER_HEAD_MODE;
    } else if (tn === $.BODY || tn === $.BR || tn === $.HTML) {
        tokenInHead(p, token);
    } else if (tn === $.TEMPLATE) {
        if (p.openElements.tmplCount > 0) {
            p.openElements.generateImpliedEndTagsThoroughly();

            if (p.openElements.currentTagName !== $.TEMPLATE) {
                p._err(ERR.closingOfElementWithOpenChildElements);
            }

            p.openElements.popUntilTagNamePopped($.TEMPLATE);
            p.activeFormattingElements.clearToLastMarker();
            p._popTmplInsertionMode();
            p._resetInsertionMode();
        } else {
            p._err(ERR.endTagWithoutMatchingOpenElement);
        }
    } else {
        p._err(ERR.endTagWithoutMatchingOpenElement);
    }
}

function tokenInHead(p, token) {
    p.openElements.pop();
    p.insertionMode = AFTER_HEAD_MODE;
    p._processToken(token);
}

// The "in head no script" insertion mode
//------------------------------------------------------------------
function startTagInHeadNoScript(p, token) {
    const tn = token.tagName;

    if (tn === $.HTML) {
        startTagInBody(p, token);
    } else if (
        tn === $.BASEFONT ||
        tn === $.BGSOUND ||
        tn === $.HEAD ||
        tn === $.LINK ||
        tn === $.META ||
        tn === $.NOFRAMES ||
        tn === $.STYLE
    ) {
        startTagInHead(p, token);
    } else if (tn === $.NOSCRIPT) {
        p._err(ERR.nestedNoscriptInHead);
    } else {
        tokenInHeadNoScript(p, token);
    }
}

function endTagInHeadNoScript(p, token) {
    const tn = token.tagName;

    if (tn === $.NOSCRIPT) {
        p.openElements.pop();
        p.insertionMode = IN_HEAD_MODE;
    } else if (tn === $.BR) {
        tokenInHeadNoScript(p, token);
    } else {
        p._err(ERR.endTagWithoutMatchingOpenElement);
    }
}

function tokenInHeadNoScript(p, token) {
    const errCode =
        token.type === Tokenizer.EOF_TOKEN ? ERR.openElementsLeftAfterEof : ERR.disallowedContentInNoscriptInHead;

    p._err(errCode);
    p.openElements.pop();
    p.insertionMode = IN_HEAD_MODE;
    p._processToken(token);
}

// The "after head" insertion mode
//------------------------------------------------------------------
function startTagAfterHead(p, token) {
    const tn = token.tagName;

    if (tn === $.HTML) {
        startTagInBody(p, token);
    } else if (tn === $.BODY) {
        p._insertElement(token, NS.HTML);
        p.framesetOk = false;
        p.insertionMode = IN_BODY_MODE;
    } else if (tn === $.FRAMESET) {
        p._insertElement(token, NS.HTML);
        p.insertionMode = IN_FRAMESET_MODE;
    } else if (
        tn === $.BASE ||
        tn === $.BASEFONT ||
        tn === $.BGSOUND ||
        tn === $.LINK ||
        tn === $.META ||
        tn === $.NOFRAMES ||
        tn === $.SCRIPT ||
        tn === $.STYLE ||
        tn === $.TEMPLATE ||
        tn === $.TITLE
    ) {
        p._err(ERR.abandonedHeadElementChild);
        p.openElements.push(p.headElement);
        startTagInHead(p, token);
        p.openElements.remove(p.headElement);
    } else if (tn === $.HEAD) {
        p._err(ERR.misplacedStartTagForHeadElement);
    } else {
        tokenAfterHead(p, token);
    }
}

function endTagAfterHead(p, token) {
    const tn = token.tagName;

    if (tn === $.BODY || tn === $.HTML || tn === $.BR) {
        tokenAfterHead(p, token);
    } else if (tn === $.TEMPLATE) {
        endTagInHead(p, token);
    } else {
        p._err(ERR.endTagWithoutMatchingOpenElement);
    }
}

function tokenAfterHead(p, token) {
    p._insertFakeElement($.BODY);
    p.insertionMode = IN_BODY_MODE;
    p._processToken(token);
}

// The "in body" insertion mode
//------------------------------------------------------------------
function whitespaceCharacterInBody(p, token) {
    p._reconstructActiveFormattingElements();
    p._insertCharacters(token);
}

function characterInBody(p, token) {
    p._reconstructActiveFormattingElements();
    p._insertCharacters(token);
    p.framesetOk = false;
}

function htmlStartTagInBody(p, token) {
    if (p.openElements.tmplCount === 0) {
        p.treeAdapter.adoptAttributes(p.openElements.items[0], token.attrs);
    }
}

function bodyStartTagInBody(p, token) {
    const bodyElement = p.openElements.tryPeekProperlyNestedBodyElement();

    if (bodyElement && p.openElements.tmplCount === 0) {
        p.framesetOk = false;
        p.treeAdapter.adoptAttributes(bodyElement, token.attrs);
    }
}

function framesetStartTagInBody(p, token) {
    const bodyElement = p.openElements.tryPeekProperlyNestedBodyElement();

    if (p.framesetOk && bodyElement) {
        p.treeAdapter.detachNode(bodyElement);
        p.openElements.popAllUpToHtmlElement();
        p._insertElement(token, NS.HTML);
        p.insertionMode = IN_FRAMESET_MODE;
    }
}

function addressStartTagInBody(p, token) {
    if (p.openElements.hasInButtonScope($.P)) {
        p._closePElement();
    }

    p._insertElement(token, NS.HTML);
}

function numberedHeaderStartTagInBody(p, token) {
    if (p.openElements.hasInButtonScope($.P)) {
        p._closePElement();
    }

    const tn = p.openElements.currentTagName;

    if (tn === $.H1 || tn === $.H2 || tn === $.H3 || tn === $.H4 || tn === $.H5 || tn === $.H6) {
        p.openElements.pop();
    }

    p._insertElement(token, NS.HTML);
}

function preStartTagInBody(p, token) {
    if (p.openElements.hasInButtonScope($.P)) {
        p._closePElement();
    }

    p._insertElement(token, NS.HTML);
    //NOTE: If the next token is a U+000A LINE FEED (LF) character token, then ignore that token and move
    //on to the next one. (Newlines at the start of pre blocks are ignored as an authoring convenience.)
    p.skipNextNewLine = true;
    p.framesetOk = false;
}

function formStartTagInBody(p, token) {
    const inTemplate = p.openElements.tmplCount > 0;

    if (!p.formElement || inTemplate) {
        if (p.openElements.hasInButtonScope($.P)) {
            p._closePElement();
        }

        p._insertElement(token, NS.HTML);

        if (!inTemplate) {
            p.formElement = p.openElements.current;
        }
    }
}

function listItemStartTagInBody(p, token) {
    p.framesetOk = false;

    const tn = token.tagName;

    for (let i = p.openElements.stackTop; i >= 0; i--) {
        const element = p.openElements.items[i];
        const elementTn = p.treeAdapter.getTagName(element);
        let closeTn = null;

        if (tn === $.LI && elementTn === $.LI) {
            closeTn = $.LI;
        } else if ((tn === $.DD || tn === $.DT) && (elementTn === $.DD || elementTn === $.DT)) {
            closeTn = elementTn;
        }

        if (closeTn) {
            p.openElements.generateImpliedEndTagsWithExclusion(closeTn);
            p.openElements.popUntilTagNamePopped(closeTn);
            break;
        }

        if (elementTn !== $.ADDRESS && elementTn !== $.DIV && elementTn !== $.P && p._isSpecialElement(element)) {
            break;
        }
    }

    if (p.openElements.hasInButtonScope($.P)) {
        p._closePElement();
    }

    p._insertElement(token, NS.HTML);
}

function plaintextStartTagInBody(p, token) {
    if (p.openElements.hasInButtonScope($.P)) {
        p._closePElement();
    }

    p._insertElement(token, NS.HTML);
    p.tokenizer.state = Tokenizer.MODE.PLAINTEXT;
}

function buttonStartTagInBody(p, token) {
    if (p.openElements.hasInScope($.BUTTON)) {
        p.openElements.generateImpliedEndTags();
        p.openElements.popUntilTagNamePopped($.BUTTON);
    }

    p._reconstructActiveFormattingElements();
    p._insertElement(token, NS.HTML);
    p.framesetOk = false;
}

function aStartTagInBody(p, token) {
    const activeElementEntry = p.activeFormattingElements.getElementEntryInScopeWithTagName($.A);

    if (activeElementEntry) {
        callAdoptionAgency(p, token);
        p.openElements.remove(activeElementEntry.element);
        p.activeFormattingElements.removeEntry(activeElementEntry);
    }

    p._reconstructActiveFormattingElements();
    p._insertElement(token, NS.HTML);
    p.activeFormattingElements.pushElement(p.openElements.current, token);
}

function bStartTagInBody(p, token) {
    p._reconstructActiveFormattingElements();
    p._insertElement(token, NS.HTML);
    p.activeFormattingElements.pushElement(p.openElements.current, token);
}

function nobrStartTagInBody(p, token) {
    p._reconstructActiveFormattingElements();

    if (p.openElements.hasInScope($.NOBR)) {
        callAdoptionAgency(p, token);
        p._reconstructActiveFormattingElements();
    }

    p._insertElement(token, NS.HTML);
    p.activeFormattingElements.pushElement(p.openElements.current, token);
}

function appletStartTagInBody(p, token) {
    p._reconstructActiveFormattingElements();
    p._insertElement(token, NS.HTML);
    p.activeFormattingElements.insertMarker();
    p.framesetOk = false;
}

function tableStartTagInBody(p, token) {
    if (
        p.treeAdapter.getDocumentMode(p.document) !== HTML.DOCUMENT_MODE.QUIRKS &&
        p.openElements.hasInButtonScope($.P)
    ) {
        p._closePElement();
    }

    p._insertElement(token, NS.HTML);
    p.framesetOk = false;
    p.insertionMode = IN_TABLE_MODE;
}

function areaStartTagInBody(p, token) {
    p._reconstructActiveFormattingElements();
    p._appendElement(token, NS.HTML);
    p.framesetOk = false;
    token.ackSelfClosing = true;
}

function inputStartTagInBody(p, token) {
    p._reconstructActiveFormattingElements();
    p._appendElement(token, NS.HTML);

    const inputType = Tokenizer.getTokenAttr(token, ATTRS.TYPE);

    if (!inputType || inputType.toLowerCase() !== HIDDEN_INPUT_TYPE) {
        p.framesetOk = false;
    }

    token.ackSelfClosing = true;
}

function paramStartTagInBody(p, token) {
    p._appendElement(token, NS.HTML);
    token.ackSelfClosing = true;
}

function hrStartTagInBody(p, token) {
    if (p.openElements.hasInButtonScope($.P)) {
        p._closePElement();
    }

    p._appendElement(token, NS.HTML);
    p.framesetOk = false;
    p.ackSelfClosing = true;
}

function imageStartTagInBody(p, token) {
    token.tagName = $.IMG;
    areaStartTagInBody(p, token);
}

function textareaStartTagInBody(p, token) {
    p._insertElement(token, NS.HTML);
    //NOTE: If the next token is a U+000A LINE FEED (LF) character token, then ignore that token and move
    //on to the next one. (Newlines at the start of textarea elements are ignored as an authoring convenience.)
    p.skipNextNewLine = true;
    p.tokenizer.state = Tokenizer.MODE.RCDATA;
    p.originalInsertionMode = p.insertionMode;
    p.framesetOk = false;
    p.insertionMode = TEXT_MODE;
}

function xmpStartTagInBody(p, token) {
    if (p.openElements.hasInButtonScope($.P)) {
        p._closePElement();
    }

    p._reconstructActiveFormattingElements();
    p.framesetOk = false;
    p._switchToTextParsing(token, Tokenizer.MODE.RAWTEXT);
}

function iframeStartTagInBody(p, token) {
    p.framesetOk = false;
    p._switchToTextParsing(token, Tokenizer.MODE.RAWTEXT);
}

//NOTE: here we assume that we always act as an user agent with enabled plugins, so we parse
//<noembed> as a rawtext.
function noembedStartTagInBody(p, token) {
    p._switchToTextParsing(token, Tokenizer.MODE.RAWTEXT);
}

function selectStartTagInBody(p, token) {
    p._reconstructActiveFormattingElements();
    p._insertElement(token, NS.HTML);
    p.framesetOk = false;

    if (
        p.insertionMode === IN_TABLE_MODE ||
        p.insertionMode === IN_CAPTION_MODE ||
        p.insertionMode === IN_TABLE_BODY_MODE ||
        p.insertionMode === IN_ROW_MODE ||
        p.insertionMode === IN_CELL_MODE
    ) {
        p.insertionMode = IN_SELECT_IN_TABLE_MODE;
    } else {
        p.insertionMode = IN_SELECT_MODE;
    }
}

function optgroupStartTagInBody(p, token) {
    if (p.openElements.currentTagName === $.OPTION) {
        p.openElements.pop();
    }

    p._reconstructActiveFormattingElements();
    p._insertElement(token, NS.HTML);
}

function rbStartTagInBody(p, token) {
    if (p.openElements.hasInScope($.RUBY)) {
        p.openElements.generateImpliedEndTags();
    }

    p._insertElement(token, NS.HTML);
}

function rtStartTagInBody(p, token) {
    if (p.openElements.hasInScope($.RUBY)) {
        p.openElements.generateImpliedEndTagsWithExclusion($.RTC);
    }

    p._insertElement(token, NS.HTML);
}

function menuStartTagInBody(p, token) {
    if (p.openElements.hasInButtonScope($.P)) {
        p._closePElement();
    }

    p._insertElement(token, NS.HTML);
}

function mathStartTagInBody(p, token) {
    p._reconstructActiveFormattingElements();

    foreignContent.adjustTokenMathMLAttrs(token);
    foreignContent.adjustTokenXMLAttrs(token);

    if (token.selfClosing) {
        p._appendElement(token, NS.MATHML);
    } else {
        p._insertElement(token, NS.MATHML);
    }

    token.ackSelfClosing = true;
}

function svgStartTagInBody(p, token) {
    p._reconstructActiveFormattingElements();

    foreignContent.adjustTokenSVGAttrs(token);
    foreignContent.adjustTokenXMLAttrs(token);

    if (token.selfClosing) {
        p._appendElement(token, NS.SVG);
    } else {
        p._insertElement(token, NS.SVG);
    }

    token.ackSelfClosing = true;
}

function genericStartTagInBody(p, token) {
    p._reconstructActiveFormattingElements();
    p._insertElement(token, NS.HTML);
}

//OPTIMIZATION: Integer comparisons are low-cost, so we can use very fast tag name length filters here.
//It's faster than using dictionary.
function startTagInBody(p, token) {
    const tn = token.tagName;

    switch (tn.length) {
        case 1:
            if (tn === $.I || tn === $.S || tn === $.B || tn === $.U) {
                bStartTagInBody(p, token);
            } else if (tn === $.P) {
                addressStartTagInBody(p, token);
            } else if (tn === $.A) {
                aStartTagInBody(p, token);
            } else {
                genericStartTagInBody(p, token);
            }

            break;

        case 2:
            if (tn === $.DL || tn === $.OL || tn === $.UL) {
                addressStartTagInBody(p, token);
            } else if (tn === $.H1 || tn === $.H2 || tn === $.H3 || tn === $.H4 || tn === $.H5 || tn === $.H6) {
                numberedHeaderStartTagInBody(p, token);
            } else if (tn === $.LI || tn === $.DD || tn === $.DT) {
                listItemStartTagInBody(p, token);
            } else if (tn === $.EM || tn === $.TT) {
                bStartTagInBody(p, token);
            } else if (tn === $.BR) {
                areaStartTagInBody(p, token);
            } else if (tn === $.HR) {
                hrStartTagInBody(p, token);
            } else if (tn === $.RB) {
                rbStartTagInBody(p, token);
            } else if (tn === $.RT || tn === $.RP) {
                rtStartTagInBody(p, token);
            } else if (tn !== $.TH && tn !== $.TD && tn !== $.TR) {
                genericStartTagInBody(p, token);
            }

            break;

        case 3:
            if (tn === $.DIV || tn === $.DIR || tn === $.NAV) {
                addressStartTagInBody(p, token);
            } else if (tn === $.PRE) {
                preStartTagInBody(p, token);
            } else if (tn === $.BIG) {
                bStartTagInBody(p, token);
            } else if (tn === $.IMG || tn === $.WBR) {
                areaStartTagInBody(p, token);
            } else if (tn === $.XMP) {
                xmpStartTagInBody(p, token);
            } else if (tn === $.SVG) {
                svgStartTagInBody(p, token);
            } else if (tn === $.RTC) {
                rbStartTagInBody(p, token);
            } else if (tn !== $.COL) {
                genericStartTagInBody(p, token);
            }

            break;

        case 4:
            if (tn === $.HTML) {
                htmlStartTagInBody(p, token);
            } else if (tn === $.BASE || tn === $.LINK || tn === $.META) {
                startTagInHead(p, token);
            } else if (tn === $.BODY) {
                bodyStartTagInBody(p, token);
            } else if (tn === $.MAIN || tn === $.MENU) {
                addressStartTagInBody(p, token);
            } else if (tn === $.FORM) {
                formStartTagInBody(p, token);
            } else if (tn === $.CODE || tn === $.FONT) {
                bStartTagInBody(p, token);
            } else if (tn === $.NOBR) {
                nobrStartTagInBody(p, token);
            } else if (tn === $.AREA) {
                areaStartTagInBody(p, token);
            } else if (tn === $.MATH) {
                mathStartTagInBody(p, token);
            } else if (tn === $.MENU) {
                menuStartTagInBody(p, token);
            } else if (tn !== $.HEAD) {
                genericStartTagInBody(p, token);
            }

            break;

        case 5:
            if (tn === $.STYLE || tn === $.TITLE) {
                startTagInHead(p, token);
            } else if (tn === $.ASIDE) {
                addressStartTagInBody(p, token);
            } else if (tn === $.SMALL) {
                bStartTagInBody(p, token);
            } else if (tn === $.TABLE) {
                tableStartTagInBody(p, token);
            } else if (tn === $.EMBED) {
                areaStartTagInBody(p, token);
            } else if (tn === $.INPUT) {
                inputStartTagInBody(p, token);
            } else if (tn === $.PARAM || tn === $.TRACK) {
                paramStartTagInBody(p, token);
            } else if (tn === $.IMAGE) {
                imageStartTagInBody(p, token);
            } else if (tn !== $.FRAME && tn !== $.TBODY && tn !== $.TFOOT && tn !== $.THEAD) {
                genericStartTagInBody(p, token);
            }

            break;

        case 6:
            if (tn === $.SCRIPT) {
                startTagInHead(p, token);
            } else if (
                tn === $.CENTER ||
                tn === $.FIGURE ||
                tn === $.FOOTER ||
                tn === $.HEADER ||
                tn === $.HGROUP ||
                tn === $.DIALOG
            ) {
                addressStartTagInBody(p, token);
            } else if (tn === $.BUTTON) {
                buttonStartTagInBody(p, token);
            } else if (tn === $.STRIKE || tn === $.STRONG) {
                bStartTagInBody(p, token);
            } else if (tn === $.APPLET || tn === $.OBJECT) {
                appletStartTagInBody(p, token);
            } else if (tn === $.KEYGEN) {
                areaStartTagInBody(p, token);
            } else if (tn === $.SOURCE) {
                paramStartTagInBody(p, token);
            } else if (tn === $.IFRAME) {
                iframeStartTagInBody(p, token);
            } else if (tn === $.SELECT) {
                selectStartTagInBody(p, token);
            } else if (tn === $.OPTION) {
                optgroupStartTagInBody(p, token);
            } else {
                genericStartTagInBody(p, token);
            }

            break;

        case 7:
            if (tn === $.BGSOUND) {
                startTagInHead(p, token);
            } else if (
                tn === $.DETAILS ||
                tn === $.ADDRESS ||
                tn === $.ARTICLE ||
                tn === $.SECTION ||
                tn === $.SUMMARY
            ) {
                addressStartTagInBody(p, token);
            } else if (tn === $.LISTING) {
                preStartTagInBody(p, token);
            } else if (tn === $.MARQUEE) {
                appletStartTagInBody(p, token);
            } else if (tn === $.NOEMBED) {
                noembedStartTagInBody(p, token);
            } else if (tn !== $.CAPTION) {
                genericStartTagInBody(p, token);
            }

            break;

        case 8:
            if (tn === $.BASEFONT) {
                startTagInHead(p, token);
            } else if (tn === $.FRAMESET) {
                framesetStartTagInBody(p, token);
            } else if (tn === $.FIELDSET) {
                addressStartTagInBody(p, token);
            } else if (tn === $.TEXTAREA) {
                textareaStartTagInBody(p, token);
            } else if (tn === $.TEMPLATE) {
                startTagInHead(p, token);
            } else if (tn === $.NOSCRIPT) {
                if (p.options.scriptingEnabled) {
                    noembedStartTagInBody(p, token);
                } else {
                    genericStartTagInBody(p, token);
                }
            } else if (tn === $.OPTGROUP) {
                optgroupStartTagInBody(p, token);
            } else if (tn !== $.COLGROUP) {
                genericStartTagInBody(p, token);
            }

            break;

        case 9:
            if (tn === $.PLAINTEXT) {
                plaintextStartTagInBody(p, token);
            } else {
                genericStartTagInBody(p, token);
            }

            break;

        case 10:
            if (tn === $.BLOCKQUOTE || tn === $.FIGCAPTION) {
                addressStartTagInBody(p, token);
            } else {
                genericStartTagInBody(p, token);
            }

            break;

        default:
            genericStartTagInBody(p, token);
    }
}

function bodyEndTagInBody(p) {
    if (p.openElements.hasInScope($.BODY)) {
        p.insertionMode = AFTER_BODY_MODE;
    }
}

function htmlEndTagInBody(p, token) {
    if (p.openElements.hasInScope($.BODY)) {
        p.insertionMode = AFTER_BODY_MODE;
        p._processToken(token);
    }
}

function addressEndTagInBody(p, token) {
    const tn = token.tagName;

    if (p.openElements.hasInScope(tn)) {
        p.openElements.generateImpliedEndTags();
        p.openElements.popUntilTagNamePopped(tn);
    }
}

function formEndTagInBody(p) {
    const inTemplate = p.openElements.tmplCount > 0;
    const formElement = p.formElement;

    if (!inTemplate) {
        p.formElement = null;
    }

    if ((formElement || inTemplate) && p.openElements.hasInScope($.FORM)) {
        p.openElements.generateImpliedEndTags();

        if (inTemplate) {
            p.openElements.popUntilTagNamePopped($.FORM);
        } else {
            p.openElements.remove(formElement);
        }
    }
}

function pEndTagInBody(p) {
    if (!p.openElements.hasInButtonScope($.P)) {
        p._insertFakeElement($.P);
    }

    p._closePElement();
}

function liEndTagInBody(p) {
    if (p.openElements.hasInListItemScope($.LI)) {
        p.openElements.generateImpliedEndTagsWithExclusion($.LI);
        p.openElements.popUntilTagNamePopped($.LI);
    }
}

function ddEndTagInBody(p, token) {
    const tn = token.tagName;

    if (p.openElements.hasInScope(tn)) {
        p.openElements.generateImpliedEndTagsWithExclusion(tn);
        p.openElements.popUntilTagNamePopped(tn);
    }
}

function numberedHeaderEndTagInBody(p) {
    if (p.openElements.hasNumberedHeaderInScope()) {
        p.openElements.generateImpliedEndTags();
        p.openElements.popUntilNumberedHeaderPopped();
    }
}

function appletEndTagInBody(p, token) {
    const tn = token.tagName;

    if (p.openElements.hasInScope(tn)) {
        p.openElements.generateImpliedEndTags();
        p.openElements.popUntilTagNamePopped(tn);
        p.activeFormattingElements.clearToLastMarker();
    }
}

function brEndTagInBody(p) {
    p._reconstructActiveFormattingElements();
    p._insertFakeElement($.BR);
    p.openElements.pop();
    p.framesetOk = false;
}

function genericEndTagInBody(p, token) {
    const tn = token.tagName;

    for (let i = p.openElements.stackTop; i > 0; i--) {
        const element = p.openElements.items[i];

        if (p.treeAdapter.getTagName(element) === tn) {
            p.openElements.generateImpliedEndTagsWithExclusion(tn);
            p.openElements.popUntilElementPopped(element);
            break;
        }

        if (p._isSpecialElement(element)) {
            break;
        }
    }
}

//OPTIMIZATION: Integer comparisons are low-cost, so we can use very fast tag name length filters here.
//It's faster than using dictionary.
function endTagInBody(p, token) {
    const tn = token.tagName;

    switch (tn.length) {
        case 1:
            if (tn === $.A || tn === $.B || tn === $.I || tn === $.S || tn === $.U) {
                callAdoptionAgency(p, token);
            } else if (tn === $.P) {
                pEndTagInBody(p, token);
            } else {
                genericEndTagInBody(p, token);
            }

            break;

        case 2:
            if (tn === $.DL || tn === $.UL || tn === $.OL) {
                addressEndTagInBody(p, token);
            } else if (tn === $.LI) {
                liEndTagInBody(p, token);
            } else if (tn === $.DD || tn === $.DT) {
                ddEndTagInBody(p, token);
            } else if (tn === $.H1 || tn === $.H2 || tn === $.H3 || tn === $.H4 || tn === $.H5 || tn === $.H6) {
                numberedHeaderEndTagInBody(p, token);
            } else if (tn === $.BR) {
                brEndTagInBody(p, token);
            } else if (tn === $.EM || tn === $.TT) {
                callAdoptionAgency(p, token);
            } else {
                genericEndTagInBody(p, token);
            }

            break;

        case 3:
            if (tn === $.BIG) {
                callAdoptionAgency(p, token);
            } else if (tn === $.DIR || tn === $.DIV || tn === $.NAV || tn === $.PRE) {
                addressEndTagInBody(p, token);
            } else {
                genericEndTagInBody(p, token);
            }

            break;

        case 4:
            if (tn === $.BODY) {
                bodyEndTagInBody(p, token);
            } else if (tn === $.HTML) {
                htmlEndTagInBody(p, token);
            } else if (tn === $.FORM) {
                formEndTagInBody(p, token);
            } else if (tn === $.CODE || tn === $.FONT || tn === $.NOBR) {
                callAdoptionAgency(p, token);
            } else if (tn === $.MAIN || tn === $.MENU) {
                addressEndTagInBody(p, token);
            } else {
                genericEndTagInBody(p, token);
            }

            break;

        case 5:
            if (tn === $.ASIDE) {
                addressEndTagInBody(p, token);
            } else if (tn === $.SMALL) {
                callAdoptionAgency(p, token);
            } else {
                genericEndTagInBody(p, token);
            }

            break;

        case 6:
            if (
                tn === $.CENTER ||
                tn === $.FIGURE ||
                tn === $.FOOTER ||
                tn === $.HEADER ||
                tn === $.HGROUP ||
                tn === $.DIALOG
            ) {
                addressEndTagInBody(p, token);
            } else if (tn === $.APPLET || tn === $.OBJECT) {
                appletEndTagInBody(p, token);
            } else if (tn === $.STRIKE || tn === $.STRONG) {
                callAdoptionAgency(p, token);
            } else {
                genericEndTagInBody(p, token);
            }

            break;

        case 7:
            if (
                tn === $.ADDRESS ||
                tn === $.ARTICLE ||
                tn === $.DETAILS ||
                tn === $.SECTION ||
                tn === $.SUMMARY ||
                tn === $.LISTING
            ) {
                addressEndTagInBody(p, token);
            } else if (tn === $.MARQUEE) {
                appletEndTagInBody(p, token);
            } else {
                genericEndTagInBody(p, token);
            }

            break;

        case 8:
            if (tn === $.FIELDSET) {
                addressEndTagInBody(p, token);
            } else if (tn === $.TEMPLATE) {
                endTagInHead(p, token);
            } else {
                genericEndTagInBody(p, token);
            }

            break;

        case 10:
            if (tn === $.BLOCKQUOTE || tn === $.FIGCAPTION) {
                addressEndTagInBody(p, token);
            } else {
                genericEndTagInBody(p, token);
            }

            break;

        default:
            genericEndTagInBody(p, token);
    }
}

function eofInBody(p, token) {
    if (p.tmplInsertionModeStackTop > -1) {
        eofInTemplate(p, token);
    } else {
        p.stopped = true;
    }
}

// The "text" insertion mode
//------------------------------------------------------------------
function endTagInText(p, token) {
    if (token.tagName === $.SCRIPT) {
        p.pendingScript = p.openElements.current;
    }

    p.openElements.pop();
    p.insertionMode = p.originalInsertionMode;
}

function eofInText(p, token) {
    p._err(ERR.eofInElementThatCanContainOnlyText);
    p.openElements.pop();
    p.insertionMode = p.originalInsertionMode;
    p._processToken(token);
}

// The "in table" insertion mode
//------------------------------------------------------------------
function characterInTable(p, token) {
    const curTn = p.openElements.currentTagName;

    if (curTn === $.TABLE || curTn === $.TBODY || curTn === $.TFOOT || curTn === $.THEAD || curTn === $.TR) {
        p.pendingCharacterTokens = [];
        p.hasNonWhitespacePendingCharacterToken = false;
        p.originalInsertionMode = p.insertionMode;
        p.insertionMode = IN_TABLE_TEXT_MODE;
        p._processToken(token);
    } else {
        tokenInTable(p, token);
    }
}

function captionStartTagInTable(p, token) {
    p.openElements.clearBackToTableContext();
    p.activeFormattingElements.insertMarker();
    p._insertElement(token, NS.HTML);
    p.insertionMode = IN_CAPTION_MODE;
}

function colgroupStartTagInTable(p, token) {
    p.openElements.clearBackToTableContext();
    p._insertElement(token, NS.HTML);
    p.insertionMode = IN_COLUMN_GROUP_MODE;
}

function colStartTagInTable(p, token) {
    p.openElements.clearBackToTableContext();
    p._insertFakeElement($.COLGROUP);
    p.insertionMode = IN_COLUMN_GROUP_MODE;
    p._processToken(token);
}

function tbodyStartTagInTable(p, token) {
    p.openElements.clearBackToTableContext();
    p._insertElement(token, NS.HTML);
    p.insertionMode = IN_TABLE_BODY_MODE;
}

function tdStartTagInTable(p, token) {
    p.openElements.clearBackToTableContext();
    p._insertFakeElement($.TBODY);
    p.insertionMode = IN_TABLE_BODY_MODE;
    p._processToken(token);
}

function tableStartTagInTable(p, token) {
    if (p.openElements.hasInTableScope($.TABLE)) {
        p.openElements.popUntilTagNamePopped($.TABLE);
        p._resetInsertionMode();
        p._processToken(token);
    }
}

function inputStartTagInTable(p, token) {
    const inputType = Tokenizer.getTokenAttr(token, ATTRS.TYPE);

    if (inputType && inputType.toLowerCase() === HIDDEN_INPUT_TYPE) {
        p._appendElement(token, NS.HTML);
    } else {
        tokenInTable(p, token);
    }

    token.ackSelfClosing = true;
}

function formStartTagInTable(p, token) {
    if (!p.formElement && p.openElements.tmplCount === 0) {
        p._insertElement(token, NS.HTML);
        p.formElement = p.openElements.current;
        p.openElements.pop();
    }
}

function startTagInTable(p, token) {
    const tn = token.tagName;

    switch (tn.length) {
        case 2:
            if (tn === $.TD || tn === $.TH || tn === $.TR) {
                tdStartTagInTable(p, token);
            } else {
                tokenInTable(p, token);
            }

            break;

        case 3:
            if (tn === $.COL) {
                colStartTagInTable(p, token);
            } else {
                tokenInTable(p, token);
            }

            break;

        case 4:
            if (tn === $.FORM) {
                formStartTagInTable(p, token);
            } else {
                tokenInTable(p, token);
            }

            break;

        case 5:
            if (tn === $.TABLE) {
                tableStartTagInTable(p, token);
            } else if (tn === $.STYLE) {
                startTagInHead(p, token);
            } else if (tn === $.TBODY || tn === $.TFOOT || tn === $.THEAD) {
                tbodyStartTagInTable(p, token);
            } else if (tn === $.INPUT) {
                inputStartTagInTable(p, token);
            } else {
                tokenInTable(p, token);
            }

            break;

        case 6:
            if (tn === $.SCRIPT) {
                startTagInHead(p, token);
            } else {
                tokenInTable(p, token);
            }

            break;

        case 7:
            if (tn === $.CAPTION) {
                captionStartTagInTable(p, token);
            } else {
                tokenInTable(p, token);
            }

            break;

        case 8:
            if (tn === $.COLGROUP) {
                colgroupStartTagInTable(p, token);
            } else if (tn === $.TEMPLATE) {
                startTagInHead(p, token);
            } else {
                tokenInTable(p, token);
            }

            break;

        default:
            tokenInTable(p, token);
    }
}

function endTagInTable(p, token) {
    const tn = token.tagName;

    if (tn === $.TABLE) {
        if (p.openElements.hasInTableScope($.TABLE)) {
            p.openElements.popUntilTagNamePopped($.TABLE);
            p._resetInsertionMode();
        }
    } else if (tn === $.TEMPLATE) {
        endTagInHead(p, token);
    } else if (
        tn !== $.BODY &&
        tn !== $.CAPTION &&
        tn !== $.COL &&
        tn !== $.COLGROUP &&
        tn !== $.HTML &&
        tn !== $.TBODY &&
        tn !== $.TD &&
        tn !== $.TFOOT &&
        tn !== $.TH &&
        tn !== $.THEAD &&
        tn !== $.TR
    ) {
        tokenInTable(p, token);
    }
}

function tokenInTable(p, token) {
    const savedFosterParentingState = p.fosterParentingEnabled;

    p.fosterParentingEnabled = true;
    p._processTokenInBodyMode(token);
    p.fosterParentingEnabled = savedFosterParentingState;
}

// The "in table text" insertion mode
//------------------------------------------------------------------
function whitespaceCharacterInTableText(p, token) {
    p.pendingCharacterTokens.push(token);
}

function characterInTableText(p, token) {
    p.pendingCharacterTokens.push(token);
    p.hasNonWhitespacePendingCharacterToken = true;
}

function tokenInTableText(p, token) {
    let i = 0;

    if (p.hasNonWhitespacePendingCharacterToken) {
        for (; i < p.pendingCharacterTokens.length; i++) {
            tokenInTable(p, p.pendingCharacterTokens[i]);
        }
    } else {
        for (; i < p.pendingCharacterTokens.length; i++) {
            p._insertCharacters(p.pendingCharacterTokens[i]);
        }
    }

    p.insertionMode = p.originalInsertionMode;
    p._processToken(token);
}

// The "in caption" insertion mode
//------------------------------------------------------------------
function startTagInCaption(p, token) {
    const tn = token.tagName;

    if (
        tn === $.CAPTION ||
        tn === $.COL ||
        tn === $.COLGROUP ||
        tn === $.TBODY ||
        tn === $.TD ||
        tn === $.TFOOT ||
        tn === $.TH ||
        tn === $.THEAD ||
        tn === $.TR
    ) {
        if (p.openElements.hasInTableScope($.CAPTION)) {
            p.openElements.generateImpliedEndTags();
            p.openElements.popUntilTagNamePopped($.CAPTION);
            p.activeFormattingElements.clearToLastMarker();
            p.insertionMode = IN_TABLE_MODE;
            p._processToken(token);
        }
    } else {
        startTagInBody(p, token);
    }
}

function endTagInCaption(p, token) {
    const tn = token.tagName;

    if (tn === $.CAPTION || tn === $.TABLE) {
        if (p.openElements.hasInTableScope($.CAPTION)) {
            p.openElements.generateImpliedEndTags();
            p.openElements.popUntilTagNamePopped($.CAPTION);
            p.activeFormattingElements.clearToLastMarker();
            p.insertionMode = IN_TABLE_MODE;

            if (tn === $.TABLE) {
                p._processToken(token);
            }
        }
    } else if (
        tn !== $.BODY &&
        tn !== $.COL &&
        tn !== $.COLGROUP &&
        tn !== $.HTML &&
        tn !== $.TBODY &&
        tn !== $.TD &&
        tn !== $.TFOOT &&
        tn !== $.TH &&
        tn !== $.THEAD &&
        tn !== $.TR
    ) {
        endTagInBody(p, token);
    }
}

// The "in column group" insertion mode
//------------------------------------------------------------------
function startTagInColumnGroup(p, token) {
    const tn = token.tagName;

    if (tn === $.HTML) {
        startTagInBody(p, token);
    } else if (tn === $.COL) {
        p._appendElement(token, NS.HTML);
        token.ackSelfClosing = true;
    } else if (tn === $.TEMPLATE) {
        startTagInHead(p, token);
    } else {
        tokenInColumnGroup(p, token);
    }
}

function endTagInColumnGroup(p, token) {
    const tn = token.tagName;

    if (tn === $.COLGROUP) {
        if (p.openElements.currentTagName === $.COLGROUP) {
            p.openElements.pop();
            p.insertionMode = IN_TABLE_MODE;
        }
    } else if (tn === $.TEMPLATE) {
        endTagInHead(p, token);
    } else if (tn !== $.COL) {
        tokenInColumnGroup(p, token);
    }
}

function tokenInColumnGroup(p, token) {
    if (p.openElements.currentTagName === $.COLGROUP) {
        p.openElements.pop();
        p.insertionMode = IN_TABLE_MODE;
        p._processToken(token);
    }
}

// The "in table body" insertion mode
//------------------------------------------------------------------
function startTagInTableBody(p, token) {
    const tn = token.tagName;

    if (tn === $.TR) {
        p.openElements.clearBackToTableBodyContext();
        p._insertElement(token, NS.HTML);
        p.insertionMode = IN_ROW_MODE;
    } else if (tn === $.TH || tn === $.TD) {
        p.openElements.clearBackToTableBodyContext();
        p._insertFakeElement($.TR);
        p.insertionMode = IN_ROW_MODE;
        p._processToken(token);
    } else if (
        tn === $.CAPTION ||
        tn === $.COL ||
        tn === $.COLGROUP ||
        tn === $.TBODY ||
        tn === $.TFOOT ||
        tn === $.THEAD
    ) {
        if (p.openElements.hasTableBodyContextInTableScope()) {
            p.openElements.clearBackToTableBodyContext();
            p.openElements.pop();
            p.insertionMode = IN_TABLE_MODE;
            p._processToken(token);
        }
    } else {
        startTagInTable(p, token);
    }
}

function endTagInTableBody(p, token) {
    const tn = token.tagName;

    if (tn === $.TBODY || tn === $.TFOOT || tn === $.THEAD) {
        if (p.openElements.hasInTableScope(tn)) {
            p.openElements.clearBackToTableBodyContext();
            p.openElements.pop();
            p.insertionMode = IN_TABLE_MODE;
        }
    } else if (tn === $.TABLE) {
        if (p.openElements.hasTableBodyContextInTableScope()) {
            p.openElements.clearBackToTableBodyContext();
            p.openElements.pop();
            p.insertionMode = IN_TABLE_MODE;
            p._processToken(token);
        }
    } else if (
        (tn !== $.BODY && tn !== $.CAPTION && tn !== $.COL && tn !== $.COLGROUP) ||
        (tn !== $.HTML && tn !== $.TD && tn !== $.TH && tn !== $.TR)
    ) {
        endTagInTable(p, token);
    }
}

// The "in row" insertion mode
//------------------------------------------------------------------
function startTagInRow(p, token) {
    const tn = token.tagName;

    if (tn === $.TH || tn === $.TD) {
        p.openElements.clearBackToTableRowContext();
        p._insertElement(token, NS.HTML);
        p.insertionMode = IN_CELL_MODE;
        p.activeFormattingElements.insertMarker();
    } else if (
        tn === $.CAPTION ||
        tn === $.COL ||
        tn === $.COLGROUP ||
        tn === $.TBODY ||
        tn === $.TFOOT ||
        tn === $.THEAD ||
        tn === $.TR
    ) {
        if (p.openElements.hasInTableScope($.TR)) {
            p.openElements.clearBackToTableRowContext();
            p.openElements.pop();
            p.insertionMode = IN_TABLE_BODY_MODE;
            p._processToken(token);
        }
    } else {
        startTagInTable(p, token);
    }
}

function endTagInRow(p, token) {
    const tn = token.tagName;

    if (tn === $.TR) {
        if (p.openElements.hasInTableScope($.TR)) {
            p.openElements.clearBackToTableRowContext();
            p.openElements.pop();
            p.insertionMode = IN_TABLE_BODY_MODE;
        }
    } else if (tn === $.TABLE) {
        if (p.openElements.hasInTableScope($.TR)) {
            p.openElements.clearBackToTableRowContext();
            p.openElements.pop();
            p.insertionMode = IN_TABLE_BODY_MODE;
            p._processToken(token);
        }
    } else if (tn === $.TBODY || tn === $.TFOOT || tn === $.THEAD) {
        if (p.openElements.hasInTableScope(tn) || p.openElements.hasInTableScope($.TR)) {
            p.openElements.clearBackToTableRowContext();
            p.openElements.pop();
            p.insertionMode = IN_TABLE_BODY_MODE;
            p._processToken(token);
        }
    } else if (
        (tn !== $.BODY && tn !== $.CAPTION && tn !== $.COL && tn !== $.COLGROUP) ||
        (tn !== $.HTML && tn !== $.TD && tn !== $.TH)
    ) {
        endTagInTable(p, token);
    }
}

// The "in cell" insertion mode
//------------------------------------------------------------------
function startTagInCell(p, token) {
    const tn = token.tagName;

    if (
        tn === $.CAPTION ||
        tn === $.COL ||
        tn === $.COLGROUP ||
        tn === $.TBODY ||
        tn === $.TD ||
        tn === $.TFOOT ||
        tn === $.TH ||
        tn === $.THEAD ||
        tn === $.TR
    ) {
        if (p.openElements.hasInTableScope($.TD) || p.openElements.hasInTableScope($.TH)) {
            p._closeTableCell();
            p._processToken(token);
        }
    } else {
        startTagInBody(p, token);
    }
}

function endTagInCell(p, token) {
    const tn = token.tagName;

    if (tn === $.TD || tn === $.TH) {
        if (p.openElements.hasInTableScope(tn)) {
            p.openElements.generateImpliedEndTags();
            p.openElements.popUntilTagNamePopped(tn);
            p.activeFormattingElements.clearToLastMarker();
            p.insertionMode = IN_ROW_MODE;
        }
    } else if (tn === $.TABLE || tn === $.TBODY || tn === $.TFOOT || tn === $.THEAD || tn === $.TR) {
        if (p.openElements.hasInTableScope(tn)) {
            p._closeTableCell();
            p._processToken(token);
        }
    } else if (tn !== $.BODY && tn !== $.CAPTION && tn !== $.COL && tn !== $.COLGROUP && tn !== $.HTML) {
        endTagInBody(p, token);
    }
}

// The "in select" insertion mode
//------------------------------------------------------------------
function startTagInSelect(p, token) {
    const tn = token.tagName;

    if (tn === $.HTML) {
        startTagInBody(p, token);
    } else if (tn === $.OPTION) {
        if (p.openElements.currentTagName === $.OPTION) {
            p.openElements.pop();
        }

        p._insertElement(token, NS.HTML);
    } else if (tn === $.OPTGROUP) {
        if (p.openElements.currentTagName === $.OPTION) {
            p.openElements.pop();
        }

        if (p.openElements.currentTagName === $.OPTGROUP) {
            p.openElements.pop();
        }

        p._insertElement(token, NS.HTML);
    } else if (tn === $.INPUT || tn === $.KEYGEN || tn === $.TEXTAREA || tn === $.SELECT) {
        if (p.openElements.hasInSelectScope($.SELECT)) {
            p.openElements.popUntilTagNamePopped($.SELECT);
            p._resetInsertionMode();

            if (tn !== $.SELECT) {
                p._processToken(token);
            }
        }
    } else if (tn === $.SCRIPT || tn === $.TEMPLATE) {
        startTagInHead(p, token);
    }
}

function endTagInSelect(p, token) {
    const tn = token.tagName;

    if (tn === $.OPTGROUP) {
        const prevOpenElement = p.openElements.items[p.openElements.stackTop - 1];
        const prevOpenElementTn = prevOpenElement && p.treeAdapter.getTagName(prevOpenElement);

        if (p.openElements.currentTagName === $.OPTION && prevOpenElementTn === $.OPTGROUP) {
            p.openElements.pop();
        }

        if (p.openElements.currentTagName === $.OPTGROUP) {
            p.openElements.pop();
        }
    } else if (tn === $.OPTION) {
        if (p.openElements.currentTagName === $.OPTION) {
            p.openElements.pop();
        }
    } else if (tn === $.SELECT && p.openElements.hasInSelectScope($.SELECT)) {
        p.openElements.popUntilTagNamePopped($.SELECT);
        p._resetInsertionMode();
    } else if (tn === $.TEMPLATE) {
        endTagInHead(p, token);
    }
}

//12.2.5.4.17 The "in select in table" insertion mode
//------------------------------------------------------------------
function startTagInSelectInTable(p, token) {
    const tn = token.tagName;

    if (
        tn === $.CAPTION ||
        tn === $.TABLE ||
        tn === $.TBODY ||
        tn === $.TFOOT ||
        tn === $.THEAD ||
        tn === $.TR ||
        tn === $.TD ||
        tn === $.TH
    ) {
        p.openElements.popUntilTagNamePopped($.SELECT);
        p._resetInsertionMode();
        p._processToken(token);
    } else {
        startTagInSelect(p, token);
    }
}

function endTagInSelectInTable(p, token) {
    const tn = token.tagName;

    if (
        tn === $.CAPTION ||
        tn === $.TABLE ||
        tn === $.TBODY ||
        tn === $.TFOOT ||
        tn === $.THEAD ||
        tn === $.TR ||
        tn === $.TD ||
        tn === $.TH
    ) {
        if (p.openElements.hasInTableScope(tn)) {
            p.openElements.popUntilTagNamePopped($.SELECT);
            p._resetInsertionMode();
            p._processToken(token);
        }
    } else {
        endTagInSelect(p, token);
    }
}

// The "in template" insertion mode
//------------------------------------------------------------------
function startTagInTemplate(p, token) {
    const tn = token.tagName;

    if (
        tn === $.BASE ||
        tn === $.BASEFONT ||
        tn === $.BGSOUND ||
        tn === $.LINK ||
        tn === $.META ||
        tn === $.NOFRAMES ||
        tn === $.SCRIPT ||
        tn === $.STYLE ||
        tn === $.TEMPLATE ||
        tn === $.TITLE
    ) {
        startTagInHead(p, token);
    } else {
        const newInsertionMode = TEMPLATE_INSERTION_MODE_SWITCH_MAP[tn] || IN_BODY_MODE;

        p._popTmplInsertionMode();
        p._pushTmplInsertionMode(newInsertionMode);
        p.insertionMode = newInsertionMode;
        p._processToken(token);
    }
}

function endTagInTemplate(p, token) {
    if (token.tagName === $.TEMPLATE) {
        endTagInHead(p, token);
    }
}

function eofInTemplate(p, token) {
    if (p.openElements.tmplCount > 0) {
        p.openElements.popUntilTagNamePopped($.TEMPLATE);
        p.activeFormattingElements.clearToLastMarker();
        p._popTmplInsertionMode();
        p._resetInsertionMode();
        p._processToken(token);
    } else {
        p.stopped = true;
    }
}

// The "after body" insertion mode
//------------------------------------------------------------------
function startTagAfterBody(p, token) {
    if (token.tagName === $.HTML) {
        startTagInBody(p, token);
    } else {
        tokenAfterBody(p, token);
    }
}

function endTagAfterBody(p, token) {
    if (token.tagName === $.HTML) {
        if (!p.fragmentContext) {
            p.insertionMode = AFTER_AFTER_BODY_MODE;
        }
    } else {
        tokenAfterBody(p, token);
    }
}

function tokenAfterBody(p, token) {
    p.insertionMode = IN_BODY_MODE;
    p._processToken(token);
}

// The "in frameset" insertion mode
//------------------------------------------------------------------
function startTagInFrameset(p, token) {
    const tn = token.tagName;

    if (tn === $.HTML) {
        startTagInBody(p, token);
    } else if (tn === $.FRAMESET) {
        p._insertElement(token, NS.HTML);
    } else if (tn === $.FRAME) {
        p._appendElement(token, NS.HTML);
        token.ackSelfClosing = true;
    } else if (tn === $.NOFRAMES) {
        startTagInHead(p, token);
    }
}

function endTagInFrameset(p, token) {
    if (token.tagName === $.FRAMESET && !p.openElements.isRootHtmlElementCurrent()) {
        p.openElements.pop();

        if (!p.fragmentContext && p.openElements.currentTagName !== $.FRAMESET) {
            p.insertionMode = AFTER_FRAMESET_MODE;
        }
    }
}

// The "after frameset" insertion mode
//------------------------------------------------------------------
function startTagAfterFrameset(p, token) {
    const tn = token.tagName;

    if (tn === $.HTML) {
        startTagInBody(p, token);
    } else if (tn === $.NOFRAMES) {
        startTagInHead(p, token);
    }
}

function endTagAfterFrameset(p, token) {
    if (token.tagName === $.HTML) {
        p.insertionMode = AFTER_AFTER_FRAMESET_MODE;
    }
}

// The "after after body" insertion mode
//------------------------------------------------------------------
function startTagAfterAfterBody(p, token) {
    if (token.tagName === $.HTML) {
        startTagInBody(p, token);
    } else {
        tokenAfterAfterBody(p, token);
    }
}

function tokenAfterAfterBody(p, token) {
    p.insertionMode = IN_BODY_MODE;
    p._processToken(token);
}

// The "after after frameset" insertion mode
//------------------------------------------------------------------
function startTagAfterAfterFrameset(p, token) {
    const tn = token.tagName;

    if (tn === $.HTML) {
        startTagInBody(p, token);
    } else if (tn === $.NOFRAMES) {
        startTagInHead(p, token);
    }
}

// The rules for parsing tokens in foreign content
//------------------------------------------------------------------
function nullCharacterInForeignContent(p, token) {
    token.chars = unicode.REPLACEMENT_CHARACTER;
    p._insertCharacters(token);
}

function characterInForeignContent(p, token) {
    p._insertCharacters(token);
    p.framesetOk = false;
}

function startTagInForeignContent(p, token) {
    if (foreignContent.causesExit(token) && !p.fragmentContext) {
        while (
            p.treeAdapter.getNamespaceURI(p.openElements.current) !== NS.HTML &&
            !p._isIntegrationPoint(p.openElements.current)
        ) {
            p.openElements.pop();
        }

        p._processToken(token);
    } else {
        const current = p._getAdjustedCurrentElement();
        const currentNs = p.treeAdapter.getNamespaceURI(current);

        if (currentNs === NS.MATHML) {
            foreignContent.adjustTokenMathMLAttrs(token);
        } else if (currentNs === NS.SVG) {
            foreignContent.adjustTokenSVGTagName(token);
            foreignContent.adjustTokenSVGAttrs(token);
        }

        foreignContent.adjustTokenXMLAttrs(token);

        if (token.selfClosing) {
            p._appendElement(token, currentNs);
        } else {
            p._insertElement(token, currentNs);
        }

        token.ackSelfClosing = true;
    }
}

function endTagInForeignContent(p, token) {
    for (let i = p.openElements.stackTop; i > 0; i--) {
        const element = p.openElements.items[i];

        if (p.treeAdapter.getNamespaceURI(element) === NS.HTML) {
            p._processToken(token);
            break;
        }

        if (p.treeAdapter.getTagName(element).toLowerCase() === token.tagName) {
            p.openElements.popUntilElementPopped(element);
            break;
        }
    }
}


/***/ }),
/* 76 */
/*!****************************************************!*\
  !*** ./node_modules/parse5/lib/tokenizer/index.js ***!
  \****************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


const Preprocessor = __webpack_require__(/*! ./preprocessor */ 77);
const unicode = __webpack_require__(/*! ../common/unicode */ 78);
const neTree = __webpack_require__(/*! ./named-entity-data */ 80);
const ERR = __webpack_require__(/*! ../common/error-codes */ 79);

//Aliases
const $ = unicode.CODE_POINTS;
const $$ = unicode.CODE_POINT_SEQUENCES;

//C1 Unicode control character reference replacements
const C1_CONTROLS_REFERENCE_REPLACEMENTS = {
    0x80: 0x20ac,
    0x82: 0x201a,
    0x83: 0x0192,
    0x84: 0x201e,
    0x85: 0x2026,
    0x86: 0x2020,
    0x87: 0x2021,
    0x88: 0x02c6,
    0x89: 0x2030,
    0x8a: 0x0160,
    0x8b: 0x2039,
    0x8c: 0x0152,
    0x8e: 0x017d,
    0x91: 0x2018,
    0x92: 0x2019,
    0x93: 0x201c,
    0x94: 0x201d,
    0x95: 0x2022,
    0x96: 0x2013,
    0x97: 0x2014,
    0x98: 0x02dc,
    0x99: 0x2122,
    0x9a: 0x0161,
    0x9b: 0x203a,
    0x9c: 0x0153,
    0x9e: 0x017e,
    0x9f: 0x0178
};

// Named entity tree flags
const HAS_DATA_FLAG = 1 << 0;
const DATA_DUPLET_FLAG = 1 << 1;
const HAS_BRANCHES_FLAG = 1 << 2;
const MAX_BRANCH_MARKER_VALUE = HAS_DATA_FLAG | DATA_DUPLET_FLAG | HAS_BRANCHES_FLAG;

//States
const DATA_STATE = 'DATA_STATE';
const RCDATA_STATE = 'RCDATA_STATE';
const RAWTEXT_STATE = 'RAWTEXT_STATE';
const SCRIPT_DATA_STATE = 'SCRIPT_DATA_STATE';
const PLAINTEXT_STATE = 'PLAINTEXT_STATE';
const TAG_OPEN_STATE = 'TAG_OPEN_STATE';
const END_TAG_OPEN_STATE = 'END_TAG_OPEN_STATE';
const TAG_NAME_STATE = 'TAG_NAME_STATE';
const RCDATA_LESS_THAN_SIGN_STATE = 'RCDATA_LESS_THAN_SIGN_STATE';
const RCDATA_END_TAG_OPEN_STATE = 'RCDATA_END_TAG_OPEN_STATE';
const RCDATA_END_TAG_NAME_STATE = 'RCDATA_END_TAG_NAME_STATE';
const RAWTEXT_LESS_THAN_SIGN_STATE = 'RAWTEXT_LESS_THAN_SIGN_STATE';
const RAWTEXT_END_TAG_OPEN_STATE = 'RAWTEXT_END_TAG_OPEN_STATE';
const RAWTEXT_END_TAG_NAME_STATE = 'RAWTEXT_END_TAG_NAME_STATE';
const SCRIPT_DATA_LESS_THAN_SIGN_STATE = 'SCRIPT_DATA_LESS_THAN_SIGN_STATE';
const SCRIPT_DATA_END_TAG_OPEN_STATE = 'SCRIPT_DATA_END_TAG_OPEN_STATE';
const SCRIPT_DATA_END_TAG_NAME_STATE = 'SCRIPT_DATA_END_TAG_NAME_STATE';
const SCRIPT_DATA_ESCAPE_START_STATE = 'SCRIPT_DATA_ESCAPE_START_STATE';
const SCRIPT_DATA_ESCAPE_START_DASH_STATE = 'SCRIPT_DATA_ESCAPE_START_DASH_STATE';
const SCRIPT_DATA_ESCAPED_STATE = 'SCRIPT_DATA_ESCAPED_STATE';
const SCRIPT_DATA_ESCAPED_DASH_STATE = 'SCRIPT_DATA_ESCAPED_DASH_STATE';
const SCRIPT_DATA_ESCAPED_DASH_DASH_STATE = 'SCRIPT_DATA_ESCAPED_DASH_DASH_STATE';
const SCRIPT_DATA_ESCAPED_LESS_THAN_SIGN_STATE = 'SCRIPT_DATA_ESCAPED_LESS_THAN_SIGN_STATE';
const SCRIPT_DATA_ESCAPED_END_TAG_OPEN_STATE = 'SCRIPT_DATA_ESCAPED_END_TAG_OPEN_STATE';
const SCRIPT_DATA_ESCAPED_END_TAG_NAME_STATE = 'SCRIPT_DATA_ESCAPED_END_TAG_NAME_STATE';
const SCRIPT_DATA_DOUBLE_ESCAPE_START_STATE = 'SCRIPT_DATA_DOUBLE_ESCAPE_START_STATE';
const SCRIPT_DATA_DOUBLE_ESCAPED_STATE = 'SCRIPT_DATA_DOUBLE_ESCAPED_STATE';
const SCRIPT_DATA_DOUBLE_ESCAPED_DASH_STATE = 'SCRIPT_DATA_DOUBLE_ESCAPED_DASH_STATE';
const SCRIPT_DATA_DOUBLE_ESCAPED_DASH_DASH_STATE = 'SCRIPT_DATA_DOUBLE_ESCAPED_DASH_DASH_STATE';
const SCRIPT_DATA_DOUBLE_ESCAPED_LESS_THAN_SIGN_STATE = 'SCRIPT_DATA_DOUBLE_ESCAPED_LESS_THAN_SIGN_STATE';
const SCRIPT_DATA_DOUBLE_ESCAPE_END_STATE = 'SCRIPT_DATA_DOUBLE_ESCAPE_END_STATE';
const BEFORE_ATTRIBUTE_NAME_STATE = 'BEFORE_ATTRIBUTE_NAME_STATE';
const ATTRIBUTE_NAME_STATE = 'ATTRIBUTE_NAME_STATE';
const AFTER_ATTRIBUTE_NAME_STATE = 'AFTER_ATTRIBUTE_NAME_STATE';
const BEFORE_ATTRIBUTE_VALUE_STATE = 'BEFORE_ATTRIBUTE_VALUE_STATE';
const ATTRIBUTE_VALUE_DOUBLE_QUOTED_STATE = 'ATTRIBUTE_VALUE_DOUBLE_QUOTED_STATE';
const ATTRIBUTE_VALUE_SINGLE_QUOTED_STATE = 'ATTRIBUTE_VALUE_SINGLE_QUOTED_STATE';
const ATTRIBUTE_VALUE_UNQUOTED_STATE = 'ATTRIBUTE_VALUE_UNQUOTED_STATE';
const AFTER_ATTRIBUTE_VALUE_QUOTED_STATE = 'AFTER_ATTRIBUTE_VALUE_QUOTED_STATE';
const SELF_CLOSING_START_TAG_STATE = 'SELF_CLOSING_START_TAG_STATE';
const BOGUS_COMMENT_STATE = 'BOGUS_COMMENT_STATE';
const MARKUP_DECLARATION_OPEN_STATE = 'MARKUP_DECLARATION_OPEN_STATE';
const COMMENT_START_STATE = 'COMMENT_START_STATE';
const COMMENT_START_DASH_STATE = 'COMMENT_START_DASH_STATE';
const COMMENT_STATE = 'COMMENT_STATE';
const COMMENT_LESS_THAN_SIGN_STATE = 'COMMENT_LESS_THAN_SIGN_STATE';
const COMMENT_LESS_THAN_SIGN_BANG_STATE = 'COMMENT_LESS_THAN_SIGN_BANG_STATE';
const COMMENT_LESS_THAN_SIGN_BANG_DASH_STATE = 'COMMENT_LESS_THAN_SIGN_BANG_DASH_STATE';
const COMMENT_LESS_THAN_SIGN_BANG_DASH_DASH_STATE = 'COMMENT_LESS_THAN_SIGN_BANG_DASH_DASH_STATE';
const COMMENT_END_DASH_STATE = 'COMMENT_END_DASH_STATE';
const COMMENT_END_STATE = 'COMMENT_END_STATE';
const COMMENT_END_BANG_STATE = 'COMMENT_END_BANG_STATE';
const DOCTYPE_STATE = 'DOCTYPE_STATE';
const BEFORE_DOCTYPE_NAME_STATE = 'BEFORE_DOCTYPE_NAME_STATE';
const DOCTYPE_NAME_STATE = 'DOCTYPE_NAME_STATE';
const AFTER_DOCTYPE_NAME_STATE = 'AFTER_DOCTYPE_NAME_STATE';
const AFTER_DOCTYPE_PUBLIC_KEYWORD_STATE = 'AFTER_DOCTYPE_PUBLIC_KEYWORD_STATE';
const BEFORE_DOCTYPE_PUBLIC_IDENTIFIER_STATE = 'BEFORE_DOCTYPE_PUBLIC_IDENTIFIER_STATE';
const DOCTYPE_PUBLIC_IDENTIFIER_DOUBLE_QUOTED_STATE = 'DOCTYPE_PUBLIC_IDENTIFIER_DOUBLE_QUOTED_STATE';
const DOCTYPE_PUBLIC_IDENTIFIER_SINGLE_QUOTED_STATE = 'DOCTYPE_PUBLIC_IDENTIFIER_SINGLE_QUOTED_STATE';
const AFTER_DOCTYPE_PUBLIC_IDENTIFIER_STATE = 'AFTER_DOCTYPE_PUBLIC_IDENTIFIER_STATE';
const BETWEEN_DOCTYPE_PUBLIC_AND_SYSTEM_IDENTIFIERS_STATE = 'BETWEEN_DOCTYPE_PUBLIC_AND_SYSTEM_IDENTIFIERS_STATE';
const AFTER_DOCTYPE_SYSTEM_KEYWORD_STATE = 'AFTER_DOCTYPE_SYSTEM_KEYWORD_STATE';
const BEFORE_DOCTYPE_SYSTEM_IDENTIFIER_STATE = 'BEFORE_DOCTYPE_SYSTEM_IDENTIFIER_STATE';
const DOCTYPE_SYSTEM_IDENTIFIER_DOUBLE_QUOTED_STATE = 'DOCTYPE_SYSTEM_IDENTIFIER_DOUBLE_QUOTED_STATE';
const DOCTYPE_SYSTEM_IDENTIFIER_SINGLE_QUOTED_STATE = 'DOCTYPE_SYSTEM_IDENTIFIER_SINGLE_QUOTED_STATE';
const AFTER_DOCTYPE_SYSTEM_IDENTIFIER_STATE = 'AFTER_DOCTYPE_SYSTEM_IDENTIFIER_STATE';
const BOGUS_DOCTYPE_STATE = 'BOGUS_DOCTYPE_STATE';
const CDATA_SECTION_STATE = 'CDATA_SECTION_STATE';
const CDATA_SECTION_BRACKET_STATE = 'CDATA_SECTION_BRACKET_STATE';
const CDATA_SECTION_END_STATE = 'CDATA_SECTION_END_STATE';
const CHARACTER_REFERENCE_STATE = 'CHARACTER_REFERENCE_STATE';
const NAMED_CHARACTER_REFERENCE_STATE = 'NAMED_CHARACTER_REFERENCE_STATE';
const AMBIGUOUS_AMPERSAND_STATE = 'AMBIGUOS_AMPERSAND_STATE';
const NUMERIC_CHARACTER_REFERENCE_STATE = 'NUMERIC_CHARACTER_REFERENCE_STATE';
const HEXADEMICAL_CHARACTER_REFERENCE_START_STATE = 'HEXADEMICAL_CHARACTER_REFERENCE_START_STATE';
const DECIMAL_CHARACTER_REFERENCE_START_STATE = 'DECIMAL_CHARACTER_REFERENCE_START_STATE';
const HEXADEMICAL_CHARACTER_REFERENCE_STATE = 'HEXADEMICAL_CHARACTER_REFERENCE_STATE';
const DECIMAL_CHARACTER_REFERENCE_STATE = 'DECIMAL_CHARACTER_REFERENCE_STATE';
const NUMERIC_CHARACTER_REFERENCE_END_STATE = 'NUMERIC_CHARACTER_REFERENCE_END_STATE';

//Utils

//OPTIMIZATION: these utility functions should not be moved out of this module. V8 Crankshaft will not inline
//this functions if they will be situated in another module due to context switch.
//Always perform inlining check before modifying this functions ('node --trace-inlining').
function isWhitespace(cp) {
    return cp === $.SPACE || cp === $.LINE_FEED || cp === $.TABULATION || cp === $.FORM_FEED;
}

function isAsciiDigit(cp) {
    return cp >= $.DIGIT_0 && cp <= $.DIGIT_9;
}

function isAsciiUpper(cp) {
    return cp >= $.LATIN_CAPITAL_A && cp <= $.LATIN_CAPITAL_Z;
}

function isAsciiLower(cp) {
    return cp >= $.LATIN_SMALL_A && cp <= $.LATIN_SMALL_Z;
}

function isAsciiLetter(cp) {
    return isAsciiLower(cp) || isAsciiUpper(cp);
}

function isAsciiAlphaNumeric(cp) {
    return isAsciiLetter(cp) || isAsciiDigit(cp);
}

function isAsciiUpperHexDigit(cp) {
    return cp >= $.LATIN_CAPITAL_A && cp <= $.LATIN_CAPITAL_F;
}

function isAsciiLowerHexDigit(cp) {
    return cp >= $.LATIN_SMALL_A && cp <= $.LATIN_SMALL_F;
}

function isAsciiHexDigit(cp) {
    return isAsciiDigit(cp) || isAsciiUpperHexDigit(cp) || isAsciiLowerHexDigit(cp);
}

function toAsciiLowerCodePoint(cp) {
    return cp + 0x0020;
}

//NOTE: String.fromCharCode() function can handle only characters from BMP subset.
//So, we need to workaround this manually.
//(see: https://developer.mozilla.org/en-US/docs/JavaScript/Reference/Global_Objects/String/fromCharCode#Getting_it_to_work_with_higher_values)
function toChar(cp) {
    if (cp <= 0xffff) {
        return String.fromCharCode(cp);
    }

    cp -= 0x10000;
    return String.fromCharCode(((cp >>> 10) & 0x3ff) | 0xd800) + String.fromCharCode(0xdc00 | (cp & 0x3ff));
}

function toAsciiLowerChar(cp) {
    return String.fromCharCode(toAsciiLowerCodePoint(cp));
}

function findNamedEntityTreeBranch(nodeIx, cp) {
    const branchCount = neTree[++nodeIx];
    let lo = ++nodeIx;
    let hi = lo + branchCount - 1;

    while (lo <= hi) {
        const mid = (lo + hi) >>> 1;
        const midCp = neTree[mid];

        if (midCp < cp) {
            lo = mid + 1;
        } else if (midCp > cp) {
            hi = mid - 1;
        } else {
            return neTree[mid + branchCount];
        }
    }

    return -1;
}

//Tokenizer
class Tokenizer {
    constructor() {
        this.preprocessor = new Preprocessor();

        this.tokenQueue = [];

        this.allowCDATA = false;

        this.state = DATA_STATE;
        this.returnState = '';

        this.charRefCode = -1;
        this.tempBuff = [];
        this.lastStartTagName = '';

        this.consumedAfterSnapshot = -1;
        this.active = false;

        this.currentCharacterToken = null;
        this.currentToken = null;
        this.currentAttr = null;
    }

    //Errors
    _err() {
        // NOTE: err reporting is noop by default. Enabled by mixin.
    }

    _errOnNextCodePoint(err) {
        this._consume();
        this._err(err);
        this._unconsume();
    }

    //API
    getNextToken() {
        while (!this.tokenQueue.length && this.active) {
            this.consumedAfterSnapshot = 0;

            const cp = this._consume();

            if (!this._ensureHibernation()) {
                this[this.state](cp);
            }
        }

        return this.tokenQueue.shift();
    }

    write(chunk, isLastChunk) {
        this.active = true;
        this.preprocessor.write(chunk, isLastChunk);
    }

    insertHtmlAtCurrentPos(chunk) {
        this.active = true;
        this.preprocessor.insertHtmlAtCurrentPos(chunk);
    }

    //Hibernation
    _ensureHibernation() {
        if (this.preprocessor.endOfChunkHit) {
            for (; this.consumedAfterSnapshot > 0; this.consumedAfterSnapshot--) {
                this.preprocessor.retreat();
            }

            this.active = false;
            this.tokenQueue.push({ type: Tokenizer.HIBERNATION_TOKEN });

            return true;
        }

        return false;
    }

    //Consumption
    _consume() {
        this.consumedAfterSnapshot++;
        return this.preprocessor.advance();
    }

    _unconsume() {
        this.consumedAfterSnapshot--;
        this.preprocessor.retreat();
    }

    _reconsumeInState(state) {
        this.state = state;
        this._unconsume();
    }

    _consumeSequenceIfMatch(pattern, startCp, caseSensitive) {
        let consumedCount = 0;
        let isMatch = true;
        const patternLength = pattern.length;
        let patternPos = 0;
        let cp = startCp;
        let patternCp = void 0;

        for (; patternPos < patternLength; patternPos++) {
            if (patternPos > 0) {
                cp = this._consume();
                consumedCount++;
            }

            if (cp === $.EOF) {
                isMatch = false;
                break;
            }

            patternCp = pattern[patternPos];

            if (cp !== patternCp && (caseSensitive || cp !== toAsciiLowerCodePoint(patternCp))) {
                isMatch = false;
                break;
            }
        }

        if (!isMatch) {
            while (consumedCount--) {
                this._unconsume();
            }
        }

        return isMatch;
    }

    //Temp buffer
    _isTempBufferEqualToScriptString() {
        if (this.tempBuff.length !== $$.SCRIPT_STRING.length) {
            return false;
        }

        for (let i = 0; i < this.tempBuff.length; i++) {
            if (this.tempBuff[i] !== $$.SCRIPT_STRING[i]) {
                return false;
            }
        }

        return true;
    }

    //Token creation
    _createStartTagToken() {
        this.currentToken = {
            type: Tokenizer.START_TAG_TOKEN,
            tagName: '',
            selfClosing: false,
            ackSelfClosing: false,
            attrs: []
        };
    }

    _createEndTagToken() {
        this.currentToken = {
            type: Tokenizer.END_TAG_TOKEN,
            tagName: '',
            selfClosing: false,
            attrs: []
        };
    }

    _createCommentToken() {
        this.currentToken = {
            type: Tokenizer.COMMENT_TOKEN,
            data: ''
        };
    }

    _createDoctypeToken(initialName) {
        this.currentToken = {
            type: Tokenizer.DOCTYPE_TOKEN,
            name: initialName,
            forceQuirks: false,
            publicId: null,
            systemId: null
        };
    }

    _createCharacterToken(type, ch) {
        this.currentCharacterToken = {
            type: type,
            chars: ch
        };
    }

    _createEOFToken() {
        this.currentToken = { type: Tokenizer.EOF_TOKEN };
    }

    //Tag attributes
    _createAttr(attrNameFirstCh) {
        this.currentAttr = {
            name: attrNameFirstCh,
            value: ''
        };
    }

    _leaveAttrName(toState) {
        if (Tokenizer.getTokenAttr(this.currentToken, this.currentAttr.name) === null) {
            this.currentToken.attrs.push(this.currentAttr);
        } else {
            this._err(ERR.duplicateAttribute);
        }

        this.state = toState;
    }

    _leaveAttrValue(toState) {
        this.state = toState;
    }

    //Token emission
    _emitCurrentToken() {
        this._emitCurrentCharacterToken();

        const ct = this.currentToken;

        this.currentToken = null;

        //NOTE: store emited start tag's tagName to determine is the following end tag token is appropriate.
        if (ct.type === Tokenizer.START_TAG_TOKEN) {
            this.lastStartTagName = ct.tagName;
        } else if (ct.type === Tokenizer.END_TAG_TOKEN) {
            if (ct.attrs.length > 0) {
                this._err(ERR.endTagWithAttributes);
            }

            if (ct.selfClosing) {
                this._err(ERR.endTagWithTrailingSolidus);
            }
        }

        this.tokenQueue.push(ct);
    }

    _emitCurrentCharacterToken() {
        if (this.currentCharacterToken) {
            this.tokenQueue.push(this.currentCharacterToken);
            this.currentCharacterToken = null;
        }
    }

    _emitEOFToken() {
        this._createEOFToken();
        this._emitCurrentToken();
    }

    //Characters emission

    //OPTIMIZATION: specification uses only one type of character tokens (one token per character).
    //This causes a huge memory overhead and a lot of unnecessary parser loops. parse5 uses 3 groups of characters.
    //If we have a sequence of characters that belong to the same group, parser can process it
    //as a single solid character token.
    //So, there are 3 types of character tokens in parse5:
    //1)NULL_CHARACTER_TOKEN - \u0000-character sequences (e.g. '\u0000\u0000\u0000')
    //2)WHITESPACE_CHARACTER_TOKEN - any whitespace/new-line character sequences (e.g. '\n  \r\t   \f')
    //3)CHARACTER_TOKEN - any character sequence which don't belong to groups 1 and 2 (e.g. 'abcdef1234@@#$%^')
    _appendCharToCurrentCharacterToken(type, ch) {
        if (this.currentCharacterToken && this.currentCharacterToken.type !== type) {
            this._emitCurrentCharacterToken();
        }

        if (this.currentCharacterToken) {
            this.currentCharacterToken.chars += ch;
        } else {
            this._createCharacterToken(type, ch);
        }
    }

    _emitCodePoint(cp) {
        let type = Tokenizer.CHARACTER_TOKEN;

        if (isWhitespace(cp)) {
            type = Tokenizer.WHITESPACE_CHARACTER_TOKEN;
        } else if (cp === $.NULL) {
            type = Tokenizer.NULL_CHARACTER_TOKEN;
        }

        this._appendCharToCurrentCharacterToken(type, toChar(cp));
    }

    _emitSeveralCodePoints(codePoints) {
        for (let i = 0; i < codePoints.length; i++) {
            this._emitCodePoint(codePoints[i]);
        }
    }

    //NOTE: used then we emit character explicitly. This is always a non-whitespace and a non-null character.
    //So we can avoid additional checks here.
    _emitChars(ch) {
        this._appendCharToCurrentCharacterToken(Tokenizer.CHARACTER_TOKEN, ch);
    }

    // Character reference helpers
    _matchNamedCharacterReference(startCp) {
        let result = null;
        let excess = 1;
        let i = findNamedEntityTreeBranch(0, startCp);

        this.tempBuff.push(startCp);

        while (i > -1) {
            const current = neTree[i];
            const inNode = current < MAX_BRANCH_MARKER_VALUE;
            const nodeWithData = inNode && current & HAS_DATA_FLAG;

            if (nodeWithData) {
                //NOTE: we use greedy search, so we continue lookup at this point
                result = current & DATA_DUPLET_FLAG ? [neTree[++i], neTree[++i]] : [neTree[++i]];
                excess = 0;
            }

            const cp = this._consume();

            this.tempBuff.push(cp);
            excess++;

            if (cp === $.EOF) {
                break;
            }

            if (inNode) {
                i = current & HAS_BRANCHES_FLAG ? findNamedEntityTreeBranch(i, cp) : -1;
            } else {
                i = cp === current ? ++i : -1;
            }
        }

        while (excess--) {
            this.tempBuff.pop();
            this._unconsume();
        }

        return result;
    }

    _isCharacterReferenceInAttribute() {
        return (
            this.returnState === ATTRIBUTE_VALUE_DOUBLE_QUOTED_STATE ||
            this.returnState === ATTRIBUTE_VALUE_SINGLE_QUOTED_STATE ||
            this.returnState === ATTRIBUTE_VALUE_UNQUOTED_STATE
        );
    }

    _isCharacterReferenceAttributeQuirk(withSemicolon) {
        if (!withSemicolon && this._isCharacterReferenceInAttribute()) {
            const nextCp = this._consume();

            this._unconsume();

            return nextCp === $.EQUALS_SIGN || isAsciiAlphaNumeric(nextCp);
        }

        return false;
    }

    _flushCodePointsConsumedAsCharacterReference() {
        if (this._isCharacterReferenceInAttribute()) {
            for (let i = 0; i < this.tempBuff.length; i++) {
                this.currentAttr.value += toChar(this.tempBuff[i]);
            }
        } else {
            this._emitSeveralCodePoints(this.tempBuff);
        }

        this.tempBuff = [];
    }

    // State machine

    // Data state
    //------------------------------------------------------------------
    [DATA_STATE](cp) {
        this.preprocessor.dropParsedChunk();

        if (cp === $.LESS_THAN_SIGN) {
            this.state = TAG_OPEN_STATE;
        } else if (cp === $.AMPERSAND) {
            this.returnState = DATA_STATE;
            this.state = CHARACTER_REFERENCE_STATE;
        } else if (cp === $.NULL) {
            this._err(ERR.unexpectedNullCharacter);
            this._emitCodePoint(cp);
        } else if (cp === $.EOF) {
            this._emitEOFToken();
        } else {
            this._emitCodePoint(cp);
        }
    }

    //  RCDATA state
    //------------------------------------------------------------------
    [RCDATA_STATE](cp) {
        this.preprocessor.dropParsedChunk();

        if (cp === $.AMPERSAND) {
            this.returnState = RCDATA_STATE;
            this.state = CHARACTER_REFERENCE_STATE;
        } else if (cp === $.LESS_THAN_SIGN) {
            this.state = RCDATA_LESS_THAN_SIGN_STATE;
        } else if (cp === $.NULL) {
            this._err(ERR.unexpectedNullCharacter);
            this._emitChars(unicode.REPLACEMENT_CHARACTER);
        } else if (cp === $.EOF) {
            this._emitEOFToken();
        } else {
            this._emitCodePoint(cp);
        }
    }

    // RAWTEXT state
    //------------------------------------------------------------------
    [RAWTEXT_STATE](cp) {
        this.preprocessor.dropParsedChunk();

        if (cp === $.LESS_THAN_SIGN) {
            this.state = RAWTEXT_LESS_THAN_SIGN_STATE;
        } else if (cp === $.NULL) {
            this._err(ERR.unexpectedNullCharacter);
            this._emitChars(unicode.REPLACEMENT_CHARACTER);
        } else if (cp === $.EOF) {
            this._emitEOFToken();
        } else {
            this._emitCodePoint(cp);
        }
    }

    // Script data state
    //------------------------------------------------------------------
    [SCRIPT_DATA_STATE](cp) {
        this.preprocessor.dropParsedChunk();

        if (cp === $.LESS_THAN_SIGN) {
            this.state = SCRIPT_DATA_LESS_THAN_SIGN_STATE;
        } else if (cp === $.NULL) {
            this._err(ERR.unexpectedNullCharacter);
            this._emitChars(unicode.REPLACEMENT_CHARACTER);
        } else if (cp === $.EOF) {
            this._emitEOFToken();
        } else {
            this._emitCodePoint(cp);
        }
    }

    // PLAINTEXT state
    //------------------------------------------------------------------
    [PLAINTEXT_STATE](cp) {
        this.preprocessor.dropParsedChunk();

        if (cp === $.NULL) {
            this._err(ERR.unexpectedNullCharacter);
            this._emitChars(unicode.REPLACEMENT_CHARACTER);
        } else if (cp === $.EOF) {
            this._emitEOFToken();
        } else {
            this._emitCodePoint(cp);
        }
    }

    // Tag open state
    //------------------------------------------------------------------
    [TAG_OPEN_STATE](cp) {
        if (cp === $.EXCLAMATION_MARK) {
            this.state = MARKUP_DECLARATION_OPEN_STATE;
        } else if (cp === $.SOLIDUS) {
            this.state = END_TAG_OPEN_STATE;
        } else if (isAsciiLetter(cp)) {
            this._createStartTagToken();
            this._reconsumeInState(TAG_NAME_STATE);
        } else if (cp === $.QUESTION_MARK) {
            this._err(ERR.unexpectedQuestionMarkInsteadOfTagName);
            this._createCommentToken();
            this._reconsumeInState(BOGUS_COMMENT_STATE);
        } else if (cp === $.EOF) {
            this._err(ERR.eofBeforeTagName);
            this._emitChars('<');
            this._emitEOFToken();
        } else {
            this._err(ERR.invalidFirstCharacterOfTagName);
            this._emitChars('<');
            this._reconsumeInState(DATA_STATE);
        }
    }

    // End tag open state
    //------------------------------------------------------------------
    [END_TAG_OPEN_STATE](cp) {
        if (isAsciiLetter(cp)) {
            this._createEndTagToken();
            this._reconsumeInState(TAG_NAME_STATE);
        } else if (cp === $.GREATER_THAN_SIGN) {
            this._err(ERR.missingEndTagName);
            this.state = DATA_STATE;
        } else if (cp === $.EOF) {
            this._err(ERR.eofBeforeTagName);
            this._emitChars('</');
            this._emitEOFToken();
        } else {
            this._err(ERR.invalidFirstCharacterOfTagName);
            this._createCommentToken();
            this._reconsumeInState(BOGUS_COMMENT_STATE);
        }
    }

    // Tag name state
    //------------------------------------------------------------------
    [TAG_NAME_STATE](cp) {
        if (isWhitespace(cp)) {
            this.state = BEFORE_ATTRIBUTE_NAME_STATE;
        } else if (cp === $.SOLIDUS) {
            this.state = SELF_CLOSING_START_TAG_STATE;
        } else if (cp === $.GREATER_THAN_SIGN) {
            this.state = DATA_STATE;
            this._emitCurrentToken();
        } else if (isAsciiUpper(cp)) {
            this.currentToken.tagName += toAsciiLowerChar(cp);
        } else if (cp === $.NULL) {
            this._err(ERR.unexpectedNullCharacter);
            this.currentToken.tagName += unicode.REPLACEMENT_CHARACTER;
        } else if (cp === $.EOF) {
            this._err(ERR.eofInTag);
            this._emitEOFToken();
        } else {
            this.currentToken.tagName += toChar(cp);
        }
    }

    // RCDATA less-than sign state
    //------------------------------------------------------------------
    [RCDATA_LESS_THAN_SIGN_STATE](cp) {
        if (cp === $.SOLIDUS) {
            this.tempBuff = [];
            this.state = RCDATA_END_TAG_OPEN_STATE;
        } else {
            this._emitChars('<');
            this._reconsumeInState(RCDATA_STATE);
        }
    }

    // RCDATA end tag open state
    //------------------------------------------------------------------
    [RCDATA_END_TAG_OPEN_STATE](cp) {
        if (isAsciiLetter(cp)) {
            this._createEndTagToken();
            this._reconsumeInState(RCDATA_END_TAG_NAME_STATE);
        } else {
            this._emitChars('</');
            this._reconsumeInState(RCDATA_STATE);
        }
    }

    // RCDATA end tag name state
    //------------------------------------------------------------------
    [RCDATA_END_TAG_NAME_STATE](cp) {
        if (isAsciiUpper(cp)) {
            this.currentToken.tagName += toAsciiLowerChar(cp);
            this.tempBuff.push(cp);
        } else if (isAsciiLower(cp)) {
            this.currentToken.tagName += toChar(cp);
            this.tempBuff.push(cp);
        } else {
            if (this.lastStartTagName === this.currentToken.tagName) {
                if (isWhitespace(cp)) {
                    this.state = BEFORE_ATTRIBUTE_NAME_STATE;
                    return;
                }

                if (cp === $.SOLIDUS) {
                    this.state = SELF_CLOSING_START_TAG_STATE;
                    return;
                }

                if (cp === $.GREATER_THAN_SIGN) {
                    this.state = DATA_STATE;
                    this._emitCurrentToken();
                    return;
                }
            }

            this._emitChars('</');
            this._emitSeveralCodePoints(this.tempBuff);
            this._reconsumeInState(RCDATA_STATE);
        }
    }

    // RAWTEXT less-than sign state
    //------------------------------------------------------------------
    [RAWTEXT_LESS_THAN_SIGN_STATE](cp) {
        if (cp === $.SOLIDUS) {
            this.tempBuff = [];
            this.state = RAWTEXT_END_TAG_OPEN_STATE;
        } else {
            this._emitChars('<');
            this._reconsumeInState(RAWTEXT_STATE);
        }
    }

    // RAWTEXT end tag open state
    //------------------------------------------------------------------
    [RAWTEXT_END_TAG_OPEN_STATE](cp) {
        if (isAsciiLetter(cp)) {
            this._createEndTagToken();
            this._reconsumeInState(RAWTEXT_END_TAG_NAME_STATE);
        } else {
            this._emitChars('</');
            this._reconsumeInState(RAWTEXT_STATE);
        }
    }

    // RAWTEXT end tag name state
    //------------------------------------------------------------------
    [RAWTEXT_END_TAG_NAME_STATE](cp) {
        if (isAsciiUpper(cp)) {
            this.currentToken.tagName += toAsciiLowerChar(cp);
            this.tempBuff.push(cp);
        } else if (isAsciiLower(cp)) {
            this.currentToken.tagName += toChar(cp);
            this.tempBuff.push(cp);
        } else {
            if (this.lastStartTagName === this.currentToken.tagName) {
                if (isWhitespace(cp)) {
                    this.state = BEFORE_ATTRIBUTE_NAME_STATE;
                    return;
                }

                if (cp === $.SOLIDUS) {
                    this.state = SELF_CLOSING_START_TAG_STATE;
                    return;
                }

                if (cp === $.GREATER_THAN_SIGN) {
                    this._emitCurrentToken();
                    this.state = DATA_STATE;
                    return;
                }
            }

            this._emitChars('</');
            this._emitSeveralCodePoints(this.tempBuff);
            this._reconsumeInState(RAWTEXT_STATE);
        }
    }

    // Script data less-than sign state
    //------------------------------------------------------------------
    [SCRIPT_DATA_LESS_THAN_SIGN_STATE](cp) {
        if (cp === $.SOLIDUS) {
            this.tempBuff = [];
            this.state = SCRIPT_DATA_END_TAG_OPEN_STATE;
        } else if (cp === $.EXCLAMATION_MARK) {
            this.state = SCRIPT_DATA_ESCAPE_START_STATE;
            this._emitChars('<!');
        } else {
            this._emitChars('<');
            this._reconsumeInState(SCRIPT_DATA_STATE);
        }
    }

    // Script data end tag open state
    //------------------------------------------------------------------
    [SCRIPT_DATA_END_TAG_OPEN_STATE](cp) {
        if (isAsciiLetter(cp)) {
            this._createEndTagToken();
            this._reconsumeInState(SCRIPT_DATA_END_TAG_NAME_STATE);
        } else {
            this._emitChars('</');
            this._reconsumeInState(SCRIPT_DATA_STATE);
        }
    }

    // Script data end tag name state
    //------------------------------------------------------------------
    [SCRIPT_DATA_END_TAG_NAME_STATE](cp) {
        if (isAsciiUpper(cp)) {
            this.currentToken.tagName += toAsciiLowerChar(cp);
            this.tempBuff.push(cp);
        } else if (isAsciiLower(cp)) {
            this.currentToken.tagName += toChar(cp);
            this.tempBuff.push(cp);
        } else {
            if (this.lastStartTagName === this.currentToken.tagName) {
                if (isWhitespace(cp)) {
                    this.state = BEFORE_ATTRIBUTE_NAME_STATE;
                    return;
                } else if (cp === $.SOLIDUS) {
                    this.state = SELF_CLOSING_START_TAG_STATE;
                    return;
                } else if (cp === $.GREATER_THAN_SIGN) {
                    this._emitCurrentToken();
                    this.state = DATA_STATE;
                    return;
                }
            }

            this._emitChars('</');
            this._emitSeveralCodePoints(this.tempBuff);
            this._reconsumeInState(SCRIPT_DATA_STATE);
        }
    }

    // Script data escape start state
    //------------------------------------------------------------------
    [SCRIPT_DATA_ESCAPE_START_STATE](cp) {
        if (cp === $.HYPHEN_MINUS) {
            this.state = SCRIPT_DATA_ESCAPE_START_DASH_STATE;
            this._emitChars('-');
        } else {
            this._reconsumeInState(SCRIPT_DATA_STATE);
        }
    }

    // Script data escape start dash state
    //------------------------------------------------------------------
    [SCRIPT_DATA_ESCAPE_START_DASH_STATE](cp) {
        if (cp === $.HYPHEN_MINUS) {
            this.state = SCRIPT_DATA_ESCAPED_DASH_DASH_STATE;
            this._emitChars('-');
        } else {
            this._reconsumeInState(SCRIPT_DATA_STATE);
        }
    }

    // Script data escaped state
    //------------------------------------------------------------------
    [SCRIPT_DATA_ESCAPED_STATE](cp) {
        if (cp === $.HYPHEN_MINUS) {
            this.state = SCRIPT_DATA_ESCAPED_DASH_STATE;
            this._emitChars('-');
        } else if (cp === $.LESS_THAN_SIGN) {
            this.state = SCRIPT_DATA_ESCAPED_LESS_THAN_SIGN_STATE;
        } else if (cp === $.NULL) {
            this._err(ERR.unexpectedNullCharacter);
            this._emitChars(unicode.REPLACEMENT_CHARACTER);
        } else if (cp === $.EOF) {
            this._err(ERR.eofInScriptHtmlCommentLikeText);
            this._emitEOFToken();
        } else {
            this._emitCodePoint(cp);
        }
    }

    // Script data escaped dash state
    //------------------------------------------------------------------
    [SCRIPT_DATA_ESCAPED_DASH_STATE](cp) {
        if (cp === $.HYPHEN_MINUS) {
            this.state = SCRIPT_DATA_ESCAPED_DASH_DASH_STATE;
            this._emitChars('-');
        } else if (cp === $.LESS_THAN_SIGN) {
            this.state = SCRIPT_DATA_ESCAPED_LESS_THAN_SIGN_STATE;
        } else if (cp === $.NULL) {
            this._err(ERR.unexpectedNullCharacter);
            this.state = SCRIPT_DATA_ESCAPED_STATE;
            this._emitChars(unicode.REPLACEMENT_CHARACTER);
        } else if (cp === $.EOF) {
            this._err(ERR.eofInScriptHtmlCommentLikeText);
            this._emitEOFToken();
        } else {
            this.state = SCRIPT_DATA_ESCAPED_STATE;
            this._emitCodePoint(cp);
        }
    }

    // Script data escaped dash dash state
    //------------------------------------------------------------------
    [SCRIPT_DATA_ESCAPED_DASH_DASH_STATE](cp) {
        if (cp === $.HYPHEN_MINUS) {
            this._emitChars('-');
        } else if (cp === $.LESS_THAN_SIGN) {
            this.state = SCRIPT_DATA_ESCAPED_LESS_THAN_SIGN_STATE;
        } else if (cp === $.GREATER_THAN_SIGN) {
            this.state = SCRIPT_DATA_STATE;
            this._emitChars('>');
        } else if (cp === $.NULL) {
            this._err(ERR.unexpectedNullCharacter);
            this.state = SCRIPT_DATA_ESCAPED_STATE;
            this._emitChars(unicode.REPLACEMENT_CHARACTER);
        } else if (cp === $.EOF) {
            this._err(ERR.eofInScriptHtmlCommentLikeText);
            this._emitEOFToken();
        } else {
            this.state = SCRIPT_DATA_ESCAPED_STATE;
            this._emitCodePoint(cp);
        }
    }

    // Script data escaped less-than sign state
    //------------------------------------------------------------------
    [SCRIPT_DATA_ESCAPED_LESS_THAN_SIGN_STATE](cp) {
        if (cp === $.SOLIDUS) {
            this.tempBuff = [];
            this.state = SCRIPT_DATA_ESCAPED_END_TAG_OPEN_STATE;
        } else if (isAsciiLetter(cp)) {
            this.tempBuff = [];
            this._emitChars('<');
            this._reconsumeInState(SCRIPT_DATA_DOUBLE_ESCAPE_START_STATE);
        } else {
            this._emitChars('<');
            this._reconsumeInState(SCRIPT_DATA_ESCAPED_STATE);
        }
    }

    // Script data escaped end tag open state
    //------------------------------------------------------------------
    [SCRIPT_DATA_ESCAPED_END_TAG_OPEN_STATE](cp) {
        if (isAsciiLetter(cp)) {
            this._createEndTagToken();
            this._reconsumeInState(SCRIPT_DATA_ESCAPED_END_TAG_NAME_STATE);
        } else {
            this._emitChars('</');
            this._reconsumeInState(SCRIPT_DATA_ESCAPED_STATE);
        }
    }

    // Script data escaped end tag name state
    //------------------------------------------------------------------
    [SCRIPT_DATA_ESCAPED_END_TAG_NAME_STATE](cp) {
        if (isAsciiUpper(cp)) {
            this.currentToken.tagName += toAsciiLowerChar(cp);
            this.tempBuff.push(cp);
        } else if (isAsciiLower(cp)) {
            this.currentToken.tagName += toChar(cp);
            this.tempBuff.push(cp);
        } else {
            if (this.lastStartTagName === this.currentToken.tagName) {
                if (isWhitespace(cp)) {
                    this.state = BEFORE_ATTRIBUTE_NAME_STATE;
                    return;
                }

                if (cp === $.SOLIDUS) {
                    this.state = SELF_CLOSING_START_TAG_STATE;
                    return;
                }

                if (cp === $.GREATER_THAN_SIGN) {
                    this._emitCurrentToken();
                    this.state = DATA_STATE;
                    return;
                }
            }

            this._emitChars('</');
            this._emitSeveralCodePoints(this.tempBuff);
            this._reconsumeInState(SCRIPT_DATA_ESCAPED_STATE);
        }
    }

    // Script data double escape start state
    //------------------------------------------------------------------
    [SCRIPT_DATA_DOUBLE_ESCAPE_START_STATE](cp) {
        if (isWhitespace(cp) || cp === $.SOLIDUS || cp === $.GREATER_THAN_SIGN) {
            this.state = this._isTempBufferEqualToScriptString()
                ? SCRIPT_DATA_DOUBLE_ESCAPED_STATE
                : SCRIPT_DATA_ESCAPED_STATE;
            this._emitCodePoint(cp);
        } else if (isAsciiUpper(cp)) {
            this.tempBuff.push(toAsciiLowerCodePoint(cp));
            this._emitCodePoint(cp);
        } else if (isAsciiLower(cp)) {
            this.tempBuff.push(cp);
            this._emitCodePoint(cp);
        } else {
            this._reconsumeInState(SCRIPT_DATA_ESCAPED_STATE);
        }
    }

    // Script data double escaped state
    //------------------------------------------------------------------
    [SCRIPT_DATA_DOUBLE_ESCAPED_STATE](cp) {
        if (cp === $.HYPHEN_MINUS) {
            this.state = SCRIPT_DATA_DOUBLE_ESCAPED_DASH_STATE;
            this._emitChars('-');
        } else if (cp === $.LESS_THAN_SIGN) {
            this.state = SCRIPT_DATA_DOUBLE_ESCAPED_LESS_THAN_SIGN_STATE;
            this._emitChars('<');
        } else if (cp === $.NULL) {
            this._err(ERR.unexpectedNullCharacter);
            this._emitChars(unicode.REPLACEMENT_CHARACTER);
        } else if (cp === $.EOF) {
            this._err(ERR.eofInScriptHtmlCommentLikeText);
            this._emitEOFToken();
        } else {
            this._emitCodePoint(cp);
        }
    }

    // Script data double escaped dash state
    //------------------------------------------------------------------
    [SCRIPT_DATA_DOUBLE_ESCAPED_DASH_STATE](cp) {
        if (cp === $.HYPHEN_MINUS) {
            this.state = SCRIPT_DATA_DOUBLE_ESCAPED_DASH_DASH_STATE;
            this._emitChars('-');
        } else if (cp === $.LESS_THAN_SIGN) {
            this.state = SCRIPT_DATA_DOUBLE_ESCAPED_LESS_THAN_SIGN_STATE;
            this._emitChars('<');
        } else if (cp === $.NULL) {
            this._err(ERR.unexpectedNullCharacter);
            this.state = SCRIPT_DATA_DOUBLE_ESCAPED_STATE;
            this._emitChars(unicode.REPLACEMENT_CHARACTER);
        } else if (cp === $.EOF) {
            this._err(ERR.eofInScriptHtmlCommentLikeText);
            this._emitEOFToken();
        } else {
            this.state = SCRIPT_DATA_DOUBLE_ESCAPED_STATE;
            this._emitCodePoint(cp);
        }
    }

    // Script data double escaped dash dash state
    //------------------------------------------------------------------
    [SCRIPT_DATA_DOUBLE_ESCAPED_DASH_DASH_STATE](cp) {
        if (cp === $.HYPHEN_MINUS) {
            this._emitChars('-');
        } else if (cp === $.LESS_THAN_SIGN) {
            this.state = SCRIPT_DATA_DOUBLE_ESCAPED_LESS_THAN_SIGN_STATE;
            this._emitChars('<');
        } else if (cp === $.GREATER_THAN_SIGN) {
            this.state = SCRIPT_DATA_STATE;
            this._emitChars('>');
        } else if (cp === $.NULL) {
            this._err(ERR.unexpectedNullCharacter);
            this.state = SCRIPT_DATA_DOUBLE_ESCAPED_STATE;
            this._emitChars(unicode.REPLACEMENT_CHARACTER);
        } else if (cp === $.EOF) {
            this._err(ERR.eofInScriptHtmlCommentLikeText);
            this._emitEOFToken();
        } else {
            this.state = SCRIPT_DATA_DOUBLE_ESCAPED_STATE;
            this._emitCodePoint(cp);
        }
    }

    // Script data double escaped less-than sign state
    //------------------------------------------------------------------
    [SCRIPT_DATA_DOUBLE_ESCAPED_LESS_THAN_SIGN_STATE](cp) {
        if (cp === $.SOLIDUS) {
            this.tempBuff = [];
            this.state = SCRIPT_DATA_DOUBLE_ESCAPE_END_STATE;
            this._emitChars('/');
        } else {
            this._reconsumeInState(SCRIPT_DATA_DOUBLE_ESCAPED_STATE);
        }
    }

    // Script data double escape end state
    //------------------------------------------------------------------
    [SCRIPT_DATA_DOUBLE_ESCAPE_END_STATE](cp) {
        if (isWhitespace(cp) || cp === $.SOLIDUS || cp === $.GREATER_THAN_SIGN) {
            this.state = this._isTempBufferEqualToScriptString()
                ? SCRIPT_DATA_ESCAPED_STATE
                : SCRIPT_DATA_DOUBLE_ESCAPED_STATE;

            this._emitCodePoint(cp);
        } else if (isAsciiUpper(cp)) {
            this.tempBuff.push(toAsciiLowerCodePoint(cp));
            this._emitCodePoint(cp);
        } else if (isAsciiLower(cp)) {
            this.tempBuff.push(cp);
            this._emitCodePoint(cp);
        } else {
            this._reconsumeInState(SCRIPT_DATA_DOUBLE_ESCAPED_STATE);
        }
    }

    // Before attribute name state
    //------------------------------------------------------------------
    [BEFORE_ATTRIBUTE_NAME_STATE](cp) {
        if (isWhitespace(cp)) {
            return;
        }

        if (cp === $.SOLIDUS || cp === $.GREATER_THAN_SIGN || cp === $.EOF) {
            this._reconsumeInState(AFTER_ATTRIBUTE_NAME_STATE);
        } else if (cp === $.EQUALS_SIGN) {
            this._err(ERR.unexpectedEqualsSignBeforeAttributeName);
            this._createAttr('=');
            this.state = ATTRIBUTE_NAME_STATE;
        } else {
            this._createAttr('');
            this._reconsumeInState(ATTRIBUTE_NAME_STATE);
        }
    }

    // Attribute name state
    //------------------------------------------------------------------
    [ATTRIBUTE_NAME_STATE](cp) {
        if (isWhitespace(cp) || cp === $.SOLIDUS || cp === $.GREATER_THAN_SIGN || cp === $.EOF) {
            this._leaveAttrName(AFTER_ATTRIBUTE_NAME_STATE);
            this._unconsume();
        } else if (cp === $.EQUALS_SIGN) {
            this._leaveAttrName(BEFORE_ATTRIBUTE_VALUE_STATE);
        } else if (isAsciiUpper(cp)) {
            this.currentAttr.name += toAsciiLowerChar(cp);
        } else if (cp === $.QUOTATION_MARK || cp === $.APOSTROPHE || cp === $.LESS_THAN_SIGN) {
            this._err(ERR.unexpectedCharacterInAttributeName);
            this.currentAttr.name += toChar(cp);
        } else if (cp === $.NULL) {
            this._err(ERR.unexpectedNullCharacter);
            this.currentAttr.name += unicode.REPLACEMENT_CHARACTER;
        } else {
            this.currentAttr.name += toChar(cp);
        }
    }

    // After attribute name state
    //------------------------------------------------------------------
    [AFTER_ATTRIBUTE_NAME_STATE](cp) {
        if (isWhitespace(cp)) {
            return;
        }

        if (cp === $.SOLIDUS) {
            this.state = SELF_CLOSING_START_TAG_STATE;
        } else if (cp === $.EQUALS_SIGN) {
            this.state = BEFORE_ATTRIBUTE_VALUE_STATE;
        } else if (cp === $.GREATER_THAN_SIGN) {
            this.state = DATA_STATE;
            this._emitCurrentToken();
        } else if (cp === $.EOF) {
            this._err(ERR.eofInTag);
            this._emitEOFToken();
        } else {
            this._createAttr('');
            this._reconsumeInState(ATTRIBUTE_NAME_STATE);
        }
    }

    // Before attribute value state
    //------------------------------------------------------------------
    [BEFORE_ATTRIBUTE_VALUE_STATE](cp) {
        if (isWhitespace(cp)) {
            return;
        }

        if (cp === $.QUOTATION_MARK) {
            this.state = ATTRIBUTE_VALUE_DOUBLE_QUOTED_STATE;
        } else if (cp === $.APOSTROPHE) {
            this.state = ATTRIBUTE_VALUE_SINGLE_QUOTED_STATE;
        } else if (cp === $.GREATER_THAN_SIGN) {
            this._err(ERR.missingAttributeValue);
            this.state = DATA_STATE;
            this._emitCurrentToken();
        } else {
            this._reconsumeInState(ATTRIBUTE_VALUE_UNQUOTED_STATE);
        }
    }

    // Attribute value (double-quoted) state
    //------------------------------------------------------------------
    [ATTRIBUTE_VALUE_DOUBLE_QUOTED_STATE](cp) {
        if (cp === $.QUOTATION_MARK) {
            this.state = AFTER_ATTRIBUTE_VALUE_QUOTED_STATE;
        } else if (cp === $.AMPERSAND) {
            this.returnState = ATTRIBUTE_VALUE_DOUBLE_QUOTED_STATE;
            this.state = CHARACTER_REFERENCE_STATE;
        } else if (cp === $.NULL) {
            this._err(ERR.unexpectedNullCharacter);
            this.currentAttr.value += unicode.REPLACEMENT_CHARACTER;
        } else if (cp === $.EOF) {
            this._err(ERR.eofInTag);
            this._emitEOFToken();
        } else {
            this.currentAttr.value += toChar(cp);
        }
    }

    // Attribute value (single-quoted) state
    //------------------------------------------------------------------
    [ATTRIBUTE_VALUE_SINGLE_QUOTED_STATE](cp) {
        if (cp === $.APOSTROPHE) {
            this.state = AFTER_ATTRIBUTE_VALUE_QUOTED_STATE;
        } else if (cp === $.AMPERSAND) {
            this.returnState = ATTRIBUTE_VALUE_SINGLE_QUOTED_STATE;
            this.state = CHARACTER_REFERENCE_STATE;
        } else if (cp === $.NULL) {
            this._err(ERR.unexpectedNullCharacter);
            this.currentAttr.value += unicode.REPLACEMENT_CHARACTER;
        } else if (cp === $.EOF) {
            this._err(ERR.eofInTag);
            this._emitEOFToken();
        } else {
            this.currentAttr.value += toChar(cp);
        }
    }

    // Attribute value (unquoted) state
    //------------------------------------------------------------------
    [ATTRIBUTE_VALUE_UNQUOTED_STATE](cp) {
        if (isWhitespace(cp)) {
            this._leaveAttrValue(BEFORE_ATTRIBUTE_NAME_STATE);
        } else if (cp === $.AMPERSAND) {
            this.returnState = ATTRIBUTE_VALUE_UNQUOTED_STATE;
            this.state = CHARACTER_REFERENCE_STATE;
        } else if (cp === $.GREATER_THAN_SIGN) {
            this._leaveAttrValue(DATA_STATE);
            this._emitCurrentToken();
        } else if (cp === $.NULL) {
            this._err(ERR.unexpectedNullCharacter);
            this.currentAttr.value += unicode.REPLACEMENT_CHARACTER;
        } else if (
            cp === $.QUOTATION_MARK ||
            cp === $.APOSTROPHE ||
            cp === $.LESS_THAN_SIGN ||
            cp === $.EQUALS_SIGN ||
            cp === $.GRAVE_ACCENT
        ) {
            this._err(ERR.unexpectedCharacterInUnquotedAttributeValue);
            this.currentAttr.value += toChar(cp);
        } else if (cp === $.EOF) {
            this._err(ERR.eofInTag);
            this._emitEOFToken();
        } else {
            this.currentAttr.value += toChar(cp);
        }
    }

    // After attribute value (quoted) state
    //------------------------------------------------------------------
    [AFTER_ATTRIBUTE_VALUE_QUOTED_STATE](cp) {
        if (isWhitespace(cp)) {
            this._leaveAttrValue(BEFORE_ATTRIBUTE_NAME_STATE);
        } else if (cp === $.SOLIDUS) {
            this._leaveAttrValue(SELF_CLOSING_START_TAG_STATE);
        } else if (cp === $.GREATER_THAN_SIGN) {
            this._leaveAttrValue(DATA_STATE);
            this._emitCurrentToken();
        } else if (cp === $.EOF) {
            this._err(ERR.eofInTag);
            this._emitEOFToken();
        } else {
            this._err(ERR.missingWhitespaceBetweenAttributes);
            this._reconsumeInState(BEFORE_ATTRIBUTE_NAME_STATE);
        }
    }

    // Self-closing start tag state
    //------------------------------------------------------------------
    [SELF_CLOSING_START_TAG_STATE](cp) {
        if (cp === $.GREATER_THAN_SIGN) {
            this.currentToken.selfClosing = true;
            this.state = DATA_STATE;
            this._emitCurrentToken();
        } else if (cp === $.EOF) {
            this._err(ERR.eofInTag);
            this._emitEOFToken();
        } else {
            this._err(ERR.unexpectedSolidusInTag);
            this._reconsumeInState(BEFORE_ATTRIBUTE_NAME_STATE);
        }
    }

    // Bogus comment state
    //------------------------------------------------------------------
    [BOGUS_COMMENT_STATE](cp) {
        if (cp === $.GREATER_THAN_SIGN) {
            this.state = DATA_STATE;
            this._emitCurrentToken();
        } else if (cp === $.EOF) {
            this._emitCurrentToken();
            this._emitEOFToken();
        } else if (cp === $.NULL) {
            this._err(ERR.unexpectedNullCharacter);
            this.currentToken.data += unicode.REPLACEMENT_CHARACTER;
        } else {
            this.currentToken.data += toChar(cp);
        }
    }

    // Markup declaration open state
    //------------------------------------------------------------------
    [MARKUP_DECLARATION_OPEN_STATE](cp) {
        if (this._consumeSequenceIfMatch($$.DASH_DASH_STRING, cp, true)) {
            this._createCommentToken();
            this.state = COMMENT_START_STATE;
        } else if (this._consumeSequenceIfMatch($$.DOCTYPE_STRING, cp, false)) {
            this.state = DOCTYPE_STATE;
        } else if (this._consumeSequenceIfMatch($$.CDATA_START_STRING, cp, true)) {
            if (this.allowCDATA) {
                this.state = CDATA_SECTION_STATE;
            } else {
                this._err(ERR.cdataInHtmlContent);
                this._createCommentToken();
                this.currentToken.data = '[CDATA[';
                this.state = BOGUS_COMMENT_STATE;
            }
        }

        //NOTE: sequence lookup can be abrupted by hibernation. In that case lookup
        //results are no longer valid and we will need to start over.
        else if (!this._ensureHibernation()) {
            this._err(ERR.incorrectlyOpenedComment);
            this._createCommentToken();
            this._reconsumeInState(BOGUS_COMMENT_STATE);
        }
    }

    // Comment start state
    //------------------------------------------------------------------
    [COMMENT_START_STATE](cp) {
        if (cp === $.HYPHEN_MINUS) {
            this.state = COMMENT_START_DASH_STATE;
        } else if (cp === $.GREATER_THAN_SIGN) {
            this._err(ERR.abruptClosingOfEmptyComment);
            this.state = DATA_STATE;
            this._emitCurrentToken();
        } else {
            this._reconsumeInState(COMMENT_STATE);
        }
    }

    // Comment start dash state
    //------------------------------------------------------------------
    [COMMENT_START_DASH_STATE](cp) {
        if (cp === $.HYPHEN_MINUS) {
            this.state = COMMENT_END_STATE;
        } else if (cp === $.GREATER_THAN_SIGN) {
            this._err(ERR.abruptClosingOfEmptyComment);
            this.state = DATA_STATE;
            this._emitCurrentToken();
        } else if (cp === $.EOF) {
            this._err(ERR.eofInComment);
            this._emitCurrentToken();
            this._emitEOFToken();
        } else {
            this.currentToken.data += '-';
            this._reconsumeInState(COMMENT_STATE);
        }
    }

    // Comment state
    //------------------------------------------------------------------
    [COMMENT_STATE](cp) {
        if (cp === $.HYPHEN_MINUS) {
            this.state = COMMENT_END_DASH_STATE;
        } else if (cp === $.LESS_THAN_SIGN) {
            this.currentToken.data += '<';
            this.state = COMMENT_LESS_THAN_SIGN_STATE;
        } else if (cp === $.NULL) {
            this._err(ERR.unexpectedNullCharacter);
            this.currentToken.data += unicode.REPLACEMENT_CHARACTER;
        } else if (cp === $.EOF) {
            this._err(ERR.eofInComment);
            this._emitCurrentToken();
            this._emitEOFToken();
        } else {
            this.currentToken.data += toChar(cp);
        }
    }

    // Comment less-than sign state
    //------------------------------------------------------------------
    [COMMENT_LESS_THAN_SIGN_STATE](cp) {
        if (cp === $.EXCLAMATION_MARK) {
            this.currentToken.data += '!';
            this.state = COMMENT_LESS_THAN_SIGN_BANG_STATE;
        } else if (cp === $.LESS_THAN_SIGN) {
            this.currentToken.data += '!';
        } else {
            this._reconsumeInState(COMMENT_STATE);
        }
    }

    // Comment less-than sign bang state
    //------------------------------------------------------------------
    [COMMENT_LESS_THAN_SIGN_BANG_STATE](cp) {
        if (cp === $.HYPHEN_MINUS) {
            this.state = COMMENT_LESS_THAN_SIGN_BANG_DASH_STATE;
        } else {
            this._reconsumeInState(COMMENT_STATE);
        }
    }

    // Comment less-than sign bang dash state
    //------------------------------------------------------------------
    [COMMENT_LESS_THAN_SIGN_BANG_DASH_STATE](cp) {
        if (cp === $.HYPHEN_MINUS) {
            this.state = COMMENT_LESS_THAN_SIGN_BANG_DASH_DASH_STATE;
        } else {
            this._reconsumeInState(COMMENT_END_DASH_STATE);
        }
    }

    // Comment less-than sign bang dash dash state
    //------------------------------------------------------------------
    [COMMENT_LESS_THAN_SIGN_BANG_DASH_DASH_STATE](cp) {
        if (cp !== $.GREATER_THAN_SIGN && cp !== $.EOF) {
            this._err(ERR.nestedComment);
        }

        this._reconsumeInState(COMMENT_END_STATE);
    }

    // Comment end dash state
    //------------------------------------------------------------------
    [COMMENT_END_DASH_STATE](cp) {
        if (cp === $.HYPHEN_MINUS) {
            this.state = COMMENT_END_STATE;
        } else if (cp === $.EOF) {
            this._err(ERR.eofInComment);
            this._emitCurrentToken();
            this._emitEOFToken();
        } else {
            this.currentToken.data += '-';
            this._reconsumeInState(COMMENT_STATE);
        }
    }

    // Comment end state
    //------------------------------------------------------------------
    [COMMENT_END_STATE](cp) {
        if (cp === $.GREATER_THAN_SIGN) {
            this.state = DATA_STATE;
            this._emitCurrentToken();
        } else if (cp === $.EXCLAMATION_MARK) {
            this.state = COMMENT_END_BANG_STATE;
        } else if (cp === $.HYPHEN_MINUS) {
            this.currentToken.data += '-';
        } else if (cp === $.EOF) {
            this._err(ERR.eofInComment);
            this._emitCurrentToken();
            this._emitEOFToken();
        } else {
            this.currentToken.data += '--';
            this._reconsumeInState(COMMENT_STATE);
        }
    }

    // Comment end bang state
    //------------------------------------------------------------------
    [COMMENT_END_BANG_STATE](cp) {
        if (cp === $.HYPHEN_MINUS) {
            this.currentToken.data += '--!';
            this.state = COMMENT_END_DASH_STATE;
        } else if (cp === $.GREATER_THAN_SIGN) {
            this._err(ERR.incorrectlyClosedComment);
            this.state = DATA_STATE;
            this._emitCurrentToken();
        } else if (cp === $.EOF) {
            this._err(ERR.eofInComment);
            this._emitCurrentToken();
            this._emitEOFToken();
        } else {
            this.currentToken.data += '--!';
            this._reconsumeInState(COMMENT_STATE);
        }
    }

    // DOCTYPE state
    //------------------------------------------------------------------
    [DOCTYPE_STATE](cp) {
        if (isWhitespace(cp)) {
            this.state = BEFORE_DOCTYPE_NAME_STATE;
        } else if (cp === $.GREATER_THAN_SIGN) {
            this._reconsumeInState(BEFORE_DOCTYPE_NAME_STATE);
        } else if (cp === $.EOF) {
            this._err(ERR.eofInDoctype);
            this._createDoctypeToken(null);
            this.currentToken.forceQuirks = true;
            this._emitCurrentToken();
            this._emitEOFToken();
        } else {
            this._err(ERR.missingWhitespaceBeforeDoctypeName);
            this._reconsumeInState(BEFORE_DOCTYPE_NAME_STATE);
        }
    }

    // Before DOCTYPE name state
    //------------------------------------------------------------------
    [BEFORE_DOCTYPE_NAME_STATE](cp) {
        if (isWhitespace(cp)) {
            return;
        }

        if (isAsciiUpper(cp)) {
            this._createDoctypeToken(toAsciiLowerChar(cp));
            this.state = DOCTYPE_NAME_STATE;
        } else if (cp === $.NULL) {
            this._err(ERR.unexpectedNullCharacter);
            this._createDoctypeToken(unicode.REPLACEMENT_CHARACTER);
            this.state = DOCTYPE_NAME_STATE;
        } else if (cp === $.GREATER_THAN_SIGN) {
            this._err(ERR.missingDoctypeName);
            this._createDoctypeToken(null);
            this.currentToken.forceQuirks = true;
            this._emitCurrentToken();
            this.state = DATA_STATE;
        } else if (cp === $.EOF) {
            this._err(ERR.eofInDoctype);
            this._createDoctypeToken(null);
            this.currentToken.forceQuirks = true;
            this._emitCurrentToken();
            this._emitEOFToken();
        } else {
            this._createDoctypeToken(toChar(cp));
            this.state = DOCTYPE_NAME_STATE;
        }
    }

    // DOCTYPE name state
    //------------------------------------------------------------------
    [DOCTYPE_NAME_STATE](cp) {
        if (isWhitespace(cp)) {
            this.state = AFTER_DOCTYPE_NAME_STATE;
        } else if (cp === $.GREATER_THAN_SIGN) {
            this.state = DATA_STATE;
            this._emitCurrentToken();
        } else if (isAsciiUpper(cp)) {
            this.currentToken.name += toAsciiLowerChar(cp);
        } else if (cp === $.NULL) {
            this._err(ERR.unexpectedNullCharacter);
            this.currentToken.name += unicode.REPLACEMENT_CHARACTER;
        } else if (cp === $.EOF) {
            this._err(ERR.eofInDoctype);
            this.currentToken.forceQuirks = true;
            this._emitCurrentToken();
            this._emitEOFToken();
        } else {
            this.currentToken.name += toChar(cp);
        }
    }

    // After DOCTYPE name state
    //------------------------------------------------------------------
    [AFTER_DOCTYPE_NAME_STATE](cp) {
        if (isWhitespace(cp)) {
            return;
        }

        if (cp === $.GREATER_THAN_SIGN) {
            this.state = DATA_STATE;
            this._emitCurrentToken();
        } else if (cp === $.EOF) {
            this._err(ERR.eofInDoctype);
            this.currentToken.forceQuirks = true;
            this._emitCurrentToken();
            this._emitEOFToken();
        } else if (this._consumeSequenceIfMatch($$.PUBLIC_STRING, cp, false)) {
            this.state = AFTER_DOCTYPE_PUBLIC_KEYWORD_STATE;
        } else if (this._consumeSequenceIfMatch($$.SYSTEM_STRING, cp, false)) {
            this.state = AFTER_DOCTYPE_SYSTEM_KEYWORD_STATE;
        }
        //NOTE: sequence lookup can be abrupted by hibernation. In that case lookup
        //results are no longer valid and we will need to start over.
        else if (!this._ensureHibernation()) {
            this._err(ERR.invalidCharacterSequenceAfterDoctypeName);
            this.currentToken.forceQuirks = true;
            this._reconsumeInState(BOGUS_DOCTYPE_STATE);
        }
    }

    // After DOCTYPE public keyword state
    //------------------------------------------------------------------
    [AFTER_DOCTYPE_PUBLIC_KEYWORD_STATE](cp) {
        if (isWhitespace(cp)) {
            this.state = BEFORE_DOCTYPE_PUBLIC_IDENTIFIER_STATE;
        } else if (cp === $.QUOTATION_MARK) {
            this._err(ERR.missingWhitespaceAfterDoctypePublicKeyword);
            this.currentToken.publicId = '';
            this.state = DOCTYPE_PUBLIC_IDENTIFIER_DOUBLE_QUOTED_STATE;
        } else if (cp === $.APOSTROPHE) {
            this._err(ERR.missingWhitespaceAfterDoctypePublicKeyword);
            this.currentToken.publicId = '';
            this.state = DOCTYPE_PUBLIC_IDENTIFIER_SINGLE_QUOTED_STATE;
        } else if (cp === $.GREATER_THAN_SIGN) {
            this._err(ERR.missingDoctypePublicIdentifier);
            this.currentToken.forceQuirks = true;
            this.state = DATA_STATE;
            this._emitCurrentToken();
        } else if (cp === $.EOF) {
            this._err(ERR.eofInDoctype);
            this.currentToken.forceQuirks = true;
            this._emitCurrentToken();
            this._emitEOFToken();
        } else {
            this._err(ERR.missingQuoteBeforeDoctypePublicIdentifier);
            this.currentToken.forceQuirks = true;
            this._reconsumeInState(BOGUS_DOCTYPE_STATE);
        }
    }

    // Before DOCTYPE public identifier state
    //------------------------------------------------------------------
    [BEFORE_DOCTYPE_PUBLIC_IDENTIFIER_STATE](cp) {
        if (isWhitespace(cp)) {
            return;
        }

        if (cp === $.QUOTATION_MARK) {
            this.currentToken.publicId = '';
            this.state = DOCTYPE_PUBLIC_IDENTIFIER_DOUBLE_QUOTED_STATE;
        } else if (cp === $.APOSTROPHE) {
            this.currentToken.publicId = '';
            this.state = DOCTYPE_PUBLIC_IDENTIFIER_SINGLE_QUOTED_STATE;
        } else if (cp === $.GREATER_THAN_SIGN) {
            this._err(ERR.missingDoctypePublicIdentifier);
            this.currentToken.forceQuirks = true;
            this.state = DATA_STATE;
            this._emitCurrentToken();
        } else if (cp === $.EOF) {
            this._err(ERR.eofInDoctype);
            this.currentToken.forceQuirks = true;
            this._emitCurrentToken();
            this._emitEOFToken();
        } else {
            this._err(ERR.missingQuoteBeforeDoctypePublicIdentifier);
            this.currentToken.forceQuirks = true;
            this._reconsumeInState(BOGUS_DOCTYPE_STATE);
        }
    }

    // DOCTYPE public identifier (double-quoted) state
    //------------------------------------------------------------------
    [DOCTYPE_PUBLIC_IDENTIFIER_DOUBLE_QUOTED_STATE](cp) {
        if (cp === $.QUOTATION_MARK) {
            this.state = AFTER_DOCTYPE_PUBLIC_IDENTIFIER_STATE;
        } else if (cp === $.NULL) {
            this._err(ERR.unexpectedNullCharacter);
            this.currentToken.publicId += unicode.REPLACEMENT_CHARACTER;
        } else if (cp === $.GREATER_THAN_SIGN) {
            this._err(ERR.abruptDoctypePublicIdentifier);
            this.currentToken.forceQuirks = true;
            this._emitCurrentToken();
            this.state = DATA_STATE;
        } else if (cp === $.EOF) {
            this._err(ERR.eofInDoctype);
            this.currentToken.forceQuirks = true;
            this._emitCurrentToken();
            this._emitEOFToken();
        } else {
            this.currentToken.publicId += toChar(cp);
        }
    }

    // DOCTYPE public identifier (single-quoted) state
    //------------------------------------------------------------------
    [DOCTYPE_PUBLIC_IDENTIFIER_SINGLE_QUOTED_STATE](cp) {
        if (cp === $.APOSTROPHE) {
            this.state = AFTER_DOCTYPE_PUBLIC_IDENTIFIER_STATE;
        } else if (cp === $.NULL) {
            this._err(ERR.unexpectedNullCharacter);
            this.currentToken.publicId += unicode.REPLACEMENT_CHARACTER;
        } else if (cp === $.GREATER_THAN_SIGN) {
            this._err(ERR.abruptDoctypePublicIdentifier);
            this.currentToken.forceQuirks = true;
            this._emitCurrentToken();
            this.state = DATA_STATE;
        } else if (cp === $.EOF) {
            this._err(ERR.eofInDoctype);
            this.currentToken.forceQuirks = true;
            this._emitCurrentToken();
            this._emitEOFToken();
        } else {
            this.currentToken.publicId += toChar(cp);
        }
    }

    // After DOCTYPE public identifier state
    //------------------------------------------------------------------
    [AFTER_DOCTYPE_PUBLIC_IDENTIFIER_STATE](cp) {
        if (isWhitespace(cp)) {
            this.state = BETWEEN_DOCTYPE_PUBLIC_AND_SYSTEM_IDENTIFIERS_STATE;
        } else if (cp === $.GREATER_THAN_SIGN) {
            this.state = DATA_STATE;
            this._emitCurrentToken();
        } else if (cp === $.QUOTATION_MARK) {
            this._err(ERR.missingWhitespaceBetweenDoctypePublicAndSystemIdentifiers);
            this.currentToken.systemId = '';
            this.state = DOCTYPE_SYSTEM_IDENTIFIER_DOUBLE_QUOTED_STATE;
        } else if (cp === $.APOSTROPHE) {
            this._err(ERR.missingWhitespaceBetweenDoctypePublicAndSystemIdentifiers);
            this.currentToken.systemId = '';
            this.state = DOCTYPE_SYSTEM_IDENTIFIER_SINGLE_QUOTED_STATE;
        } else if (cp === $.EOF) {
            this._err(ERR.eofInDoctype);
            this.currentToken.forceQuirks = true;
            this._emitCurrentToken();
            this._emitEOFToken();
        } else {
            this._err(ERR.missingQuoteBeforeDoctypeSystemIdentifier);
            this.currentToken.forceQuirks = true;
            this._reconsumeInState(BOGUS_DOCTYPE_STATE);
        }
    }

    // Between DOCTYPE public and system identifiers state
    //------------------------------------------------------------------
    [BETWEEN_DOCTYPE_PUBLIC_AND_SYSTEM_IDENTIFIERS_STATE](cp) {
        if (isWhitespace(cp)) {
            return;
        }

        if (cp === $.GREATER_THAN_SIGN) {
            this._emitCurrentToken();
            this.state = DATA_STATE;
        } else if (cp === $.QUOTATION_MARK) {
            this.currentToken.systemId = '';
            this.state = DOCTYPE_SYSTEM_IDENTIFIER_DOUBLE_QUOTED_STATE;
        } else if (cp === $.APOSTROPHE) {
            this.currentToken.systemId = '';
            this.state = DOCTYPE_SYSTEM_IDENTIFIER_SINGLE_QUOTED_STATE;
        } else if (cp === $.EOF) {
            this._err(ERR.eofInDoctype);
            this.currentToken.forceQuirks = true;
            this._emitCurrentToken();
            this._emitEOFToken();
        } else {
            this._err(ERR.missingQuoteBeforeDoctypeSystemIdentifier);
            this.currentToken.forceQuirks = true;
            this._reconsumeInState(BOGUS_DOCTYPE_STATE);
        }
    }

    // After DOCTYPE system keyword state
    //------------------------------------------------------------------
    [AFTER_DOCTYPE_SYSTEM_KEYWORD_STATE](cp) {
        if (isWhitespace(cp)) {
            this.state = BEFORE_DOCTYPE_SYSTEM_IDENTIFIER_STATE;
        } else if (cp === $.QUOTATION_MARK) {
            this._err(ERR.missingWhitespaceAfterDoctypeSystemKeyword);
            this.currentToken.systemId = '';
            this.state = DOCTYPE_SYSTEM_IDENTIFIER_DOUBLE_QUOTED_STATE;
        } else if (cp === $.APOSTROPHE) {
            this._err(ERR.missingWhitespaceAfterDoctypeSystemKeyword);
            this.currentToken.systemId = '';
            this.state = DOCTYPE_SYSTEM_IDENTIFIER_SINGLE_QUOTED_STATE;
        } else if (cp === $.GREATER_THAN_SIGN) {
            this._err(ERR.missingDoctypeSystemIdentifier);
            this.currentToken.forceQuirks = true;
            this.state = DATA_STATE;
            this._emitCurrentToken();
        } else if (cp === $.EOF) {
            this._err(ERR.eofInDoctype);
            this.currentToken.forceQuirks = true;
            this._emitCurrentToken();
            this._emitEOFToken();
        } else {
            this._err(ERR.missingQuoteBeforeDoctypeSystemIdentifier);
            this.currentToken.forceQuirks = true;
            this._reconsumeInState(BOGUS_DOCTYPE_STATE);
        }
    }

    // Before DOCTYPE system identifier state
    //------------------------------------------------------------------
    [BEFORE_DOCTYPE_SYSTEM_IDENTIFIER_STATE](cp) {
        if (isWhitespace(cp)) {
            return;
        }

        if (cp === $.QUOTATION_MARK) {
            this.currentToken.systemId = '';
            this.state = DOCTYPE_SYSTEM_IDENTIFIER_DOUBLE_QUOTED_STATE;
        } else if (cp === $.APOSTROPHE) {
            this.currentToken.systemId = '';
            this.state = DOCTYPE_SYSTEM_IDENTIFIER_SINGLE_QUOTED_STATE;
        } else if (cp === $.GREATER_THAN_SIGN) {
            this._err(ERR.missingDoctypeSystemIdentifier);
            this.currentToken.forceQuirks = true;
            this.state = DATA_STATE;
            this._emitCurrentToken();
        } else if (cp === $.EOF) {
            this._err(ERR.eofInDoctype);
            this.currentToken.forceQuirks = true;
            this._emitCurrentToken();
            this._emitEOFToken();
        } else {
            this._err(ERR.missingQuoteBeforeDoctypeSystemIdentifier);
            this.currentToken.forceQuirks = true;
            this._reconsumeInState(BOGUS_DOCTYPE_STATE);
        }
    }

    // DOCTYPE system identifier (double-quoted) state
    //------------------------------------------------------------------
    [DOCTYPE_SYSTEM_IDENTIFIER_DOUBLE_QUOTED_STATE](cp) {
        if (cp === $.QUOTATION_MARK) {
            this.state = AFTER_DOCTYPE_SYSTEM_IDENTIFIER_STATE;
        } else if (cp === $.NULL) {
            this._err(ERR.unexpectedNullCharacter);
            this.currentToken.systemId += unicode.REPLACEMENT_CHARACTER;
        } else if (cp === $.GREATER_THAN_SIGN) {
            this._err(ERR.abruptDoctypeSystemIdentifier);
            this.currentToken.forceQuirks = true;
            this._emitCurrentToken();
            this.state = DATA_STATE;
        } else if (cp === $.EOF) {
            this._err(ERR.eofInDoctype);
            this.currentToken.forceQuirks = true;
            this._emitCurrentToken();
            this._emitEOFToken();
        } else {
            this.currentToken.systemId += toChar(cp);
        }
    }

    // DOCTYPE system identifier (single-quoted) state
    //------------------------------------------------------------------
    [DOCTYPE_SYSTEM_IDENTIFIER_SINGLE_QUOTED_STATE](cp) {
        if (cp === $.APOSTROPHE) {
            this.state = AFTER_DOCTYPE_SYSTEM_IDENTIFIER_STATE;
        } else if (cp === $.NULL) {
            this._err(ERR.unexpectedNullCharacter);
            this.currentToken.systemId += unicode.REPLACEMENT_CHARACTER;
        } else if (cp === $.GREATER_THAN_SIGN) {
            this._err(ERR.abruptDoctypeSystemIdentifier);
            this.currentToken.forceQuirks = true;
            this._emitCurrentToken();
            this.state = DATA_STATE;
        } else if (cp === $.EOF) {
            this._err(ERR.eofInDoctype);
            this.currentToken.forceQuirks = true;
            this._emitCurrentToken();
            this._emitEOFToken();
        } else {
            this.currentToken.systemId += toChar(cp);
        }
    }

    // After DOCTYPE system identifier state
    //------------------------------------------------------------------
    [AFTER_DOCTYPE_SYSTEM_IDENTIFIER_STATE](cp) {
        if (isWhitespace(cp)) {
            return;
        }

        if (cp === $.GREATER_THAN_SIGN) {
            this._emitCurrentToken();
            this.state = DATA_STATE;
        } else if (cp === $.EOF) {
            this._err(ERR.eofInDoctype);
            this.currentToken.forceQuirks = true;
            this._emitCurrentToken();
            this._emitEOFToken();
        } else {
            this._err(ERR.unexpectedCharacterAfterDoctypeSystemIdentifier);
            this._reconsumeInState(BOGUS_DOCTYPE_STATE);
        }
    }

    // Bogus DOCTYPE state
    //------------------------------------------------------------------
    [BOGUS_DOCTYPE_STATE](cp) {
        if (cp === $.GREATER_THAN_SIGN) {
            this._emitCurrentToken();
            this.state = DATA_STATE;
        } else if (cp === $.NULL) {
            this._err(ERR.unexpectedNullCharacter);
        } else if (cp === $.EOF) {
            this._emitCurrentToken();
            this._emitEOFToken();
        }
    }

    // CDATA section state
    //------------------------------------------------------------------
    [CDATA_SECTION_STATE](cp) {
        if (cp === $.RIGHT_SQUARE_BRACKET) {
            this.state = CDATA_SECTION_BRACKET_STATE;
        } else if (cp === $.EOF) {
            this._err(ERR.eofInCdata);
            this._emitEOFToken();
        } else {
            this._emitCodePoint(cp);
        }
    }

    // CDATA section bracket state
    //------------------------------------------------------------------
    [CDATA_SECTION_BRACKET_STATE](cp) {
        if (cp === $.RIGHT_SQUARE_BRACKET) {
            this.state = CDATA_SECTION_END_STATE;
        } else {
            this._emitChars(']');
            this._reconsumeInState(CDATA_SECTION_STATE);
        }
    }

    // CDATA section end state
    //------------------------------------------------------------------
    [CDATA_SECTION_END_STATE](cp) {
        if (cp === $.GREATER_THAN_SIGN) {
            this.state = DATA_STATE;
        } else if (cp === $.RIGHT_SQUARE_BRACKET) {
            this._emitChars(']');
        } else {
            this._emitChars(']]');
            this._reconsumeInState(CDATA_SECTION_STATE);
        }
    }

    // Character reference state
    //------------------------------------------------------------------
    [CHARACTER_REFERENCE_STATE](cp) {
        this.tempBuff = [$.AMPERSAND];

        if (cp === $.NUMBER_SIGN) {
            this.tempBuff.push(cp);
            this.state = NUMERIC_CHARACTER_REFERENCE_STATE;
        } else if (isAsciiAlphaNumeric(cp)) {
            this._reconsumeInState(NAMED_CHARACTER_REFERENCE_STATE);
        } else {
            this._flushCodePointsConsumedAsCharacterReference();
            this._reconsumeInState(this.returnState);
        }
    }

    // Named character reference state
    //------------------------------------------------------------------
    [NAMED_CHARACTER_REFERENCE_STATE](cp) {
        const matchResult = this._matchNamedCharacterReference(cp);

        //NOTE: matching can be abrupted by hibernation. In that case match
        //results are no longer valid and we will need to start over.
        if (this._ensureHibernation()) {
            this.tempBuff = [$.AMPERSAND];
        } else if (matchResult) {
            const withSemicolon = this.tempBuff[this.tempBuff.length - 1] === $.SEMICOLON;

            if (!this._isCharacterReferenceAttributeQuirk(withSemicolon)) {
                if (!withSemicolon) {
                    this._errOnNextCodePoint(ERR.missingSemicolonAfterCharacterReference);
                }

                this.tempBuff = matchResult;
            }

            this._flushCodePointsConsumedAsCharacterReference();
            this.state = this.returnState;
        } else {
            this._flushCodePointsConsumedAsCharacterReference();
            this.state = AMBIGUOUS_AMPERSAND_STATE;
        }
    }

    // Ambiguos ampersand state
    //------------------------------------------------------------------
    [AMBIGUOUS_AMPERSAND_STATE](cp) {
        if (isAsciiAlphaNumeric(cp)) {
            if (this._isCharacterReferenceInAttribute()) {
                this.currentAttr.value += toChar(cp);
            } else {
                this._emitCodePoint(cp);
            }
        } else {
            if (cp === $.SEMICOLON) {
                this._err(ERR.unknownNamedCharacterReference);
            }

            this._reconsumeInState(this.returnState);
        }
    }

    // Numeric character reference state
    //------------------------------------------------------------------
    [NUMERIC_CHARACTER_REFERENCE_STATE](cp) {
        this.charRefCode = 0;

        if (cp === $.LATIN_SMALL_X || cp === $.LATIN_CAPITAL_X) {
            this.tempBuff.push(cp);
            this.state = HEXADEMICAL_CHARACTER_REFERENCE_START_STATE;
        } else {
            this._reconsumeInState(DECIMAL_CHARACTER_REFERENCE_START_STATE);
        }
    }

    // Hexademical character reference start state
    //------------------------------------------------------------------
    [HEXADEMICAL_CHARACTER_REFERENCE_START_STATE](cp) {
        if (isAsciiHexDigit(cp)) {
            this._reconsumeInState(HEXADEMICAL_CHARACTER_REFERENCE_STATE);
        } else {
            this._err(ERR.absenceOfDigitsInNumericCharacterReference);
            this._flushCodePointsConsumedAsCharacterReference();
            this._reconsumeInState(this.returnState);
        }
    }

    // Decimal character reference start state
    //------------------------------------------------------------------
    [DECIMAL_CHARACTER_REFERENCE_START_STATE](cp) {
        if (isAsciiDigit(cp)) {
            this._reconsumeInState(DECIMAL_CHARACTER_REFERENCE_STATE);
        } else {
            this._err(ERR.absenceOfDigitsInNumericCharacterReference);
            this._flushCodePointsConsumedAsCharacterReference();
            this._reconsumeInState(this.returnState);
        }
    }

    // Hexademical character reference state
    //------------------------------------------------------------------
    [HEXADEMICAL_CHARACTER_REFERENCE_STATE](cp) {
        if (isAsciiUpperHexDigit(cp)) {
            this.charRefCode = this.charRefCode * 16 + cp - 0x37;
        } else if (isAsciiLowerHexDigit(cp)) {
            this.charRefCode = this.charRefCode * 16 + cp - 0x57;
        } else if (isAsciiDigit(cp)) {
            this.charRefCode = this.charRefCode * 16 + cp - 0x30;
        } else if (cp === $.SEMICOLON) {
            this.state = NUMERIC_CHARACTER_REFERENCE_END_STATE;
        } else {
            this._err(ERR.missingSemicolonAfterCharacterReference);
            this._reconsumeInState(NUMERIC_CHARACTER_REFERENCE_END_STATE);
        }
    }

    // Decimal character reference state
    //------------------------------------------------------------------
    [DECIMAL_CHARACTER_REFERENCE_STATE](cp) {
        if (isAsciiDigit(cp)) {
            this.charRefCode = this.charRefCode * 10 + cp - 0x30;
        } else if (cp === $.SEMICOLON) {
            this.state = NUMERIC_CHARACTER_REFERENCE_END_STATE;
        } else {
            this._err(ERR.missingSemicolonAfterCharacterReference);
            this._reconsumeInState(NUMERIC_CHARACTER_REFERENCE_END_STATE);
        }
    }

    // Numeric character reference end state
    //------------------------------------------------------------------
    [NUMERIC_CHARACTER_REFERENCE_END_STATE]() {
        if (this.charRefCode === $.NULL) {
            this._err(ERR.nullCharacterReference);
            this.charRefCode = $.REPLACEMENT_CHARACTER;
        } else if (this.charRefCode > 0x10ffff) {
            this._err(ERR.characterReferenceOutsideUnicodeRange);
            this.charRefCode = $.REPLACEMENT_CHARACTER;
        } else if (unicode.isSurrogate(this.charRefCode)) {
            this._err(ERR.surrogateCharacterReference);
            this.charRefCode = $.REPLACEMENT_CHARACTER;
        } else if (unicode.isUndefinedCodePoint(this.charRefCode)) {
            this._err(ERR.noncharacterCharacterReference);
        } else if (unicode.isControlCodePoint(this.charRefCode) || this.charRefCode === $.CARRIAGE_RETURN) {
            this._err(ERR.controlCharacterReference);

            const replacement = C1_CONTROLS_REFERENCE_REPLACEMENTS[this.charRefCode];

            if (replacement) {
                this.charRefCode = replacement;
            }
        }

        this.tempBuff = [this.charRefCode];

        this._flushCodePointsConsumedAsCharacterReference();
        this._reconsumeInState(this.returnState);
    }
}

//Token types
Tokenizer.CHARACTER_TOKEN = 'CHARACTER_TOKEN';
Tokenizer.NULL_CHARACTER_TOKEN = 'NULL_CHARACTER_TOKEN';
Tokenizer.WHITESPACE_CHARACTER_TOKEN = 'WHITESPACE_CHARACTER_TOKEN';
Tokenizer.START_TAG_TOKEN = 'START_TAG_TOKEN';
Tokenizer.END_TAG_TOKEN = 'END_TAG_TOKEN';
Tokenizer.COMMENT_TOKEN = 'COMMENT_TOKEN';
Tokenizer.DOCTYPE_TOKEN = 'DOCTYPE_TOKEN';
Tokenizer.EOF_TOKEN = 'EOF_TOKEN';
Tokenizer.HIBERNATION_TOKEN = 'HIBERNATION_TOKEN';

//Tokenizer initial states for different modes
Tokenizer.MODE = {
    DATA: DATA_STATE,
    RCDATA: RCDATA_STATE,
    RAWTEXT: RAWTEXT_STATE,
    SCRIPT_DATA: SCRIPT_DATA_STATE,
    PLAINTEXT: PLAINTEXT_STATE
};

//Static
Tokenizer.getTokenAttr = function(token, attrName) {
    for (let i = token.attrs.length - 1; i >= 0; i--) {
        if (token.attrs[i].name === attrName) {
            return token.attrs[i].value;
        }
    }

    return null;
};

module.exports = Tokenizer;


/***/ }),
/* 77 */
/*!***********************************************************!*\
  !*** ./node_modules/parse5/lib/tokenizer/preprocessor.js ***!
  \***********************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


const unicode = __webpack_require__(/*! ../common/unicode */ 78);
const ERR = __webpack_require__(/*! ../common/error-codes */ 79);

//Aliases
const $ = unicode.CODE_POINTS;

//Const
const DEFAULT_BUFFER_WATERLINE = 1 << 16;

//Preprocessor
//NOTE: HTML input preprocessing
//(see: http://www.whatwg.org/specs/web-apps/current-work/multipage/parsing.html#preprocessing-the-input-stream)
class Preprocessor {
    constructor() {
        this.html = null;

        this.pos = -1;
        this.lastGapPos = -1;
        this.lastCharPos = -1;

        this.gapStack = [];

        this.skipNextNewLine = false;

        this.lastChunkWritten = false;
        this.endOfChunkHit = false;
        this.bufferWaterline = DEFAULT_BUFFER_WATERLINE;
    }

    _err() {
        // NOTE: err reporting is noop by default. Enabled by mixin.
    }

    _addGap() {
        this.gapStack.push(this.lastGapPos);
        this.lastGapPos = this.pos;
    }

    _processSurrogate(cp) {
        //NOTE: try to peek a surrogate pair
        if (this.pos !== this.lastCharPos) {
            const nextCp = this.html.charCodeAt(this.pos + 1);

            if (unicode.isSurrogatePair(nextCp)) {
                //NOTE: we have a surrogate pair. Peek pair character and recalculate code point.
                this.pos++;

                //NOTE: add gap that should be avoided during retreat
                this._addGap();

                return unicode.getSurrogatePairCodePoint(cp, nextCp);
            }
        }

        //NOTE: we are at the end of a chunk, therefore we can't infer surrogate pair yet.
        else if (!this.lastChunkWritten) {
            this.endOfChunkHit = true;
            return $.EOF;
        }

        //NOTE: isolated surrogate
        this._err(ERR.surrogateInInputStream);

        return cp;
    }

    dropParsedChunk() {
        if (this.pos > this.bufferWaterline) {
            this.lastCharPos -= this.pos;
            this.html = this.html.substring(this.pos);
            this.pos = 0;
            this.lastGapPos = -1;
            this.gapStack = [];
        }
    }

    write(chunk, isLastChunk) {
        if (this.html) {
            this.html += chunk;
        } else {
            this.html = chunk;
        }

        this.lastCharPos = this.html.length - 1;
        this.endOfChunkHit = false;
        this.lastChunkWritten = isLastChunk;
    }

    insertHtmlAtCurrentPos(chunk) {
        this.html = this.html.substring(0, this.pos + 1) + chunk + this.html.substring(this.pos + 1, this.html.length);

        this.lastCharPos = this.html.length - 1;
        this.endOfChunkHit = false;
    }

    advance() {
        this.pos++;

        if (this.pos > this.lastCharPos) {
            this.endOfChunkHit = !this.lastChunkWritten;
            return $.EOF;
        }

        let cp = this.html.charCodeAt(this.pos);

        //NOTE: any U+000A LINE FEED (LF) characters that immediately follow a U+000D CARRIAGE RETURN (CR) character
        //must be ignored.
        if (this.skipNextNewLine && cp === $.LINE_FEED) {
            this.skipNextNewLine = false;
            this._addGap();
            return this.advance();
        }

        //NOTE: all U+000D CARRIAGE RETURN (CR) characters must be converted to U+000A LINE FEED (LF) characters
        if (cp === $.CARRIAGE_RETURN) {
            this.skipNextNewLine = true;
            return $.LINE_FEED;
        }

        this.skipNextNewLine = false;

        if (unicode.isSurrogate(cp)) {
            cp = this._processSurrogate(cp);
        }

        //OPTIMIZATION: first check if code point is in the common allowed
        //range (ASCII alphanumeric, whitespaces, big chunk of BMP)
        //before going into detailed performance cost validation.
        const isCommonValidRange =
            (cp > 0x1f && cp < 0x7f) || cp === $.LINE_FEED || cp === $.CARRIAGE_RETURN || (cp > 0x9f && cp < 0xfdd0);

        if (!isCommonValidRange) {
            this._checkForProblematicCharacters(cp);
        }

        return cp;
    }

    _checkForProblematicCharacters(cp) {
        if (unicode.isControlCodePoint(cp)) {
            this._err(ERR.controlCharacterInInputStream);
        } else if (unicode.isUndefinedCodePoint(cp)) {
            this._err(ERR.noncharacterInInputStream);
        }
    }

    retreat() {
        if (this.pos === this.lastGapPos) {
            this.lastGapPos = this.gapStack.pop();
            this.pos--;
        }

        this.pos--;
    }
}

module.exports = Preprocessor;


/***/ }),
/* 78 */
/*!***************************************************!*\
  !*** ./node_modules/parse5/lib/common/unicode.js ***!
  \***************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


const UNDEFINED_CODE_POINTS = [
    0xfffe,
    0xffff,
    0x1fffe,
    0x1ffff,
    0x2fffe,
    0x2ffff,
    0x3fffe,
    0x3ffff,
    0x4fffe,
    0x4ffff,
    0x5fffe,
    0x5ffff,
    0x6fffe,
    0x6ffff,
    0x7fffe,
    0x7ffff,
    0x8fffe,
    0x8ffff,
    0x9fffe,
    0x9ffff,
    0xafffe,
    0xaffff,
    0xbfffe,
    0xbffff,
    0xcfffe,
    0xcffff,
    0xdfffe,
    0xdffff,
    0xefffe,
    0xeffff,
    0xffffe,
    0xfffff,
    0x10fffe,
    0x10ffff
];

exports.REPLACEMENT_CHARACTER = '\uFFFD';

exports.CODE_POINTS = {
    EOF: -1,
    NULL: 0x00,
    TABULATION: 0x09,
    CARRIAGE_RETURN: 0x0d,
    LINE_FEED: 0x0a,
    FORM_FEED: 0x0c,
    SPACE: 0x20,
    EXCLAMATION_MARK: 0x21,
    QUOTATION_MARK: 0x22,
    NUMBER_SIGN: 0x23,
    AMPERSAND: 0x26,
    APOSTROPHE: 0x27,
    HYPHEN_MINUS: 0x2d,
    SOLIDUS: 0x2f,
    DIGIT_0: 0x30,
    DIGIT_9: 0x39,
    SEMICOLON: 0x3b,
    LESS_THAN_SIGN: 0x3c,
    EQUALS_SIGN: 0x3d,
    GREATER_THAN_SIGN: 0x3e,
    QUESTION_MARK: 0x3f,
    LATIN_CAPITAL_A: 0x41,
    LATIN_CAPITAL_F: 0x46,
    LATIN_CAPITAL_X: 0x58,
    LATIN_CAPITAL_Z: 0x5a,
    RIGHT_SQUARE_BRACKET: 0x5d,
    GRAVE_ACCENT: 0x60,
    LATIN_SMALL_A: 0x61,
    LATIN_SMALL_F: 0x66,
    LATIN_SMALL_X: 0x78,
    LATIN_SMALL_Z: 0x7a,
    REPLACEMENT_CHARACTER: 0xfffd
};

exports.CODE_POINT_SEQUENCES = {
    DASH_DASH_STRING: [0x2d, 0x2d], //--
    DOCTYPE_STRING: [0x44, 0x4f, 0x43, 0x54, 0x59, 0x50, 0x45], //DOCTYPE
    CDATA_START_STRING: [0x5b, 0x43, 0x44, 0x41, 0x54, 0x41, 0x5b], //[CDATA[
    SCRIPT_STRING: [0x73, 0x63, 0x72, 0x69, 0x70, 0x74], //script
    PUBLIC_STRING: [0x50, 0x55, 0x42, 0x4c, 0x49, 0x43], //PUBLIC
    SYSTEM_STRING: [0x53, 0x59, 0x53, 0x54, 0x45, 0x4d] //SYSTEM
};

//Surrogates
exports.isSurrogate = function(cp) {
    return cp >= 0xd800 && cp <= 0xdfff;
};

exports.isSurrogatePair = function(cp) {
    return cp >= 0xdc00 && cp <= 0xdfff;
};

exports.getSurrogatePairCodePoint = function(cp1, cp2) {
    return (cp1 - 0xd800) * 0x400 + 0x2400 + cp2;
};

//NOTE: excluding NULL and ASCII whitespace
exports.isControlCodePoint = function(cp) {
    return (
        (cp !== 0x20 && cp !== 0x0a && cp !== 0x0d && cp !== 0x09 && cp !== 0x0c && cp >= 0x01 && cp <= 0x1f) ||
        (cp >= 0x7f && cp <= 0x9f)
    );
};

exports.isUndefinedCodePoint = function(cp) {
    return (cp >= 0xfdd0 && cp <= 0xfdef) || UNDEFINED_CODE_POINTS.indexOf(cp) > -1;
};


/***/ }),
/* 79 */
/*!*******************************************************!*\
  !*** ./node_modules/parse5/lib/common/error-codes.js ***!
  \*******************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


module.exports = {
    controlCharacterInInputStream: 'control-character-in-input-stream',
    noncharacterInInputStream: 'noncharacter-in-input-stream',
    surrogateInInputStream: 'surrogate-in-input-stream',
    nonVoidHtmlElementStartTagWithTrailingSolidus: 'non-void-html-element-start-tag-with-trailing-solidus',
    endTagWithAttributes: 'end-tag-with-attributes',
    endTagWithTrailingSolidus: 'end-tag-with-trailing-solidus',
    unexpectedSolidusInTag: 'unexpected-solidus-in-tag',
    unexpectedNullCharacter: 'unexpected-null-character',
    unexpectedQuestionMarkInsteadOfTagName: 'unexpected-question-mark-instead-of-tag-name',
    invalidFirstCharacterOfTagName: 'invalid-first-character-of-tag-name',
    unexpectedEqualsSignBeforeAttributeName: 'unexpected-equals-sign-before-attribute-name',
    missingEndTagName: 'missing-end-tag-name',
    unexpectedCharacterInAttributeName: 'unexpected-character-in-attribute-name',
    unknownNamedCharacterReference: 'unknown-named-character-reference',
    missingSemicolonAfterCharacterReference: 'missing-semicolon-after-character-reference',
    unexpectedCharacterAfterDoctypeSystemIdentifier: 'unexpected-character-after-doctype-system-identifier',
    unexpectedCharacterInUnquotedAttributeValue: 'unexpected-character-in-unquoted-attribute-value',
    eofBeforeTagName: 'eof-before-tag-name',
    eofInTag: 'eof-in-tag',
    missingAttributeValue: 'missing-attribute-value',
    missingWhitespaceBetweenAttributes: 'missing-whitespace-between-attributes',
    missingWhitespaceAfterDoctypePublicKeyword: 'missing-whitespace-after-doctype-public-keyword',
    missingWhitespaceBetweenDoctypePublicAndSystemIdentifiers:
        'missing-whitespace-between-doctype-public-and-system-identifiers',
    missingWhitespaceAfterDoctypeSystemKeyword: 'missing-whitespace-after-doctype-system-keyword',
    missingQuoteBeforeDoctypePublicIdentifier: 'missing-quote-before-doctype-public-identifier',
    missingQuoteBeforeDoctypeSystemIdentifier: 'missing-quote-before-doctype-system-identifier',
    missingDoctypePublicIdentifier: 'missing-doctype-public-identifier',
    missingDoctypeSystemIdentifier: 'missing-doctype-system-identifier',
    abruptDoctypePublicIdentifier: 'abrupt-doctype-public-identifier',
    abruptDoctypeSystemIdentifier: 'abrupt-doctype-system-identifier',
    cdataInHtmlContent: 'cdata-in-html-content',
    incorrectlyOpenedComment: 'incorrectly-opened-comment',
    eofInScriptHtmlCommentLikeText: 'eof-in-script-html-comment-like-text',
    eofInDoctype: 'eof-in-doctype',
    nestedComment: 'nested-comment',
    abruptClosingOfEmptyComment: 'abrupt-closing-of-empty-comment',
    eofInComment: 'eof-in-comment',
    incorrectlyClosedComment: 'incorrectly-closed-comment',
    eofInCdata: 'eof-in-cdata',
    absenceOfDigitsInNumericCharacterReference: 'absence-of-digits-in-numeric-character-reference',
    nullCharacterReference: 'null-character-reference',
    surrogateCharacterReference: 'surrogate-character-reference',
    characterReferenceOutsideUnicodeRange: 'character-reference-outside-unicode-range',
    controlCharacterReference: 'control-character-reference',
    noncharacterCharacterReference: 'noncharacter-character-reference',
    missingWhitespaceBeforeDoctypeName: 'missing-whitespace-before-doctype-name',
    missingDoctypeName: 'missing-doctype-name',
    invalidCharacterSequenceAfterDoctypeName: 'invalid-character-sequence-after-doctype-name',
    duplicateAttribute: 'duplicate-attribute',
    nonConformingDoctype: 'non-conforming-doctype',
    missingDoctype: 'missing-doctype',
    misplacedDoctype: 'misplaced-doctype',
    endTagWithoutMatchingOpenElement: 'end-tag-without-matching-open-element',
    closingOfElementWithOpenChildElements: 'closing-of-element-with-open-child-elements',
    disallowedContentInNoscriptInHead: 'disallowed-content-in-noscript-in-head',
    openElementsLeftAfterEof: 'open-elements-left-after-eof',
    abandonedHeadElementChild: 'abandoned-head-element-child',
    misplacedStartTagForHeadElement: 'misplaced-start-tag-for-head-element',
    nestedNoscriptInHead: 'nested-noscript-in-head',
    eofInElementThatCanContainOnlyText: 'eof-in-element-that-can-contain-only-text'
};


/***/ }),
/* 80 */
/*!****************************************************************!*\
  !*** ./node_modules/parse5/lib/tokenizer/named-entity-data.js ***!
  \****************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


//NOTE: this file contains auto-generated array mapped radix tree that is used for the named entity references consumption
//(details: https://github.com/inikulin/parse5/tree/master/scripts/generate-named-entity-data/README.md)
module.exports = new Uint16Array([4,52,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,106,303,412,810,1432,1701,1796,1987,2114,2360,2420,2484,3170,3251,4140,4393,4575,4610,5106,5512,5728,6117,6274,6315,6345,6427,6516,7002,7910,8733,9323,9870,10170,10631,10893,11318,11386,11467,12773,13092,14474,14922,15448,15542,16419,17666,18166,18611,19004,19095,19298,19397,4,16,69,77,97,98,99,102,103,108,109,110,111,112,114,115,116,117,140,150,158,169,176,194,199,210,216,222,226,242,256,266,283,294,108,105,103,5,198,1,59,148,1,198,80,5,38,1,59,156,1,38,99,117,116,101,5,193,1,59,167,1,193,114,101,118,101,59,1,258,4,2,105,121,182,191,114,99,5,194,1,59,189,1,194,59,1,1040,114,59,3,55349,56580,114,97,118,101,5,192,1,59,208,1,192,112,104,97,59,1,913,97,99,114,59,1,256,100,59,1,10835,4,2,103,112,232,237,111,110,59,1,260,102,59,3,55349,56632,112,108,121,70,117,110,99,116,105,111,110,59,1,8289,105,110,103,5,197,1,59,264,1,197,4,2,99,115,272,277,114,59,3,55349,56476,105,103,110,59,1,8788,105,108,100,101,5,195,1,59,292,1,195,109,108,5,196,1,59,301,1,196,4,8,97,99,101,102,111,114,115,117,321,350,354,383,388,394,400,405,4,2,99,114,327,336,107,115,108,97,115,104,59,1,8726,4,2,118,119,342,345,59,1,10983,101,100,59,1,8966,121,59,1,1041,4,3,99,114,116,362,369,379,97,117,115,101,59,1,8757,110,111,117,108,108,105,115,59,1,8492,97,59,1,914,114,59,3,55349,56581,112,102,59,3,55349,56633,101,118,101,59,1,728,99,114,59,1,8492,109,112,101,113,59,1,8782,4,14,72,79,97,99,100,101,102,104,105,108,111,114,115,117,442,447,456,504,542,547,569,573,577,616,678,784,790,796,99,121,59,1,1063,80,89,5,169,1,59,454,1,169,4,3,99,112,121,464,470,497,117,116,101,59,1,262,4,2,59,105,476,478,1,8914,116,97,108,68,105,102,102,101,114,101,110,116,105,97,108,68,59,1,8517,108,101,121,115,59,1,8493,4,4,97,101,105,111,514,520,530,535,114,111,110,59,1,268,100,105,108,5,199,1,59,528,1,199,114,99,59,1,264,110,105,110,116,59,1,8752,111,116,59,1,266,4,2,100,110,553,560,105,108,108,97,59,1,184,116,101,114,68,111,116,59,1,183,114,59,1,8493,105,59,1,935,114,99,108,101,4,4,68,77,80,84,591,596,603,609,111,116,59,1,8857,105,110,117,115,59,1,8854,108,117,115,59,1,8853,105,109,101,115,59,1,8855,111,4,2,99,115,623,646,107,119,105,115,101,67,111,110,116,111,117,114,73,110,116,101,103,114,97,108,59,1,8754,101,67,117,114,108,121,4,2,68,81,658,671,111,117,98,108,101,81,117,111,116,101,59,1,8221,117,111,116,101,59,1,8217,4,4,108,110,112,117,688,701,736,753,111,110,4,2,59,101,696,698,1,8759,59,1,10868,4,3,103,105,116,709,717,722,114,117,101,110,116,59,1,8801,110,116,59,1,8751,111,117,114,73,110,116,101,103,114,97,108,59,1,8750,4,2,102,114,742,745,59,1,8450,111,100,117,99,116,59,1,8720,110,116,101,114,67,108,111,99,107,119,105,115,101,67,111,110,116,111,117,114,73,110,116,101,103,114,97,108,59,1,8755,111,115,115,59,1,10799,99,114,59,3,55349,56478,112,4,2,59,67,803,805,1,8915,97,112,59,1,8781,4,11,68,74,83,90,97,99,101,102,105,111,115,834,850,855,860,865,888,903,916,921,1011,1415,4,2,59,111,840,842,1,8517,116,114,97,104,100,59,1,10513,99,121,59,1,1026,99,121,59,1,1029,99,121,59,1,1039,4,3,103,114,115,873,879,883,103,101,114,59,1,8225,114,59,1,8609,104,118,59,1,10980,4,2,97,121,894,900,114,111,110,59,1,270,59,1,1044,108,4,2,59,116,910,912,1,8711,97,59,1,916,114,59,3,55349,56583,4,2,97,102,927,998,4,2,99,109,933,992,114,105,116,105,99,97,108,4,4,65,68,71,84,950,957,978,985,99,117,116,101,59,1,180,111,4,2,116,117,964,967,59,1,729,98,108,101,65,99,117,116,101,59,1,733,114,97,118,101,59,1,96,105,108,100,101,59,1,732,111,110,100,59,1,8900,102,101,114,101,110,116,105,97,108,68,59,1,8518,4,4,112,116,117,119,1021,1026,1048,1249,102,59,3,55349,56635,4,3,59,68,69,1034,1036,1041,1,168,111,116,59,1,8412,113,117,97,108,59,1,8784,98,108,101,4,6,67,68,76,82,85,86,1065,1082,1101,1189,1211,1236,111,110,116,111,117,114,73,110,116,101,103,114,97,108,59,1,8751,111,4,2,116,119,1089,1092,59,1,168,110,65,114,114,111,119,59,1,8659,4,2,101,111,1107,1141,102,116,4,3,65,82,84,1117,1124,1136,114,114,111,119,59,1,8656,105,103,104,116,65,114,114,111,119,59,1,8660,101,101,59,1,10980,110,103,4,2,76,82,1149,1177,101,102,116,4,2,65,82,1158,1165,114,114,111,119,59,1,10232,105,103,104,116,65,114,114,111,119,59,1,10234,105,103,104,116,65,114,114,111,119,59,1,10233,105,103,104,116,4,2,65,84,1199,1206,114,114,111,119,59,1,8658,101,101,59,1,8872,112,4,2,65,68,1218,1225,114,114,111,119,59,1,8657,111,119,110,65,114,114,111,119,59,1,8661,101,114,116,105,99,97,108,66,97,114,59,1,8741,110,4,6,65,66,76,82,84,97,1264,1292,1299,1352,1391,1408,114,114,111,119,4,3,59,66,85,1276,1278,1283,1,8595,97,114,59,1,10515,112,65,114,114,111,119,59,1,8693,114,101,118,101,59,1,785,101,102,116,4,3,82,84,86,1310,1323,1334,105,103,104,116,86,101,99,116,111,114,59,1,10576,101,101,86,101,99,116,111,114,59,1,10590,101,99,116,111,114,4,2,59,66,1345,1347,1,8637,97,114,59,1,10582,105,103,104,116,4,2,84,86,1362,1373,101,101,86,101,99,116,111,114,59,1,10591,101,99,116,111,114,4,2,59,66,1384,1386,1,8641,97,114,59,1,10583,101,101,4,2,59,65,1399,1401,1,8868,114,114,111,119,59,1,8615,114,114,111,119,59,1,8659,4,2,99,116,1421,1426,114,59,3,55349,56479,114,111,107,59,1,272,4,16,78,84,97,99,100,102,103,108,109,111,112,113,115,116,117,120,1466,1470,1478,1489,1515,1520,1525,1536,1544,1593,1609,1617,1650,1664,1668,1677,71,59,1,330,72,5,208,1,59,1476,1,208,99,117,116,101,5,201,1,59,1487,1,201,4,3,97,105,121,1497,1503,1512,114,111,110,59,1,282,114,99,5,202,1,59,1510,1,202,59,1,1069,111,116,59,1,278,114,59,3,55349,56584,114,97,118,101,5,200,1,59,1534,1,200,101,109,101,110,116,59,1,8712,4,2,97,112,1550,1555,99,114,59,1,274,116,121,4,2,83,86,1563,1576,109,97,108,108,83,113,117,97,114,101,59,1,9723,101,114,121,83,109,97,108,108,83,113,117,97,114,101,59,1,9643,4,2,103,112,1599,1604,111,110,59,1,280,102,59,3,55349,56636,115,105,108,111,110,59,1,917,117,4,2,97,105,1624,1640,108,4,2,59,84,1631,1633,1,10869,105,108,100,101,59,1,8770,108,105,98,114,105,117,109,59,1,8652,4,2,99,105,1656,1660,114,59,1,8496,109,59,1,10867,97,59,1,919,109,108,5,203,1,59,1675,1,203,4,2,105,112,1683,1689,115,116,115,59,1,8707,111,110,101,110,116,105,97,108,69,59,1,8519,4,5,99,102,105,111,115,1713,1717,1722,1762,1791,121,59,1,1060,114,59,3,55349,56585,108,108,101,100,4,2,83,86,1732,1745,109,97,108,108,83,113,117,97,114,101,59,1,9724,101,114,121,83,109,97,108,108,83,113,117,97,114,101,59,1,9642,4,3,112,114,117,1770,1775,1781,102,59,3,55349,56637,65,108,108,59,1,8704,114,105,101,114,116,114,102,59,1,8497,99,114,59,1,8497,4,12,74,84,97,98,99,100,102,103,111,114,115,116,1822,1827,1834,1848,1855,1877,1882,1887,1890,1896,1978,1984,99,121,59,1,1027,5,62,1,59,1832,1,62,109,109,97,4,2,59,100,1843,1845,1,915,59,1,988,114,101,118,101,59,1,286,4,3,101,105,121,1863,1869,1874,100,105,108,59,1,290,114,99,59,1,284,59,1,1043,111,116,59,1,288,114,59,3,55349,56586,59,1,8921,112,102,59,3,55349,56638,101,97,116,101,114,4,6,69,70,71,76,83,84,1915,1933,1944,1953,1959,1971,113,117,97,108,4,2,59,76,1925,1927,1,8805,101,115,115,59,1,8923,117,108,108,69,113,117,97,108,59,1,8807,114,101,97,116,101,114,59,1,10914,101,115,115,59,1,8823,108,97,110,116,69,113,117,97,108,59,1,10878,105,108,100,101,59,1,8819,99,114,59,3,55349,56482,59,1,8811,4,8,65,97,99,102,105,111,115,117,2005,2012,2026,2032,2036,2049,2073,2089,82,68,99,121,59,1,1066,4,2,99,116,2018,2023,101,107,59,1,711,59,1,94,105,114,99,59,1,292,114,59,1,8460,108,98,101,114,116,83,112,97,99,101,59,1,8459,4,2,112,114,2055,2059,102,59,1,8461,105,122,111,110,116,97,108,76,105,110,101,59,1,9472,4,2,99,116,2079,2083,114,59,1,8459,114,111,107,59,1,294,109,112,4,2,68,69,2097,2107,111,119,110,72,117,109,112,59,1,8782,113,117,97,108,59,1,8783,4,14,69,74,79,97,99,100,102,103,109,110,111,115,116,117,2144,2149,2155,2160,2171,2189,2194,2198,2209,2245,2307,2329,2334,2341,99,121,59,1,1045,108,105,103,59,1,306,99,121,59,1,1025,99,117,116,101,5,205,1,59,2169,1,205,4,2,105,121,2177,2186,114,99,5,206,1,59,2184,1,206,59,1,1048,111,116,59,1,304,114,59,1,8465,114,97,118,101,5,204,1,59,2207,1,204,4,3,59,97,112,2217,2219,2238,1,8465,4,2,99,103,2225,2229,114,59,1,298,105,110,97,114,121,73,59,1,8520,108,105,101,115,59,1,8658,4,2,116,118,2251,2281,4,2,59,101,2257,2259,1,8748,4,2,103,114,2265,2271,114,97,108,59,1,8747,115,101,99,116,105,111,110,59,1,8898,105,115,105,98,108,101,4,2,67,84,2293,2300,111,109,109,97,59,1,8291,105,109,101,115,59,1,8290,4,3,103,112,116,2315,2320,2325,111,110,59,1,302,102,59,3,55349,56640,97,59,1,921,99,114,59,1,8464,105,108,100,101,59,1,296,4,2,107,109,2347,2352,99,121,59,1,1030,108,5,207,1,59,2358,1,207,4,5,99,102,111,115,117,2372,2386,2391,2397,2414,4,2,105,121,2378,2383,114,99,59,1,308,59,1,1049,114,59,3,55349,56589,112,102,59,3,55349,56641,4,2,99,101,2403,2408,114,59,3,55349,56485,114,99,121,59,1,1032,107,99,121,59,1,1028,4,7,72,74,97,99,102,111,115,2436,2441,2446,2452,2467,2472,2478,99,121,59,1,1061,99,121,59,1,1036,112,112,97,59,1,922,4,2,101,121,2458,2464,100,105,108,59,1,310,59,1,1050,114,59,3,55349,56590,112,102,59,3,55349,56642,99,114,59,3,55349,56486,4,11,74,84,97,99,101,102,108,109,111,115,116,2508,2513,2520,2562,2585,2981,2986,3004,3011,3146,3167,99,121,59,1,1033,5,60,1,59,2518,1,60,4,5,99,109,110,112,114,2532,2538,2544,2548,2558,117,116,101,59,1,313,98,100,97,59,1,923,103,59,1,10218,108,97,99,101,116,114,102,59,1,8466,114,59,1,8606,4,3,97,101,121,2570,2576,2582,114,111,110,59,1,317,100,105,108,59,1,315,59,1,1051,4,2,102,115,2591,2907,116,4,10,65,67,68,70,82,84,85,86,97,114,2614,2663,2672,2728,2735,2760,2820,2870,2888,2895,4,2,110,114,2620,2633,103,108,101,66,114,97,99,107,101,116,59,1,10216,114,111,119,4,3,59,66,82,2644,2646,2651,1,8592,97,114,59,1,8676,105,103,104,116,65,114,114,111,119,59,1,8646,101,105,108,105,110,103,59,1,8968,111,4,2,117,119,2679,2692,98,108,101,66,114,97,99,107,101,116,59,1,10214,110,4,2,84,86,2699,2710,101,101,86,101,99,116,111,114,59,1,10593,101,99,116,111,114,4,2,59,66,2721,2723,1,8643,97,114,59,1,10585,108,111,111,114,59,1,8970,105,103,104,116,4,2,65,86,2745,2752,114,114,111,119,59,1,8596,101,99,116,111,114,59,1,10574,4,2,101,114,2766,2792,101,4,3,59,65,86,2775,2777,2784,1,8867,114,114,111,119,59,1,8612,101,99,116,111,114,59,1,10586,105,97,110,103,108,101,4,3,59,66,69,2806,2808,2813,1,8882,97,114,59,1,10703,113,117,97,108,59,1,8884,112,4,3,68,84,86,2829,2841,2852,111,119,110,86,101,99,116,111,114,59,1,10577,101,101,86,101,99,116,111,114,59,1,10592,101,99,116,111,114,4,2,59,66,2863,2865,1,8639,97,114,59,1,10584,101,99,116,111,114,4,2,59,66,2881,2883,1,8636,97,114,59,1,10578,114,114,111,119,59,1,8656,105,103,104,116,97,114,114,111,119,59,1,8660,115,4,6,69,70,71,76,83,84,2922,2936,2947,2956,2962,2974,113,117,97,108,71,114,101,97,116,101,114,59,1,8922,117,108,108,69,113,117,97,108,59,1,8806,114,101,97,116,101,114,59,1,8822,101,115,115,59,1,10913,108,97,110,116,69,113,117,97,108,59,1,10877,105,108,100,101,59,1,8818,114,59,3,55349,56591,4,2,59,101,2992,2994,1,8920,102,116,97,114,114,111,119,59,1,8666,105,100,111,116,59,1,319,4,3,110,112,119,3019,3110,3115,103,4,4,76,82,108,114,3030,3058,3070,3098,101,102,116,4,2,65,82,3039,3046,114,114,111,119,59,1,10229,105,103,104,116,65,114,114,111,119,59,1,10231,105,103,104,116,65,114,114,111,119,59,1,10230,101,102,116,4,2,97,114,3079,3086,114,114,111,119,59,1,10232,105,103,104,116,97,114,114,111,119,59,1,10234,105,103,104,116,97,114,114,111,119,59,1,10233,102,59,3,55349,56643,101,114,4,2,76,82,3123,3134,101,102,116,65,114,114,111,119,59,1,8601,105,103,104,116,65,114,114,111,119,59,1,8600,4,3,99,104,116,3154,3158,3161,114,59,1,8466,59,1,8624,114,111,107,59,1,321,59,1,8810,4,8,97,99,101,102,105,111,115,117,3188,3192,3196,3222,3227,3237,3243,3248,112,59,1,10501,121,59,1,1052,4,2,100,108,3202,3213,105,117,109,83,112,97,99,101,59,1,8287,108,105,110,116,114,102,59,1,8499,114,59,3,55349,56592,110,117,115,80,108,117,115,59,1,8723,112,102,59,3,55349,56644,99,114,59,1,8499,59,1,924,4,9,74,97,99,101,102,111,115,116,117,3271,3276,3283,3306,3422,3427,4120,4126,4137,99,121,59,1,1034,99,117,116,101,59,1,323,4,3,97,101,121,3291,3297,3303,114,111,110,59,1,327,100,105,108,59,1,325,59,1,1053,4,3,103,115,119,3314,3380,3415,97,116,105,118,101,4,3,77,84,86,3327,3340,3365,101,100,105,117,109,83,112,97,99,101,59,1,8203,104,105,4,2,99,110,3348,3357,107,83,112,97,99,101,59,1,8203,83,112,97,99,101,59,1,8203,101,114,121,84,104,105,110,83,112,97,99,101,59,1,8203,116,101,100,4,2,71,76,3389,3405,114,101,97,116,101,114,71,114,101,97,116,101,114,59,1,8811,101,115,115,76,101,115,115,59,1,8810,76,105,110,101,59,1,10,114,59,3,55349,56593,4,4,66,110,112,116,3437,3444,3460,3464,114,101,97,107,59,1,8288,66,114,101,97,107,105,110,103,83,112,97,99,101,59,1,160,102,59,1,8469,4,13,59,67,68,69,71,72,76,78,80,82,83,84,86,3492,3494,3517,3536,3578,3657,3685,3784,3823,3860,3915,4066,4107,1,10988,4,2,111,117,3500,3510,110,103,114,117,101,110,116,59,1,8802,112,67,97,112,59,1,8813,111,117,98,108,101,86,101,114,116,105,99,97,108,66,97,114,59,1,8742,4,3,108,113,120,3544,3552,3571,101,109,101,110,116,59,1,8713,117,97,108,4,2,59,84,3561,3563,1,8800,105,108,100,101,59,3,8770,824,105,115,116,115,59,1,8708,114,101,97,116,101,114,4,7,59,69,70,71,76,83,84,3600,3602,3609,3621,3631,3637,3650,1,8815,113,117,97,108,59,1,8817,117,108,108,69,113,117,97,108,59,3,8807,824,114,101,97,116,101,114,59,3,8811,824,101,115,115,59,1,8825,108,97,110,116,69,113,117,97,108,59,3,10878,824,105,108,100,101,59,1,8821,117,109,112,4,2,68,69,3666,3677,111,119,110,72,117,109,112,59,3,8782,824,113,117,97,108,59,3,8783,824,101,4,2,102,115,3692,3724,116,84,114,105,97,110,103,108,101,4,3,59,66,69,3709,3711,3717,1,8938,97,114,59,3,10703,824,113,117,97,108,59,1,8940,115,4,6,59,69,71,76,83,84,3739,3741,3748,3757,3764,3777,1,8814,113,117,97,108,59,1,8816,114,101,97,116,101,114,59,1,8824,101,115,115,59,3,8810,824,108,97,110,116,69,113,117,97,108,59,3,10877,824,105,108,100,101,59,1,8820,101,115,116,101,100,4,2,71,76,3795,3812,114,101,97,116,101,114,71,114,101,97,116,101,114,59,3,10914,824,101,115,115,76,101,115,115,59,3,10913,824,114,101,99,101,100,101,115,4,3,59,69,83,3838,3840,3848,1,8832,113,117,97,108,59,3,10927,824,108,97,110,116,69,113,117,97,108,59,1,8928,4,2,101,105,3866,3881,118,101,114,115,101,69,108,101,109,101,110,116,59,1,8716,103,104,116,84,114,105,97,110,103,108,101,4,3,59,66,69,3900,3902,3908,1,8939,97,114,59,3,10704,824,113,117,97,108,59,1,8941,4,2,113,117,3921,3973,117,97,114,101,83,117,4,2,98,112,3933,3952,115,101,116,4,2,59,69,3942,3945,3,8847,824,113,117,97,108,59,1,8930,101,114,115,101,116,4,2,59,69,3963,3966,3,8848,824,113,117,97,108,59,1,8931,4,3,98,99,112,3981,4000,4045,115,101,116,4,2,59,69,3990,3993,3,8834,8402,113,117,97,108,59,1,8840,99,101,101,100,115,4,4,59,69,83,84,4015,4017,4025,4037,1,8833,113,117,97,108,59,3,10928,824,108,97,110,116,69,113,117,97,108,59,1,8929,105,108,100,101,59,3,8831,824,101,114,115,101,116,4,2,59,69,4056,4059,3,8835,8402,113,117,97,108,59,1,8841,105,108,100,101,4,4,59,69,70,84,4080,4082,4089,4100,1,8769,113,117,97,108,59,1,8772,117,108,108,69,113,117,97,108,59,1,8775,105,108,100,101,59,1,8777,101,114,116,105,99,97,108,66,97,114,59,1,8740,99,114,59,3,55349,56489,105,108,100,101,5,209,1,59,4135,1,209,59,1,925,4,14,69,97,99,100,102,103,109,111,112,114,115,116,117,118,4170,4176,4187,4205,4212,4217,4228,4253,4259,4292,4295,4316,4337,4346,108,105,103,59,1,338,99,117,116,101,5,211,1,59,4185,1,211,4,2,105,121,4193,4202,114,99,5,212,1,59,4200,1,212,59,1,1054,98,108,97,99,59,1,336,114,59,3,55349,56594,114,97,118,101,5,210,1,59,4226,1,210,4,3,97,101,105,4236,4241,4246,99,114,59,1,332,103,97,59,1,937,99,114,111,110,59,1,927,112,102,59,3,55349,56646,101,110,67,117,114,108,121,4,2,68,81,4272,4285,111,117,98,108,101,81,117,111,116,101,59,1,8220,117,111,116,101,59,1,8216,59,1,10836,4,2,99,108,4301,4306,114,59,3,55349,56490,97,115,104,5,216,1,59,4314,1,216,105,4,2,108,109,4323,4332,100,101,5,213,1,59,4330,1,213,101,115,59,1,10807,109,108,5,214,1,59,4344,1,214,101,114,4,2,66,80,4354,4380,4,2,97,114,4360,4364,114,59,1,8254,97,99,4,2,101,107,4372,4375,59,1,9182,101,116,59,1,9140,97,114,101,110,116,104,101,115,105,115,59,1,9180,4,9,97,99,102,104,105,108,111,114,115,4413,4422,4426,4431,4435,4438,4448,4471,4561,114,116,105,97,108,68,59,1,8706,121,59,1,1055,114,59,3,55349,56595,105,59,1,934,59,1,928,117,115,77,105,110,117,115,59,1,177,4,2,105,112,4454,4467,110,99,97,114,101,112,108,97,110,101,59,1,8460,102,59,1,8473,4,4,59,101,105,111,4481,4483,4526,4531,1,10939,99,101,100,101,115,4,4,59,69,83,84,4498,4500,4507,4519,1,8826,113,117,97,108,59,1,10927,108,97,110,116,69,113,117,97,108,59,1,8828,105,108,100,101,59,1,8830,109,101,59,1,8243,4,2,100,112,4537,4543,117,99,116,59,1,8719,111,114,116,105,111,110,4,2,59,97,4555,4557,1,8759,108,59,1,8733,4,2,99,105,4567,4572,114,59,3,55349,56491,59,1,936,4,4,85,102,111,115,4585,4594,4599,4604,79,84,5,34,1,59,4592,1,34,114,59,3,55349,56596,112,102,59,1,8474,99,114,59,3,55349,56492,4,12,66,69,97,99,101,102,104,105,111,114,115,117,4636,4642,4650,4681,4704,4763,4767,4771,5047,5069,5081,5094,97,114,114,59,1,10512,71,5,174,1,59,4648,1,174,4,3,99,110,114,4658,4664,4668,117,116,101,59,1,340,103,59,1,10219,114,4,2,59,116,4675,4677,1,8608,108,59,1,10518,4,3,97,101,121,4689,4695,4701,114,111,110,59,1,344,100,105,108,59,1,342,59,1,1056,4,2,59,118,4710,4712,1,8476,101,114,115,101,4,2,69,85,4722,4748,4,2,108,113,4728,4736,101,109,101,110,116,59,1,8715,117,105,108,105,98,114,105,117,109,59,1,8651,112,69,113,117,105,108,105,98,114,105,117,109,59,1,10607,114,59,1,8476,111,59,1,929,103,104,116,4,8,65,67,68,70,84,85,86,97,4792,4840,4849,4905,4912,4972,5022,5040,4,2,110,114,4798,4811,103,108,101,66,114,97,99,107,101,116,59,1,10217,114,111,119,4,3,59,66,76,4822,4824,4829,1,8594,97,114,59,1,8677,101,102,116,65,114,114,111,119,59,1,8644,101,105,108,105,110,103,59,1,8969,111,4,2,117,119,4856,4869,98,108,101,66,114,97,99,107,101,116,59,1,10215,110,4,2,84,86,4876,4887,101,101,86,101,99,116,111,114,59,1,10589,101,99,116,111,114,4,2,59,66,4898,4900,1,8642,97,114,59,1,10581,108,111,111,114,59,1,8971,4,2,101,114,4918,4944,101,4,3,59,65,86,4927,4929,4936,1,8866,114,114,111,119,59,1,8614,101,99,116,111,114,59,1,10587,105,97,110,103,108,101,4,3,59,66,69,4958,4960,4965,1,8883,97,114,59,1,10704,113,117,97,108,59,1,8885,112,4,3,68,84,86,4981,4993,5004,111,119,110,86,101,99,116,111,114,59,1,10575,101,101,86,101,99,116,111,114,59,1,10588,101,99,116,111,114,4,2,59,66,5015,5017,1,8638,97,114,59,1,10580,101,99,116,111,114,4,2,59,66,5033,5035,1,8640,97,114,59,1,10579,114,114,111,119,59,1,8658,4,2,112,117,5053,5057,102,59,1,8477,110,100,73,109,112,108,105,101,115,59,1,10608,105,103,104,116,97,114,114,111,119,59,1,8667,4,2,99,104,5087,5091,114,59,1,8475,59,1,8625,108,101,68,101,108,97,121,101,100,59,1,10740,4,13,72,79,97,99,102,104,105,109,111,113,115,116,117,5134,5150,5157,5164,5198,5203,5259,5265,5277,5283,5374,5380,5385,4,2,67,99,5140,5146,72,99,121,59,1,1065,121,59,1,1064,70,84,99,121,59,1,1068,99,117,116,101,59,1,346,4,5,59,97,101,105,121,5176,5178,5184,5190,5195,1,10940,114,111,110,59,1,352,100,105,108,59,1,350,114,99,59,1,348,59,1,1057,114,59,3,55349,56598,111,114,116,4,4,68,76,82,85,5216,5227,5238,5250,111,119,110,65,114,114,111,119,59,1,8595,101,102,116,65,114,114,111,119,59,1,8592,105,103,104,116,65,114,114,111,119,59,1,8594,112,65,114,114,111,119,59,1,8593,103,109,97,59,1,931,97,108,108,67,105,114,99,108,101,59,1,8728,112,102,59,3,55349,56650,4,2,114,117,5289,5293,116,59,1,8730,97,114,101,4,4,59,73,83,85,5306,5308,5322,5367,1,9633,110,116,101,114,115,101,99,116,105,111,110,59,1,8851,117,4,2,98,112,5329,5347,115,101,116,4,2,59,69,5338,5340,1,8847,113,117,97,108,59,1,8849,101,114,115,101,116,4,2,59,69,5358,5360,1,8848,113,117,97,108,59,1,8850,110,105,111,110,59,1,8852,99,114,59,3,55349,56494,97,114,59,1,8902,4,4,98,99,109,112,5395,5420,5475,5478,4,2,59,115,5401,5403,1,8912,101,116,4,2,59,69,5411,5413,1,8912,113,117,97,108,59,1,8838,4,2,99,104,5426,5468,101,101,100,115,4,4,59,69,83,84,5440,5442,5449,5461,1,8827,113,117,97,108,59,1,10928,108,97,110,116,69,113,117,97,108,59,1,8829,105,108,100,101,59,1,8831,84,104,97,116,59,1,8715,59,1,8721,4,3,59,101,115,5486,5488,5507,1,8913,114,115,101,116,4,2,59,69,5498,5500,1,8835,113,117,97,108,59,1,8839,101,116,59,1,8913,4,11,72,82,83,97,99,102,104,105,111,114,115,5536,5546,5552,5567,5579,5602,5607,5655,5695,5701,5711,79,82,78,5,222,1,59,5544,1,222,65,68,69,59,1,8482,4,2,72,99,5558,5563,99,121,59,1,1035,121,59,1,1062,4,2,98,117,5573,5576,59,1,9,59,1,932,4,3,97,101,121,5587,5593,5599,114,111,110,59,1,356,100,105,108,59,1,354,59,1,1058,114,59,3,55349,56599,4,2,101,105,5613,5631,4,2,114,116,5619,5627,101,102,111,114,101,59,1,8756,97,59,1,920,4,2,99,110,5637,5647,107,83,112,97,99,101,59,3,8287,8202,83,112,97,99,101,59,1,8201,108,100,101,4,4,59,69,70,84,5668,5670,5677,5688,1,8764,113,117,97,108,59,1,8771,117,108,108,69,113,117,97,108,59,1,8773,105,108,100,101,59,1,8776,112,102,59,3,55349,56651,105,112,108,101,68,111,116,59,1,8411,4,2,99,116,5717,5722,114,59,3,55349,56495,114,111,107,59,1,358,4,14,97,98,99,100,102,103,109,110,111,112,114,115,116,117,5758,5789,5805,5823,5830,5835,5846,5852,5921,5937,6089,6095,6101,6108,4,2,99,114,5764,5774,117,116,101,5,218,1,59,5772,1,218,114,4,2,59,111,5781,5783,1,8607,99,105,114,59,1,10569,114,4,2,99,101,5796,5800,121,59,1,1038,118,101,59,1,364,4,2,105,121,5811,5820,114,99,5,219,1,59,5818,1,219,59,1,1059,98,108,97,99,59,1,368,114,59,3,55349,56600,114,97,118,101,5,217,1,59,5844,1,217,97,99,114,59,1,362,4,2,100,105,5858,5905,101,114,4,2,66,80,5866,5892,4,2,97,114,5872,5876,114,59,1,95,97,99,4,2,101,107,5884,5887,59,1,9183,101,116,59,1,9141,97,114,101,110,116,104,101,115,105,115,59,1,9181,111,110,4,2,59,80,5913,5915,1,8899,108,117,115,59,1,8846,4,2,103,112,5927,5932,111,110,59,1,370,102,59,3,55349,56652,4,8,65,68,69,84,97,100,112,115,5955,5985,5996,6009,6026,6033,6044,6075,114,114,111,119,4,3,59,66,68,5967,5969,5974,1,8593,97,114,59,1,10514,111,119,110,65,114,114,111,119,59,1,8645,111,119,110,65,114,114,111,119,59,1,8597,113,117,105,108,105,98,114,105,117,109,59,1,10606,101,101,4,2,59,65,6017,6019,1,8869,114,114,111,119,59,1,8613,114,114,111,119,59,1,8657,111,119,110,97,114,114,111,119,59,1,8661,101,114,4,2,76,82,6052,6063,101,102,116,65,114,114,111,119,59,1,8598,105,103,104,116,65,114,114,111,119,59,1,8599,105,4,2,59,108,6082,6084,1,978,111,110,59,1,933,105,110,103,59,1,366,99,114,59,3,55349,56496,105,108,100,101,59,1,360,109,108,5,220,1,59,6115,1,220,4,9,68,98,99,100,101,102,111,115,118,6137,6143,6148,6152,6166,6250,6255,6261,6267,97,115,104,59,1,8875,97,114,59,1,10987,121,59,1,1042,97,115,104,4,2,59,108,6161,6163,1,8873,59,1,10982,4,2,101,114,6172,6175,59,1,8897,4,3,98,116,121,6183,6188,6238,97,114,59,1,8214,4,2,59,105,6194,6196,1,8214,99,97,108,4,4,66,76,83,84,6209,6214,6220,6231,97,114,59,1,8739,105,110,101,59,1,124,101,112,97,114,97,116,111,114,59,1,10072,105,108,100,101,59,1,8768,84,104,105,110,83,112,97,99,101,59,1,8202,114,59,3,55349,56601,112,102,59,3,55349,56653,99,114,59,3,55349,56497,100,97,115,104,59,1,8874,4,5,99,101,102,111,115,6286,6292,6298,6303,6309,105,114,99,59,1,372,100,103,101,59,1,8896,114,59,3,55349,56602,112,102,59,3,55349,56654,99,114,59,3,55349,56498,4,4,102,105,111,115,6325,6330,6333,6339,114,59,3,55349,56603,59,1,926,112,102,59,3,55349,56655,99,114,59,3,55349,56499,4,9,65,73,85,97,99,102,111,115,117,6365,6370,6375,6380,6391,6405,6410,6416,6422,99,121,59,1,1071,99,121,59,1,1031,99,121,59,1,1070,99,117,116,101,5,221,1,59,6389,1,221,4,2,105,121,6397,6402,114,99,59,1,374,59,1,1067,114,59,3,55349,56604,112,102,59,3,55349,56656,99,114,59,3,55349,56500,109,108,59,1,376,4,8,72,97,99,100,101,102,111,115,6445,6450,6457,6472,6477,6501,6505,6510,99,121,59,1,1046,99,117,116,101,59,1,377,4,2,97,121,6463,6469,114,111,110,59,1,381,59,1,1047,111,116,59,1,379,4,2,114,116,6483,6497,111,87,105,100,116,104,83,112,97,99,101,59,1,8203,97,59,1,918,114,59,1,8488,112,102,59,1,8484,99,114,59,3,55349,56501,4,16,97,98,99,101,102,103,108,109,110,111,112,114,115,116,117,119,6550,6561,6568,6612,6622,6634,6645,6672,6699,6854,6870,6923,6933,6963,6974,6983,99,117,116,101,5,225,1,59,6559,1,225,114,101,118,101,59,1,259,4,6,59,69,100,105,117,121,6582,6584,6588,6591,6600,6609,1,8766,59,3,8766,819,59,1,8767,114,99,5,226,1,59,6598,1,226,116,101,5,180,1,59,6607,1,180,59,1,1072,108,105,103,5,230,1,59,6620,1,230,4,2,59,114,6628,6630,1,8289,59,3,55349,56606,114,97,118,101,5,224,1,59,6643,1,224,4,2,101,112,6651,6667,4,2,102,112,6657,6663,115,121,109,59,1,8501,104,59,1,8501,104,97,59,1,945,4,2,97,112,6678,6692,4,2,99,108,6684,6688,114,59,1,257,103,59,1,10815,5,38,1,59,6697,1,38,4,2,100,103,6705,6737,4,5,59,97,100,115,118,6717,6719,6724,6727,6734,1,8743,110,100,59,1,10837,59,1,10844,108,111,112,101,59,1,10840,59,1,10842,4,7,59,101,108,109,114,115,122,6753,6755,6758,6762,6814,6835,6848,1,8736,59,1,10660,101,59,1,8736,115,100,4,2,59,97,6770,6772,1,8737,4,8,97,98,99,100,101,102,103,104,6790,6793,6796,6799,6802,6805,6808,6811,59,1,10664,59,1,10665,59,1,10666,59,1,10667,59,1,10668,59,1,10669,59,1,10670,59,1,10671,116,4,2,59,118,6821,6823,1,8735,98,4,2,59,100,6830,6832,1,8894,59,1,10653,4,2,112,116,6841,6845,104,59,1,8738,59,1,197,97,114,114,59,1,9084,4,2,103,112,6860,6865,111,110,59,1,261,102,59,3,55349,56658,4,7,59,69,97,101,105,111,112,6886,6888,6891,6897,6900,6904,6908,1,8776,59,1,10864,99,105,114,59,1,10863,59,1,8778,100,59,1,8779,115,59,1,39,114,111,120,4,2,59,101,6917,6919,1,8776,113,59,1,8778,105,110,103,5,229,1,59,6931,1,229,4,3,99,116,121,6941,6946,6949,114,59,3,55349,56502,59,1,42,109,112,4,2,59,101,6957,6959,1,8776,113,59,1,8781,105,108,100,101,5,227,1,59,6972,1,227,109,108,5,228,1,59,6981,1,228,4,2,99,105,6989,6997,111,110,105,110,116,59,1,8755,110,116,59,1,10769,4,16,78,97,98,99,100,101,102,105,107,108,110,111,112,114,115,117,7036,7041,7119,7135,7149,7155,7219,7224,7347,7354,7463,7489,7786,7793,7814,7866,111,116,59,1,10989,4,2,99,114,7047,7094,107,4,4,99,101,112,115,7058,7064,7073,7080,111,110,103,59,1,8780,112,115,105,108,111,110,59,1,1014,114,105,109,101,59,1,8245,105,109,4,2,59,101,7088,7090,1,8765,113,59,1,8909,4,2,118,119,7100,7105,101,101,59,1,8893,101,100,4,2,59,103,7113,7115,1,8965,101,59,1,8965,114,107,4,2,59,116,7127,7129,1,9141,98,114,107,59,1,9142,4,2,111,121,7141,7146,110,103,59,1,8780,59,1,1073,113,117,111,59,1,8222,4,5,99,109,112,114,116,7167,7181,7188,7193,7199,97,117,115,4,2,59,101,7176,7178,1,8757,59,1,8757,112,116,121,118,59,1,10672,115,105,59,1,1014,110,111,117,59,1,8492,4,3,97,104,119,7207,7210,7213,59,1,946,59,1,8502,101,101,110,59,1,8812,114,59,3,55349,56607,103,4,7,99,111,115,116,117,118,119,7241,7262,7288,7305,7328,7335,7340,4,3,97,105,117,7249,7253,7258,112,59,1,8898,114,99,59,1,9711,112,59,1,8899,4,3,100,112,116,7270,7275,7281,111,116,59,1,10752,108,117,115,59,1,10753,105,109,101,115,59,1,10754,4,2,113,116,7294,7300,99,117,112,59,1,10758,97,114,59,1,9733,114,105,97,110,103,108,101,4,2,100,117,7318,7324,111,119,110,59,1,9661,112,59,1,9651,112,108,117,115,59,1,10756,101,101,59,1,8897,101,100,103,101,59,1,8896,97,114,111,119,59,1,10509,4,3,97,107,111,7362,7436,7458,4,2,99,110,7368,7432,107,4,3,108,115,116,7377,7386,7394,111,122,101,110,103,101,59,1,10731,113,117,97,114,101,59,1,9642,114,105,97,110,103,108,101,4,4,59,100,108,114,7411,7413,7419,7425,1,9652,111,119,110,59,1,9662,101,102,116,59,1,9666,105,103,104,116,59,1,9656,107,59,1,9251,4,2,49,51,7442,7454,4,2,50,52,7448,7451,59,1,9618,59,1,9617,52,59,1,9619,99,107,59,1,9608,4,2,101,111,7469,7485,4,2,59,113,7475,7478,3,61,8421,117,105,118,59,3,8801,8421,116,59,1,8976,4,4,112,116,119,120,7499,7504,7517,7523,102,59,3,55349,56659,4,2,59,116,7510,7512,1,8869,111,109,59,1,8869,116,105,101,59,1,8904,4,12,68,72,85,86,98,100,104,109,112,116,117,118,7549,7571,7597,7619,7655,7660,7682,7708,7715,7721,7728,7750,4,4,76,82,108,114,7559,7562,7565,7568,59,1,9559,59,1,9556,59,1,9558,59,1,9555,4,5,59,68,85,100,117,7583,7585,7588,7591,7594,1,9552,59,1,9574,59,1,9577,59,1,9572,59,1,9575,4,4,76,82,108,114,7607,7610,7613,7616,59,1,9565,59,1,9562,59,1,9564,59,1,9561,4,7,59,72,76,82,104,108,114,7635,7637,7640,7643,7646,7649,7652,1,9553,59,1,9580,59,1,9571,59,1,9568,59,1,9579,59,1,9570,59,1,9567,111,120,59,1,10697,4,4,76,82,108,114,7670,7673,7676,7679,59,1,9557,59,1,9554,59,1,9488,59,1,9484,4,5,59,68,85,100,117,7694,7696,7699,7702,7705,1,9472,59,1,9573,59,1,9576,59,1,9516,59,1,9524,105,110,117,115,59,1,8863,108,117,115,59,1,8862,105,109,101,115,59,1,8864,4,4,76,82,108,114,7738,7741,7744,7747,59,1,9563,59,1,9560,59,1,9496,59,1,9492,4,7,59,72,76,82,104,108,114,7766,7768,7771,7774,7777,7780,7783,1,9474,59,1,9578,59,1,9569,59,1,9566,59,1,9532,59,1,9508,59,1,9500,114,105,109,101,59,1,8245,4,2,101,118,7799,7804,118,101,59,1,728,98,97,114,5,166,1,59,7812,1,166,4,4,99,101,105,111,7824,7829,7834,7846,114,59,3,55349,56503,109,105,59,1,8271,109,4,2,59,101,7841,7843,1,8765,59,1,8909,108,4,3,59,98,104,7855,7857,7860,1,92,59,1,10693,115,117,98,59,1,10184,4,2,108,109,7872,7885,108,4,2,59,101,7879,7881,1,8226,116,59,1,8226,112,4,3,59,69,101,7894,7896,7899,1,8782,59,1,10926,4,2,59,113,7905,7907,1,8783,59,1,8783,4,15,97,99,100,101,102,104,105,108,111,114,115,116,117,119,121,7942,8021,8075,8080,8121,8126,8157,8279,8295,8430,8446,8485,8491,8707,8726,4,3,99,112,114,7950,7956,8007,117,116,101,59,1,263,4,6,59,97,98,99,100,115,7970,7972,7977,7984,7998,8003,1,8745,110,100,59,1,10820,114,99,117,112,59,1,10825,4,2,97,117,7990,7994,112,59,1,10827,112,59,1,10823,111,116,59,1,10816,59,3,8745,65024,4,2,101,111,8013,8017,116,59,1,8257,110,59,1,711,4,4,97,101,105,117,8031,8046,8056,8061,4,2,112,114,8037,8041,115,59,1,10829,111,110,59,1,269,100,105,108,5,231,1,59,8054,1,231,114,99,59,1,265,112,115,4,2,59,115,8069,8071,1,10828,109,59,1,10832,111,116,59,1,267,4,3,100,109,110,8088,8097,8104,105,108,5,184,1,59,8095,1,184,112,116,121,118,59,1,10674,116,5,162,2,59,101,8112,8114,1,162,114,100,111,116,59,1,183,114,59,3,55349,56608,4,3,99,101,105,8134,8138,8154,121,59,1,1095,99,107,4,2,59,109,8146,8148,1,10003,97,114,107,59,1,10003,59,1,967,114,4,7,59,69,99,101,102,109,115,8174,8176,8179,8258,8261,8268,8273,1,9675,59,1,10691,4,3,59,101,108,8187,8189,8193,1,710,113,59,1,8791,101,4,2,97,100,8200,8223,114,114,111,119,4,2,108,114,8210,8216,101,102,116,59,1,8634,105,103,104,116,59,1,8635,4,5,82,83,97,99,100,8235,8238,8241,8246,8252,59,1,174,59,1,9416,115,116,59,1,8859,105,114,99,59,1,8858,97,115,104,59,1,8861,59,1,8791,110,105,110,116,59,1,10768,105,100,59,1,10991,99,105,114,59,1,10690,117,98,115,4,2,59,117,8288,8290,1,9827,105,116,59,1,9827,4,4,108,109,110,112,8305,8326,8376,8400,111,110,4,2,59,101,8313,8315,1,58,4,2,59,113,8321,8323,1,8788,59,1,8788,4,2,109,112,8332,8344,97,4,2,59,116,8339,8341,1,44,59,1,64,4,3,59,102,108,8352,8354,8358,1,8705,110,59,1,8728,101,4,2,109,120,8365,8371,101,110,116,59,1,8705,101,115,59,1,8450,4,2,103,105,8382,8395,4,2,59,100,8388,8390,1,8773,111,116,59,1,10861,110,116,59,1,8750,4,3,102,114,121,8408,8412,8417,59,3,55349,56660,111,100,59,1,8720,5,169,2,59,115,8424,8426,1,169,114,59,1,8471,4,2,97,111,8436,8441,114,114,59,1,8629,115,115,59,1,10007,4,2,99,117,8452,8457,114,59,3,55349,56504,4,2,98,112,8463,8474,4,2,59,101,8469,8471,1,10959,59,1,10961,4,2,59,101,8480,8482,1,10960,59,1,10962,100,111,116,59,1,8943,4,7,100,101,108,112,114,118,119,8507,8522,8536,8550,8600,8697,8702,97,114,114,4,2,108,114,8516,8519,59,1,10552,59,1,10549,4,2,112,115,8528,8532,114,59,1,8926,99,59,1,8927,97,114,114,4,2,59,112,8545,8547,1,8630,59,1,10557,4,6,59,98,99,100,111,115,8564,8566,8573,8587,8592,8596,1,8746,114,99,97,112,59,1,10824,4,2,97,117,8579,8583,112,59,1,10822,112,59,1,10826,111,116,59,1,8845,114,59,1,10821,59,3,8746,65024,4,4,97,108,114,118,8610,8623,8663,8672,114,114,4,2,59,109,8618,8620,1,8631,59,1,10556,121,4,3,101,118,119,8632,8651,8656,113,4,2,112,115,8639,8645,114,101,99,59,1,8926,117,99,99,59,1,8927,101,101,59,1,8910,101,100,103,101,59,1,8911,101,110,5,164,1,59,8670,1,164,101,97,114,114,111,119,4,2,108,114,8684,8690,101,102,116,59,1,8630,105,103,104,116,59,1,8631,101,101,59,1,8910,101,100,59,1,8911,4,2,99,105,8713,8721,111,110,105,110,116,59,1,8754,110,116,59,1,8753,108,99,116,121,59,1,9005,4,19,65,72,97,98,99,100,101,102,104,105,106,108,111,114,115,116,117,119,122,8773,8778,8783,8821,8839,8854,8887,8914,8930,8944,9036,9041,9058,9197,9227,9258,9281,9297,9305,114,114,59,1,8659,97,114,59,1,10597,4,4,103,108,114,115,8793,8799,8805,8809,103,101,114,59,1,8224,101,116,104,59,1,8504,114,59,1,8595,104,4,2,59,118,8816,8818,1,8208,59,1,8867,4,2,107,108,8827,8834,97,114,111,119,59,1,10511,97,99,59,1,733,4,2,97,121,8845,8851,114,111,110,59,1,271,59,1,1076,4,3,59,97,111,8862,8864,8880,1,8518,4,2,103,114,8870,8876,103,101,114,59,1,8225,114,59,1,8650,116,115,101,113,59,1,10871,4,3,103,108,109,8895,8902,8907,5,176,1,59,8900,1,176,116,97,59,1,948,112,116,121,118,59,1,10673,4,2,105,114,8920,8926,115,104,116,59,1,10623,59,3,55349,56609,97,114,4,2,108,114,8938,8941,59,1,8643,59,1,8642,4,5,97,101,103,115,118,8956,8986,8989,8996,9001,109,4,3,59,111,115,8965,8967,8983,1,8900,110,100,4,2,59,115,8975,8977,1,8900,117,105,116,59,1,9830,59,1,9830,59,1,168,97,109,109,97,59,1,989,105,110,59,1,8946,4,3,59,105,111,9009,9011,9031,1,247,100,101,5,247,2,59,111,9020,9022,1,247,110,116,105,109,101,115,59,1,8903,110,120,59,1,8903,99,121,59,1,1106,99,4,2,111,114,9048,9053,114,110,59,1,8990,111,112,59,1,8973,4,5,108,112,116,117,119,9070,9076,9081,9130,9144,108,97,114,59,1,36,102,59,3,55349,56661,4,5,59,101,109,112,115,9093,9095,9109,9116,9122,1,729,113,4,2,59,100,9102,9104,1,8784,111,116,59,1,8785,105,110,117,115,59,1,8760,108,117,115,59,1,8724,113,117,97,114,101,59,1,8865,98,108,101,98,97,114,119,101,100,103,101,59,1,8966,110,4,3,97,100,104,9153,9160,9172,114,114,111,119,59,1,8595,111,119,110,97,114,114,111,119,115,59,1,8650,97,114,112,111,111,110,4,2,108,114,9184,9190,101,102,116,59,1,8643,105,103,104,116,59,1,8642,4,2,98,99,9203,9211,107,97,114,111,119,59,1,10512,4,2,111,114,9217,9222,114,110,59,1,8991,111,112,59,1,8972,4,3,99,111,116,9235,9248,9252,4,2,114,121,9241,9245,59,3,55349,56505,59,1,1109,108,59,1,10742,114,111,107,59,1,273,4,2,100,114,9264,9269,111,116,59,1,8945,105,4,2,59,102,9276,9278,1,9663,59,1,9662,4,2,97,104,9287,9292,114,114,59,1,8693,97,114,59,1,10607,97,110,103,108,101,59,1,10662,4,2,99,105,9311,9315,121,59,1,1119,103,114,97,114,114,59,1,10239,4,18,68,97,99,100,101,102,103,108,109,110,111,112,113,114,115,116,117,120,9361,9376,9398,9439,9444,9447,9462,9495,9531,9585,9598,9614,9659,9755,9771,9792,9808,9826,4,2,68,111,9367,9372,111,116,59,1,10871,116,59,1,8785,4,2,99,115,9382,9392,117,116,101,5,233,1,59,9390,1,233,116,101,114,59,1,10862,4,4,97,105,111,121,9408,9414,9430,9436,114,111,110,59,1,283,114,4,2,59,99,9421,9423,1,8790,5,234,1,59,9428,1,234,108,111,110,59,1,8789,59,1,1101,111,116,59,1,279,59,1,8519,4,2,68,114,9453,9458,111,116,59,1,8786,59,3,55349,56610,4,3,59,114,115,9470,9472,9482,1,10906,97,118,101,5,232,1,59,9480,1,232,4,2,59,100,9488,9490,1,10902,111,116,59,1,10904,4,4,59,105,108,115,9505,9507,9515,9518,1,10905,110,116,101,114,115,59,1,9191,59,1,8467,4,2,59,100,9524,9526,1,10901,111,116,59,1,10903,4,3,97,112,115,9539,9544,9564,99,114,59,1,275,116,121,4,3,59,115,118,9554,9556,9561,1,8709,101,116,59,1,8709,59,1,8709,112,4,2,49,59,9571,9583,4,2,51,52,9577,9580,59,1,8196,59,1,8197,1,8195,4,2,103,115,9591,9594,59,1,331,112,59,1,8194,4,2,103,112,9604,9609,111,110,59,1,281,102,59,3,55349,56662,4,3,97,108,115,9622,9635,9640,114,4,2,59,115,9629,9631,1,8917,108,59,1,10723,117,115,59,1,10865,105,4,3,59,108,118,9649,9651,9656,1,949,111,110,59,1,949,59,1,1013,4,4,99,115,117,118,9669,9686,9716,9747,4,2,105,111,9675,9680,114,99,59,1,8790,108,111,110,59,1,8789,4,2,105,108,9692,9696,109,59,1,8770,97,110,116,4,2,103,108,9705,9710,116,114,59,1,10902,101,115,115,59,1,10901,4,3,97,101,105,9724,9729,9734,108,115,59,1,61,115,116,59,1,8799,118,4,2,59,68,9741,9743,1,8801,68,59,1,10872,112,97,114,115,108,59,1,10725,4,2,68,97,9761,9766,111,116,59,1,8787,114,114,59,1,10609,4,3,99,100,105,9779,9783,9788,114,59,1,8495,111,116,59,1,8784,109,59,1,8770,4,2,97,104,9798,9801,59,1,951,5,240,1,59,9806,1,240,4,2,109,114,9814,9822,108,5,235,1,59,9820,1,235,111,59,1,8364,4,3,99,105,112,9834,9838,9843,108,59,1,33,115,116,59,1,8707,4,2,101,111,9849,9859,99,116,97,116,105,111,110,59,1,8496,110,101,110,116,105,97,108,101,59,1,8519,4,12,97,99,101,102,105,106,108,110,111,112,114,115,9896,9910,9914,9921,9954,9960,9967,9989,9994,10027,10036,10164,108,108,105,110,103,100,111,116,115,101,113,59,1,8786,121,59,1,1092,109,97,108,101,59,1,9792,4,3,105,108,114,9929,9935,9950,108,105,103,59,1,64259,4,2,105,108,9941,9945,103,59,1,64256,105,103,59,1,64260,59,3,55349,56611,108,105,103,59,1,64257,108,105,103,59,3,102,106,4,3,97,108,116,9975,9979,9984,116,59,1,9837,105,103,59,1,64258,110,115,59,1,9649,111,102,59,1,402,4,2,112,114,10000,10005,102,59,3,55349,56663,4,2,97,107,10011,10016,108,108,59,1,8704,4,2,59,118,10022,10024,1,8916,59,1,10969,97,114,116,105,110,116,59,1,10765,4,2,97,111,10042,10159,4,2,99,115,10048,10155,4,6,49,50,51,52,53,55,10062,10102,10114,10135,10139,10151,4,6,50,51,52,53,54,56,10076,10083,10086,10093,10096,10099,5,189,1,59,10081,1,189,59,1,8531,5,188,1,59,10091,1,188,59,1,8533,59,1,8537,59,1,8539,4,2,51,53,10108,10111,59,1,8532,59,1,8534,4,3,52,53,56,10122,10129,10132,5,190,1,59,10127,1,190,59,1,8535,59,1,8540,53,59,1,8536,4,2,54,56,10145,10148,59,1,8538,59,1,8541,56,59,1,8542,108,59,1,8260,119,110,59,1,8994,99,114,59,3,55349,56507,4,17,69,97,98,99,100,101,102,103,105,106,108,110,111,114,115,116,118,10206,10217,10247,10254,10268,10273,10358,10363,10374,10380,10385,10406,10458,10464,10470,10497,10610,4,2,59,108,10212,10214,1,8807,59,1,10892,4,3,99,109,112,10225,10231,10244,117,116,101,59,1,501,109,97,4,2,59,100,10239,10241,1,947,59,1,989,59,1,10886,114,101,118,101,59,1,287,4,2,105,121,10260,10265,114,99,59,1,285,59,1,1075,111,116,59,1,289,4,4,59,108,113,115,10283,10285,10288,10308,1,8805,59,1,8923,4,3,59,113,115,10296,10298,10301,1,8805,59,1,8807,108,97,110,116,59,1,10878,4,4,59,99,100,108,10318,10320,10324,10345,1,10878,99,59,1,10921,111,116,4,2,59,111,10332,10334,1,10880,4,2,59,108,10340,10342,1,10882,59,1,10884,4,2,59,101,10351,10354,3,8923,65024,115,59,1,10900,114,59,3,55349,56612,4,2,59,103,10369,10371,1,8811,59,1,8921,109,101,108,59,1,8503,99,121,59,1,1107,4,4,59,69,97,106,10395,10397,10400,10403,1,8823,59,1,10898,59,1,10917,59,1,10916,4,4,69,97,101,115,10416,10419,10434,10453,59,1,8809,112,4,2,59,112,10426,10428,1,10890,114,111,120,59,1,10890,4,2,59,113,10440,10442,1,10888,4,2,59,113,10448,10450,1,10888,59,1,8809,105,109,59,1,8935,112,102,59,3,55349,56664,97,118,101,59,1,96,4,2,99,105,10476,10480,114,59,1,8458,109,4,3,59,101,108,10489,10491,10494,1,8819,59,1,10894,59,1,10896,5,62,6,59,99,100,108,113,114,10512,10514,10527,10532,10538,10545,1,62,4,2,99,105,10520,10523,59,1,10919,114,59,1,10874,111,116,59,1,8919,80,97,114,59,1,10645,117,101,115,116,59,1,10876,4,5,97,100,101,108,115,10557,10574,10579,10599,10605,4,2,112,114,10563,10570,112,114,111,120,59,1,10886,114,59,1,10616,111,116,59,1,8919,113,4,2,108,113,10586,10592,101,115,115,59,1,8923,108,101,115,115,59,1,10892,101,115,115,59,1,8823,105,109,59,1,8819,4,2,101,110,10616,10626,114,116,110,101,113,113,59,3,8809,65024,69,59,3,8809,65024,4,10,65,97,98,99,101,102,107,111,115,121,10653,10658,10713,10718,10724,10760,10765,10786,10850,10875,114,114,59,1,8660,4,4,105,108,109,114,10668,10674,10678,10684,114,115,112,59,1,8202,102,59,1,189,105,108,116,59,1,8459,4,2,100,114,10690,10695,99,121,59,1,1098,4,3,59,99,119,10703,10705,10710,1,8596,105,114,59,1,10568,59,1,8621,97,114,59,1,8463,105,114,99,59,1,293,4,3,97,108,114,10732,10748,10754,114,116,115,4,2,59,117,10741,10743,1,9829,105,116,59,1,9829,108,105,112,59,1,8230,99,111,110,59,1,8889,114,59,3,55349,56613,115,4,2,101,119,10772,10779,97,114,111,119,59,1,10533,97,114,111,119,59,1,10534,4,5,97,109,111,112,114,10798,10803,10809,10839,10844,114,114,59,1,8703,116,104,116,59,1,8763,107,4,2,108,114,10816,10827,101,102,116,97,114,114,111,119,59,1,8617,105,103,104,116,97,114,114,111,119,59,1,8618,102,59,3,55349,56665,98,97,114,59,1,8213,4,3,99,108,116,10858,10863,10869,114,59,3,55349,56509,97,115,104,59,1,8463,114,111,107,59,1,295,4,2,98,112,10881,10887,117,108,108,59,1,8259,104,101,110,59,1,8208,4,15,97,99,101,102,103,105,106,109,110,111,112,113,115,116,117,10925,10936,10958,10977,10990,11001,11039,11045,11101,11192,11220,11226,11237,11285,11299,99,117,116,101,5,237,1,59,10934,1,237,4,3,59,105,121,10944,10946,10955,1,8291,114,99,5,238,1,59,10953,1,238,59,1,1080,4,2,99,120,10964,10968,121,59,1,1077,99,108,5,161,1,59,10975,1,161,4,2,102,114,10983,10986,59,1,8660,59,3,55349,56614,114,97,118,101,5,236,1,59,10999,1,236,4,4,59,105,110,111,11011,11013,11028,11034,1,8520,4,2,105,110,11019,11024,110,116,59,1,10764,116,59,1,8749,102,105,110,59,1,10716,116,97,59,1,8489,108,105,103,59,1,307,4,3,97,111,112,11053,11092,11096,4,3,99,103,116,11061,11065,11088,114,59,1,299,4,3,101,108,112,11073,11076,11082,59,1,8465,105,110,101,59,1,8464,97,114,116,59,1,8465,104,59,1,305,102,59,1,8887,101,100,59,1,437,4,5,59,99,102,111,116,11113,11115,11121,11136,11142,1,8712,97,114,101,59,1,8453,105,110,4,2,59,116,11129,11131,1,8734,105,101,59,1,10717,100,111,116,59,1,305,4,5,59,99,101,108,112,11154,11156,11161,11179,11186,1,8747,97,108,59,1,8890,4,2,103,114,11167,11173,101,114,115,59,1,8484,99,97,108,59,1,8890,97,114,104,107,59,1,10775,114,111,100,59,1,10812,4,4,99,103,112,116,11202,11206,11211,11216,121,59,1,1105,111,110,59,1,303,102,59,3,55349,56666,97,59,1,953,114,111,100,59,1,10812,117,101,115,116,5,191,1,59,11235,1,191,4,2,99,105,11243,11248,114,59,3,55349,56510,110,4,5,59,69,100,115,118,11261,11263,11266,11271,11282,1,8712,59,1,8953,111,116,59,1,8949,4,2,59,118,11277,11279,1,8948,59,1,8947,59,1,8712,4,2,59,105,11291,11293,1,8290,108,100,101,59,1,297,4,2,107,109,11305,11310,99,121,59,1,1110,108,5,239,1,59,11316,1,239,4,6,99,102,109,111,115,117,11332,11346,11351,11357,11363,11380,4,2,105,121,11338,11343,114,99,59,1,309,59,1,1081,114,59,3,55349,56615,97,116,104,59,1,567,112,102,59,3,55349,56667,4,2,99,101,11369,11374,114,59,3,55349,56511,114,99,121,59,1,1112,107,99,121,59,1,1108,4,8,97,99,102,103,104,106,111,115,11404,11418,11433,11438,11445,11450,11455,11461,112,112,97,4,2,59,118,11413,11415,1,954,59,1,1008,4,2,101,121,11424,11430,100,105,108,59,1,311,59,1,1082,114,59,3,55349,56616,114,101,101,110,59,1,312,99,121,59,1,1093,99,121,59,1,1116,112,102,59,3,55349,56668,99,114,59,3,55349,56512,4,23,65,66,69,72,97,98,99,100,101,102,103,104,106,108,109,110,111,112,114,115,116,117,118,11515,11538,11544,11555,11560,11721,11780,11818,11868,12136,12160,12171,12203,12208,12246,12275,12327,12509,12523,12569,12641,12732,12752,4,3,97,114,116,11523,11528,11532,114,114,59,1,8666,114,59,1,8656,97,105,108,59,1,10523,97,114,114,59,1,10510,4,2,59,103,11550,11552,1,8806,59,1,10891,97,114,59,1,10594,4,9,99,101,103,109,110,112,113,114,116,11580,11586,11594,11600,11606,11624,11627,11636,11694,117,116,101,59,1,314,109,112,116,121,118,59,1,10676,114,97,110,59,1,8466,98,100,97,59,1,955,103,4,3,59,100,108,11615,11617,11620,1,10216,59,1,10641,101,59,1,10216,59,1,10885,117,111,5,171,1,59,11634,1,171,114,4,8,59,98,102,104,108,112,115,116,11655,11657,11669,11673,11677,11681,11685,11690,1,8592,4,2,59,102,11663,11665,1,8676,115,59,1,10527,115,59,1,10525,107,59,1,8617,112,59,1,8619,108,59,1,10553,105,109,59,1,10611,108,59,1,8610,4,3,59,97,101,11702,11704,11709,1,10923,105,108,59,1,10521,4,2,59,115,11715,11717,1,10925,59,3,10925,65024,4,3,97,98,114,11729,11734,11739,114,114,59,1,10508,114,107,59,1,10098,4,2,97,107,11745,11758,99,4,2,101,107,11752,11755,59,1,123,59,1,91,4,2,101,115,11764,11767,59,1,10635,108,4,2,100,117,11774,11777,59,1,10639,59,1,10637,4,4,97,101,117,121,11790,11796,11811,11815,114,111,110,59,1,318,4,2,100,105,11802,11807,105,108,59,1,316,108,59,1,8968,98,59,1,123,59,1,1083,4,4,99,113,114,115,11828,11832,11845,11864,97,59,1,10550,117,111,4,2,59,114,11840,11842,1,8220,59,1,8222,4,2,100,117,11851,11857,104,97,114,59,1,10599,115,104,97,114,59,1,10571,104,59,1,8626,4,5,59,102,103,113,115,11880,11882,12008,12011,12031,1,8804,116,4,5,97,104,108,114,116,11895,11913,11935,11947,11996,114,114,111,119,4,2,59,116,11905,11907,1,8592,97,105,108,59,1,8610,97,114,112,111,111,110,4,2,100,117,11925,11931,111,119,110,59,1,8637,112,59,1,8636,101,102,116,97,114,114,111,119,115,59,1,8647,105,103,104,116,4,3,97,104,115,11959,11974,11984,114,114,111,119,4,2,59,115,11969,11971,1,8596,59,1,8646,97,114,112,111,111,110,115,59,1,8651,113,117,105,103,97,114,114,111,119,59,1,8621,104,114,101,101,116,105,109,101,115,59,1,8907,59,1,8922,4,3,59,113,115,12019,12021,12024,1,8804,59,1,8806,108,97,110,116,59,1,10877,4,5,59,99,100,103,115,12043,12045,12049,12070,12083,1,10877,99,59,1,10920,111,116,4,2,59,111,12057,12059,1,10879,4,2,59,114,12065,12067,1,10881,59,1,10883,4,2,59,101,12076,12079,3,8922,65024,115,59,1,10899,4,5,97,100,101,103,115,12095,12103,12108,12126,12131,112,112,114,111,120,59,1,10885,111,116,59,1,8918,113,4,2,103,113,12115,12120,116,114,59,1,8922,103,116,114,59,1,10891,116,114,59,1,8822,105,109,59,1,8818,4,3,105,108,114,12144,12150,12156,115,104,116,59,1,10620,111,111,114,59,1,8970,59,3,55349,56617,4,2,59,69,12166,12168,1,8822,59,1,10897,4,2,97,98,12177,12198,114,4,2,100,117,12184,12187,59,1,8637,4,2,59,108,12193,12195,1,8636,59,1,10602,108,107,59,1,9604,99,121,59,1,1113,4,5,59,97,99,104,116,12220,12222,12227,12235,12241,1,8810,114,114,59,1,8647,111,114,110,101,114,59,1,8990,97,114,100,59,1,10603,114,105,59,1,9722,4,2,105,111,12252,12258,100,111,116,59,1,320,117,115,116,4,2,59,97,12267,12269,1,9136,99,104,101,59,1,9136,4,4,69,97,101,115,12285,12288,12303,12322,59,1,8808,112,4,2,59,112,12295,12297,1,10889,114,111,120,59,1,10889,4,2,59,113,12309,12311,1,10887,4,2,59,113,12317,12319,1,10887,59,1,8808,105,109,59,1,8934,4,8,97,98,110,111,112,116,119,122,12345,12359,12364,12421,12446,12467,12474,12490,4,2,110,114,12351,12355,103,59,1,10220,114,59,1,8701,114,107,59,1,10214,103,4,3,108,109,114,12373,12401,12409,101,102,116,4,2,97,114,12382,12389,114,114,111,119,59,1,10229,105,103,104,116,97,114,114,111,119,59,1,10231,97,112,115,116,111,59,1,10236,105,103,104,116,97,114,114,111,119,59,1,10230,112,97,114,114,111,119,4,2,108,114,12433,12439,101,102,116,59,1,8619,105,103,104,116,59,1,8620,4,3,97,102,108,12454,12458,12462,114,59,1,10629,59,3,55349,56669,117,115,59,1,10797,105,109,101,115,59,1,10804,4,2,97,98,12480,12485,115,116,59,1,8727,97,114,59,1,95,4,3,59,101,102,12498,12500,12506,1,9674,110,103,101,59,1,9674,59,1,10731,97,114,4,2,59,108,12517,12519,1,40,116,59,1,10643,4,5,97,99,104,109,116,12535,12540,12548,12561,12564,114,114,59,1,8646,111,114,110,101,114,59,1,8991,97,114,4,2,59,100,12556,12558,1,8651,59,1,10605,59,1,8206,114,105,59,1,8895,4,6,97,99,104,105,113,116,12583,12589,12594,12597,12614,12635,113,117,111,59,1,8249,114,59,3,55349,56513,59,1,8624,109,4,3,59,101,103,12606,12608,12611,1,8818,59,1,10893,59,1,10895,4,2,98,117,12620,12623,59,1,91,111,4,2,59,114,12630,12632,1,8216,59,1,8218,114,111,107,59,1,322,5,60,8,59,99,100,104,105,108,113,114,12660,12662,12675,12680,12686,12692,12698,12705,1,60,4,2,99,105,12668,12671,59,1,10918,114,59,1,10873,111,116,59,1,8918,114,101,101,59,1,8907,109,101,115,59,1,8905,97,114,114,59,1,10614,117,101,115,116,59,1,10875,4,2,80,105,12711,12716,97,114,59,1,10646,4,3,59,101,102,12724,12726,12729,1,9667,59,1,8884,59,1,9666,114,4,2,100,117,12739,12746,115,104,97,114,59,1,10570,104,97,114,59,1,10598,4,2,101,110,12758,12768,114,116,110,101,113,113,59,3,8808,65024,69,59,3,8808,65024,4,14,68,97,99,100,101,102,104,105,108,110,111,112,115,117,12803,12809,12893,12908,12914,12928,12933,12937,13011,13025,13032,13049,13052,13069,68,111,116,59,1,8762,4,4,99,108,112,114,12819,12827,12849,12887,114,5,175,1,59,12825,1,175,4,2,101,116,12833,12836,59,1,9794,4,2,59,101,12842,12844,1,10016,115,101,59,1,10016,4,2,59,115,12855,12857,1,8614,116,111,4,4,59,100,108,117,12869,12871,12877,12883,1,8614,111,119,110,59,1,8615,101,102,116,59,1,8612,112,59,1,8613,107,101,114,59,1,9646,4,2,111,121,12899,12905,109,109,97,59,1,10793,59,1,1084,97,115,104,59,1,8212,97,115,117,114,101,100,97,110,103,108,101,59,1,8737,114,59,3,55349,56618,111,59,1,8487,4,3,99,100,110,12945,12954,12985,114,111,5,181,1,59,12952,1,181,4,4,59,97,99,100,12964,12966,12971,12976,1,8739,115,116,59,1,42,105,114,59,1,10992,111,116,5,183,1,59,12983,1,183,117,115,4,3,59,98,100,12995,12997,13000,1,8722,59,1,8863,4,2,59,117,13006,13008,1,8760,59,1,10794,4,2,99,100,13017,13021,112,59,1,10971,114,59,1,8230,112,108,117,115,59,1,8723,4,2,100,112,13038,13044,101,108,115,59,1,8871,102,59,3,55349,56670,59,1,8723,4,2,99,116,13058,13063,114,59,3,55349,56514,112,111,115,59,1,8766,4,3,59,108,109,13077,13079,13087,1,956,116,105,109,97,112,59,1,8888,97,112,59,1,8888,4,24,71,76,82,86,97,98,99,100,101,102,103,104,105,106,108,109,111,112,114,115,116,117,118,119,13142,13165,13217,13229,13247,13330,13359,13414,13420,13508,13513,13579,13602,13626,13631,13762,13767,13855,13936,13995,14214,14285,14312,14432,4,2,103,116,13148,13152,59,3,8921,824,4,2,59,118,13158,13161,3,8811,8402,59,3,8811,824,4,3,101,108,116,13173,13200,13204,102,116,4,2,97,114,13181,13188,114,114,111,119,59,1,8653,105,103,104,116,97,114,114,111,119,59,1,8654,59,3,8920,824,4,2,59,118,13210,13213,3,8810,8402,59,3,8810,824,105,103,104,116,97,114,114,111,119,59,1,8655,4,2,68,100,13235,13241,97,115,104,59,1,8879,97,115,104,59,1,8878,4,5,98,99,110,112,116,13259,13264,13270,13275,13308,108,97,59,1,8711,117,116,101,59,1,324,103,59,3,8736,8402,4,5,59,69,105,111,112,13287,13289,13293,13298,13302,1,8777,59,3,10864,824,100,59,3,8779,824,115,59,1,329,114,111,120,59,1,8777,117,114,4,2,59,97,13316,13318,1,9838,108,4,2,59,115,13325,13327,1,9838,59,1,8469,4,2,115,117,13336,13344,112,5,160,1,59,13342,1,160,109,112,4,2,59,101,13352,13355,3,8782,824,59,3,8783,824,4,5,97,101,111,117,121,13371,13385,13391,13407,13411,4,2,112,114,13377,13380,59,1,10819,111,110,59,1,328,100,105,108,59,1,326,110,103,4,2,59,100,13399,13401,1,8775,111,116,59,3,10861,824,112,59,1,10818,59,1,1085,97,115,104,59,1,8211,4,7,59,65,97,100,113,115,120,13436,13438,13443,13466,13472,13478,13494,1,8800,114,114,59,1,8663,114,4,2,104,114,13450,13454,107,59,1,10532,4,2,59,111,13460,13462,1,8599,119,59,1,8599,111,116,59,3,8784,824,117,105,118,59,1,8802,4,2,101,105,13484,13489,97,114,59,1,10536,109,59,3,8770,824,105,115,116,4,2,59,115,13503,13505,1,8708,59,1,8708,114,59,3,55349,56619,4,4,69,101,115,116,13523,13527,13563,13568,59,3,8807,824,4,3,59,113,115,13535,13537,13559,1,8817,4,3,59,113,115,13545,13547,13551,1,8817,59,3,8807,824,108,97,110,116,59,3,10878,824,59,3,10878,824,105,109,59,1,8821,4,2,59,114,13574,13576,1,8815,59,1,8815,4,3,65,97,112,13587,13592,13597,114,114,59,1,8654,114,114,59,1,8622,97,114,59,1,10994,4,3,59,115,118,13610,13612,13623,1,8715,4,2,59,100,13618,13620,1,8956,59,1,8954,59,1,8715,99,121,59,1,1114,4,7,65,69,97,100,101,115,116,13647,13652,13656,13661,13665,13737,13742,114,114,59,1,8653,59,3,8806,824,114,114,59,1,8602,114,59,1,8229,4,4,59,102,113,115,13675,13677,13703,13725,1,8816,116,4,2,97,114,13684,13691,114,114,111,119,59,1,8602,105,103,104,116,97,114,114,111,119,59,1,8622,4,3,59,113,115,13711,13713,13717,1,8816,59,3,8806,824,108,97,110,116,59,3,10877,824,4,2,59,115,13731,13734,3,10877,824,59,1,8814,105,109,59,1,8820,4,2,59,114,13748,13750,1,8814,105,4,2,59,101,13757,13759,1,8938,59,1,8940,105,100,59,1,8740,4,2,112,116,13773,13778,102,59,3,55349,56671,5,172,3,59,105,110,13787,13789,13829,1,172,110,4,4,59,69,100,118,13800,13802,13806,13812,1,8713,59,3,8953,824,111,116,59,3,8949,824,4,3,97,98,99,13820,13823,13826,59,1,8713,59,1,8951,59,1,8950,105,4,2,59,118,13836,13838,1,8716,4,3,97,98,99,13846,13849,13852,59,1,8716,59,1,8958,59,1,8957,4,3,97,111,114,13863,13892,13899,114,4,4,59,97,115,116,13874,13876,13883,13888,1,8742,108,108,101,108,59,1,8742,108,59,3,11005,8421,59,3,8706,824,108,105,110,116,59,1,10772,4,3,59,99,101,13907,13909,13914,1,8832,117,101,59,1,8928,4,2,59,99,13920,13923,3,10927,824,4,2,59,101,13929,13931,1,8832,113,59,3,10927,824,4,4,65,97,105,116,13946,13951,13971,13982,114,114,59,1,8655,114,114,4,3,59,99,119,13961,13963,13967,1,8603,59,3,10547,824,59,3,8605,824,103,104,116,97,114,114,111,119,59,1,8603,114,105,4,2,59,101,13990,13992,1,8939,59,1,8941,4,7,99,104,105,109,112,113,117,14011,14036,14060,14080,14085,14090,14106,4,4,59,99,101,114,14021,14023,14028,14032,1,8833,117,101,59,1,8929,59,3,10928,824,59,3,55349,56515,111,114,116,4,2,109,112,14045,14050,105,100,59,1,8740,97,114,97,108,108,101,108,59,1,8742,109,4,2,59,101,14067,14069,1,8769,4,2,59,113,14075,14077,1,8772,59,1,8772,105,100,59,1,8740,97,114,59,1,8742,115,117,4,2,98,112,14098,14102,101,59,1,8930,101,59,1,8931,4,3,98,99,112,14114,14157,14171,4,4,59,69,101,115,14124,14126,14130,14133,1,8836,59,3,10949,824,59,1,8840,101,116,4,2,59,101,14141,14144,3,8834,8402,113,4,2,59,113,14151,14153,1,8840,59,3,10949,824,99,4,2,59,101,14164,14166,1,8833,113,59,3,10928,824,4,4,59,69,101,115,14181,14183,14187,14190,1,8837,59,3,10950,824,59,1,8841,101,116,4,2,59,101,14198,14201,3,8835,8402,113,4,2,59,113,14208,14210,1,8841,59,3,10950,824,4,4,103,105,108,114,14224,14228,14238,14242,108,59,1,8825,108,100,101,5,241,1,59,14236,1,241,103,59,1,8824,105,97,110,103,108,101,4,2,108,114,14254,14269,101,102,116,4,2,59,101,14263,14265,1,8938,113,59,1,8940,105,103,104,116,4,2,59,101,14279,14281,1,8939,113,59,1,8941,4,2,59,109,14291,14293,1,957,4,3,59,101,115,14301,14303,14308,1,35,114,111,59,1,8470,112,59,1,8199,4,9,68,72,97,100,103,105,108,114,115,14332,14338,14344,14349,14355,14369,14376,14408,14426,97,115,104,59,1,8877,97,114,114,59,1,10500,112,59,3,8781,8402,97,115,104,59,1,8876,4,2,101,116,14361,14365,59,3,8805,8402,59,3,62,8402,110,102,105,110,59,1,10718,4,3,65,101,116,14384,14389,14393,114,114,59,1,10498,59,3,8804,8402,4,2,59,114,14399,14402,3,60,8402,105,101,59,3,8884,8402,4,2,65,116,14414,14419,114,114,59,1,10499,114,105,101,59,3,8885,8402,105,109,59,3,8764,8402,4,3,65,97,110,14440,14445,14468,114,114,59,1,8662,114,4,2,104,114,14452,14456,107,59,1,10531,4,2,59,111,14462,14464,1,8598,119,59,1,8598,101,97,114,59,1,10535,4,18,83,97,99,100,101,102,103,104,105,108,109,111,112,114,115,116,117,118,14512,14515,14535,14560,14597,14603,14618,14643,14657,14662,14701,14741,14747,14769,14851,14877,14907,14916,59,1,9416,4,2,99,115,14521,14531,117,116,101,5,243,1,59,14529,1,243,116,59,1,8859,4,2,105,121,14541,14557,114,4,2,59,99,14548,14550,1,8858,5,244,1,59,14555,1,244,59,1,1086,4,5,97,98,105,111,115,14572,14577,14583,14587,14591,115,104,59,1,8861,108,97,99,59,1,337,118,59,1,10808,116,59,1,8857,111,108,100,59,1,10684,108,105,103,59,1,339,4,2,99,114,14609,14614,105,114,59,1,10687,59,3,55349,56620,4,3,111,114,116,14626,14630,14640,110,59,1,731,97,118,101,5,242,1,59,14638,1,242,59,1,10689,4,2,98,109,14649,14654,97,114,59,1,10677,59,1,937,110,116,59,1,8750,4,4,97,99,105,116,14672,14677,14693,14698,114,114,59,1,8634,4,2,105,114,14683,14687,114,59,1,10686,111,115,115,59,1,10683,110,101,59,1,8254,59,1,10688,4,3,97,101,105,14709,14714,14719,99,114,59,1,333,103,97,59,1,969,4,3,99,100,110,14727,14733,14736,114,111,110,59,1,959,59,1,10678,117,115,59,1,8854,112,102,59,3,55349,56672,4,3,97,101,108,14755,14759,14764,114,59,1,10679,114,112,59,1,10681,117,115,59,1,8853,4,7,59,97,100,105,111,115,118,14785,14787,14792,14831,14837,14841,14848,1,8744,114,114,59,1,8635,4,4,59,101,102,109,14802,14804,14817,14824,1,10845,114,4,2,59,111,14811,14813,1,8500,102,59,1,8500,5,170,1,59,14822,1,170,5,186,1,59,14829,1,186,103,111,102,59,1,8886,114,59,1,10838,108,111,112,101,59,1,10839,59,1,10843,4,3,99,108,111,14859,14863,14873,114,59,1,8500,97,115,104,5,248,1,59,14871,1,248,108,59,1,8856,105,4,2,108,109,14884,14893,100,101,5,245,1,59,14891,1,245,101,115,4,2,59,97,14901,14903,1,8855,115,59,1,10806,109,108,5,246,1,59,14914,1,246,98,97,114,59,1,9021,4,12,97,99,101,102,104,105,108,109,111,114,115,117,14948,14992,14996,15033,15038,15068,15090,15189,15192,15222,15427,15441,114,4,4,59,97,115,116,14959,14961,14976,14989,1,8741,5,182,2,59,108,14968,14970,1,182,108,101,108,59,1,8741,4,2,105,108,14982,14986,109,59,1,10995,59,1,11005,59,1,8706,121,59,1,1087,114,4,5,99,105,109,112,116,15009,15014,15019,15024,15027,110,116,59,1,37,111,100,59,1,46,105,108,59,1,8240,59,1,8869,101,110,107,59,1,8241,114,59,3,55349,56621,4,3,105,109,111,15046,15057,15063,4,2,59,118,15052,15054,1,966,59,1,981,109,97,116,59,1,8499,110,101,59,1,9742,4,3,59,116,118,15076,15078,15087,1,960,99,104,102,111,114,107,59,1,8916,59,1,982,4,2,97,117,15096,15119,110,4,2,99,107,15103,15115,107,4,2,59,104,15110,15112,1,8463,59,1,8462,118,59,1,8463,115,4,9,59,97,98,99,100,101,109,115,116,15140,15142,15148,15151,15156,15168,15171,15179,15184,1,43,99,105,114,59,1,10787,59,1,8862,105,114,59,1,10786,4,2,111,117,15162,15165,59,1,8724,59,1,10789,59,1,10866,110,5,177,1,59,15177,1,177,105,109,59,1,10790,119,111,59,1,10791,59,1,177,4,3,105,112,117,15200,15208,15213,110,116,105,110,116,59,1,10773,102,59,3,55349,56673,110,100,5,163,1,59,15220,1,163,4,10,59,69,97,99,101,105,110,111,115,117,15244,15246,15249,15253,15258,15334,15347,15367,15416,15421,1,8826,59,1,10931,112,59,1,10935,117,101,59,1,8828,4,2,59,99,15264,15266,1,10927,4,6,59,97,99,101,110,115,15280,15282,15290,15299,15303,15329,1,8826,112,112,114,111,120,59,1,10935,117,114,108,121,101,113,59,1,8828,113,59,1,10927,4,3,97,101,115,15311,15319,15324,112,112,114,111,120,59,1,10937,113,113,59,1,10933,105,109,59,1,8936,105,109,59,1,8830,109,101,4,2,59,115,15342,15344,1,8242,59,1,8473,4,3,69,97,115,15355,15358,15362,59,1,10933,112,59,1,10937,105,109,59,1,8936,4,3,100,102,112,15375,15378,15404,59,1,8719,4,3,97,108,115,15386,15392,15398,108,97,114,59,1,9006,105,110,101,59,1,8978,117,114,102,59,1,8979,4,2,59,116,15410,15412,1,8733,111,59,1,8733,105,109,59,1,8830,114,101,108,59,1,8880,4,2,99,105,15433,15438,114,59,3,55349,56517,59,1,968,110,99,115,112,59,1,8200,4,6,102,105,111,112,115,117,15462,15467,15472,15478,15485,15491,114,59,3,55349,56622,110,116,59,1,10764,112,102,59,3,55349,56674,114,105,109,101,59,1,8279,99,114,59,3,55349,56518,4,3,97,101,111,15499,15520,15534,116,4,2,101,105,15506,15515,114,110,105,111,110,115,59,1,8461,110,116,59,1,10774,115,116,4,2,59,101,15528,15530,1,63,113,59,1,8799,116,5,34,1,59,15540,1,34,4,21,65,66,72,97,98,99,100,101,102,104,105,108,109,110,111,112,114,115,116,117,120,15586,15609,15615,15620,15796,15855,15893,15931,15977,16001,16039,16183,16204,16222,16228,16285,16312,16318,16363,16408,16416,4,3,97,114,116,15594,15599,15603,114,114,59,1,8667,114,59,1,8658,97,105,108,59,1,10524,97,114,114,59,1,10511,97,114,59,1,10596,4,7,99,100,101,110,113,114,116,15636,15651,15656,15664,15687,15696,15770,4,2,101,117,15642,15646,59,3,8765,817,116,101,59,1,341,105,99,59,1,8730,109,112,116,121,118,59,1,10675,103,4,4,59,100,101,108,15675,15677,15680,15683,1,10217,59,1,10642,59,1,10661,101,59,1,10217,117,111,5,187,1,59,15694,1,187,114,4,11,59,97,98,99,102,104,108,112,115,116,119,15721,15723,15727,15739,15742,15746,15750,15754,15758,15763,15767,1,8594,112,59,1,10613,4,2,59,102,15733,15735,1,8677,115,59,1,10528,59,1,10547,115,59,1,10526,107,59,1,8618,112,59,1,8620,108,59,1,10565,105,109,59,1,10612,108,59,1,8611,59,1,8605,4,2,97,105,15776,15781,105,108,59,1,10522,111,4,2,59,110,15788,15790,1,8758,97,108,115,59,1,8474,4,3,97,98,114,15804,15809,15814,114,114,59,1,10509,114,107,59,1,10099,4,2,97,107,15820,15833,99,4,2,101,107,15827,15830,59,1,125,59,1,93,4,2,101,115,15839,15842,59,1,10636,108,4,2,100,117,15849,15852,59,1,10638,59,1,10640,4,4,97,101,117,121,15865,15871,15886,15890,114,111,110,59,1,345,4,2,100,105,15877,15882,105,108,59,1,343,108,59,1,8969,98,59,1,125,59,1,1088,4,4,99,108,113,115,15903,15907,15914,15927,97,59,1,10551,100,104,97,114,59,1,10601,117,111,4,2,59,114,15922,15924,1,8221,59,1,8221,104,59,1,8627,4,3,97,99,103,15939,15966,15970,108,4,4,59,105,112,115,15950,15952,15957,15963,1,8476,110,101,59,1,8475,97,114,116,59,1,8476,59,1,8477,116,59,1,9645,5,174,1,59,15975,1,174,4,3,105,108,114,15985,15991,15997,115,104,116,59,1,10621,111,111,114,59,1,8971,59,3,55349,56623,4,2,97,111,16007,16028,114,4,2,100,117,16014,16017,59,1,8641,4,2,59,108,16023,16025,1,8640,59,1,10604,4,2,59,118,16034,16036,1,961,59,1,1009,4,3,103,110,115,16047,16167,16171,104,116,4,6,97,104,108,114,115,116,16063,16081,16103,16130,16143,16155,114,114,111,119,4,2,59,116,16073,16075,1,8594,97,105,108,59,1,8611,97,114,112,111,111,110,4,2,100,117,16093,16099,111,119,110,59,1,8641,112,59,1,8640,101,102,116,4,2,97,104,16112,16120,114,114,111,119,115,59,1,8644,97,114,112,111,111,110,115,59,1,8652,105,103,104,116,97,114,114,111,119,115,59,1,8649,113,117,105,103,97,114,114,111,119,59,1,8605,104,114,101,101,116,105,109,101,115,59,1,8908,103,59,1,730,105,110,103,100,111,116,115,101,113,59,1,8787,4,3,97,104,109,16191,16196,16201,114,114,59,1,8644,97,114,59,1,8652,59,1,8207,111,117,115,116,4,2,59,97,16214,16216,1,9137,99,104,101,59,1,9137,109,105,100,59,1,10990,4,4,97,98,112,116,16238,16252,16257,16278,4,2,110,114,16244,16248,103,59,1,10221,114,59,1,8702,114,107,59,1,10215,4,3,97,102,108,16265,16269,16273,114,59,1,10630,59,3,55349,56675,117,115,59,1,10798,105,109,101,115,59,1,10805,4,2,97,112,16291,16304,114,4,2,59,103,16298,16300,1,41,116,59,1,10644,111,108,105,110,116,59,1,10770,97,114,114,59,1,8649,4,4,97,99,104,113,16328,16334,16339,16342,113,117,111,59,1,8250,114,59,3,55349,56519,59,1,8625,4,2,98,117,16348,16351,59,1,93,111,4,2,59,114,16358,16360,1,8217,59,1,8217,4,3,104,105,114,16371,16377,16383,114,101,101,59,1,8908,109,101,115,59,1,8906,105,4,4,59,101,102,108,16394,16396,16399,16402,1,9657,59,1,8885,59,1,9656,116,114,105,59,1,10702,108,117,104,97,114,59,1,10600,59,1,8478,4,19,97,98,99,100,101,102,104,105,108,109,111,112,113,114,115,116,117,119,122,16459,16466,16472,16572,16590,16672,16687,16746,16844,16850,16924,16963,16988,17115,17121,17154,17206,17614,17656,99,117,116,101,59,1,347,113,117,111,59,1,8218,4,10,59,69,97,99,101,105,110,112,115,121,16494,16496,16499,16513,16518,16531,16536,16556,16564,16569,1,8827,59,1,10932,4,2,112,114,16505,16508,59,1,10936,111,110,59,1,353,117,101,59,1,8829,4,2,59,100,16524,16526,1,10928,105,108,59,1,351,114,99,59,1,349,4,3,69,97,115,16544,16547,16551,59,1,10934,112,59,1,10938,105,109,59,1,8937,111,108,105,110,116,59,1,10771,105,109,59,1,8831,59,1,1089,111,116,4,3,59,98,101,16582,16584,16587,1,8901,59,1,8865,59,1,10854,4,7,65,97,99,109,115,116,120,16606,16611,16634,16642,16646,16652,16668,114,114,59,1,8664,114,4,2,104,114,16618,16622,107,59,1,10533,4,2,59,111,16628,16630,1,8600,119,59,1,8600,116,5,167,1,59,16640,1,167,105,59,1,59,119,97,114,59,1,10537,109,4,2,105,110,16659,16665,110,117,115,59,1,8726,59,1,8726,116,59,1,10038,114,4,2,59,111,16679,16682,3,55349,56624,119,110,59,1,8994,4,4,97,99,111,121,16697,16702,16716,16739,114,112,59,1,9839,4,2,104,121,16708,16713,99,121,59,1,1097,59,1,1096,114,116,4,2,109,112,16724,16729,105,100,59,1,8739,97,114,97,108,108,101,108,59,1,8741,5,173,1,59,16744,1,173,4,2,103,109,16752,16770,109,97,4,3,59,102,118,16762,16764,16767,1,963,59,1,962,59,1,962,4,8,59,100,101,103,108,110,112,114,16788,16790,16795,16806,16817,16828,16832,16838,1,8764,111,116,59,1,10858,4,2,59,113,16801,16803,1,8771,59,1,8771,4,2,59,69,16812,16814,1,10910,59,1,10912,4,2,59,69,16823,16825,1,10909,59,1,10911,101,59,1,8774,108,117,115,59,1,10788,97,114,114,59,1,10610,97,114,114,59,1,8592,4,4,97,101,105,116,16860,16883,16891,16904,4,2,108,115,16866,16878,108,115,101,116,109,105,110,117,115,59,1,8726,104,112,59,1,10803,112,97,114,115,108,59,1,10724,4,2,100,108,16897,16900,59,1,8739,101,59,1,8995,4,2,59,101,16910,16912,1,10922,4,2,59,115,16918,16920,1,10924,59,3,10924,65024,4,3,102,108,112,16932,16938,16958,116,99,121,59,1,1100,4,2,59,98,16944,16946,1,47,4,2,59,97,16952,16954,1,10692,114,59,1,9023,102,59,3,55349,56676,97,4,2,100,114,16970,16985,101,115,4,2,59,117,16978,16980,1,9824,105,116,59,1,9824,59,1,8741,4,3,99,115,117,16996,17028,17089,4,2,97,117,17002,17015,112,4,2,59,115,17009,17011,1,8851,59,3,8851,65024,112,4,2,59,115,17022,17024,1,8852,59,3,8852,65024,117,4,2,98,112,17035,17062,4,3,59,101,115,17043,17045,17048,1,8847,59,1,8849,101,116,4,2,59,101,17056,17058,1,8847,113,59,1,8849,4,3,59,101,115,17070,17072,17075,1,8848,59,1,8850,101,116,4,2,59,101,17083,17085,1,8848,113,59,1,8850,4,3,59,97,102,17097,17099,17112,1,9633,114,4,2,101,102,17106,17109,59,1,9633,59,1,9642,59,1,9642,97,114,114,59,1,8594,4,4,99,101,109,116,17131,17136,17142,17148,114,59,3,55349,56520,116,109,110,59,1,8726,105,108,101,59,1,8995,97,114,102,59,1,8902,4,2,97,114,17160,17172,114,4,2,59,102,17167,17169,1,9734,59,1,9733,4,2,97,110,17178,17202,105,103,104,116,4,2,101,112,17188,17197,112,115,105,108,111,110,59,1,1013,104,105,59,1,981,115,59,1,175,4,5,98,99,109,110,112,17218,17351,17420,17423,17427,4,9,59,69,100,101,109,110,112,114,115,17238,17240,17243,17248,17261,17267,17279,17285,17291,1,8834,59,1,10949,111,116,59,1,10941,4,2,59,100,17254,17256,1,8838,111,116,59,1,10947,117,108,116,59,1,10945,4,2,69,101,17273,17276,59,1,10955,59,1,8842,108,117,115,59,1,10943,97,114,114,59,1,10617,4,3,101,105,117,17299,17335,17339,116,4,3,59,101,110,17308,17310,17322,1,8834,113,4,2,59,113,17317,17319,1,8838,59,1,10949,101,113,4,2,59,113,17330,17332,1,8842,59,1,10955,109,59,1,10951,4,2,98,112,17345,17348,59,1,10965,59,1,10963,99,4,6,59,97,99,101,110,115,17366,17368,17376,17385,17389,17415,1,8827,112,112,114,111,120,59,1,10936,117,114,108,121,101,113,59,1,8829,113,59,1,10928,4,3,97,101,115,17397,17405,17410,112,112,114,111,120,59,1,10938,113,113,59,1,10934,105,109,59,1,8937,105,109,59,1,8831,59,1,8721,103,59,1,9834,4,13,49,50,51,59,69,100,101,104,108,109,110,112,115,17455,17462,17469,17476,17478,17481,17496,17509,17524,17530,17536,17548,17554,5,185,1,59,17460,1,185,5,178,1,59,17467,1,178,5,179,1,59,17474,1,179,1,8835,59,1,10950,4,2,111,115,17487,17491,116,59,1,10942,117,98,59,1,10968,4,2,59,100,17502,17504,1,8839,111,116,59,1,10948,115,4,2,111,117,17516,17520,108,59,1,10185,98,59,1,10967,97,114,114,59,1,10619,117,108,116,59,1,10946,4,2,69,101,17542,17545,59,1,10956,59,1,8843,108,117,115,59,1,10944,4,3,101,105,117,17562,17598,17602,116,4,3,59,101,110,17571,17573,17585,1,8835,113,4,2,59,113,17580,17582,1,8839,59,1,10950,101,113,4,2,59,113,17593,17595,1,8843,59,1,10956,109,59,1,10952,4,2,98,112,17608,17611,59,1,10964,59,1,10966,4,3,65,97,110,17622,17627,17650,114,114,59,1,8665,114,4,2,104,114,17634,17638,107,59,1,10534,4,2,59,111,17644,17646,1,8601,119,59,1,8601,119,97,114,59,1,10538,108,105,103,5,223,1,59,17664,1,223,4,13,97,98,99,100,101,102,104,105,111,112,114,115,119,17694,17709,17714,17737,17742,17749,17754,17860,17905,17957,17964,18090,18122,4,2,114,117,17700,17706,103,101,116,59,1,8982,59,1,964,114,107,59,1,9140,4,3,97,101,121,17722,17728,17734,114,111,110,59,1,357,100,105,108,59,1,355,59,1,1090,111,116,59,1,8411,108,114,101,99,59,1,8981,114,59,3,55349,56625,4,4,101,105,107,111,17764,17805,17836,17851,4,2,114,116,17770,17786,101,4,2,52,102,17777,17780,59,1,8756,111,114,101,59,1,8756,97,4,3,59,115,118,17795,17797,17802,1,952,121,109,59,1,977,59,1,977,4,2,99,110,17811,17831,107,4,2,97,115,17818,17826,112,112,114,111,120,59,1,8776,105,109,59,1,8764,115,112,59,1,8201,4,2,97,115,17842,17846,112,59,1,8776,105,109,59,1,8764,114,110,5,254,1,59,17858,1,254,4,3,108,109,110,17868,17873,17901,100,101,59,1,732,101,115,5,215,3,59,98,100,17884,17886,17898,1,215,4,2,59,97,17892,17894,1,8864,114,59,1,10801,59,1,10800,116,59,1,8749,4,3,101,112,115,17913,17917,17953,97,59,1,10536,4,4,59,98,99,102,17927,17929,17934,17939,1,8868,111,116,59,1,9014,105,114,59,1,10993,4,2,59,111,17945,17948,3,55349,56677,114,107,59,1,10970,97,59,1,10537,114,105,109,101,59,1,8244,4,3,97,105,112,17972,17977,18082,100,101,59,1,8482,4,7,97,100,101,109,112,115,116,17993,18051,18056,18059,18066,18072,18076,110,103,108,101,4,5,59,100,108,113,114,18009,18011,18017,18032,18035,1,9653,111,119,110,59,1,9663,101,102,116,4,2,59,101,18026,18028,1,9667,113,59,1,8884,59,1,8796,105,103,104,116,4,2,59,101,18045,18047,1,9657,113,59,1,8885,111,116,59,1,9708,59,1,8796,105,110,117,115,59,1,10810,108,117,115,59,1,10809,98,59,1,10701,105,109,101,59,1,10811,101,122,105,117,109,59,1,9186,4,3,99,104,116,18098,18111,18116,4,2,114,121,18104,18108,59,3,55349,56521,59,1,1094,99,121,59,1,1115,114,111,107,59,1,359,4,2,105,111,18128,18133,120,116,59,1,8812,104,101,97,100,4,2,108,114,18143,18154,101,102,116,97,114,114,111,119,59,1,8606,105,103,104,116,97,114,114,111,119,59,1,8608,4,18,65,72,97,98,99,100,102,103,104,108,109,111,112,114,115,116,117,119,18204,18209,18214,18234,18250,18268,18292,18308,18319,18343,18379,18397,18413,18504,18547,18553,18584,18603,114,114,59,1,8657,97,114,59,1,10595,4,2,99,114,18220,18230,117,116,101,5,250,1,59,18228,1,250,114,59,1,8593,114,4,2,99,101,18241,18245,121,59,1,1118,118,101,59,1,365,4,2,105,121,18256,18265,114,99,5,251,1,59,18263,1,251,59,1,1091,4,3,97,98,104,18276,18281,18287,114,114,59,1,8645,108,97,99,59,1,369,97,114,59,1,10606,4,2,105,114,18298,18304,115,104,116,59,1,10622,59,3,55349,56626,114,97,118,101,5,249,1,59,18317,1,249,4,2,97,98,18325,18338,114,4,2,108,114,18332,18335,59,1,8639,59,1,8638,108,107,59,1,9600,4,2,99,116,18349,18374,4,2,111,114,18355,18369,114,110,4,2,59,101,18363,18365,1,8988,114,59,1,8988,111,112,59,1,8975,114,105,59,1,9720,4,2,97,108,18385,18390,99,114,59,1,363,5,168,1,59,18395,1,168,4,2,103,112,18403,18408,111,110,59,1,371,102,59,3,55349,56678,4,6,97,100,104,108,115,117,18427,18434,18445,18470,18475,18494,114,114,111,119,59,1,8593,111,119,110,97,114,114,111,119,59,1,8597,97,114,112,111,111,110,4,2,108,114,18457,18463,101,102,116,59,1,8639,105,103,104,116,59,1,8638,117,115,59,1,8846,105,4,3,59,104,108,18484,18486,18489,1,965,59,1,978,111,110,59,1,965,112,97,114,114,111,119,115,59,1,8648,4,3,99,105,116,18512,18537,18542,4,2,111,114,18518,18532,114,110,4,2,59,101,18526,18528,1,8989,114,59,1,8989,111,112,59,1,8974,110,103,59,1,367,114,105,59,1,9721,99,114,59,3,55349,56522,4,3,100,105,114,18561,18566,18572,111,116,59,1,8944,108,100,101,59,1,361,105,4,2,59,102,18579,18581,1,9653,59,1,9652,4,2,97,109,18590,18595,114,114,59,1,8648,108,5,252,1,59,18601,1,252,97,110,103,108,101,59,1,10663,4,15,65,66,68,97,99,100,101,102,108,110,111,112,114,115,122,18643,18648,18661,18667,18847,18851,18857,18904,18909,18915,18931,18937,18943,18949,18996,114,114,59,1,8661,97,114,4,2,59,118,18656,18658,1,10984,59,1,10985,97,115,104,59,1,8872,4,2,110,114,18673,18679,103,114,116,59,1,10652,4,7,101,107,110,112,114,115,116,18695,18704,18711,18720,18742,18754,18810,112,115,105,108,111,110,59,1,1013,97,112,112,97,59,1,1008,111,116,104,105,110,103,59,1,8709,4,3,104,105,114,18728,18732,18735,105,59,1,981,59,1,982,111,112,116,111,59,1,8733,4,2,59,104,18748,18750,1,8597,111,59,1,1009,4,2,105,117,18760,18766,103,109,97,59,1,962,4,2,98,112,18772,18791,115,101,116,110,101,113,4,2,59,113,18784,18787,3,8842,65024,59,3,10955,65024,115,101,116,110,101,113,4,2,59,113,18803,18806,3,8843,65024,59,3,10956,65024,4,2,104,114,18816,18822,101,116,97,59,1,977,105,97,110,103,108,101,4,2,108,114,18834,18840,101,102,116,59,1,8882,105,103,104,116,59,1,8883,121,59,1,1074,97,115,104,59,1,8866,4,3,101,108,114,18865,18884,18890,4,3,59,98,101,18873,18875,18880,1,8744,97,114,59,1,8891,113,59,1,8794,108,105,112,59,1,8942,4,2,98,116,18896,18901,97,114,59,1,124,59,1,124,114,59,3,55349,56627,116,114,105,59,1,8882,115,117,4,2,98,112,18923,18927,59,3,8834,8402,59,3,8835,8402,112,102,59,3,55349,56679,114,111,112,59,1,8733,116,114,105,59,1,8883,4,2,99,117,18955,18960,114,59,3,55349,56523,4,2,98,112,18966,18981,110,4,2,69,101,18973,18977,59,3,10955,65024,59,3,8842,65024,110,4,2,69,101,18988,18992,59,3,10956,65024,59,3,8843,65024,105,103,122,97,103,59,1,10650,4,7,99,101,102,111,112,114,115,19020,19026,19061,19066,19072,19075,19089,105,114,99,59,1,373,4,2,100,105,19032,19055,4,2,98,103,19038,19043,97,114,59,1,10847,101,4,2,59,113,19050,19052,1,8743,59,1,8793,101,114,112,59,1,8472,114,59,3,55349,56628,112,102,59,3,55349,56680,59,1,8472,4,2,59,101,19081,19083,1,8768,97,116,104,59,1,8768,99,114,59,3,55349,56524,4,14,99,100,102,104,105,108,109,110,111,114,115,117,118,119,19125,19146,19152,19157,19173,19176,19192,19197,19202,19236,19252,19269,19286,19291,4,3,97,105,117,19133,19137,19142,112,59,1,8898,114,99,59,1,9711,112,59,1,8899,116,114,105,59,1,9661,114,59,3,55349,56629,4,2,65,97,19163,19168,114,114,59,1,10234,114,114,59,1,10231,59,1,958,4,2,65,97,19182,19187,114,114,59,1,10232,114,114,59,1,10229,97,112,59,1,10236,105,115,59,1,8955,4,3,100,112,116,19210,19215,19230,111,116,59,1,10752,4,2,102,108,19221,19225,59,3,55349,56681,117,115,59,1,10753,105,109,101,59,1,10754,4,2,65,97,19242,19247,114,114,59,1,10233,114,114,59,1,10230,4,2,99,113,19258,19263,114,59,3,55349,56525,99,117,112,59,1,10758,4,2,112,116,19275,19281,108,117,115,59,1,10756,114,105,59,1,9651,101,101,59,1,8897,101,100,103,101,59,1,8896,4,8,97,99,101,102,105,111,115,117,19316,19335,19349,19357,19362,19367,19373,19379,99,4,2,117,121,19323,19332,116,101,5,253,1,59,19330,1,253,59,1,1103,4,2,105,121,19341,19346,114,99,59,1,375,59,1,1099,110,5,165,1,59,19355,1,165,114,59,3,55349,56630,99,121,59,1,1111,112,102,59,3,55349,56682,99,114,59,3,55349,56526,4,2,99,109,19385,19389,121,59,1,1102,108,5,255,1,59,19395,1,255,4,10,97,99,100,101,102,104,105,111,115,119,19419,19426,19441,19446,19462,19467,19472,19480,19486,19492,99,117,116,101,59,1,378,4,2,97,121,19432,19438,114,111,110,59,1,382,59,1,1079,111,116,59,1,380,4,2,101,116,19452,19458,116,114,102,59,1,8488,97,59,1,950,114,59,3,55349,56631,99,121,59,1,1078,103,114,97,114,114,59,1,8669,112,102,59,3,55349,56683,99,114,59,3,55349,56527,4,2,106,110,19498,19501,59,1,8205,106,59,1,8204]);

/***/ }),
/* 81 */
/*!**************************************************************!*\
  !*** ./node_modules/parse5/lib/parser/open-element-stack.js ***!
  \**************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


const HTML = __webpack_require__(/*! ../common/html */ 82);

//Aliases
const $ = HTML.TAG_NAMES;
const NS = HTML.NAMESPACES;

//Element utils

//OPTIMIZATION: Integer comparisons are low-cost, so we can use very fast tag name length filters here.
//It's faster than using dictionary.
function isImpliedEndTagRequired(tn) {
    switch (tn.length) {
        case 1:
            return tn === $.P;

        case 2:
            return tn === $.RB || tn === $.RP || tn === $.RT || tn === $.DD || tn === $.DT || tn === $.LI;

        case 3:
            return tn === $.RTC;

        case 6:
            return tn === $.OPTION;

        case 8:
            return tn === $.OPTGROUP;
    }

    return false;
}

function isImpliedEndTagRequiredThoroughly(tn) {
    switch (tn.length) {
        case 1:
            return tn === $.P;

        case 2:
            return (
                tn === $.RB ||
                tn === $.RP ||
                tn === $.RT ||
                tn === $.DD ||
                tn === $.DT ||
                tn === $.LI ||
                tn === $.TD ||
                tn === $.TH ||
                tn === $.TR
            );

        case 3:
            return tn === $.RTC;

        case 5:
            return tn === $.TBODY || tn === $.TFOOT || tn === $.THEAD;

        case 6:
            return tn === $.OPTION;

        case 7:
            return tn === $.CAPTION;

        case 8:
            return tn === $.OPTGROUP || tn === $.COLGROUP;
    }

    return false;
}

function isScopingElement(tn, ns) {
    switch (tn.length) {
        case 2:
            if (tn === $.TD || tn === $.TH) {
                return ns === NS.HTML;
            } else if (tn === $.MI || tn === $.MO || tn === $.MN || tn === $.MS) {
                return ns === NS.MATHML;
            }

            break;

        case 4:
            if (tn === $.HTML) {
                return ns === NS.HTML;
            } else if (tn === $.DESC) {
                return ns === NS.SVG;
            }

            break;

        case 5:
            if (tn === $.TABLE) {
                return ns === NS.HTML;
            } else if (tn === $.MTEXT) {
                return ns === NS.MATHML;
            } else if (tn === $.TITLE) {
                return ns === NS.SVG;
            }

            break;

        case 6:
            return (tn === $.APPLET || tn === $.OBJECT) && ns === NS.HTML;

        case 7:
            return (tn === $.CAPTION || tn === $.MARQUEE) && ns === NS.HTML;

        case 8:
            return tn === $.TEMPLATE && ns === NS.HTML;

        case 13:
            return tn === $.FOREIGN_OBJECT && ns === NS.SVG;

        case 14:
            return tn === $.ANNOTATION_XML && ns === NS.MATHML;
    }

    return false;
}

//Stack of open elements
class OpenElementStack {
    constructor(document, treeAdapter) {
        this.stackTop = -1;
        this.items = [];
        this.current = document;
        this.currentTagName = null;
        this.currentTmplContent = null;
        this.tmplCount = 0;
        this.treeAdapter = treeAdapter;
    }

    //Index of element
    _indexOf(element) {
        let idx = -1;

        for (let i = this.stackTop; i >= 0; i--) {
            if (this.items[i] === element) {
                idx = i;
                break;
            }
        }
        return idx;
    }

    //Update current element
    _isInTemplate() {
        return this.currentTagName === $.TEMPLATE && this.treeAdapter.getNamespaceURI(this.current) === NS.HTML;
    }

    _updateCurrentElement() {
        this.current = this.items[this.stackTop];
        this.currentTagName = this.current && this.treeAdapter.getTagName(this.current);

        this.currentTmplContent = this._isInTemplate() ? this.treeAdapter.getTemplateContent(this.current) : null;
    }

    //Mutations
    push(element) {
        this.items[++this.stackTop] = element;
        this._updateCurrentElement();

        if (this._isInTemplate()) {
            this.tmplCount++;
        }
    }

    pop() {
        this.stackTop--;

        if (this.tmplCount > 0 && this._isInTemplate()) {
            this.tmplCount--;
        }

        this._updateCurrentElement();
    }

    replace(oldElement, newElement) {
        const idx = this._indexOf(oldElement);

        this.items[idx] = newElement;

        if (idx === this.stackTop) {
            this._updateCurrentElement();
        }
    }

    insertAfter(referenceElement, newElement) {
        const insertionIdx = this._indexOf(referenceElement) + 1;

        this.items.splice(insertionIdx, 0, newElement);

        if (insertionIdx === ++this.stackTop) {
            this._updateCurrentElement();
        }
    }

    popUntilTagNamePopped(tagName) {
        while (this.stackTop > -1) {
            const tn = this.currentTagName;
            const ns = this.treeAdapter.getNamespaceURI(this.current);

            this.pop();

            if (tn === tagName && ns === NS.HTML) {
                break;
            }
        }
    }

    popUntilElementPopped(element) {
        while (this.stackTop > -1) {
            const poppedElement = this.current;

            this.pop();

            if (poppedElement === element) {
                break;
            }
        }
    }

    popUntilNumberedHeaderPopped() {
        while (this.stackTop > -1) {
            const tn = this.currentTagName;
            const ns = this.treeAdapter.getNamespaceURI(this.current);

            this.pop();

            if (
                tn === $.H1 ||
                tn === $.H2 ||
                tn === $.H3 ||
                tn === $.H4 ||
                tn === $.H5 ||
                (tn === $.H6 && ns === NS.HTML)
            ) {
                break;
            }
        }
    }

    popUntilTableCellPopped() {
        while (this.stackTop > -1) {
            const tn = this.currentTagName;
            const ns = this.treeAdapter.getNamespaceURI(this.current);

            this.pop();

            if (tn === $.TD || (tn === $.TH && ns === NS.HTML)) {
                break;
            }
        }
    }

    popAllUpToHtmlElement() {
        //NOTE: here we assume that root <html> element is always first in the open element stack, so
        //we perform this fast stack clean up.
        this.stackTop = 0;
        this._updateCurrentElement();
    }

    clearBackToTableContext() {
        while (
            (this.currentTagName !== $.TABLE && this.currentTagName !== $.TEMPLATE && this.currentTagName !== $.HTML) ||
            this.treeAdapter.getNamespaceURI(this.current) !== NS.HTML
        ) {
            this.pop();
        }
    }

    clearBackToTableBodyContext() {
        while (
            (this.currentTagName !== $.TBODY &&
                this.currentTagName !== $.TFOOT &&
                this.currentTagName !== $.THEAD &&
                this.currentTagName !== $.TEMPLATE &&
                this.currentTagName !== $.HTML) ||
            this.treeAdapter.getNamespaceURI(this.current) !== NS.HTML
        ) {
            this.pop();
        }
    }

    clearBackToTableRowContext() {
        while (
            (this.currentTagName !== $.TR && this.currentTagName !== $.TEMPLATE && this.currentTagName !== $.HTML) ||
            this.treeAdapter.getNamespaceURI(this.current) !== NS.HTML
        ) {
            this.pop();
        }
    }

    remove(element) {
        for (let i = this.stackTop; i >= 0; i--) {
            if (this.items[i] === element) {
                this.items.splice(i, 1);
                this.stackTop--;
                this._updateCurrentElement();
                break;
            }
        }
    }

    //Search
    tryPeekProperlyNestedBodyElement() {
        //Properly nested <body> element (should be second element in stack).
        const element = this.items[1];

        return element && this.treeAdapter.getTagName(element) === $.BODY ? element : null;
    }

    contains(element) {
        return this._indexOf(element) > -1;
    }

    getCommonAncestor(element) {
        let elementIdx = this._indexOf(element);

        return --elementIdx >= 0 ? this.items[elementIdx] : null;
    }

    isRootHtmlElementCurrent() {
        return this.stackTop === 0 && this.currentTagName === $.HTML;
    }

    //Element in scope
    hasInScope(tagName) {
        for (let i = this.stackTop; i >= 0; i--) {
            const tn = this.treeAdapter.getTagName(this.items[i]);
            const ns = this.treeAdapter.getNamespaceURI(this.items[i]);

            if (tn === tagName && ns === NS.HTML) {
                return true;
            }

            if (isScopingElement(tn, ns)) {
                return false;
            }
        }

        return true;
    }

    hasNumberedHeaderInScope() {
        for (let i = this.stackTop; i >= 0; i--) {
            const tn = this.treeAdapter.getTagName(this.items[i]);
            const ns = this.treeAdapter.getNamespaceURI(this.items[i]);

            if (
                (tn === $.H1 || tn === $.H2 || tn === $.H3 || tn === $.H4 || tn === $.H5 || tn === $.H6) &&
                ns === NS.HTML
            ) {
                return true;
            }

            if (isScopingElement(tn, ns)) {
                return false;
            }
        }

        return true;
    }

    hasInListItemScope(tagName) {
        for (let i = this.stackTop; i >= 0; i--) {
            const tn = this.treeAdapter.getTagName(this.items[i]);
            const ns = this.treeAdapter.getNamespaceURI(this.items[i]);

            if (tn === tagName && ns === NS.HTML) {
                return true;
            }

            if (((tn === $.UL || tn === $.OL) && ns === NS.HTML) || isScopingElement(tn, ns)) {
                return false;
            }
        }

        return true;
    }

    hasInButtonScope(tagName) {
        for (let i = this.stackTop; i >= 0; i--) {
            const tn = this.treeAdapter.getTagName(this.items[i]);
            const ns = this.treeAdapter.getNamespaceURI(this.items[i]);

            if (tn === tagName && ns === NS.HTML) {
                return true;
            }

            if ((tn === $.BUTTON && ns === NS.HTML) || isScopingElement(tn, ns)) {
                return false;
            }
        }

        return true;
    }

    hasInTableScope(tagName) {
        for (let i = this.stackTop; i >= 0; i--) {
            const tn = this.treeAdapter.getTagName(this.items[i]);
            const ns = this.treeAdapter.getNamespaceURI(this.items[i]);

            if (ns !== NS.HTML) {
                continue;
            }

            if (tn === tagName) {
                return true;
            }

            if (tn === $.TABLE || tn === $.TEMPLATE || tn === $.HTML) {
                return false;
            }
        }

        return true;
    }

    hasTableBodyContextInTableScope() {
        for (let i = this.stackTop; i >= 0; i--) {
            const tn = this.treeAdapter.getTagName(this.items[i]);
            const ns = this.treeAdapter.getNamespaceURI(this.items[i]);

            if (ns !== NS.HTML) {
                continue;
            }

            if (tn === $.TBODY || tn === $.THEAD || tn === $.TFOOT) {
                return true;
            }

            if (tn === $.TABLE || tn === $.HTML) {
                return false;
            }
        }

        return true;
    }

    hasInSelectScope(tagName) {
        for (let i = this.stackTop; i >= 0; i--) {
            const tn = this.treeAdapter.getTagName(this.items[i]);
            const ns = this.treeAdapter.getNamespaceURI(this.items[i]);

            if (ns !== NS.HTML) {
                continue;
            }

            if (tn === tagName) {
                return true;
            }

            if (tn !== $.OPTION && tn !== $.OPTGROUP) {
                return false;
            }
        }

        return true;
    }

    //Implied end tags
    generateImpliedEndTags() {
        while (isImpliedEndTagRequired(this.currentTagName)) {
            this.pop();
        }
    }

    generateImpliedEndTagsThoroughly() {
        while (isImpliedEndTagRequiredThoroughly(this.currentTagName)) {
            this.pop();
        }
    }

    generateImpliedEndTagsWithExclusion(exclusionTagName) {
        while (isImpliedEndTagRequired(this.currentTagName) && this.currentTagName !== exclusionTagName) {
            this.pop();
        }
    }
}

module.exports = OpenElementStack;


/***/ }),
/* 82 */
/*!************************************************!*\
  !*** ./node_modules/parse5/lib/common/html.js ***!
  \************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


const NS = (exports.NAMESPACES = {
    HTML: 'http://www.w3.org/1999/xhtml',
    MATHML: 'http://www.w3.org/1998/Math/MathML',
    SVG: 'http://www.w3.org/2000/svg',
    XLINK: 'http://www.w3.org/1999/xlink',
    XML: 'http://www.w3.org/XML/1998/namespace',
    XMLNS: 'http://www.w3.org/2000/xmlns/'
});

exports.ATTRS = {
    TYPE: 'type',
    ACTION: 'action',
    ENCODING: 'encoding',
    PROMPT: 'prompt',
    NAME: 'name',
    COLOR: 'color',
    FACE: 'face',
    SIZE: 'size'
};

exports.DOCUMENT_MODE = {
    NO_QUIRKS: 'no-quirks',
    QUIRKS: 'quirks',
    LIMITED_QUIRKS: 'limited-quirks'
};

const $ = (exports.TAG_NAMES = {
    A: 'a',
    ADDRESS: 'address',
    ANNOTATION_XML: 'annotation-xml',
    APPLET: 'applet',
    AREA: 'area',
    ARTICLE: 'article',
    ASIDE: 'aside',

    B: 'b',
    BASE: 'base',
    BASEFONT: 'basefont',
    BGSOUND: 'bgsound',
    BIG: 'big',
    BLOCKQUOTE: 'blockquote',
    BODY: 'body',
    BR: 'br',
    BUTTON: 'button',

    CAPTION: 'caption',
    CENTER: 'center',
    CODE: 'code',
    COL: 'col',
    COLGROUP: 'colgroup',

    DD: 'dd',
    DESC: 'desc',
    DETAILS: 'details',
    DIALOG: 'dialog',
    DIR: 'dir',
    DIV: 'div',
    DL: 'dl',
    DT: 'dt',

    EM: 'em',
    EMBED: 'embed',

    FIELDSET: 'fieldset',
    FIGCAPTION: 'figcaption',
    FIGURE: 'figure',
    FONT: 'font',
    FOOTER: 'footer',
    FOREIGN_OBJECT: 'foreignObject',
    FORM: 'form',
    FRAME: 'frame',
    FRAMESET: 'frameset',

    H1: 'h1',
    H2: 'h2',
    H3: 'h3',
    H4: 'h4',
    H5: 'h5',
    H6: 'h6',
    HEAD: 'head',
    HEADER: 'header',
    HGROUP: 'hgroup',
    HR: 'hr',
    HTML: 'html',

    I: 'i',
    IMG: 'img',
    IMAGE: 'image',
    INPUT: 'input',
    IFRAME: 'iframe',

    KEYGEN: 'keygen',

    LABEL: 'label',
    LI: 'li',
    LINK: 'link',
    LISTING: 'listing',

    MAIN: 'main',
    MALIGNMARK: 'malignmark',
    MARQUEE: 'marquee',
    MATH: 'math',
    MENU: 'menu',
    META: 'meta',
    MGLYPH: 'mglyph',
    MI: 'mi',
    MO: 'mo',
    MN: 'mn',
    MS: 'ms',
    MTEXT: 'mtext',

    NAV: 'nav',
    NOBR: 'nobr',
    NOFRAMES: 'noframes',
    NOEMBED: 'noembed',
    NOSCRIPT: 'noscript',

    OBJECT: 'object',
    OL: 'ol',
    OPTGROUP: 'optgroup',
    OPTION: 'option',

    P: 'p',
    PARAM: 'param',
    PLAINTEXT: 'plaintext',
    PRE: 'pre',

    RB: 'rb',
    RP: 'rp',
    RT: 'rt',
    RTC: 'rtc',
    RUBY: 'ruby',

    S: 's',
    SCRIPT: 'script',
    SECTION: 'section',
    SELECT: 'select',
    SOURCE: 'source',
    SMALL: 'small',
    SPAN: 'span',
    STRIKE: 'strike',
    STRONG: 'strong',
    STYLE: 'style',
    SUB: 'sub',
    SUMMARY: 'summary',
    SUP: 'sup',

    TABLE: 'table',
    TBODY: 'tbody',
    TEMPLATE: 'template',
    TEXTAREA: 'textarea',
    TFOOT: 'tfoot',
    TD: 'td',
    TH: 'th',
    THEAD: 'thead',
    TITLE: 'title',
    TR: 'tr',
    TRACK: 'track',
    TT: 'tt',

    U: 'u',
    UL: 'ul',

    SVG: 'svg',

    VAR: 'var',

    WBR: 'wbr',

    XMP: 'xmp'
});

exports.SPECIAL_ELEMENTS = {
    [NS.HTML]: {
        [$.ADDRESS]: true,
        [$.APPLET]: true,
        [$.AREA]: true,
        [$.ARTICLE]: true,
        [$.ASIDE]: true,
        [$.BASE]: true,
        [$.BASEFONT]: true,
        [$.BGSOUND]: true,
        [$.BLOCKQUOTE]: true,
        [$.BODY]: true,
        [$.BR]: true,
        [$.BUTTON]: true,
        [$.CAPTION]: true,
        [$.CENTER]: true,
        [$.COL]: true,
        [$.COLGROUP]: true,
        [$.DD]: true,
        [$.DETAILS]: true,
        [$.DIR]: true,
        [$.DIV]: true,
        [$.DL]: true,
        [$.DT]: true,
        [$.EMBED]: true,
        [$.FIELDSET]: true,
        [$.FIGCAPTION]: true,
        [$.FIGURE]: true,
        [$.FOOTER]: true,
        [$.FORM]: true,
        [$.FRAME]: true,
        [$.FRAMESET]: true,
        [$.H1]: true,
        [$.H2]: true,
        [$.H3]: true,
        [$.H4]: true,
        [$.H5]: true,
        [$.H6]: true,
        [$.HEAD]: true,
        [$.HEADER]: true,
        [$.HGROUP]: true,
        [$.HR]: true,
        [$.HTML]: true,
        [$.IFRAME]: true,
        [$.IMG]: true,
        [$.INPUT]: true,
        [$.LI]: true,
        [$.LINK]: true,
        [$.LISTING]: true,
        [$.MAIN]: true,
        [$.MARQUEE]: true,
        [$.MENU]: true,
        [$.META]: true,
        [$.NAV]: true,
        [$.NOEMBED]: true,
        [$.NOFRAMES]: true,
        [$.NOSCRIPT]: true,
        [$.OBJECT]: true,
        [$.OL]: true,
        [$.P]: true,
        [$.PARAM]: true,
        [$.PLAINTEXT]: true,
        [$.PRE]: true,
        [$.SCRIPT]: true,
        [$.SECTION]: true,
        [$.SELECT]: true,
        [$.SOURCE]: true,
        [$.STYLE]: true,
        [$.SUMMARY]: true,
        [$.TABLE]: true,
        [$.TBODY]: true,
        [$.TD]: true,
        [$.TEMPLATE]: true,
        [$.TEXTAREA]: true,
        [$.TFOOT]: true,
        [$.TH]: true,
        [$.THEAD]: true,
        [$.TITLE]: true,
        [$.TR]: true,
        [$.TRACK]: true,
        [$.UL]: true,
        [$.WBR]: true,
        [$.XMP]: true
    },
    [NS.MATHML]: {
        [$.MI]: true,
        [$.MO]: true,
        [$.MN]: true,
        [$.MS]: true,
        [$.MTEXT]: true,
        [$.ANNOTATION_XML]: true
    },
    [NS.SVG]: {
        [$.TITLE]: true,
        [$.FOREIGN_OBJECT]: true,
        [$.DESC]: true
    }
};


/***/ }),
/* 83 */
/*!*******************************************************************!*\
  !*** ./node_modules/parse5/lib/parser/formatting-element-list.js ***!
  \*******************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


//Const
const NOAH_ARK_CAPACITY = 3;

//List of formatting elements
class FormattingElementList {
    constructor(treeAdapter) {
        this.length = 0;
        this.entries = [];
        this.treeAdapter = treeAdapter;
        this.bookmark = null;
    }

    //Noah Ark's condition
    //OPTIMIZATION: at first we try to find possible candidates for exclusion using
    //lightweight heuristics without thorough attributes check.
    _getNoahArkConditionCandidates(newElement) {
        const candidates = [];

        if (this.length >= NOAH_ARK_CAPACITY) {
            const neAttrsLength = this.treeAdapter.getAttrList(newElement).length;
            const neTagName = this.treeAdapter.getTagName(newElement);
            const neNamespaceURI = this.treeAdapter.getNamespaceURI(newElement);

            for (let i = this.length - 1; i >= 0; i--) {
                const entry = this.entries[i];

                if (entry.type === FormattingElementList.MARKER_ENTRY) {
                    break;
                }

                const element = entry.element;
                const elementAttrs = this.treeAdapter.getAttrList(element);

                const isCandidate =
                    this.treeAdapter.getTagName(element) === neTagName &&
                    this.treeAdapter.getNamespaceURI(element) === neNamespaceURI &&
                    elementAttrs.length === neAttrsLength;

                if (isCandidate) {
                    candidates.push({ idx: i, attrs: elementAttrs });
                }
            }
        }

        return candidates.length < NOAH_ARK_CAPACITY ? [] : candidates;
    }

    _ensureNoahArkCondition(newElement) {
        const candidates = this._getNoahArkConditionCandidates(newElement);
        let cLength = candidates.length;

        if (cLength) {
            const neAttrs = this.treeAdapter.getAttrList(newElement);
            const neAttrsLength = neAttrs.length;
            const neAttrsMap = Object.create(null);

            //NOTE: build attrs map for the new element so we can perform fast lookups
            for (let i = 0; i < neAttrsLength; i++) {
                const neAttr = neAttrs[i];

                neAttrsMap[neAttr.name] = neAttr.value;
            }

            for (let i = 0; i < neAttrsLength; i++) {
                for (let j = 0; j < cLength; j++) {
                    const cAttr = candidates[j].attrs[i];

                    if (neAttrsMap[cAttr.name] !== cAttr.value) {
                        candidates.splice(j, 1);
                        cLength--;
                    }

                    if (candidates.length < NOAH_ARK_CAPACITY) {
                        return;
                    }
                }
            }

            //NOTE: remove bottommost candidates until Noah's Ark condition will not be met
            for (let i = cLength - 1; i >= NOAH_ARK_CAPACITY - 1; i--) {
                this.entries.splice(candidates[i].idx, 1);
                this.length--;
            }
        }
    }

    //Mutations
    insertMarker() {
        this.entries.push({ type: FormattingElementList.MARKER_ENTRY });
        this.length++;
    }

    pushElement(element, token) {
        this._ensureNoahArkCondition(element);

        this.entries.push({
            type: FormattingElementList.ELEMENT_ENTRY,
            element: element,
            token: token
        });

        this.length++;
    }

    insertElementAfterBookmark(element, token) {
        let bookmarkIdx = this.length - 1;

        for (; bookmarkIdx >= 0; bookmarkIdx--) {
            if (this.entries[bookmarkIdx] === this.bookmark) {
                break;
            }
        }

        this.entries.splice(bookmarkIdx + 1, 0, {
            type: FormattingElementList.ELEMENT_ENTRY,
            element: element,
            token: token
        });

        this.length++;
    }

    removeEntry(entry) {
        for (let i = this.length - 1; i >= 0; i--) {
            if (this.entries[i] === entry) {
                this.entries.splice(i, 1);
                this.length--;
                break;
            }
        }
    }

    clearToLastMarker() {
        while (this.length) {
            const entry = this.entries.pop();

            this.length--;

            if (entry.type === FormattingElementList.MARKER_ENTRY) {
                break;
            }
        }
    }

    //Search
    getElementEntryInScopeWithTagName(tagName) {
        for (let i = this.length - 1; i >= 0; i--) {
            const entry = this.entries[i];

            if (entry.type === FormattingElementList.MARKER_ENTRY) {
                return null;
            }

            if (this.treeAdapter.getTagName(entry.element) === tagName) {
                return entry;
            }
        }

        return null;
    }

    getElementEntry(element) {
        for (let i = this.length - 1; i >= 0; i--) {
            const entry = this.entries[i];

            if (entry.type === FormattingElementList.ELEMENT_ENTRY && entry.element === element) {
                return entry;
            }
        }

        return null;
    }
}

//Entry types
FormattingElementList.MARKER_ENTRY = 'MARKER_ENTRY';
FormattingElementList.ELEMENT_ENTRY = 'ELEMENT_ENTRY';

module.exports = FormattingElementList;


/***/ }),
/* 84 */
/*!**************************************************************************!*\
  !*** ./node_modules/parse5/lib/extensions/location-info/parser-mixin.js ***!
  \**************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


const Mixin = __webpack_require__(/*! ../../utils/mixin */ 85);
const Tokenizer = __webpack_require__(/*! ../../tokenizer */ 76);
const LocationInfoTokenizerMixin = __webpack_require__(/*! ./tokenizer-mixin */ 86);
const LocationInfoOpenElementStackMixin = __webpack_require__(/*! ./open-element-stack-mixin */ 88);
const HTML = __webpack_require__(/*! ../../common/html */ 82);

//Aliases
const $ = HTML.TAG_NAMES;

class LocationInfoParserMixin extends Mixin {
    constructor(parser) {
        super(parser);

        this.parser = parser;
        this.treeAdapter = this.parser.treeAdapter;
        this.posTracker = null;
        this.lastStartTagToken = null;
        this.lastFosterParentingLocation = null;
        this.currentToken = null;
    }

    _setStartLocation(element) {
        let loc = null;

        if (this.lastStartTagToken) {
            loc = Object.assign({}, this.lastStartTagToken.location);
            loc.startTag = this.lastStartTagToken.location;
        }

        this.treeAdapter.setNodeSourceCodeLocation(element, loc);
    }

    _setEndLocation(element, closingToken) {
        const loc = this.treeAdapter.getNodeSourceCodeLocation(element);

        if (loc) {
            if (closingToken.location) {
                const ctLoc = closingToken.location;
                const tn = this.treeAdapter.getTagName(element);

                // NOTE: For cases like <p> <p> </p> - First 'p' closes without a closing
                // tag and for cases like <td> <p> </td> - 'p' closes without a closing tag.
                const isClosingEndTag = closingToken.type === Tokenizer.END_TAG_TOKEN && tn === closingToken.tagName;

                if (isClosingEndTag) {
                    loc.endTag = Object.assign({}, ctLoc);
                    loc.endLine = ctLoc.endLine;
                    loc.endCol = ctLoc.endCol;
                    loc.endOffset = ctLoc.endOffset;
                } else {
                    loc.endLine = ctLoc.startLine;
                    loc.endCol = ctLoc.startCol;
                    loc.endOffset = ctLoc.startOffset;
                }
            }
        }
    }

    _getOverriddenMethods(mxn, orig) {
        return {
            _bootstrap(document, fragmentContext) {
                orig._bootstrap.call(this, document, fragmentContext);

                mxn.lastStartTagToken = null;
                mxn.lastFosterParentingLocation = null;
                mxn.currentToken = null;

                const tokenizerMixin = Mixin.install(this.tokenizer, LocationInfoTokenizerMixin);

                mxn.posTracker = tokenizerMixin.posTracker;

                Mixin.install(this.openElements, LocationInfoOpenElementStackMixin, {
                    onItemPop: function(element) {
                        mxn._setEndLocation(element, mxn.currentToken);
                    }
                });
            },

            _runParsingLoop(scriptHandler) {
                orig._runParsingLoop.call(this, scriptHandler);

                // NOTE: generate location info for elements
                // that remains on open element stack
                for (let i = this.openElements.stackTop; i >= 0; i--) {
                    mxn._setEndLocation(this.openElements.items[i], mxn.currentToken);
                }
            },

            //Token processing
            _processTokenInForeignContent(token) {
                mxn.currentToken = token;
                orig._processTokenInForeignContent.call(this, token);
            },

            _processToken(token) {
                mxn.currentToken = token;
                orig._processToken.call(this, token);

                //NOTE: <body> and <html> are never popped from the stack, so we need to updated
                //their end location explicitly.
                const requireExplicitUpdate =
                    token.type === Tokenizer.END_TAG_TOKEN &&
                    (token.tagName === $.HTML || (token.tagName === $.BODY && this.openElements.hasInScope($.BODY)));

                if (requireExplicitUpdate) {
                    for (let i = this.openElements.stackTop; i >= 0; i--) {
                        const element = this.openElements.items[i];

                        if (this.treeAdapter.getTagName(element) === token.tagName) {
                            mxn._setEndLocation(element, token);
                            break;
                        }
                    }
                }
            },

            //Doctype
            _setDocumentType(token) {
                orig._setDocumentType.call(this, token);

                const documentChildren = this.treeAdapter.getChildNodes(this.document);
                const cnLength = documentChildren.length;

                for (let i = 0; i < cnLength; i++) {
                    const node = documentChildren[i];

                    if (this.treeAdapter.isDocumentTypeNode(node)) {
                        this.treeAdapter.setNodeSourceCodeLocation(node, token.location);
                        break;
                    }
                }
            },

            //Elements
            _attachElementToTree(element) {
                //NOTE: _attachElementToTree is called from _appendElement, _insertElement and _insertTemplate methods.
                //So we will use token location stored in this methods for the element.
                mxn._setStartLocation(element);
                mxn.lastStartTagToken = null;
                orig._attachElementToTree.call(this, element);
            },

            _appendElement(token, namespaceURI) {
                mxn.lastStartTagToken = token;
                orig._appendElement.call(this, token, namespaceURI);
            },

            _insertElement(token, namespaceURI) {
                mxn.lastStartTagToken = token;
                orig._insertElement.call(this, token, namespaceURI);
            },

            _insertTemplate(token) {
                mxn.lastStartTagToken = token;
                orig._insertTemplate.call(this, token);

                const tmplContent = this.treeAdapter.getTemplateContent(this.openElements.current);

                this.treeAdapter.setNodeSourceCodeLocation(tmplContent, null);
            },

            _insertFakeRootElement() {
                orig._insertFakeRootElement.call(this);
                this.treeAdapter.setNodeSourceCodeLocation(this.openElements.current, null);
            },

            //Comments
            _appendCommentNode(token, parent) {
                orig._appendCommentNode.call(this, token, parent);

                const children = this.treeAdapter.getChildNodes(parent);
                const commentNode = children[children.length - 1];

                this.treeAdapter.setNodeSourceCodeLocation(commentNode, token.location);
            },

            //Text
            _findFosterParentingLocation() {
                //NOTE: store last foster parenting location, so we will be able to find inserted text
                //in case of foster parenting
                mxn.lastFosterParentingLocation = orig._findFosterParentingLocation.call(this);

                return mxn.lastFosterParentingLocation;
            },

            _insertCharacters(token) {
                orig._insertCharacters.call(this, token);

                const hasFosterParent = this._shouldFosterParentOnInsertion();

                const parent =
                    (hasFosterParent && mxn.lastFosterParentingLocation.parent) ||
                    this.openElements.currentTmplContent ||
                    this.openElements.current;

                const siblings = this.treeAdapter.getChildNodes(parent);

                const textNodeIdx =
                    hasFosterParent && mxn.lastFosterParentingLocation.beforeElement
                        ? siblings.indexOf(mxn.lastFosterParentingLocation.beforeElement) - 1
                        : siblings.length - 1;

                const textNode = siblings[textNodeIdx];

                //NOTE: if we have location assigned by another token, then just update end position
                const tnLoc = this.treeAdapter.getNodeSourceCodeLocation(textNode);

                if (tnLoc) {
                    tnLoc.endLine = token.location.endLine;
                    tnLoc.endCol = token.location.endCol;
                    tnLoc.endOffset = token.location.endOffset;
                } else {
                    this.treeAdapter.setNodeSourceCodeLocation(textNode, token.location);
                }
            }
        };
    }
}

module.exports = LocationInfoParserMixin;


/***/ }),
/* 85 */
/*!************************************************!*\
  !*** ./node_modules/parse5/lib/utils/mixin.js ***!
  \************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


class Mixin {
    constructor(host) {
        const originalMethods = {};
        const overriddenMethods = this._getOverriddenMethods(this, originalMethods);

        for (const key of Object.keys(overriddenMethods)) {
            if (typeof overriddenMethods[key] === 'function') {
                originalMethods[key] = host[key];
                host[key] = overriddenMethods[key];
            }
        }
    }

    _getOverriddenMethods() {
        throw new Error('Not implemented');
    }
}

Mixin.install = function(host, Ctor, opts) {
    if (!host.__mixins) {
        host.__mixins = [];
    }

    for (let i = 0; i < host.__mixins.length; i++) {
        if (host.__mixins[i].constructor === Ctor) {
            return host.__mixins[i];
        }
    }

    const mixin = new Ctor(host, opts);

    host.__mixins.push(mixin);

    return mixin;
};

module.exports = Mixin;


/***/ }),
/* 86 */
/*!*****************************************************************************!*\
  !*** ./node_modules/parse5/lib/extensions/location-info/tokenizer-mixin.js ***!
  \*****************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


const Mixin = __webpack_require__(/*! ../../utils/mixin */ 85);
const Tokenizer = __webpack_require__(/*! ../../tokenizer */ 76);
const PositionTrackingPreprocessorMixin = __webpack_require__(/*! ../position-tracking/preprocessor-mixin */ 87);

class LocationInfoTokenizerMixin extends Mixin {
    constructor(tokenizer) {
        super(tokenizer);

        this.tokenizer = tokenizer;
        this.posTracker = Mixin.install(tokenizer.preprocessor, PositionTrackingPreprocessorMixin);
        this.currentAttrLocation = null;
        this.ctLoc = null;
    }

    _getCurrentLocation() {
        return {
            startLine: this.posTracker.line,
            startCol: this.posTracker.col,
            startOffset: this.posTracker.offset,
            endLine: -1,
            endCol: -1,
            endOffset: -1
        };
    }

    _attachCurrentAttrLocationInfo() {
        this.currentAttrLocation.endLine = this.posTracker.line;
        this.currentAttrLocation.endCol = this.posTracker.col;
        this.currentAttrLocation.endOffset = this.posTracker.offset;

        const currentToken = this.tokenizer.currentToken;
        const currentAttr = this.tokenizer.currentAttr;

        if (!currentToken.location.attrs) {
            currentToken.location.attrs = Object.create(null);
        }

        currentToken.location.attrs[currentAttr.name] = this.currentAttrLocation;
    }

    _getOverriddenMethods(mxn, orig) {
        const methods = {
            _createStartTagToken() {
                orig._createStartTagToken.call(this);
                this.currentToken.location = mxn.ctLoc;
            },

            _createEndTagToken() {
                orig._createEndTagToken.call(this);
                this.currentToken.location = mxn.ctLoc;
            },

            _createCommentToken() {
                orig._createCommentToken.call(this);
                this.currentToken.location = mxn.ctLoc;
            },

            _createDoctypeToken(initialName) {
                orig._createDoctypeToken.call(this, initialName);
                this.currentToken.location = mxn.ctLoc;
            },

            _createCharacterToken(type, ch) {
                orig._createCharacterToken.call(this, type, ch);
                this.currentCharacterToken.location = mxn.ctLoc;
            },

            _createEOFToken() {
                orig._createEOFToken.call(this);
                this.currentToken.location = mxn._getCurrentLocation();
            },

            _createAttr(attrNameFirstCh) {
                orig._createAttr.call(this, attrNameFirstCh);
                mxn.currentAttrLocation = mxn._getCurrentLocation();
            },

            _leaveAttrName(toState) {
                orig._leaveAttrName.call(this, toState);
                mxn._attachCurrentAttrLocationInfo();
            },

            _leaveAttrValue(toState) {
                orig._leaveAttrValue.call(this, toState);
                mxn._attachCurrentAttrLocationInfo();
            },

            _emitCurrentToken() {
                const ctLoc = this.currentToken.location;

                //NOTE: if we have pending character token make it's end location equal to the
                //current token's start location.
                if (this.currentCharacterToken) {
                    this.currentCharacterToken.location.endLine = ctLoc.startLine;
                    this.currentCharacterToken.location.endCol = ctLoc.startCol;
                    this.currentCharacterToken.location.endOffset = ctLoc.startOffset;
                }

                if (this.currentToken.type === Tokenizer.EOF_TOKEN) {
                    ctLoc.endLine = ctLoc.startLine;
                    ctLoc.endCol = ctLoc.startCol;
                    ctLoc.endOffset = ctLoc.startOffset;
                } else {
                    ctLoc.endLine = mxn.posTracker.line;
                    ctLoc.endCol = mxn.posTracker.col + 1;
                    ctLoc.endOffset = mxn.posTracker.offset + 1;
                }

                orig._emitCurrentToken.call(this);
            },

            _emitCurrentCharacterToken() {
                const ctLoc = this.currentCharacterToken && this.currentCharacterToken.location;

                //NOTE: if we have character token and it's location wasn't set in the _emitCurrentToken(),
                //then set it's location at the current preprocessor position.
                //We don't need to increment preprocessor position, since character token
                //emission is always forced by the start of the next character token here.
                //So, we already have advanced position.
                if (ctLoc && ctLoc.endOffset === -1) {
                    ctLoc.endLine = mxn.posTracker.line;
                    ctLoc.endCol = mxn.posTracker.col;
                    ctLoc.endOffset = mxn.posTracker.offset;
                }

                orig._emitCurrentCharacterToken.call(this);
            }
        };

        //NOTE: patch initial states for each mode to obtain token start position
        Object.keys(Tokenizer.MODE).forEach(modeName => {
            const state = Tokenizer.MODE[modeName];

            methods[state] = function(cp) {
                mxn.ctLoc = mxn._getCurrentLocation();
                orig[state].call(this, cp);
            };
        });

        return methods;
    }
}

module.exports = LocationInfoTokenizerMixin;


/***/ }),
/* 87 */
/*!************************************************************************************!*\
  !*** ./node_modules/parse5/lib/extensions/position-tracking/preprocessor-mixin.js ***!
  \************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


const Mixin = __webpack_require__(/*! ../../utils/mixin */ 85);

class PositionTrackingPreprocessorMixin extends Mixin {
    constructor(preprocessor) {
        super(preprocessor);

        this.preprocessor = preprocessor;
        this.isEol = false;
        this.lineStartPos = 0;
        this.droppedBufferSize = 0;

        this.offset = 0;
        this.col = 0;
        this.line = 1;
    }

    _getOverriddenMethods(mxn, orig) {
        return {
            advance() {
                const pos = this.pos + 1;
                const ch = this.html[pos];

                //NOTE: LF should be in the last column of the line
                if (mxn.isEol) {
                    mxn.isEol = false;
                    mxn.line++;
                    mxn.lineStartPos = pos;
                }

                if (ch === '\n' || (ch === '\r' && this.html[pos + 1] !== '\n')) {
                    mxn.isEol = true;
                }

                mxn.col = pos - mxn.lineStartPos + 1;
                mxn.offset = mxn.droppedBufferSize + pos;

                return orig.advance.call(this);
            },

            retreat() {
                orig.retreat.call(this);

                mxn.isEol = false;
                mxn.col = this.pos - mxn.lineStartPos + 1;
            },

            dropParsedChunk() {
                const prevPos = this.pos;

                orig.dropParsedChunk.call(this);

                const reduction = prevPos - this.pos;

                mxn.lineStartPos -= reduction;
                mxn.droppedBufferSize += reduction;
                mxn.offset = mxn.droppedBufferSize + this.pos;
            }
        };
    }
}

module.exports = PositionTrackingPreprocessorMixin;


/***/ }),
/* 88 */
/*!**************************************************************************************!*\
  !*** ./node_modules/parse5/lib/extensions/location-info/open-element-stack-mixin.js ***!
  \**************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


const Mixin = __webpack_require__(/*! ../../utils/mixin */ 85);

class LocationInfoOpenElementStackMixin extends Mixin {
    constructor(stack, opts) {
        super(stack);

        this.onItemPop = opts.onItemPop;
    }

    _getOverriddenMethods(mxn, orig) {
        return {
            pop() {
                mxn.onItemPop(this.current);
                orig.pop.call(this);
            },

            popAllUpToHtmlElement() {
                for (let i = this.stackTop; i > 0; i--) {
                    mxn.onItemPop(this.items[i]);
                }

                orig.popAllUpToHtmlElement.call(this);
            },

            remove(element) {
                mxn.onItemPop(this.current);
                orig.remove.call(this, element);
            }
        };
    }
}

module.exports = LocationInfoOpenElementStackMixin;


/***/ }),
/* 89 */
/*!****************************************************************************!*\
  !*** ./node_modules/parse5/lib/extensions/error-reporting/parser-mixin.js ***!
  \****************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


const ErrorReportingMixinBase = __webpack_require__(/*! ./mixin-base */ 90);
const ErrorReportingTokenizerMixin = __webpack_require__(/*! ./tokenizer-mixin */ 91);
const LocationInfoTokenizerMixin = __webpack_require__(/*! ../location-info/tokenizer-mixin */ 86);
const Mixin = __webpack_require__(/*! ../../utils/mixin */ 85);

class ErrorReportingParserMixin extends ErrorReportingMixinBase {
    constructor(parser, opts) {
        super(parser, opts);

        this.opts = opts;
        this.ctLoc = null;
        this.locBeforeToken = false;
    }

    _setErrorLocation(err) {
        if (this.ctLoc) {
            err.startLine = this.ctLoc.startLine;
            err.startCol = this.ctLoc.startCol;
            err.startOffset = this.ctLoc.startOffset;

            err.endLine = this.locBeforeToken ? this.ctLoc.startLine : this.ctLoc.endLine;
            err.endCol = this.locBeforeToken ? this.ctLoc.startCol : this.ctLoc.endCol;
            err.endOffset = this.locBeforeToken ? this.ctLoc.startOffset : this.ctLoc.endOffset;
        }
    }

    _getOverriddenMethods(mxn, orig) {
        return {
            _bootstrap(document, fragmentContext) {
                orig._bootstrap.call(this, document, fragmentContext);

                Mixin.install(this.tokenizer, ErrorReportingTokenizerMixin, mxn.opts);
                Mixin.install(this.tokenizer, LocationInfoTokenizerMixin);
            },

            _processInputToken(token) {
                mxn.ctLoc = token.location;

                orig._processInputToken.call(this, token);
            },

            _err(code, options) {
                mxn.locBeforeToken = options && options.beforeToken;
                mxn._reportError(code);
            }
        };
    }
}

module.exports = ErrorReportingParserMixin;


/***/ }),
/* 90 */
/*!**************************************************************************!*\
  !*** ./node_modules/parse5/lib/extensions/error-reporting/mixin-base.js ***!
  \**************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


const Mixin = __webpack_require__(/*! ../../utils/mixin */ 85);

class ErrorReportingMixinBase extends Mixin {
    constructor(host, opts) {
        super(host);

        this.posTracker = null;
        this.onParseError = opts.onParseError;
    }

    _setErrorLocation(err) {
        err.startLine = err.endLine = this.posTracker.line;
        err.startCol = err.endCol = this.posTracker.col;
        err.startOffset = err.endOffset = this.posTracker.offset;
    }

    _reportError(code) {
        const err = {
            code: code,
            startLine: -1,
            startCol: -1,
            startOffset: -1,
            endLine: -1,
            endCol: -1,
            endOffset: -1
        };

        this._setErrorLocation(err);
        this.onParseError(err);
    }

    _getOverriddenMethods(mxn) {
        return {
            _err(code) {
                mxn._reportError(code);
            }
        };
    }
}

module.exports = ErrorReportingMixinBase;


/***/ }),
/* 91 */
/*!*******************************************************************************!*\
  !*** ./node_modules/parse5/lib/extensions/error-reporting/tokenizer-mixin.js ***!
  \*******************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


const ErrorReportingMixinBase = __webpack_require__(/*! ./mixin-base */ 90);
const ErrorReportingPreprocessorMixin = __webpack_require__(/*! ./preprocessor-mixin */ 92);
const Mixin = __webpack_require__(/*! ../../utils/mixin */ 85);

class ErrorReportingTokenizerMixin extends ErrorReportingMixinBase {
    constructor(tokenizer, opts) {
        super(tokenizer, opts);

        const preprocessorMixin = Mixin.install(tokenizer.preprocessor, ErrorReportingPreprocessorMixin, opts);

        this.posTracker = preprocessorMixin.posTracker;
    }
}

module.exports = ErrorReportingTokenizerMixin;


/***/ }),
/* 92 */
/*!**********************************************************************************!*\
  !*** ./node_modules/parse5/lib/extensions/error-reporting/preprocessor-mixin.js ***!
  \**********************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


const ErrorReportingMixinBase = __webpack_require__(/*! ./mixin-base */ 90);
const PositionTrackingPreprocessorMixin = __webpack_require__(/*! ../position-tracking/preprocessor-mixin */ 87);
const Mixin = __webpack_require__(/*! ../../utils/mixin */ 85);

class ErrorReportingPreprocessorMixin extends ErrorReportingMixinBase {
    constructor(preprocessor, opts) {
        super(preprocessor, opts);

        this.posTracker = Mixin.install(preprocessor, PositionTrackingPreprocessorMixin);
        this.lastErrOffset = -1;
    }

    _reportError(code) {
        //NOTE: avoid reporting error twice on advance/retreat
        if (this.lastErrOffset !== this.posTracker.offset) {
            this.lastErrOffset = this.posTracker.offset;
            super._reportError(code);
        }
    }
}

module.exports = ErrorReportingPreprocessorMixin;


/***/ }),
/* 93 */
/*!**********************************************************!*\
  !*** ./node_modules/parse5/lib/tree-adapters/default.js ***!
  \**********************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


const { DOCUMENT_MODE } = __webpack_require__(/*! ../common/html */ 82);

//Node construction
exports.createDocument = function() {
    return {
        nodeName: '#document',
        mode: DOCUMENT_MODE.NO_QUIRKS,
        childNodes: []
    };
};

exports.createDocumentFragment = function() {
    return {
        nodeName: '#document-fragment',
        childNodes: []
    };
};

exports.createElement = function(tagName, namespaceURI, attrs) {
    return {
        nodeName: tagName,
        tagName: tagName,
        attrs: attrs,
        namespaceURI: namespaceURI,
        childNodes: [],
        parentNode: null
    };
};

exports.createCommentNode = function(data) {
    return {
        nodeName: '#comment',
        data: data,
        parentNode: null
    };
};

const createTextNode = function(value) {
    return {
        nodeName: '#text',
        value: value,
        parentNode: null
    };
};

//Tree mutation
const appendChild = (exports.appendChild = function(parentNode, newNode) {
    parentNode.childNodes.push(newNode);
    newNode.parentNode = parentNode;
});

const insertBefore = (exports.insertBefore = function(parentNode, newNode, referenceNode) {
    const insertionIdx = parentNode.childNodes.indexOf(referenceNode);

    parentNode.childNodes.splice(insertionIdx, 0, newNode);
    newNode.parentNode = parentNode;
});

exports.setTemplateContent = function(templateElement, contentElement) {
    templateElement.content = contentElement;
};

exports.getTemplateContent = function(templateElement) {
    return templateElement.content;
};

exports.setDocumentType = function(document, name, publicId, systemId) {
    let doctypeNode = null;

    for (let i = 0; i < document.childNodes.length; i++) {
        if (document.childNodes[i].nodeName === '#documentType') {
            doctypeNode = document.childNodes[i];
            break;
        }
    }

    if (doctypeNode) {
        doctypeNode.name = name;
        doctypeNode.publicId = publicId;
        doctypeNode.systemId = systemId;
    } else {
        appendChild(document, {
            nodeName: '#documentType',
            name: name,
            publicId: publicId,
            systemId: systemId
        });
    }
};

exports.setDocumentMode = function(document, mode) {
    document.mode = mode;
};

exports.getDocumentMode = function(document) {
    return document.mode;
};

exports.detachNode = function(node) {
    if (node.parentNode) {
        const idx = node.parentNode.childNodes.indexOf(node);

        node.parentNode.childNodes.splice(idx, 1);
        node.parentNode = null;
    }
};

exports.insertText = function(parentNode, text) {
    if (parentNode.childNodes.length) {
        const prevNode = parentNode.childNodes[parentNode.childNodes.length - 1];

        if (prevNode.nodeName === '#text') {
            prevNode.value += text;
            return;
        }
    }

    appendChild(parentNode, createTextNode(text));
};

exports.insertTextBefore = function(parentNode, text, referenceNode) {
    const prevNode = parentNode.childNodes[parentNode.childNodes.indexOf(referenceNode) - 1];

    if (prevNode && prevNode.nodeName === '#text') {
        prevNode.value += text;
    } else {
        insertBefore(parentNode, createTextNode(text), referenceNode);
    }
};

exports.adoptAttributes = function(recipient, attrs) {
    const recipientAttrsMap = [];

    for (let i = 0; i < recipient.attrs.length; i++) {
        recipientAttrsMap.push(recipient.attrs[i].name);
    }

    for (let j = 0; j < attrs.length; j++) {
        if (recipientAttrsMap.indexOf(attrs[j].name) === -1) {
            recipient.attrs.push(attrs[j]);
        }
    }
};

//Tree traversing
exports.getFirstChild = function(node) {
    return node.childNodes[0];
};

exports.getChildNodes = function(node) {
    return node.childNodes;
};

exports.getParentNode = function(node) {
    return node.parentNode;
};

exports.getAttrList = function(element) {
    return element.attrs;
};

//Node data
exports.getTagName = function(element) {
    return element.tagName;
};

exports.getNamespaceURI = function(element) {
    return element.namespaceURI;
};

exports.getTextNodeContent = function(textNode) {
    return textNode.value;
};

exports.getCommentNodeContent = function(commentNode) {
    return commentNode.data;
};

exports.getDocumentTypeNodeName = function(doctypeNode) {
    return doctypeNode.name;
};

exports.getDocumentTypeNodePublicId = function(doctypeNode) {
    return doctypeNode.publicId;
};

exports.getDocumentTypeNodeSystemId = function(doctypeNode) {
    return doctypeNode.systemId;
};

//Node types
exports.isTextNode = function(node) {
    return node.nodeName === '#text';
};

exports.isCommentNode = function(node) {
    return node.nodeName === '#comment';
};

exports.isDocumentTypeNode = function(node) {
    return node.nodeName === '#documentType';
};

exports.isElementNode = function(node) {
    return !!node.tagName;
};

// Source code location
exports.setNodeSourceCodeLocation = function(node, location) {
    node.sourceCodeLocation = location;
};

exports.getNodeSourceCodeLocation = function(node) {
    return node.sourceCodeLocation;
};


/***/ }),
/* 94 */
/*!********************************************************!*\
  !*** ./node_modules/parse5/lib/utils/merge-options.js ***!
  \********************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


module.exports = function mergeOptions(defaults, options) {
    options = options || Object.create(null);

    return [defaults, options].reduce((merged, optObj) => {
        Object.keys(optObj).forEach(key => {
            merged[key] = optObj[key];
        });

        return merged;
    }, Object.create(null));
};


/***/ }),
/* 95 */
/*!***************************************************!*\
  !*** ./node_modules/parse5/lib/common/doctype.js ***!
  \***************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


const { DOCUMENT_MODE } = __webpack_require__(/*! ./html */ 82);

//Const
const VALID_DOCTYPE_NAME = 'html';
const VALID_SYSTEM_ID = 'about:legacy-compat';
const QUIRKS_MODE_SYSTEM_ID = 'http://www.ibm.com/data/dtd/v11/ibmxhtml1-transitional.dtd';

const QUIRKS_MODE_PUBLIC_ID_PREFIXES = [
    '+//silmaril//dtd html pro v0r11 19970101//',
    '-//as//dtd html 3.0 aswedit + extensions//',
    '-//advasoft ltd//dtd html 3.0 aswedit + extensions//',
    '-//ietf//dtd html 2.0 level 1//',
    '-//ietf//dtd html 2.0 level 2//',
    '-//ietf//dtd html 2.0 strict level 1//',
    '-//ietf//dtd html 2.0 strict level 2//',
    '-//ietf//dtd html 2.0 strict//',
    '-//ietf//dtd html 2.0//',
    '-//ietf//dtd html 2.1e//',
    '-//ietf//dtd html 3.0//',
    '-//ietf//dtd html 3.2 final//',
    '-//ietf//dtd html 3.2//',
    '-//ietf//dtd html 3//',
    '-//ietf//dtd html level 0//',
    '-//ietf//dtd html level 1//',
    '-//ietf//dtd html level 2//',
    '-//ietf//dtd html level 3//',
    '-//ietf//dtd html strict level 0//',
    '-//ietf//dtd html strict level 1//',
    '-//ietf//dtd html strict level 2//',
    '-//ietf//dtd html strict level 3//',
    '-//ietf//dtd html strict//',
    '-//ietf//dtd html//',
    '-//metrius//dtd metrius presentational//',
    '-//microsoft//dtd internet explorer 2.0 html strict//',
    '-//microsoft//dtd internet explorer 2.0 html//',
    '-//microsoft//dtd internet explorer 2.0 tables//',
    '-//microsoft//dtd internet explorer 3.0 html strict//',
    '-//microsoft//dtd internet explorer 3.0 html//',
    '-//microsoft//dtd internet explorer 3.0 tables//',
    '-//netscape comm. corp.//dtd html//',
    '-//netscape comm. corp.//dtd strict html//',
    "-//o'reilly and associates//dtd html 2.0//",
    "-//o'reilly and associates//dtd html extended 1.0//",
    "-//o'reilly and associates//dtd html extended relaxed 1.0//",
    '-//sq//dtd html 2.0 hotmetal + extensions//',
    '-//softquad software//dtd hotmetal pro 6.0::19990601::extensions to html 4.0//',
    '-//softquad//dtd hotmetal pro 4.0::19971010::extensions to html 4.0//',
    '-//spyglass//dtd html 2.0 extended//',
    '-//sun microsystems corp.//dtd hotjava html//',
    '-//sun microsystems corp.//dtd hotjava strict html//',
    '-//w3c//dtd html 3 1995-03-24//',
    '-//w3c//dtd html 3.2 draft//',
    '-//w3c//dtd html 3.2 final//',
    '-//w3c//dtd html 3.2//',
    '-//w3c//dtd html 3.2s draft//',
    '-//w3c//dtd html 4.0 frameset//',
    '-//w3c//dtd html 4.0 transitional//',
    '-//w3c//dtd html experimental 19960712//',
    '-//w3c//dtd html experimental 970421//',
    '-//w3c//dtd w3 html//',
    '-//w3o//dtd w3 html 3.0//',
    '-//webtechs//dtd mozilla html 2.0//',
    '-//webtechs//dtd mozilla html//'
];

const QUIRKS_MODE_NO_SYSTEM_ID_PUBLIC_ID_PREFIXES = QUIRKS_MODE_PUBLIC_ID_PREFIXES.concat([
    '-//w3c//dtd html 4.01 frameset//',
    '-//w3c//dtd html 4.01 transitional//'
]);

const QUIRKS_MODE_PUBLIC_IDS = ['-//w3o//dtd w3 html strict 3.0//en//', '-/w3c/dtd html 4.0 transitional/en', 'html'];
const LIMITED_QUIRKS_PUBLIC_ID_PREFIXES = ['-//w3c//dtd xhtml 1.0 frameset//', '-//w3c//dtd xhtml 1.0 transitional//'];

const LIMITED_QUIRKS_WITH_SYSTEM_ID_PUBLIC_ID_PREFIXES = LIMITED_QUIRKS_PUBLIC_ID_PREFIXES.concat([
    '-//w3c//dtd html 4.01 frameset//',
    '-//w3c//dtd html 4.01 transitional//'
]);

//Utils
function enquoteDoctypeId(id) {
    const quote = id.indexOf('"') !== -1 ? "'" : '"';

    return quote + id + quote;
}

function hasPrefix(publicId, prefixes) {
    for (let i = 0; i < prefixes.length; i++) {
        if (publicId.indexOf(prefixes[i]) === 0) {
            return true;
        }
    }

    return false;
}

//API
exports.isConforming = function(token) {
    return (
        token.name === VALID_DOCTYPE_NAME &&
        token.publicId === null &&
        (token.systemId === null || token.systemId === VALID_SYSTEM_ID)
    );
};

exports.getDocumentMode = function(token) {
    if (token.name !== VALID_DOCTYPE_NAME) {
        return DOCUMENT_MODE.QUIRKS;
    }

    const systemId = token.systemId;

    if (systemId && systemId.toLowerCase() === QUIRKS_MODE_SYSTEM_ID) {
        return DOCUMENT_MODE.QUIRKS;
    }

    let publicId = token.publicId;

    if (publicId !== null) {
        publicId = publicId.toLowerCase();

        if (QUIRKS_MODE_PUBLIC_IDS.indexOf(publicId) > -1) {
            return DOCUMENT_MODE.QUIRKS;
        }

        let prefixes = systemId === null ? QUIRKS_MODE_NO_SYSTEM_ID_PUBLIC_ID_PREFIXES : QUIRKS_MODE_PUBLIC_ID_PREFIXES;

        if (hasPrefix(publicId, prefixes)) {
            return DOCUMENT_MODE.QUIRKS;
        }

        prefixes =
            systemId === null ? LIMITED_QUIRKS_PUBLIC_ID_PREFIXES : LIMITED_QUIRKS_WITH_SYSTEM_ID_PUBLIC_ID_PREFIXES;

        if (hasPrefix(publicId, prefixes)) {
            return DOCUMENT_MODE.LIMITED_QUIRKS;
        }
    }

    return DOCUMENT_MODE.NO_QUIRKS;
};

exports.serializeContent = function(name, publicId, systemId) {
    let str = '!DOCTYPE ';

    if (name) {
        str += name;
    }

    if (publicId) {
        str += ' PUBLIC ' + enquoteDoctypeId(publicId);
    } else if (systemId) {
        str += ' SYSTEM';
    }

    if (systemId !== null) {
        str += ' ' + enquoteDoctypeId(systemId);
    }

    return str;
};


/***/ }),
/* 96 */
/*!***********************************************************!*\
  !*** ./node_modules/parse5/lib/common/foreign-content.js ***!
  \***********************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


const Tokenizer = __webpack_require__(/*! ../tokenizer */ 76);
const HTML = __webpack_require__(/*! ./html */ 82);

//Aliases
const $ = HTML.TAG_NAMES;
const NS = HTML.NAMESPACES;
const ATTRS = HTML.ATTRS;

//MIME types
const MIME_TYPES = {
    TEXT_HTML: 'text/html',
    APPLICATION_XML: 'application/xhtml+xml'
};

//Attributes
const DEFINITION_URL_ATTR = 'definitionurl';
const ADJUSTED_DEFINITION_URL_ATTR = 'definitionURL';
const SVG_ATTRS_ADJUSTMENT_MAP = {
    attributename: 'attributeName',
    attributetype: 'attributeType',
    basefrequency: 'baseFrequency',
    baseprofile: 'baseProfile',
    calcmode: 'calcMode',
    clippathunits: 'clipPathUnits',
    diffuseconstant: 'diffuseConstant',
    edgemode: 'edgeMode',
    filterunits: 'filterUnits',
    glyphref: 'glyphRef',
    gradienttransform: 'gradientTransform',
    gradientunits: 'gradientUnits',
    kernelmatrix: 'kernelMatrix',
    kernelunitlength: 'kernelUnitLength',
    keypoints: 'keyPoints',
    keysplines: 'keySplines',
    keytimes: 'keyTimes',
    lengthadjust: 'lengthAdjust',
    limitingconeangle: 'limitingConeAngle',
    markerheight: 'markerHeight',
    markerunits: 'markerUnits',
    markerwidth: 'markerWidth',
    maskcontentunits: 'maskContentUnits',
    maskunits: 'maskUnits',
    numoctaves: 'numOctaves',
    pathlength: 'pathLength',
    patterncontentunits: 'patternContentUnits',
    patterntransform: 'patternTransform',
    patternunits: 'patternUnits',
    pointsatx: 'pointsAtX',
    pointsaty: 'pointsAtY',
    pointsatz: 'pointsAtZ',
    preservealpha: 'preserveAlpha',
    preserveaspectratio: 'preserveAspectRatio',
    primitiveunits: 'primitiveUnits',
    refx: 'refX',
    refy: 'refY',
    repeatcount: 'repeatCount',
    repeatdur: 'repeatDur',
    requiredextensions: 'requiredExtensions',
    requiredfeatures: 'requiredFeatures',
    specularconstant: 'specularConstant',
    specularexponent: 'specularExponent',
    spreadmethod: 'spreadMethod',
    startoffset: 'startOffset',
    stddeviation: 'stdDeviation',
    stitchtiles: 'stitchTiles',
    surfacescale: 'surfaceScale',
    systemlanguage: 'systemLanguage',
    tablevalues: 'tableValues',
    targetx: 'targetX',
    targety: 'targetY',
    textlength: 'textLength',
    viewbox: 'viewBox',
    viewtarget: 'viewTarget',
    xchannelselector: 'xChannelSelector',
    ychannelselector: 'yChannelSelector',
    zoomandpan: 'zoomAndPan'
};

const XML_ATTRS_ADJUSTMENT_MAP = {
    'xlink:actuate': { prefix: 'xlink', name: 'actuate', namespace: NS.XLINK },
    'xlink:arcrole': { prefix: 'xlink', name: 'arcrole', namespace: NS.XLINK },
    'xlink:href': { prefix: 'xlink', name: 'href', namespace: NS.XLINK },
    'xlink:role': { prefix: 'xlink', name: 'role', namespace: NS.XLINK },
    'xlink:show': { prefix: 'xlink', name: 'show', namespace: NS.XLINK },
    'xlink:title': { prefix: 'xlink', name: 'title', namespace: NS.XLINK },
    'xlink:type': { prefix: 'xlink', name: 'type', namespace: NS.XLINK },
    'xml:base': { prefix: 'xml', name: 'base', namespace: NS.XML },
    'xml:lang': { prefix: 'xml', name: 'lang', namespace: NS.XML },
    'xml:space': { prefix: 'xml', name: 'space', namespace: NS.XML },
    xmlns: { prefix: '', name: 'xmlns', namespace: NS.XMLNS },
    'xmlns:xlink': { prefix: 'xmlns', name: 'xlink', namespace: NS.XMLNS }
};

//SVG tag names adjustment map
const SVG_TAG_NAMES_ADJUSTMENT_MAP = (exports.SVG_TAG_NAMES_ADJUSTMENT_MAP = {
    altglyph: 'altGlyph',
    altglyphdef: 'altGlyphDef',
    altglyphitem: 'altGlyphItem',
    animatecolor: 'animateColor',
    animatemotion: 'animateMotion',
    animatetransform: 'animateTransform',
    clippath: 'clipPath',
    feblend: 'feBlend',
    fecolormatrix: 'feColorMatrix',
    fecomponenttransfer: 'feComponentTransfer',
    fecomposite: 'feComposite',
    feconvolvematrix: 'feConvolveMatrix',
    fediffuselighting: 'feDiffuseLighting',
    fedisplacementmap: 'feDisplacementMap',
    fedistantlight: 'feDistantLight',
    feflood: 'feFlood',
    fefunca: 'feFuncA',
    fefuncb: 'feFuncB',
    fefuncg: 'feFuncG',
    fefuncr: 'feFuncR',
    fegaussianblur: 'feGaussianBlur',
    feimage: 'feImage',
    femerge: 'feMerge',
    femergenode: 'feMergeNode',
    femorphology: 'feMorphology',
    feoffset: 'feOffset',
    fepointlight: 'fePointLight',
    fespecularlighting: 'feSpecularLighting',
    fespotlight: 'feSpotLight',
    fetile: 'feTile',
    feturbulence: 'feTurbulence',
    foreignobject: 'foreignObject',
    glyphref: 'glyphRef',
    lineargradient: 'linearGradient',
    radialgradient: 'radialGradient',
    textpath: 'textPath'
});

//Tags that causes exit from foreign content
const EXITS_FOREIGN_CONTENT = {
    [$.B]: true,
    [$.BIG]: true,
    [$.BLOCKQUOTE]: true,
    [$.BODY]: true,
    [$.BR]: true,
    [$.CENTER]: true,
    [$.CODE]: true,
    [$.DD]: true,
    [$.DIV]: true,
    [$.DL]: true,
    [$.DT]: true,
    [$.EM]: true,
    [$.EMBED]: true,
    [$.H1]: true,
    [$.H2]: true,
    [$.H3]: true,
    [$.H4]: true,
    [$.H5]: true,
    [$.H6]: true,
    [$.HEAD]: true,
    [$.HR]: true,
    [$.I]: true,
    [$.IMG]: true,
    [$.LI]: true,
    [$.LISTING]: true,
    [$.MENU]: true,
    [$.META]: true,
    [$.NOBR]: true,
    [$.OL]: true,
    [$.P]: true,
    [$.PRE]: true,
    [$.RUBY]: true,
    [$.S]: true,
    [$.SMALL]: true,
    [$.SPAN]: true,
    [$.STRONG]: true,
    [$.STRIKE]: true,
    [$.SUB]: true,
    [$.SUP]: true,
    [$.TABLE]: true,
    [$.TT]: true,
    [$.U]: true,
    [$.UL]: true,
    [$.VAR]: true
};

//Check exit from foreign content
exports.causesExit = function(startTagToken) {
    const tn = startTagToken.tagName;
    const isFontWithAttrs =
        tn === $.FONT &&
        (Tokenizer.getTokenAttr(startTagToken, ATTRS.COLOR) !== null ||
            Tokenizer.getTokenAttr(startTagToken, ATTRS.SIZE) !== null ||
            Tokenizer.getTokenAttr(startTagToken, ATTRS.FACE) !== null);

    return isFontWithAttrs ? true : EXITS_FOREIGN_CONTENT[tn];
};

//Token adjustments
exports.adjustTokenMathMLAttrs = function(token) {
    for (let i = 0; i < token.attrs.length; i++) {
        if (token.attrs[i].name === DEFINITION_URL_ATTR) {
            token.attrs[i].name = ADJUSTED_DEFINITION_URL_ATTR;
            break;
        }
    }
};

exports.adjustTokenSVGAttrs = function(token) {
    for (let i = 0; i < token.attrs.length; i++) {
        const adjustedAttrName = SVG_ATTRS_ADJUSTMENT_MAP[token.attrs[i].name];

        if (adjustedAttrName) {
            token.attrs[i].name = adjustedAttrName;
        }
    }
};

exports.adjustTokenXMLAttrs = function(token) {
    for (let i = 0; i < token.attrs.length; i++) {
        const adjustedAttrEntry = XML_ATTRS_ADJUSTMENT_MAP[token.attrs[i].name];

        if (adjustedAttrEntry) {
            token.attrs[i].prefix = adjustedAttrEntry.prefix;
            token.attrs[i].name = adjustedAttrEntry.name;
            token.attrs[i].namespace = adjustedAttrEntry.namespace;
        }
    }
};

exports.adjustTokenSVGTagName = function(token) {
    const adjustedTagName = SVG_TAG_NAMES_ADJUSTMENT_MAP[token.tagName];

    if (adjustedTagName) {
        token.tagName = adjustedTagName;
    }
};

//Integration points
function isMathMLTextIntegrationPoint(tn, ns) {
    return ns === NS.MATHML && (tn === $.MI || tn === $.MO || tn === $.MN || tn === $.MS || tn === $.MTEXT);
}

function isHtmlIntegrationPoint(tn, ns, attrs) {
    if (ns === NS.MATHML && tn === $.ANNOTATION_XML) {
        for (let i = 0; i < attrs.length; i++) {
            if (attrs[i].name === ATTRS.ENCODING) {
                const value = attrs[i].value.toLowerCase();

                return value === MIME_TYPES.TEXT_HTML || value === MIME_TYPES.APPLICATION_XML;
            }
        }
    }

    return ns === NS.SVG && (tn === $.FOREIGN_OBJECT || tn === $.DESC || tn === $.TITLE);
}

exports.isIntegrationPoint = function(tn, ns, attrs, foreignNS) {
    if ((!foreignNS || foreignNS === NS.HTML) && isHtmlIntegrationPoint(tn, ns, attrs)) {
        return true;
    }

    if ((!foreignNS || foreignNS === NS.MATHML) && isMathMLTextIntegrationPoint(tn, ns)) {
        return true;
    }

    return false;
};


/***/ }),
/* 97 */
/*!*****************************************************!*\
  !*** ./node_modules/parse5/lib/serializer/index.js ***!
  \*****************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


const defaultTreeAdapter = __webpack_require__(/*! ../tree-adapters/default */ 93);
const mergeOptions = __webpack_require__(/*! ../utils/merge-options */ 94);
const doctype = __webpack_require__(/*! ../common/doctype */ 95);
const HTML = __webpack_require__(/*! ../common/html */ 82);

//Aliases
const $ = HTML.TAG_NAMES;
const NS = HTML.NAMESPACES;

//Default serializer options
const DEFAULT_OPTIONS = {
    treeAdapter: defaultTreeAdapter
};

//Escaping regexes
const AMP_REGEX = /&/g;
const NBSP_REGEX = /\u00a0/g;
const DOUBLE_QUOTE_REGEX = /"/g;
const LT_REGEX = /</g;
const GT_REGEX = />/g;

//Serializer
class Serializer {
    constructor(node, options) {
        this.options = mergeOptions(DEFAULT_OPTIONS, options);
        this.treeAdapter = this.options.treeAdapter;

        this.html = '';
        this.startNode = node;
    }

    //API
    serialize() {
        this._serializeChildNodes(this.startNode);

        return this.html;
    }

    //Internals
    _serializeChildNodes(parentNode) {
        const childNodes = this.treeAdapter.getChildNodes(parentNode);

        if (childNodes) {
            for (let i = 0, cnLength = childNodes.length; i < cnLength; i++) {
                const currentNode = childNodes[i];

                if (this.treeAdapter.isElementNode(currentNode)) {
                    this._serializeElement(currentNode);
                } else if (this.treeAdapter.isTextNode(currentNode)) {
                    this._serializeTextNode(currentNode);
                } else if (this.treeAdapter.isCommentNode(currentNode)) {
                    this._serializeCommentNode(currentNode);
                } else if (this.treeAdapter.isDocumentTypeNode(currentNode)) {
                    this._serializeDocumentTypeNode(currentNode);
                }
            }
        }
    }

    _serializeElement(node) {
        const tn = this.treeAdapter.getTagName(node);
        const ns = this.treeAdapter.getNamespaceURI(node);

        this.html += '<' + tn;
        this._serializeAttributes(node);
        this.html += '>';

        if (
            tn !== $.AREA &&
            tn !== $.BASE &&
            tn !== $.BASEFONT &&
            tn !== $.BGSOUND &&
            tn !== $.BR &&
            tn !== $.COL &&
            tn !== $.EMBED &&
            tn !== $.FRAME &&
            tn !== $.HR &&
            tn !== $.IMG &&
            tn !== $.INPUT &&
            tn !== $.KEYGEN &&
            tn !== $.LINK &&
            tn !== $.META &&
            tn !== $.PARAM &&
            tn !== $.SOURCE &&
            tn !== $.TRACK &&
            tn !== $.WBR
        ) {
            const childNodesHolder =
                tn === $.TEMPLATE && ns === NS.HTML ? this.treeAdapter.getTemplateContent(node) : node;

            this._serializeChildNodes(childNodesHolder);
            this.html += '</' + tn + '>';
        }
    }

    _serializeAttributes(node) {
        const attrs = this.treeAdapter.getAttrList(node);

        for (let i = 0, attrsLength = attrs.length; i < attrsLength; i++) {
            const attr = attrs[i];
            const value = Serializer.escapeString(attr.value, true);

            this.html += ' ';

            if (!attr.namespace) {
                this.html += attr.name;
            } else if (attr.namespace === NS.XML) {
                this.html += 'xml:' + attr.name;
            } else if (attr.namespace === NS.XMLNS) {
                if (attr.name !== 'xmlns') {
                    this.html += 'xmlns:';
                }

                this.html += attr.name;
            } else if (attr.namespace === NS.XLINK) {
                this.html += 'xlink:' + attr.name;
            } else {
                this.html += attr.prefix + ':' + attr.name;
            }

            this.html += '="' + value + '"';
        }
    }

    _serializeTextNode(node) {
        const content = this.treeAdapter.getTextNodeContent(node);
        const parent = this.treeAdapter.getParentNode(node);
        let parentTn = void 0;

        if (parent && this.treeAdapter.isElementNode(parent)) {
            parentTn = this.treeAdapter.getTagName(parent);
        }

        if (
            parentTn === $.STYLE ||
            parentTn === $.SCRIPT ||
            parentTn === $.XMP ||
            parentTn === $.IFRAME ||
            parentTn === $.NOEMBED ||
            parentTn === $.NOFRAMES ||
            parentTn === $.PLAINTEXT ||
            parentTn === $.NOSCRIPT
        ) {
            this.html += content;
        } else {
            this.html += Serializer.escapeString(content, false);
        }
    }

    _serializeCommentNode(node) {
        this.html += '<!--' + this.treeAdapter.getCommentNodeContent(node) + '-->';
    }

    _serializeDocumentTypeNode(node) {
        const name = this.treeAdapter.getDocumentTypeNodeName(node);

        this.html += '<' + doctype.serializeContent(name, null, null) + '>';
    }
}

// NOTE: used in tests and by rewriting stream
Serializer.escapeString = function(str, attrMode) {
    str = str.replace(AMP_REGEX, '&amp;').replace(NBSP_REGEX, '&nbsp;');

    if (attrMode) {
        str = str.replace(DOUBLE_QUOTE_REGEX, '&quot;');
    } else {
        str = str.replace(LT_REGEX, '&lt;').replace(GT_REGEX, '&gt;');
    }

    return str;
};

module.exports = Serializer;


/***/ }),
/* 98 */
/*!*******************************************************************!*\
  !*** ./node_modules/parse5-htmlparser2-tree-adapter/lib/index.js ***!
  \*******************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


const doctype = __webpack_require__(/*! parse5/lib/common/doctype */ 95);
const { DOCUMENT_MODE } = __webpack_require__(/*! parse5/lib/common/html */ 82);

//Conversion tables for DOM Level1 structure emulation
const nodeTypes = {
    element: 1,
    text: 3,
    cdata: 4,
    comment: 8
};

const nodePropertyShorthands = {
    tagName: 'name',
    childNodes: 'children',
    parentNode: 'parent',
    previousSibling: 'prev',
    nextSibling: 'next',
    nodeValue: 'data'
};

//Node
class Node {
    constructor(props) {
        for (const key of Object.keys(props)) {
            this[key] = props[key];
        }
    }

    get firstChild() {
        const children = this.children;

        return (children && children[0]) || null;
    }

    get lastChild() {
        const children = this.children;

        return (children && children[children.length - 1]) || null;
    }

    get nodeType() {
        return nodeTypes[this.type] || nodeTypes.element;
    }
}

Object.keys(nodePropertyShorthands).forEach(key => {
    const shorthand = nodePropertyShorthands[key];

    Object.defineProperty(Node.prototype, key, {
        get: function() {
            return this[shorthand] || null;
        },
        set: function(val) {
            this[shorthand] = val;
            return val;
        }
    });
});

//Node construction
exports.createDocument = function() {
    return new Node({
        type: 'root',
        name: 'root',
        parent: null,
        prev: null,
        next: null,
        children: [],
        'x-mode': DOCUMENT_MODE.NO_QUIRKS
    });
};

exports.createDocumentFragment = function() {
    return new Node({
        type: 'root',
        name: 'root',
        parent: null,
        prev: null,
        next: null,
        children: []
    });
};

exports.createElement = function(tagName, namespaceURI, attrs) {
    const attribs = Object.create(null);
    const attribsNamespace = Object.create(null);
    const attribsPrefix = Object.create(null);

    for (let i = 0; i < attrs.length; i++) {
        const attrName = attrs[i].name;

        attribs[attrName] = attrs[i].value;
        attribsNamespace[attrName] = attrs[i].namespace;
        attribsPrefix[attrName] = attrs[i].prefix;
    }

    return new Node({
        type: tagName === 'script' || tagName === 'style' ? tagName : 'tag',
        name: tagName,
        namespace: namespaceURI,
        attribs: attribs,
        'x-attribsNamespace': attribsNamespace,
        'x-attribsPrefix': attribsPrefix,
        children: [],
        parent: null,
        prev: null,
        next: null
    });
};

exports.createCommentNode = function(data) {
    return new Node({
        type: 'comment',
        data: data,
        parent: null,
        prev: null,
        next: null
    });
};

const createTextNode = function(value) {
    return new Node({
        type: 'text',
        data: value,
        parent: null,
        prev: null,
        next: null
    });
};

//Tree mutation
const appendChild = (exports.appendChild = function(parentNode, newNode) {
    const prev = parentNode.children[parentNode.children.length - 1];

    if (prev) {
        prev.next = newNode;
        newNode.prev = prev;
    }

    parentNode.children.push(newNode);
    newNode.parent = parentNode;
});

const insertBefore = (exports.insertBefore = function(parentNode, newNode, referenceNode) {
    const insertionIdx = parentNode.children.indexOf(referenceNode);
    const prev = referenceNode.prev;

    if (prev) {
        prev.next = newNode;
        newNode.prev = prev;
    }

    referenceNode.prev = newNode;
    newNode.next = referenceNode;

    parentNode.children.splice(insertionIdx, 0, newNode);
    newNode.parent = parentNode;
});

exports.setTemplateContent = function(templateElement, contentElement) {
    appendChild(templateElement, contentElement);
};

exports.getTemplateContent = function(templateElement) {
    return templateElement.children[0];
};

exports.setDocumentType = function(document, name, publicId, systemId) {
    const data = doctype.serializeContent(name, publicId, systemId);
    let doctypeNode = null;

    for (let i = 0; i < document.children.length; i++) {
        if (document.children[i].type === 'directive' && document.children[i].name === '!doctype') {
            doctypeNode = document.children[i];
            break;
        }
    }

    if (doctypeNode) {
        doctypeNode.data = data;
        doctypeNode['x-name'] = name;
        doctypeNode['x-publicId'] = publicId;
        doctypeNode['x-systemId'] = systemId;
    } else {
        appendChild(
            document,
            new Node({
                type: 'directive',
                name: '!doctype',
                data: data,
                'x-name': name,
                'x-publicId': publicId,
                'x-systemId': systemId
            })
        );
    }
};

exports.setDocumentMode = function(document, mode) {
    document['x-mode'] = mode;
};

exports.getDocumentMode = function(document) {
    return document['x-mode'];
};

exports.detachNode = function(node) {
    if (node.parent) {
        const idx = node.parent.children.indexOf(node);
        const prev = node.prev;
        const next = node.next;

        node.prev = null;
        node.next = null;

        if (prev) {
            prev.next = next;
        }

        if (next) {
            next.prev = prev;
        }

        node.parent.children.splice(idx, 1);
        node.parent = null;
    }
};

exports.insertText = function(parentNode, text) {
    const lastChild = parentNode.children[parentNode.children.length - 1];

    if (lastChild && lastChild.type === 'text') {
        lastChild.data += text;
    } else {
        appendChild(parentNode, createTextNode(text));
    }
};

exports.insertTextBefore = function(parentNode, text, referenceNode) {
    const prevNode = parentNode.children[parentNode.children.indexOf(referenceNode) - 1];

    if (prevNode && prevNode.type === 'text') {
        prevNode.data += text;
    } else {
        insertBefore(parentNode, createTextNode(text), referenceNode);
    }
};

exports.adoptAttributes = function(recipient, attrs) {
    for (let i = 0; i < attrs.length; i++) {
        const attrName = attrs[i].name;

        if (typeof recipient.attribs[attrName] === 'undefined') {
            recipient.attribs[attrName] = attrs[i].value;
            recipient['x-attribsNamespace'][attrName] = attrs[i].namespace;
            recipient['x-attribsPrefix'][attrName] = attrs[i].prefix;
        }
    }
};

//Tree traversing
exports.getFirstChild = function(node) {
    return node.children[0];
};

exports.getChildNodes = function(node) {
    return node.children;
};

exports.getParentNode = function(node) {
    return node.parent;
};

exports.getAttrList = function(element) {
    const attrList = [];

    for (const name in element.attribs) {
        attrList.push({
            name: name,
            value: element.attribs[name],
            namespace: element['x-attribsNamespace'][name],
            prefix: element['x-attribsPrefix'][name]
        });
    }

    return attrList;
};

//Node data
exports.getTagName = function(element) {
    return element.name;
};

exports.getNamespaceURI = function(element) {
    return element.namespace;
};

exports.getTextNodeContent = function(textNode) {
    return textNode.data;
};

exports.getCommentNodeContent = function(commentNode) {
    return commentNode.data;
};

exports.getDocumentTypeNodeName = function(doctypeNode) {
    return doctypeNode['x-name'];
};

exports.getDocumentTypeNodePublicId = function(doctypeNode) {
    return doctypeNode['x-publicId'];
};

exports.getDocumentTypeNodeSystemId = function(doctypeNode) {
    return doctypeNode['x-systemId'];
};

//Node types
exports.isTextNode = function(node) {
    return node.type === 'text';
};

exports.isCommentNode = function(node) {
    return node.type === 'comment';
};

exports.isDocumentTypeNode = function(node) {
    return node.type === 'directive' && node.name === '!doctype';
};

exports.isElementNode = function(node) {
    return !!node.attribs;
};

// Source code location
exports.setNodeSourceCodeLocation = function(node, location) {
    node.sourceCodeLocation = location;
};

exports.getNodeSourceCodeLocation = function(node) {
    return node.sourceCodeLocation;
};


/***/ }),
/* 99 */
/*!*****************************************************************************************!*\
  !*** D:/projects/bookingVaccine/bookingVaccineMini/node_modules/cheerio/lib/options.js ***!
  \*****************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
exports.flatten = void 0;
var tslib_1 = __webpack_require__(/*! tslib */ 31);
var defaultOpts = {
  xml: false,
  decodeEntities: true };

/** Cheerio default options. */
exports.default = defaultOpts;
var xmlModeDefault = {
  _useHtmlParser2: true,
  xmlMode: true };

function flatten(options) {
  return (options === null || options === void 0 ? void 0 : options.xml) ?
  typeof options.xml === 'boolean' ?
  xmlModeDefault :
  tslib_1.__assign(tslib_1.__assign({}, xmlModeDefault), options.xml) :
  options !== null && options !== void 0 ? options : undefined;
}
exports.flatten = flatten;

/***/ }),
/* 100 */
/*!***************************************************************************************!*\
  !*** D:/projects/bookingVaccine/bookingVaccineMini/node_modules/cheerio/lib/utils.js ***!
  \***************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
exports.isHtml = exports.cloneDom = exports.domEach = exports.cssCase = exports.camelCase = exports.isCheerio = exports.isTag = void 0;
var htmlparser2_1 = __webpack_require__(/*! htmlparser2 */ 38);
var domhandler_1 = __webpack_require__(/*! domhandler */ 48);
/**
                                           * Check if the DOM element is a tag.
                                           *
                                           * `isTag(type)` includes `<script>` and `<style>` tags.
                                           *
                                           * @private
                                           * @category Utils
                                           * @param type - DOM node to check.
                                           * @returns Whether the node is a tag.
                                           */
exports.isTag = htmlparser2_1.DomUtils.isTag;
/**
                                               * Checks if an object is a Cheerio instance.
                                               *
                                               * @category Utils
                                               * @param maybeCheerio - The object to check.
                                               * @returns Whether the object is a Cheerio instance.
                                               */
function isCheerio(maybeCheerio) {
  return maybeCheerio.cheerio != null;
}
exports.isCheerio = isCheerio;
/**
                                * Convert a string to camel case notation.
                                *
                                * @private
                                * @category Utils
                                * @param str - String to be converted.
                                * @returns String in camel case notation.
                                */
function camelCase(str) {
  return str.replace(/[_.-](\w|$)/g, function (_, x) {return x.toUpperCase();});
}
exports.camelCase = camelCase;
/**
                                * Convert a string from camel case to "CSS case", where word boundaries are
                                * described by hyphens ("-") and all characters are lower-case.
                                *
                                * @private
                                * @category Utils
                                * @param str - String to be converted.
                                * @returns String in "CSS case".
                                */
function cssCase(str) {
  return str.replace(/[A-Z]/g, '-$&').toLowerCase();
}
exports.cssCase = cssCase;
/**
                            * Iterate over each DOM element without creating intermediary Cheerio instances.
                            *
                            * This is indented for use internally to avoid otherwise unnecessary memory
                            * pressure introduced by _make.
                            *
                            * @category Utils
                            * @param array - Array to iterate over.
                            * @param fn - Function to call.
                            * @returns The original instance.
                            */
function domEach(array, fn) {
  var len = array.length;
  for (var i = 0; i < len && fn(i, array[i]) !== false; i++) {
    ;}
  return array;
}
exports.domEach = domEach;
/**
                            * Create a deep copy of the given DOM structure. Sets the parents of the copies
                            * of the passed nodes to `null`.
                            *
                            * @private
                            * @category Utils
                            * @param dom - The htmlparser2-compliant DOM structure.
                            * @returns - The cloned DOM.
                            */
function cloneDom(dom) {
  var clone = 'length' in dom ?
  Array.prototype.map.call(dom, function (el) {return domhandler_1.cloneNode(el, true);}) :
  [domhandler_1.cloneNode(dom, true)];
  // Add a root node around the cloned nodes
  var root = new domhandler_1.Document(clone);
  clone.forEach(function (node) {
    node.parent = root;
  });
  return clone;
}
exports.cloneDom = cloneDom;
/**
                              * A simple way to check for HTML strings. Tests for a `<` within a string,
                              * immediate followed by a letter and eventually followed by a `>`.
                              *
                              * @private
                              */
var quickExpr = /<[a-zA-Z][^]*>/;
/**
                                   * Check if string is HTML.
                                   *
                                   * @private
                                   * @category Utils
                                   * @param str - String to check.
                                   * @returns Indicates if `str` is HTML.
                                   */
function isHtml(str) {
  // Run the regex
  return quickExpr.test(str);
}
exports.isHtml = isHtml;

/***/ }),
/* 101 */
/*!****************************************************************************************!*\
  !*** D:/projects/bookingVaccine/bookingVaccineMini/node_modules/cheerio/lib/static.js ***!
  \****************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
exports.merge = exports.contains = exports.root = exports.parseHTML = exports.text = exports.xml = exports.html = void 0;
var tslib_1 = __webpack_require__(/*! tslib */ 31);
var options_1 = tslib_1.__importStar(__webpack_require__(/*! ./options */ 99));
var cheerio_select_1 = __webpack_require__(/*! cheerio-select */ 102);
var htmlparser2_1 = __webpack_require__(/*! htmlparser2 */ 38);
var parse5_1 = __webpack_require__(/*! ./parsers/parse5 */ 73);
var htmlparser2_2 = __webpack_require__(/*! ./parsers/htmlparser2 */ 72);
/**
                                                       * Helper function to render a DOM.
                                                       *
                                                       * @param that - Cheerio instance to render.
                                                       * @param dom - The DOM to render. Defaults to `that`'s root.
                                                       * @param options - Options for rendering.
                                                       * @returns The rendered document.
                                                       */
function render(that, dom, options) {
  var _a, _b;
  if (!dom) {
    if ((_a = that === null || that === void 0 ? void 0 : that._root) === null || _a === void 0 ? void 0 : _a.children) {
      dom = that._root.children;
    } else
    {
      return '';
    }
  } else
  if (typeof dom === 'string') {
    dom = cheerio_select_1.select(dom, (_b = that === null || that === void 0 ? void 0 : that._root) !== null && _b !== void 0 ? _b : [], options);
  }
  return options.xmlMode || options._useHtmlParser2 ?
  // FIXME: Pull in new version of dom-serializer to fix this.
  htmlparser2_2.render(dom, options) :
  parse5_1.render(dom);
}
/**
   * Checks if a passed object is an options object.
   *
   * @param dom - Object to check if it is an options object.
   * @returns Whether the object is an options object.
   */
function isOptions(dom) {
  return typeof dom === 'object' &&
  dom != null &&
  !('length' in dom) &&
  !('type' in dom);
}
function html(dom, options) {
  /*
                              * Be flexible about parameters, sometimes we call html(),
                              * with options as only parameter
                              * check dom argument for dom element specific properties
                              * assume there is no 'length' or 'type' properties in the options object
                              */
  if (!options && isOptions(dom)) {
    options = dom;
    dom = undefined;
  }
  /*
     * Sometimes `$.html()` is used without preloading html,
     * so fallback non-existing options to the default ones.
     */
  options = tslib_1.__assign(tslib_1.__assign(tslib_1.__assign({}, options_1.default), this ? this._options : {}), options_1.flatten(options !== null && options !== void 0 ? options : {}));
  return render(this || undefined, dom, options);
}
exports.html = html;
/**
                      * Render the document as XML.
                      *
                      * @param dom - Element to render.
                      * @returns THe rendered document.
                      */
function xml(dom) {
  var options = tslib_1.__assign(tslib_1.__assign({}, this._options), { xmlMode: true });
  return render(this, dom, options);
}
exports.xml = xml;
/**
                    * Render the document as text.
                    *
                    * @param elements - Elements to render.
                    * @returns The rendered document.
                    */
function text(elements) {
  var elems = elements ? elements : this ? this.root() : [];
  var ret = '';
  for (var i = 0; i < elems.length; i++) {
    var elem = elems[i];
    if (htmlparser2_1.DomUtils.isText(elem))
    ret += elem.data;else
    if (htmlparser2_1.DomUtils.hasChildren(elem) &&
    elem.type !== htmlparser2_1.ElementType.Comment &&
    elem.type !== htmlparser2_1.ElementType.Script &&
    elem.type !== htmlparser2_1.ElementType.Style) {
      ret += text(elem.children);
    }
  }
  return ret;
}
exports.text = text;
function parseHTML(data, context, keepScripts) {
  if (keepScripts === void 0) {keepScripts = typeof context === 'boolean' ? context : false;}
  if (!data || typeof data !== 'string') {
    return null;
  }
  if (typeof context === 'boolean') {
    keepScripts = context;
  }
  var parsed = this.load(data, options_1.default, false);
  if (!keepScripts) {
    parsed('script').remove();
  }
  /*
     * The `children` array is used by Cheerio internally to group elements that
     * share the same parents. When nodes created through `parseHTML` are
     * inserted into previously-existing DOM structures, they will be removed
     * from the `children` array. The results of `parseHTML` should remain
     * constant across these operations, so a shallow copy should be returned.
     */
  return parsed.root()[0].children.slice();
}
exports.parseHTML = parseHTML;
/**
                                * Sometimes you need to work with the top-level root element. To query it, you
                                * can use `$.root()`.
                                *
                                * @example
                                *
                                * ```js
                                * $.root().append('<ul id="vegetables"></ul>').html();
                                * //=> <ul id="fruits">...</ul><ul id="vegetables"></ul>
                                * ```
                                *
                                * @returns Cheerio instance wrapping the root node.
                                * @alias Cheerio.root
                                */
function root() {
  var fn = this;
  return fn(this._root);
}
exports.root = root;
/**
                      * Checks to see if the `contained` DOM element is a descendant of the
                      * `container` DOM element.
                      *
                      * @param container - Potential parent node.
                      * @param contained - Potential child node.
                      * @returns Indicates if the nodes contain one another.
                      * @alias Cheerio.contains
                      * @see {@link https://api.jquery.com/jQuery.contains/}
                      */
function contains(container, contained) {
  // According to the jQuery API, an element does not "contain" itself
  if (contained === container) {
    return false;
  }
  /*
     * Step up the descendants, stopping when the root element is reached
     * (signaled by `.parent` returning a reference to the same object)
     */
  var next = contained;
  while (next && next !== next.parent) {
    next = next.parent;
    if (next === container) {
      return true;
    }
  }
  return false;
}
exports.contains = contains;
/**
                              * $.merge().
                              *
                              * @param arr1 - First array.
                              * @param arr2 - Second array.
                              * @returns `arr1`, with elements of `arr2` inserted.
                              * @alias Cheerio.merge
                              * @see {@link https://api.jquery.com/jQuery.merge/}
                              */
function merge(arr1, arr2) {
  if (!isArrayLike(arr1) || !isArrayLike(arr2)) {
    return;
  }
  var newLength = arr1.length;
  var len = +arr2.length;
  for (var i = 0; i < len; i++) {
    arr1[newLength++] = arr2[i];
  }
  arr1.length = newLength;
  return arr1;
}
exports.merge = merge;
/**
                        * @param item - Item to check.
                        * @returns Indicates if the item is array-like.
                        */
function isArrayLike(item) {
  if (Array.isArray(item)) {
    return true;
  }
  if (typeof item !== 'object' ||
  !Object.prototype.hasOwnProperty.call(item, 'length') ||
  typeof item.length !== 'number' ||
  item.length < 0) {
    return false;
  }
  for (var i = 0; i < item.length; i++) {
    if (!(i in item)) {
      return false;
    }
  }
  return true;
}

/***/ }),
/* 102 */
/*!**********************************************************************************************!*\
  !*** D:/projects/bookingVaccine/bookingVaccineMini/node_modules/cheerio-select/lib/index.js ***!
  \**********************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __assign = this && this.__assign || function () {
  __assign = Object.assign || function (t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s) {if (Object.prototype.hasOwnProperty.call(s, p))
        t[p] = s[p];}
    }
    return t;
  };
  return __assign.apply(this, arguments);
};
var __createBinding = this && this.__createBinding || (Object.create ? function (o, m, k, k2) {
  if (k2 === undefined) k2 = k;
  Object.defineProperty(o, k2, { enumerable: true, get: function get() {return m[k];} });
} : function (o, m, k, k2) {
  if (k2 === undefined) k2 = k;
  o[k2] = m[k];
});
var __setModuleDefault = this && this.__setModuleDefault || (Object.create ? function (o, v) {
  Object.defineProperty(o, "default", { enumerable: true, value: v });
} : function (o, v) {
  o["default"] = v;
});
var __importStar = this && this.__importStar || function (mod) {
  if (mod && mod.__esModule) return mod;
  var result = {};
  if (mod != null) for (var k in mod) {if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);}
  __setModuleDefault(result, mod);
  return result;
};
var __spreadArray = this && this.__spreadArray || function (to, from) {
  for (var i = 0, il = from.length, j = to.length; i < il; i++, j++) {
    to[j] = from[i];}
  return to;
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.select = exports.filter = exports.some = exports.is = exports.aliases = exports.pseudos = exports.filters = void 0;
var css_what_1 = __webpack_require__(/*! css-what */ 103);
var css_select_1 = __webpack_require__(/*! css-select */ 106);
var DomUtils = __importStar(__webpack_require__(/*! domutils */ 53));
var helpers_1 = __webpack_require__(/*! ./helpers */ 117);
var positionals_1 = __webpack_require__(/*! ./positionals */ 118);
// Re-export pseudo extension points
var css_select_2 = __webpack_require__(/*! css-select */ 106);
Object.defineProperty(exports, "filters", { enumerable: true, get: function get() {return css_select_2.filters;} });
Object.defineProperty(exports, "pseudos", { enumerable: true, get: function get() {return css_select_2.pseudos;} });
Object.defineProperty(exports, "aliases", { enumerable: true, get: function get() {return css_select_2.aliases;} });
/** Used to indicate a scope should be filtered. Might be ignored when filtering. */
var SCOPE_PSEUDO = {
  type: "pseudo",
  name: "scope",
  data: null };

/** Used for actually filtering for scope. */
var CUSTOM_SCOPE_PSEUDO = __assign({}, SCOPE_PSEUDO);
var UNIVERSAL_SELECTOR = { type: "universal", namespace: null };
function is(element, selector, options) {
  if (options === void 0) {options = {};}
  if (typeof selector === "function")
  return selector(element);
  var _a = helpers_1.groupSelectors(css_what_1.parse(selector, options)),plain = _a[0],filtered = _a[1];
  return plain.length > 0 && css_select_1.is(element, plain, options) ||
  filtered.some(function (sel) {return filterBySelector(sel, [element], options).length > 0;});
}
exports.is = is;
function some(elements, selector, options) {
  if (options === void 0) {options = {};}
  if (typeof selector === "function")
  return elements.some(selector);
  var _a = helpers_1.groupSelectors(css_what_1.parse(selector, options)),plain = _a[0],filtered = _a[1];
  return plain.length > 0 && elements.some(css_select_1._compileToken(plain, options)) ||
  filtered.some(function (sel) {return filterBySelector(sel, elements, options).length > 0;});
}
exports.some = some;
function filterByPosition(filter, elems, data, options) {
  var num = typeof data === "string" ? parseInt(data, 10) : NaN;
  switch (filter) {
    case "first":
    case "lt":
      // Already done in `getLimit`
      return elems;
    case "last":
      return elems.length > 0 ? [elems[elems.length - 1]] : elems;
    case "nth":
    case "eq":
      return isFinite(num) && Math.abs(num) < elems.length ?
      [num < 0 ? elems[elems.length + num] : elems[num]] :
      [];
    case "gt":
      return isFinite(num) ? elems.slice(num + 1) : [];
    case "even":
      return elems.filter(function (_, i) {return i % 2 === 0;});
    case "odd":
      return elems.filter(function (_, i) {return i % 2 === 1;});
    case "not":{
        var filtered_1 = new Set(filterParsed(data, elems, options));
        return elems.filter(function (e) {return !filtered_1.has(e);});
      }}

}
function filter(selector, elements, options) {
  if (options === void 0) {options = {};}
  return filterParsed(css_what_1.parse(selector, options), elements, options);
}
exports.filter = filter;
/**
                          * Filter a set of elements by a selector.
                          *
                          * Will return elements in the original order.
                          *
                          * @param selector Selector to filter by.
                          * @param elements Elements to filter.
                          * @param options Options for selector.
                          */
function filterParsed(selector, elements, options) {
  if (elements.length === 0)
  return [];
  var _a = helpers_1.groupSelectors(selector),plainSelectors = _a[0],filteredSelectors = _a[1];
  var found;
  if (plainSelectors.length) {
    var filtered = filterElements(elements, plainSelectors, options);
    // If there are no filters, just return
    if (filteredSelectors.length === 0) {
      return filtered;
    }
    // Otherwise, we have to do some filtering
    if (filtered.length) {
      found = new Set(filtered);
    }
  }
  for (var i = 0; i < filteredSelectors.length && (found === null || found === void 0 ? void 0 : found.size) !== elements.length; i++) {
    var filteredSelector = filteredSelectors[i];
    var missing = found ?
    elements.filter(function (e) {return !found.has(e);}) :
    elements;
    if (missing.length === 0)
    break;
    var filtered = filterBySelector(filteredSelector, elements, options);
    if (filtered.length) {
      if (!found) {
        /*
                    * If we haven't found anything before the last selector,
                    * just return what we found now.
                    */
        if (i === filteredSelectors.length - 1) {
          return filtered;
        }
        found = new Set(filtered);
      } else
      {
        filtered.forEach(function (el) {return found.add(el);});
      }
    }
  }
  return typeof found !== "undefined" ?
  found.size === elements.length ?
  elements :
  elements.filter(function (el) {return found.has(el);}) :
  [];
}
function filterBySelector(selector, elements, options) {
  if (selector.some(css_what_1.isTraversal)) {
    /*
                                               * Get one root node, run selector with the scope
                                               * set to all of our nodes.
                                               */
    var root = helpers_1.getDocumentRoot(elements[0]);
    var sel = __spreadArray(__spreadArray([], selector), [CUSTOM_SCOPE_PSEUDO]);
    return findFilterElements(root, sel, options, true, elements);
  }
  // Performance optimization: If we don't have to traverse, just filter set.
  return findFilterElements(elements, selector, options, false);
}
function select(selector, root, options) {
  if (options === void 0) {options = {};}
  if (typeof selector === "function") {
    return find(root, selector);
  }
  var _a = helpers_1.groupSelectors(css_what_1.parse(selector, options)),plain = _a[0],filtered = _a[1];
  var results = filtered.map(function (sel) {
    return findFilterElements(root, sel, options, true);
  });
  // Plain selectors can be queried in a single go
  if (plain.length) {
    results.push(findElements(root, plain, options, Infinity));
  }
  // If there was only a single selector, just return the result
  if (results.length === 1) {
    return results[0];
  }
  // Sort results, filtering for duplicates
  return DomUtils.uniqueSort(results.reduce(function (a, b) {return __spreadArray(__spreadArray([], a), b);}));
}
exports.select = select;
// Traversals that are treated differently in css-select.
var specialTraversal = new Set(["descendant", "adjacent"]);
function includesScopePseudo(t) {
  return t !== SCOPE_PSEUDO &&
  t.type === "pseudo" && (
  t.name === "scope" ||
  Array.isArray(t.data) &&
  t.data.some(function (data) {return data.some(includesScopePseudo);}));
}
function addContextIfScope(selector, options, scopeContext) {
  return scopeContext && selector.some(includesScopePseudo) ?
  __assign(__assign({}, options), { context: scopeContext }) : options;
}
/**
   *
   * @param root Element(s) to search from.
   * @param selector Selector to look for.
   * @param options Options for querying.
   * @param queryForSelector Query multiple levels deep for the initial selector, even if it doesn't contain a traversal.
   * @param scopeContext Optional context for a :scope.
   */
function findFilterElements(root, selector, options, queryForSelector, scopeContext) {
  var filterIndex = selector.findIndex(positionals_1.isFilter);
  var sub = selector.slice(0, filterIndex);
  var filter = selector[filterIndex];
  /*
                                       * Set the number of elements to retrieve.
                                       * Eg. for :first, we only have to get a single element.
                                       */
  var limit = positionals_1.getLimit(filter.name, filter.data);
  if (limit === 0)
  return [];
  var subOpts = addContextIfScope(sub, options, scopeContext);
  /*
                                                                * Skip `findElements` call if our selector starts with a positional
                                                                * pseudo.
                                                                */
  var elemsNoLimit = sub.length === 0 && !Array.isArray(root) ?
  DomUtils.getChildren(root).filter(DomUtils.isTag) :
  sub.length === 0 || sub.length === 1 && sub[0] === SCOPE_PSEUDO ?
  (Array.isArray(root) ? root : [root]).filter(DomUtils.isTag) :
  queryForSelector || sub.some(css_what_1.isTraversal) ?
  findElements(root, [sub], subOpts, limit) :
  filterElements(root, [sub], subOpts);
  var elems = elemsNoLimit.slice(0, limit);
  var result = filterByPosition(filter.name, elems, filter.data, options);
  if (result.length === 0 || selector.length === filterIndex + 1) {
    return result;
  }
  var remainingSelector = selector.slice(filterIndex + 1);
  var remainingHasTraversal = remainingSelector.some(css_what_1.isTraversal);
  var remainingOpts = addContextIfScope(remainingSelector, options, scopeContext);
  if (remainingHasTraversal) {
    /*
                               * Some types of traversals have special logic when they start a selector
                               * in css-select. If this is the case, add a universal selector in front of
                               * the selector to avoid this behavior.
                               */
    if (specialTraversal.has(remainingSelector[0].type)) {
      remainingSelector.unshift(UNIVERSAL_SELECTOR);
    }
    /*
       * Add a scope token in front of the remaining selector,
       * to make sure traversals don't match elements that aren't a
       * part of the considered tree.
       */
    remainingSelector.unshift(SCOPE_PSEUDO);
  }
  /*
     * If we have another filter, recursively call `findFilterElements`,
     * with the `recursive` flag disabled. We only have to look for more
     * elements when we see a traversal.
     *
     * Otherwise,
     */
  return remainingSelector.some(positionals_1.isFilter) ?
  findFilterElements(result, remainingSelector, options, false, scopeContext) :
  remainingHasTraversal ?
  // Query existing elements to resolve traversal.
  findElements(result, [remainingSelector], remainingOpts, Infinity) :
  // If we don't have any more traversals, simply filter elements.
  filterElements(result, [remainingSelector], remainingOpts);
}
function findElements(root, sel, options, limit) {
  if (limit === 0)
  return [];
  var query = css_select_1._compileToken(sel, options, root);
  return find(root, query, limit);
}
function find(root, query, limit) {
  if (limit === void 0) {limit = Infinity;}
  var elems = css_select_1.prepareContext(root, DomUtils, query.shouldTestNextSiblings);
  return DomUtils.find(function (node) {return DomUtils.isTag(node) && query(node);}, elems, true, limit);
}
function filterElements(elements, sel, options) {
  var els = (Array.isArray(elements) ? elements : [elements]).filter(DomUtils.isTag);
  if (els.length === 0)
  return els;
  var query = css_select_1._compileToken(sel, options);
  return els.filter(query);
}

/***/ }),
/* 103 */
/*!********************************************!*\
  !*** ./node_modules/css-what/lib/index.js ***!
  \********************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __exportStar = (this && this.__exportStar) || function(m, exports) {
    for (var p in m) if (p !== "default" && !exports.hasOwnProperty(p)) __createBinding(exports, m, p);
};
Object.defineProperty(exports, "__esModule", { value: true });
__exportStar(__webpack_require__(/*! ./parse */ 104), exports);
var parse_1 = __webpack_require__(/*! ./parse */ 104);
Object.defineProperty(exports, "parse", { enumerable: true, get: function () { return parse_1.default; } });
var stringify_1 = __webpack_require__(/*! ./stringify */ 105);
Object.defineProperty(exports, "stringify", { enumerable: true, get: function () { return stringify_1.default; } });


/***/ }),
/* 104 */
/*!********************************************!*\
  !*** ./node_modules/css-what/lib/parse.js ***!
  \********************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
exports.default = parse;
var reName = /^[^\\]?(?:\\(?:[\da-f]{1,6}\s?|.)|[\w\-\u00b0-\uFFFF])+/;
var reEscape = /\\([\da-f]{1,6}\s?|(\s)|.)/gi;
//modified version of https://github.com/jquery/sizzle/blob/master/src/sizzle.js#L87
var reAttr = /^\s*((?:\\.|[\w\u00b0-\uFFFF-])+)\s*(?:(\S?)=\s*(?:(['"])([^]*?)\3|(#?(?:\\.|[\w\u00b0-\uFFFF-])*)|)|)\s*(i)?\]/;
var actionTypes = {
    undefined: "exists",
    "": "equals",
    "~": "element",
    "^": "start",
    $: "end",
    "*": "any",
    "!": "not",
    "|": "hyphen",
};
var Traversals = {
    ">": "child",
    "<": "parent",
    "~": "sibling",
    "+": "adjacent",
};
var attribSelectors = {
    "#": ["id", "equals"],
    ".": ["class", "element"],
};
//pseudos, whose data-property is parsed as well
var unpackPseudos = new Set(["has", "not", "matches"]);
var stripQuotesFromPseudos = new Set(["contains", "icontains"]);
var quotes = new Set(['"', "'"]);
//unescape function taken from https://github.com/jquery/sizzle/blob/master/src/sizzle.js#L152
function funescape(_, escaped, escapedWhitespace) {
    var high = parseInt(escaped, 16) - 0x10000;
    // NaN means non-codepoint
    return high !== high || escapedWhitespace
        ? escaped
        : high < 0
            ? // BMP codepoint
                String.fromCharCode(high + 0x10000)
            : // Supplemental Plane codepoint (surrogate pair)
                String.fromCharCode((high >> 10) | 0xd800, (high & 0x3ff) | 0xdc00);
}
function unescapeCSS(str) {
    return str.replace(reEscape, funescape);
}
function isWhitespace(c) {
    return c === " " || c === "\n" || c === "\t" || c === "\f" || c === "\r";
}
function parse(selector, options) {
    var subselects = [];
    selector = parseSelector(subselects, "" + selector, options);
    if (selector !== "") {
        throw new Error("Unmatched selector: " + selector);
    }
    return subselects;
}
function parseSelector(subselects, selector, options) {
    var tokens = [];
    var sawWS = false;
    function getName() {
        var match = selector.match(reName);
        if (!match) {
            throw new Error("Expected name, found " + selector);
        }
        var sub = match[0];
        selector = selector.substr(sub.length);
        return unescapeCSS(sub);
    }
    function stripWhitespace(start) {
        while (isWhitespace(selector.charAt(start)))
            start++;
        selector = selector.substr(start);
    }
    function isEscaped(pos) {
        var slashCount = 0;
        while (selector.charAt(--pos) === "\\")
            slashCount++;
        return (slashCount & 1) === 1;
    }
    stripWhitespace(0);
    while (selector !== "") {
        var firstChar = selector.charAt(0);
        if (isWhitespace(firstChar)) {
            sawWS = true;
            stripWhitespace(1);
        }
        else if (firstChar in Traversals) {
            tokens.push({ type: Traversals[firstChar] });
            sawWS = false;
            stripWhitespace(1);
        }
        else if (firstChar === ",") {
            if (tokens.length === 0) {
                throw new Error("Empty sub-selector");
            }
            subselects.push(tokens);
            tokens = [];
            sawWS = false;
            stripWhitespace(1);
        }
        else {
            if (sawWS) {
                if (tokens.length > 0) {
                    tokens.push({ type: "descendant" });
                }
                sawWS = false;
            }
            if (firstChar === "*") {
                selector = selector.substr(1);
                tokens.push({ type: "universal" });
            }
            else if (firstChar in attribSelectors) {
                var _a = attribSelectors[firstChar], name_1 = _a[0], action = _a[1];
                selector = selector.substr(1);
                tokens.push({
                    type: "attribute",
                    name: name_1,
                    action: action,
                    value: getName(),
                    ignoreCase: false,
                });
            }
            else if (firstChar === "[") {
                selector = selector.substr(1);
                var data = selector.match(reAttr);
                if (!data) {
                    throw new Error("Malformed attribute selector: " + selector);
                }
                selector = selector.substr(data[0].length);
                var name_2 = unescapeCSS(data[1]);
                if (!options ||
                    ("lowerCaseAttributeNames" in options
                        ? options.lowerCaseAttributeNames
                        : !options.xmlMode)) {
                    name_2 = name_2.toLowerCase();
                }
                tokens.push({
                    type: "attribute",
                    name: name_2,
                    action: actionTypes[data[2]],
                    value: unescapeCSS(data[4] || data[5] || ""),
                    ignoreCase: !!data[6],
                });
            }
            else if (firstChar === ":") {
                if (selector.charAt(1) === ":") {
                    selector = selector.substr(2);
                    tokens.push({
                        type: "pseudo-element",
                        name: getName().toLowerCase(),
                    });
                    continue;
                }
                selector = selector.substr(1);
                var name_3 = getName().toLowerCase();
                var data = null;
                if (selector.charAt(0) === "(") {
                    if (unpackPseudos.has(name_3)) {
                        var quot = selector.charAt(1);
                        var quoted = quotes.has(quot);
                        selector = selector.substr(quoted ? 2 : 1);
                        data = [];
                        selector = parseSelector(data, selector, options);
                        if (quoted) {
                            if (selector.charAt(0) !== quot) {
                                throw new Error("Unmatched quotes in :" + name_3);
                            }
                            else {
                                selector = selector.substr(1);
                            }
                        }
                        if (selector.charAt(0) !== ")") {
                            throw new Error("Missing closing parenthesis in :" + name_3 + " (" + selector + ")");
                        }
                        selector = selector.substr(1);
                    }
                    else {
                        var pos = 1;
                        var counter = 1;
                        for (; counter > 0 && pos < selector.length; pos++) {
                            if (selector.charAt(pos) === "(" && !isEscaped(pos))
                                counter++;
                            else if (selector.charAt(pos) === ")" &&
                                !isEscaped(pos))
                                counter--;
                        }
                        if (counter) {
                            throw new Error("Parenthesis not matched");
                        }
                        data = selector.substr(1, pos - 2);
                        selector = selector.substr(pos);
                        if (stripQuotesFromPseudos.has(name_3)) {
                            var quot = data.charAt(0);
                            if (quot === data.slice(-1) && quotes.has(quot)) {
                                data = data.slice(1, -1);
                            }
                            data = unescapeCSS(data);
                        }
                    }
                }
                tokens.push({ type: "pseudo", name: name_3, data: data });
            }
            else if (reName.test(selector)) {
                var name_4 = getName();
                if (!options ||
                    ("lowerCaseTags" in options
                        ? options.lowerCaseTags
                        : !options.xmlMode)) {
                    name_4 = name_4.toLowerCase();
                }
                tokens.push({ type: "tag", name: name_4 });
            }
            else {
                if (tokens.length &&
                    tokens[tokens.length - 1].type === "descendant") {
                    tokens.pop();
                }
                addToken(subselects, tokens);
                return selector;
            }
        }
    }
    addToken(subselects, tokens);
    return selector;
}
function addToken(subselects, tokens) {
    if (subselects.length > 0 && tokens.length === 0) {
        throw new Error("Empty sub-selector");
    }
    subselects.push(tokens);
}


/***/ }),
/* 105 */
/*!************************************************!*\
  !*** ./node_modules/css-what/lib/stringify.js ***!
  \************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var actionTypes = {
    equals: "",
    element: "~",
    start: "^",
    end: "$",
    any: "*",
    not: "!",
    hyphen: "|",
};
function stringify(token) {
    return token.map(stringifySubselector).join(", ");
}
exports.default = stringify;
function stringifySubselector(token) {
    return token.map(stringifyToken).join("");
}
function stringifyToken(token) {
    switch (token.type) {
        // Simple types
        case "child":
            return " > ";
        case "parent":
            return " < ";
        case "sibling":
            return " ~ ";
        case "adjacent":
            return " + ";
        case "descendant":
            return " ";
        case "universal":
            return "*";
        case "tag":
            return escapeName(token.name);
        case "pseudo-element":
            return "::" + escapeName(token.name);
        case "pseudo":
            if (token.data === null)
                return ":" + escapeName(token.name);
            if (typeof token.data === "string") {
                return ":" + escapeName(token.name) + "(" + token.data + ")";
            }
            return ":" + escapeName(token.name) + "(" + stringify(token.data) + ")";
        case "attribute":
            if (token.action === "exists") {
                return "[" + escapeName(token.name) + "]";
            }
            if (token.name === "id" &&
                token.action === "equals" &&
                !token.ignoreCase) {
                return "#" + escapeName(token.value);
            }
            if (token.name === "class" &&
                token.action === "element" &&
                !token.ignoreCase) {
                return "." + escapeName(token.value);
            }
            return "[" + escapeName(token.name) + actionTypes[token.action] + "='" + escapeName(token.value) + "'" + (token.ignoreCase ? "i" : "") + "]";
        default:
            throw new Error("Unknown type");
    }
}
function escapeName(str) {
    //TODO
    return str;
}


/***/ }),
/* 106 */
/*!******************************************!*\
  !*** ./node_modules/css-select/index.js ***!
  \******************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


module.exports = CSSselect;

var DomUtils = __webpack_require__(/*! domutils */ 53);
var falseFunc = __webpack_require__(/*! boolbase */ 107).falseFunc;
var compileRaw = __webpack_require__(/*! ./lib/compile.js */ 108);

function wrapCompile(func) {
    return function addAdapter(selector, options, context) {
        options = options || {};
        options.adapter = options.adapter || DomUtils;

        return func(selector, options, context);
    };
}

var compile = wrapCompile(compileRaw);
var compileUnsafe = wrapCompile(compileRaw.compileUnsafe);

function getSelectorFunc(searchFunc) {
    return function select(query, elems, options) {
        options = options || {};
        options.adapter = options.adapter || DomUtils;

        if (typeof query !== "function") {
            query = compileUnsafe(query, options, elems);
        }
        if (query.shouldTestNextSiblings) {
            elems = appendNextSiblings((options && options.context) || elems, options.adapter);
        }
        if (!Array.isArray(elems)) elems = options.adapter.getChildren(elems);
        else elems = options.adapter.removeSubsets(elems);
        return searchFunc(query, elems, options);
    };
}

function getNextSiblings(elem, adapter) {
    var siblings = adapter.getSiblings(elem);
    if (!Array.isArray(siblings)) return [];
    siblings = siblings.slice(0);
    while (siblings.shift() !== elem);
    return siblings;
}

function appendNextSiblings(elems, adapter) {
    // Order matters because jQuery seems to check the children before the siblings
    if (!Array.isArray(elems)) elems = [elems];
    var newElems = elems.slice(0);

    for (var i = 0, len = elems.length; i < len; i++) {
        var nextSiblings = getNextSiblings(newElems[i], adapter);
        newElems.push.apply(newElems, nextSiblings);
    }
    return newElems;
}

var selectAll = getSelectorFunc(function selectAll(query, elems, options) {
    return query === falseFunc || !elems || elems.length === 0 ? [] : options.adapter.findAll(query, elems);
});

var selectOne = getSelectorFunc(function selectOne(query, elems, options) {
    return query === falseFunc || !elems || elems.length === 0 ? null : options.adapter.findOne(query, elems);
});

function is(elem, query, options) {
    options = options || {};
    options.adapter = options.adapter || DomUtils;
    return (typeof query === "function" ? query : compile(query, options))(elem);
}

/*
	the exported interface
*/
function CSSselect(query, elems, options) {
    return selectAll(query, elems, options);
}

CSSselect.compile = compile;
CSSselect.filters = compileRaw.Pseudos.filters;
CSSselect.pseudos = compileRaw.Pseudos.pseudos;

CSSselect.selectAll = selectAll;
CSSselect.selectOne = selectOne;

CSSselect.is = is;

//legacy methods (might be removed)
CSSselect.parse = compile;
CSSselect.iterate = selectAll;

//hooks
CSSselect._compileUnsafe = compileUnsafe;
CSSselect._compileToken = compileRaw.compileToken;


/***/ }),
/* 107 */
/*!****************************************!*\
  !*** ./node_modules/boolbase/index.js ***!
  \****************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = {
	trueFunc: function trueFunc(){
		return true;
	},
	falseFunc: function falseFunc(){
		return false;
	}
};

/***/ }),
/* 108 */
/*!************************************************!*\
  !*** ./node_modules/css-select/lib/compile.js ***!
  \************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

/*
	compiles a selector to an executable function
*/

module.exports = compile;

var parse = __webpack_require__(/*! css-what */ 103).parse;
var BaseFuncs = __webpack_require__(/*! boolbase */ 107);
var sortRules = __webpack_require__(/*! ./sort.js */ 109);
var procedure = __webpack_require__(/*! ./procedure.json */ 110);
var Rules = __webpack_require__(/*! ./general.js */ 111);
var Pseudos = __webpack_require__(/*! ./pseudos.js */ 113);
var trueFunc = BaseFuncs.trueFunc;
var falseFunc = BaseFuncs.falseFunc;

var filters = Pseudos.filters;

function compile(selector, options, context) {
    var next = compileUnsafe(selector, options, context);
    return wrap(next, options);
}

function wrap(next, options) {
    var adapter = options.adapter;

    return function base(elem) {
        return adapter.isTag(elem) && next(elem);
    };
}

function compileUnsafe(selector, options, context) {
    var token = parse(selector, options);
    return compileToken(token, options, context);
}

function includesScopePseudo(t) {
    return (
        t.type === "pseudo" &&
        (t.name === "scope" ||
            (Array.isArray(t.data) &&
                t.data.some(function(data) {
                    return data.some(includesScopePseudo);
                })))
    );
}

var DESCENDANT_TOKEN = { type: "descendant" };
var FLEXIBLE_DESCENDANT_TOKEN = { type: "_flexibleDescendant" };
var SCOPE_TOKEN = { type: "pseudo", name: "scope" };
var PLACEHOLDER_ELEMENT = {};

//CSS 4 Spec (Draft): 3.3.1. Absolutizing a Scope-relative Selector
//http://www.w3.org/TR/selectors4/#absolutizing
function absolutize(token, options, context) {
    var adapter = options.adapter;

    //TODO better check if context is document
    var hasContext =
        !!context &&
        !!context.length &&
        context.every(function(e) {
            return e === PLACEHOLDER_ELEMENT || !!adapter.getParent(e);
        });

    token.forEach(function(t) {
        if (t.length > 0 && isTraversal(t[0]) && t[0].type !== "descendant") {
            //don't return in else branch
        } else if (hasContext && !(Array.isArray(t) ? t.some(includesScopePseudo) : includesScopePseudo(t))) {
            t.unshift(DESCENDANT_TOKEN);
        } else {
            return;
        }

        t.unshift(SCOPE_TOKEN);
    });
}

function compileToken(token, options, context) {
    token = token.filter(function(t) {
        return t.length > 0;
    });

    token.forEach(sortRules);

    var isArrayContext = Array.isArray(context);

    context = (options && options.context) || context;

    if (context && !isArrayContext) context = [context];

    absolutize(token, options, context);

    var shouldTestNextSiblings = false;

    var query = token
        .map(function(rules) {
            if (rules[0] && rules[1] && rules[0].name === "scope") {
                var ruleType = rules[1].type;
                if (isArrayContext && ruleType === "descendant") {
                    rules[1] = FLEXIBLE_DESCENDANT_TOKEN;
                } else if (ruleType === "adjacent" || ruleType === "sibling") {
                    shouldTestNextSiblings = true;
                }
            }
            return compileRules(rules, options, context);
        })
        .reduce(reduceRules, falseFunc);

    query.shouldTestNextSiblings = shouldTestNextSiblings;

    return query;
}

function isTraversal(t) {
    return procedure[t.type] < 0;
}

function compileRules(rules, options, context) {
    return rules.reduce(function(func, rule) {
        if (func === falseFunc) return func;

        if (!(rule.type in Rules)) {
            throw new Error("Rule type " + rule.type + " is not supported by css-select");
        }

        return Rules[rule.type](func, rule, options, context);
    }, (options && options.rootFunc) || trueFunc);
}

function reduceRules(a, b) {
    if (b === falseFunc || a === trueFunc) {
        return a;
    }
    if (a === falseFunc || b === trueFunc) {
        return b;
    }

    return function combine(elem) {
        return a(elem) || b(elem);
    };
}

function containsTraversal(t) {
    return t.some(isTraversal);
}

//:not, :has and :matches have to compile selectors
//doing this in lib/pseudos.js would lead to circular dependencies,
//so we add them here
filters.not = function(next, token, options, context) {
    var opts = {
        xmlMode: !!(options && options.xmlMode),
        strict: !!(options && options.strict),
        adapter: options.adapter
    };

    if (opts.strict) {
        if (token.length > 1 || token.some(containsTraversal)) {
            throw new Error("complex selectors in :not aren't allowed in strict mode");
        }
    }

    var func = compileToken(token, opts, context);

    if (func === falseFunc) return next;
    if (func === trueFunc) return falseFunc;

    return function not(elem) {
        return !func(elem) && next(elem);
    };
};

filters.has = function(next, token, options) {
    var adapter = options.adapter;
    var opts = {
        xmlMode: !!(options && options.xmlMode),
        strict: !!(options && options.strict),
        adapter: adapter
    };

    //FIXME: Uses an array as a pointer to the current element (side effects)
    var context = token.some(containsTraversal) ? [PLACEHOLDER_ELEMENT] : null;

    var func = compileToken(token, opts, context);

    if (func === falseFunc) return falseFunc;
    if (func === trueFunc) {
        return function hasChild(elem) {
            return adapter.getChildren(elem).some(adapter.isTag) && next(elem);
        };
    }

    func = wrap(func, options);

    if (context) {
        return function has(elem) {
            return next(elem) && ((context[0] = elem), adapter.existsOne(func, adapter.getChildren(elem)));
        };
    }

    return function has(elem) {
        return next(elem) && adapter.existsOne(func, adapter.getChildren(elem));
    };
};

filters.matches = function(next, token, options, context) {
    var opts = {
        xmlMode: !!(options && options.xmlMode),
        strict: !!(options && options.strict),
        rootFunc: next,
        adapter: options.adapter
    };

    return compileToken(token, opts, context);
};

compile.compileToken = compileToken;
compile.compileUnsafe = compileUnsafe;
compile.Pseudos = Pseudos;


/***/ }),
/* 109 */
/*!*********************************************!*\
  !*** ./node_modules/css-select/lib/sort.js ***!
  \*********************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

module.exports = sortByProcedure;

/*
	sort the parts of the passed selector,
	as there is potential for optimization
	(some types of selectors are faster than others)
*/

var procedure = __webpack_require__(/*! ./procedure.json */ 110);

var attributes = {
    __proto__: null,
    exists: 10,
    equals: 8,
    not: 7,
    start: 6,
    end: 6,
    any: 5,
    hyphen: 4,
    element: 4
};

function sortByProcedure(arr) {
    var procs = arr.map(getProcedure);
    for (var i = 1; i < arr.length; i++) {
        var procNew = procs[i];

        if (procNew < 0) continue;

        for (var j = i - 1; j >= 0 && procNew < procs[j]; j--) {
            var token = arr[j + 1];
            arr[j + 1] = arr[j];
            arr[j] = token;
            procs[j + 1] = procs[j];
            procs[j] = procNew;
        }
    }
}

function getProcedure(token) {
    var proc = procedure[token.type];

    if (proc === procedure.attribute) {
        proc = attributes[token.action];

        if (proc === attributes.equals && token.name === "id") {
            //prefer ID selectors (eg. #ID)
            proc = 9;
        }

        if (token.ignoreCase) {
            //ignoreCase adds some overhead, prefer "normal" token
            //this is a binary operation, to ensure it's still an int
            proc >>= 1;
        }
    } else if (proc === procedure.pseudo) {
        if (!token.data) {
            proc = 3;
        } else if (token.name === "has" || token.name === "contains") {
            proc = 0; //expensive in any case
        } else if (token.name === "matches" || token.name === "not") {
            proc = 0;
            for (var i = 0; i < token.data.length; i++) {
                //TODO better handling of complex selectors
                if (token.data[i].length !== 1) continue;
                var cur = getProcedure(token.data[i][0]);
                //avoid executing :has or :contains
                if (cur === 0) {
                    proc = 0;
                    break;
                }
                if (cur > proc) proc = cur;
            }
            if (token.data.length > 1 && proc > 0) proc -= 1;
        } else {
            proc = 1;
        }
    }
    return proc;
}


/***/ }),
/* 110 */
/*!****************************************************!*\
  !*** ./node_modules/css-select/lib/procedure.json ***!
  \****************************************************/
/*! exports provided: universal, tag, attribute, pseudo, descendant, child, parent, sibling, adjacent, default */
/***/ (function(module) {

module.exports = JSON.parse("{\"universal\":50,\"tag\":30,\"attribute\":1,\"pseudo\":0,\"descendant\":-1,\"child\":-1,\"parent\":-1,\"sibling\":-1,\"adjacent\":-1}");

/***/ }),
/* 111 */
/*!************************************************!*\
  !*** ./node_modules/css-select/lib/general.js ***!
  \************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var attributes = __webpack_require__(/*! ./attributes.js */ 112);
var Pseudos = __webpack_require__(/*! ./pseudos */ 113);

/*
	all available rules
*/
module.exports = {
    __proto__: null,

    attribute: attributes.compile,
    pseudo: Pseudos.compile,

    //tags
    tag: function(next, data, options) {
        var name = data.name;
        var adapter = options.adapter;

        return function tag(elem) {
            return adapter.getName(elem) === name && next(elem);
        };
    },

    //traversal
    descendant: function(next, data, options) {
        // eslint-disable-next-line no-undef
        var isFalseCache = typeof WeakSet !== "undefined" ? new WeakSet() : null;
        var adapter = options.adapter;

        return function descendant(elem) {
            var found = false;

            while (!found && (elem = adapter.getParent(elem))) {
                if (!isFalseCache || !isFalseCache.has(elem)) {
                    found = next(elem);
                    if (!found && isFalseCache) {
                        isFalseCache.add(elem);
                    }
                }
            }

            return found;
        };
    },
    _flexibleDescendant: function(next, data, options) {
        var adapter = options.adapter;

        // Include element itself, only used while querying an array
        return function descendant(elem) {
            var found = next(elem);

            while (!found && (elem = adapter.getParent(elem))) {
                found = next(elem);
            }

            return found;
        };
    },
    parent: function(next, data, options) {
        if (options && options.strict) {
            throw new Error("Parent selector isn't part of CSS3");
        }

        var adapter = options.adapter;

        return function parent(elem) {
            return adapter.getChildren(elem).some(test);
        };

        function test(elem) {
            return adapter.isTag(elem) && next(elem);
        }
    },
    child: function(next, data, options) {
        var adapter = options.adapter;

        return function child(elem) {
            var parent = adapter.getParent(elem);
            return !!parent && next(parent);
        };
    },
    sibling: function(next, data, options) {
        var adapter = options.adapter;

        return function sibling(elem) {
            var siblings = adapter.getSiblings(elem);

            for (var i = 0; i < siblings.length; i++) {
                if (adapter.isTag(siblings[i])) {
                    if (siblings[i] === elem) break;
                    if (next(siblings[i])) return true;
                }
            }

            return false;
        };
    },
    adjacent: function(next, data, options) {
        var adapter = options.adapter;

        return function adjacent(elem) {
            var siblings = adapter.getSiblings(elem),
                lastElement;

            for (var i = 0; i < siblings.length; i++) {
                if (adapter.isTag(siblings[i])) {
                    if (siblings[i] === elem) break;
                    lastElement = siblings[i];
                }
            }

            return !!lastElement && next(lastElement);
        };
    },
    universal: function(next) {
        return next;
    }
};


/***/ }),
/* 112 */
/*!***************************************************!*\
  !*** ./node_modules/css-select/lib/attributes.js ***!
  \***************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var falseFunc = __webpack_require__(/*! boolbase */ 107).falseFunc;

//https://github.com/slevithan/XRegExp/blob/master/src/xregexp.js#L469
var reChars = /[-[\]{}()*+?.,\\^$|#\s]/g;

/*
	attribute selectors
*/
var attributeRules = {
    __proto__: null,
    equals: function(next, data, options) {
        var name = data.name;
        var value = data.value;
        var adapter = options.adapter;

        if (data.ignoreCase) {
            value = value.toLowerCase();

            return function equalsIC(elem) {
                var attr = adapter.getAttributeValue(elem, name);
                return attr != null && attr.toLowerCase() === value && next(elem);
            };
        }

        return function equals(elem) {
            return adapter.getAttributeValue(elem, name) === value && next(elem);
        };
    },
    hyphen: function(next, data, options) {
        var name = data.name;
        var value = data.value;
        var len = value.length;
        var adapter = options.adapter;

        if (data.ignoreCase) {
            value = value.toLowerCase();

            return function hyphenIC(elem) {
                var attr = adapter.getAttributeValue(elem, name);
                return (
                    attr != null &&
                    (attr.length === len || attr.charAt(len) === "-") &&
                    attr.substr(0, len).toLowerCase() === value &&
                    next(elem)
                );
            };
        }

        return function hyphen(elem) {
            var attr = adapter.getAttributeValue(elem, name);
            return (
                attr != null &&
                attr.substr(0, len) === value &&
                (attr.length === len || attr.charAt(len) === "-") &&
                next(elem)
            );
        };
    },
    element: function(next, data, options) {
        var name = data.name;
        var value = data.value;
        var adapter = options.adapter;

        if (/\s/.test(value)) {
            return falseFunc;
        }

        value = value.replace(reChars, "\\$&");

        var pattern = "(?:^|\\s)" + value + "(?:$|\\s)",
            flags = data.ignoreCase ? "i" : "",
            regex = new RegExp(pattern, flags);

        return function element(elem) {
            var attr = adapter.getAttributeValue(elem, name);
            return attr != null && regex.test(attr) && next(elem);
        };
    },
    exists: function(next, data, options) {
        var name = data.name;
        var adapter = options.adapter;

        return function exists(elem) {
            return adapter.hasAttrib(elem, name) && next(elem);
        };
    },
    start: function(next, data, options) {
        var name = data.name;
        var value = data.value;
        var len = value.length;
        var adapter = options.adapter;

        if (len === 0) {
            return falseFunc;
        }

        if (data.ignoreCase) {
            value = value.toLowerCase();

            return function startIC(elem) {
                var attr = adapter.getAttributeValue(elem, name);
                return attr != null && attr.substr(0, len).toLowerCase() === value && next(elem);
            };
        }

        return function start(elem) {
            var attr = adapter.getAttributeValue(elem, name);
            return attr != null && attr.substr(0, len) === value && next(elem);
        };
    },
    end: function(next, data, options) {
        var name = data.name;
        var value = data.value;
        var len = -value.length;
        var adapter = options.adapter;

        if (len === 0) {
            return falseFunc;
        }

        if (data.ignoreCase) {
            value = value.toLowerCase();

            return function endIC(elem) {
                var attr = adapter.getAttributeValue(elem, name);
                return attr != null && attr.substr(len).toLowerCase() === value && next(elem);
            };
        }

        return function end(elem) {
            var attr = adapter.getAttributeValue(elem, name);
            return attr != null && attr.substr(len) === value && next(elem);
        };
    },
    any: function(next, data, options) {
        var name = data.name;
        var value = data.value;
        var adapter = options.adapter;

        if (value === "") {
            return falseFunc;
        }

        if (data.ignoreCase) {
            var regex = new RegExp(value.replace(reChars, "\\$&"), "i");

            return function anyIC(elem) {
                var attr = adapter.getAttributeValue(elem, name);
                return attr != null && regex.test(attr) && next(elem);
            };
        }

        return function any(elem) {
            var attr = adapter.getAttributeValue(elem, name);
            return attr != null && attr.indexOf(value) >= 0 && next(elem);
        };
    },
    not: function(next, data, options) {
        var name = data.name;
        var value = data.value;
        var adapter = options.adapter;

        if (value === "") {
            return function notEmpty(elem) {
                return !!adapter.getAttributeValue(elem, name) && next(elem);
            };
        } else if (data.ignoreCase) {
            value = value.toLowerCase();

            return function notIC(elem) {
                var attr = adapter.getAttributeValue(elem, name);
                return attr != null && attr.toLowerCase() !== value && next(elem);
            };
        }

        return function not(elem) {
            return adapter.getAttributeValue(elem, name) !== value && next(elem);
        };
    }
};

module.exports = {
    compile: function(next, data, options) {
        if (options && options.strict && (data.ignoreCase || data.action === "not")) {
            throw new Error("Unsupported attribute selector");
        }
        return attributeRules[data.action](next, data, options);
    },
    rules: attributeRules
};


/***/ }),
/* 113 */
/*!************************************************!*\
  !*** ./node_modules/css-select/lib/pseudos.js ***!
  \************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

/*
	pseudo selectors

	---

	they are available in two forms:
	* filters called when the selector
	  is compiled and return a function
	  that needs to return next()
	* pseudos get called on execution
	  they need to return a boolean
*/

var getNCheck = __webpack_require__(/*! nth-check */ 114);
var BaseFuncs = __webpack_require__(/*! boolbase */ 107);
var attributes = __webpack_require__(/*! ./attributes.js */ 112);
var trueFunc = BaseFuncs.trueFunc;
var falseFunc = BaseFuncs.falseFunc;

var checkAttrib = attributes.rules.equals;

function getAttribFunc(name, value) {
    var data = { name: name, value: value };
    return function attribFunc(next, rule, options) {
        return checkAttrib(next, data, options);
    };
}

function getChildFunc(next, adapter) {
    return function(elem) {
        return !!adapter.getParent(elem) && next(elem);
    };
}

var filters = {
    contains: function(next, text, options) {
        var adapter = options.adapter;

        return function contains(elem) {
            return next(elem) && adapter.getText(elem).indexOf(text) >= 0;
        };
    },
    icontains: function(next, text, options) {
        var itext = text.toLowerCase();
        var adapter = options.adapter;

        return function icontains(elem) {
            return (
                next(elem) &&
                adapter
                    .getText(elem)
                    .toLowerCase()
                    .indexOf(itext) >= 0
            );
        };
    },

    //location specific methods
    "nth-child": function(next, rule, options) {
        var func = getNCheck(rule);
        var adapter = options.adapter;

        if (func === falseFunc) return func;
        if (func === trueFunc) return getChildFunc(next, adapter);

        return function nthChild(elem) {
            var siblings = adapter.getSiblings(elem);

            for (var i = 0, pos = 0; i < siblings.length; i++) {
                if (adapter.isTag(siblings[i])) {
                    if (siblings[i] === elem) break;
                    else pos++;
                }
            }

            return func(pos) && next(elem);
        };
    },
    "nth-last-child": function(next, rule, options) {
        var func = getNCheck(rule);
        var adapter = options.adapter;

        if (func === falseFunc) return func;
        if (func === trueFunc) return getChildFunc(next, adapter);

        return function nthLastChild(elem) {
            var siblings = adapter.getSiblings(elem);

            for (var pos = 0, i = siblings.length - 1; i >= 0; i--) {
                if (adapter.isTag(siblings[i])) {
                    if (siblings[i] === elem) break;
                    else pos++;
                }
            }

            return func(pos) && next(elem);
        };
    },
    "nth-of-type": function(next, rule, options) {
        var func = getNCheck(rule);
        var adapter = options.adapter;

        if (func === falseFunc) return func;
        if (func === trueFunc) return getChildFunc(next, adapter);

        return function nthOfType(elem) {
            var siblings = adapter.getSiblings(elem);

            for (var pos = 0, i = 0; i < siblings.length; i++) {
                if (adapter.isTag(siblings[i])) {
                    if (siblings[i] === elem) break;
                    if (adapter.getName(siblings[i]) === adapter.getName(elem)) pos++;
                }
            }

            return func(pos) && next(elem);
        };
    },
    "nth-last-of-type": function(next, rule, options) {
        var func = getNCheck(rule);
        var adapter = options.adapter;

        if (func === falseFunc) return func;
        if (func === trueFunc) return getChildFunc(next, adapter);

        return function nthLastOfType(elem) {
            var siblings = adapter.getSiblings(elem);

            for (var pos = 0, i = siblings.length - 1; i >= 0; i--) {
                if (adapter.isTag(siblings[i])) {
                    if (siblings[i] === elem) break;
                    if (adapter.getName(siblings[i]) === adapter.getName(elem)) pos++;
                }
            }

            return func(pos) && next(elem);
        };
    },

    //TODO determine the actual root element
    root: function(next, rule, options) {
        var adapter = options.adapter;

        return function(elem) {
            return !adapter.getParent(elem) && next(elem);
        };
    },

    scope: function(next, rule, options, context) {
        var adapter = options.adapter;

        if (!context || context.length === 0) {
            //equivalent to :root
            return filters.root(next, rule, options);
        }

        function equals(a, b) {
            if (typeof adapter.equals === "function") return adapter.equals(a, b);

            return a === b;
        }

        if (context.length === 1) {
            //NOTE: can't be unpacked, as :has uses this for side-effects
            return function(elem) {
                return equals(context[0], elem) && next(elem);
            };
        }

        return function(elem) {
            return context.indexOf(elem) >= 0 && next(elem);
        };
    },

    //jQuery extensions (others follow as pseudos)
    checkbox: getAttribFunc("type", "checkbox"),
    file: getAttribFunc("type", "file"),
    password: getAttribFunc("type", "password"),
    radio: getAttribFunc("type", "radio"),
    reset: getAttribFunc("type", "reset"),
    image: getAttribFunc("type", "image"),
    submit: getAttribFunc("type", "submit"),

    //dynamic state pseudos. These depend on optional Adapter methods.
    hover: function(next, rule, options) {
        var adapter = options.adapter;

        if (typeof adapter.isHovered === 'function') {
            return function hover(elem) {
                return next(elem) && adapter.isHovered(elem);
            };
        }

        return falseFunc;
    },
    visited: function(next, rule, options) {
        var adapter = options.adapter;

        if (typeof adapter.isVisited === 'function') {
            return function visited(elem) {
                return next(elem) && adapter.isVisited(elem);
            };
        }

        return falseFunc;
    },
    active: function(next, rule, options) {
        var adapter = options.adapter;

        if (typeof adapter.isActive === 'function') {
            return function active(elem) {
                return next(elem) && adapter.isActive(elem);
            };
        }

        return falseFunc;
    }
};

//helper methods
function getFirstElement(elems, adapter) {
    for (var i = 0; elems && i < elems.length; i++) {
        if (adapter.isTag(elems[i])) return elems[i];
    }
}

//while filters are precompiled, pseudos get called when they are needed
var pseudos = {
    empty: function(elem, adapter) {
        return !adapter.getChildren(elem).some(function(elem) {
            return adapter.isTag(elem) || elem.type === "text";
        });
    },

    "first-child": function(elem, adapter) {
        return getFirstElement(adapter.getSiblings(elem), adapter) === elem;
    },
    "last-child": function(elem, adapter) {
        var siblings = adapter.getSiblings(elem);

        for (var i = siblings.length - 1; i >= 0; i--) {
            if (siblings[i] === elem) return true;
            if (adapter.isTag(siblings[i])) break;
        }

        return false;
    },
    "first-of-type": function(elem, adapter) {
        var siblings = adapter.getSiblings(elem);

        for (var i = 0; i < siblings.length; i++) {
            if (adapter.isTag(siblings[i])) {
                if (siblings[i] === elem) return true;
                if (adapter.getName(siblings[i]) === adapter.getName(elem)) break;
            }
        }

        return false;
    },
    "last-of-type": function(elem, adapter) {
        var siblings = adapter.getSiblings(elem);

        for (var i = siblings.length - 1; i >= 0; i--) {
            if (adapter.isTag(siblings[i])) {
                if (siblings[i] === elem) return true;
                if (adapter.getName(siblings[i]) === adapter.getName(elem)) break;
            }
        }

        return false;
    },
    "only-of-type": function(elem, adapter) {
        var siblings = adapter.getSiblings(elem);

        for (var i = 0, j = siblings.length; i < j; i++) {
            if (adapter.isTag(siblings[i])) {
                if (siblings[i] === elem) continue;
                if (adapter.getName(siblings[i]) === adapter.getName(elem)) {
                    return false;
                }
            }
        }

        return true;
    },
    "only-child": function(elem, adapter) {
        var siblings = adapter.getSiblings(elem);

        for (var i = 0; i < siblings.length; i++) {
            if (adapter.isTag(siblings[i]) && siblings[i] !== elem) return false;
        }

        return true;
    },

    //:matches(a, area, link)[href]
    link: function(elem, adapter) {
        return adapter.hasAttrib(elem, "href");
    },
    //TODO: :any-link once the name is finalized (as an alias of :link)

    //forms
    //to consider: :target

    //:matches([selected], select:not([multiple]):not(> option[selected]) > option:first-of-type)
    selected: function(elem, adapter) {
        if (adapter.hasAttrib(elem, "selected")) return true;
        else if (adapter.getName(elem) !== "option") return false;

        //the first <option> in a <select> is also selected
        var parent = adapter.getParent(elem);

        if (!parent || adapter.getName(parent) !== "select" || adapter.hasAttrib(parent, "multiple")) {
            return false;
        }

        var siblings = adapter.getChildren(parent);
        var sawElem = false;

        for (var i = 0; i < siblings.length; i++) {
            if (adapter.isTag(siblings[i])) {
                if (siblings[i] === elem) {
                    sawElem = true;
                } else if (!sawElem) {
                    return false;
                } else if (adapter.hasAttrib(siblings[i], "selected")) {
                    return false;
                }
            }
        }

        return sawElem;
    },
    //https://html.spec.whatwg.org/multipage/scripting.html#disabled-elements
    //:matches(
    //  :matches(button, input, select, textarea, menuitem, optgroup, option)[disabled],
    //  optgroup[disabled] > option),
    // fieldset[disabled] * //TODO not child of first <legend>
    //)
    disabled: function(elem, adapter) {
        return adapter.hasAttrib(elem, "disabled");
    },
    enabled: function(elem, adapter) {
        return !adapter.hasAttrib(elem, "disabled");
    },
    //:matches(:matches(:radio, :checkbox)[checked], :selected) (TODO menuitem)
    checked: function(elem, adapter) {
        return adapter.hasAttrib(elem, "checked") || pseudos.selected(elem, adapter);
    },
    //:matches(input, select, textarea)[required]
    required: function(elem, adapter) {
        return adapter.hasAttrib(elem, "required");
    },
    //:matches(input, select, textarea):not([required])
    optional: function(elem, adapter) {
        return !adapter.hasAttrib(elem, "required");
    },

    //jQuery extensions

    //:not(:empty)
    parent: function(elem, adapter) {
        return !pseudos.empty(elem, adapter);
    },
    //:matches(h1, h2, h3, h4, h5, h6)
    header: namePseudo(["h1", "h2", "h3", "h4", "h5", "h6"]),

    //:matches(button, input[type=button])
    button: function(elem, adapter) {
        var name = adapter.getName(elem);
        return (
            name === "button" || (name === "input" && adapter.getAttributeValue(elem, "type") === "button")
        );
    },
    //:matches(input, textarea, select, button)
    input: namePseudo(["input", "textarea", "select", "button"]),
    //input:matches(:not([type!='']), [type='text' i])
    text: function(elem, adapter) {
        var attr;
        return (
            adapter.getName(elem) === "input" &&
            (!(attr = adapter.getAttributeValue(elem, "type")) || attr.toLowerCase() === "text")
        );
    }
};

function namePseudo(names) {
    if (typeof Set !== "undefined") {
        // eslint-disable-next-line no-undef
        var nameSet = new Set(names);

        return function(elem, adapter) {
            return nameSet.has(adapter.getName(elem));
        };
    }

    return function(elem, adapter) {
        return names.indexOf(adapter.getName(elem)) >= 0;
    };
}

function verifyArgs(func, name, subselect) {
    if (subselect === null) {
        if (func.length > 2 && name !== "scope") {
            throw new Error("pseudo-selector :" + name + " requires an argument");
        }
    } else {
        if (func.length === 2) {
            throw new Error("pseudo-selector :" + name + " doesn't have any arguments");
        }
    }
}

//FIXME this feels hacky
var re_CSS3 = /^(?:(?:nth|last|first|only)-(?:child|of-type)|root|empty|(?:en|dis)abled|checked|not)$/;

module.exports = {
    compile: function(next, data, options, context) {
        var name = data.name;
        var subselect = data.data;
        var adapter = options.adapter;

        if (options && options.strict && !re_CSS3.test(name)) {
            throw new Error(":" + name + " isn't part of CSS3");
        }

        if (typeof filters[name] === "function") {
            return filters[name](next, subselect, options, context);
        } else if (typeof pseudos[name] === "function") {
            var func = pseudos[name];

            verifyArgs(func, name, subselect);

            if (func === falseFunc) {
                return func;
            }

            if (next === trueFunc) {
                return function pseudoRoot(elem) {
                    return func(elem, adapter, subselect);
                };
            }

            return function pseudoArgs(elem) {
                return func(elem, adapter, subselect) && next(elem);
            };
        } else {
            throw new Error("unmatched pseudo-class :" + name);
        }
    },
    filters: filters,
    pseudos: pseudos
};


/***/ }),
/* 114 */
/*!*****************************************!*\
  !*** ./node_modules/nth-check/index.js ***!
  \*****************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var parse = __webpack_require__(/*! ./parse.js */ 115),
    compile = __webpack_require__(/*! ./compile.js */ 116);

module.exports = function nthCheck(formula){
	return compile(parse(formula));
};

module.exports.parse = parse;
module.exports.compile = compile;

/***/ }),
/* 115 */
/*!*****************************************!*\
  !*** ./node_modules/nth-check/parse.js ***!
  \*****************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = parse;

//following http://www.w3.org/TR/css3-selectors/#nth-child-pseudo

//[ ['-'|'+']? INTEGER? {N} [ S* ['-'|'+'] S* INTEGER ]?
var re_nthElement = /^([+\-]?\d*n)?\s*(?:([+\-]?)\s*(\d+))?$/;

/*
	parses a nth-check formula, returns an array of two numbers
*/
function parse(formula){
	formula = formula.trim().toLowerCase();

	if(formula === "even"){
		return [2, 0];
	} else if(formula === "odd"){
		return [2, 1];
	} else {
		var parsed = formula.match(re_nthElement);

		if(!parsed){
			throw new SyntaxError("n-th rule couldn't be parsed ('" + formula + "')");
		}

		var a;

		if(parsed[1]){
			a = parseInt(parsed[1], 10);
			if(isNaN(a)){
				if(parsed[1].charAt(0) === "-") a = -1;
				else a = 1;
			}
		} else a = 0;

		return [
			a,
			parsed[3] ? parseInt((parsed[2] || "") + parsed[3], 10) : 0
		];
	}
}


/***/ }),
/* 116 */
/*!*******************************************!*\
  !*** ./node_modules/nth-check/compile.js ***!
  \*******************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

module.exports = compile;

var BaseFuncs = __webpack_require__(/*! boolbase */ 107),
    trueFunc  = BaseFuncs.trueFunc,
    falseFunc = BaseFuncs.falseFunc;

/*
	returns a function that checks if an elements index matches the given rule
	highly optimized to return the fastest solution
*/
function compile(parsed){
	var a = parsed[0],
	    b = parsed[1] - 1;

	//when b <= 0, a*n won't be possible for any matches when a < 0
	//besides, the specification says that no element is matched when a and b are 0
	if(b < 0 && a <= 0) return falseFunc;

	//when a is in the range -1..1, it matches any element (so only b is checked)
	if(a ===-1) return function(pos){ return pos <= b; };
	if(a === 0) return function(pos){ return pos === b; };
	//when b <= 0 and a === 1, they match any element
	if(a === 1) return b < 0 ? trueFunc : function(pos){ return pos >= b; };

	//when a > 0, modulo can be used to check if there is a match
	var bMod = b % a;
	if(bMod < 0) bMod += a;

	if(a > 1){
		return function(pos){
			return pos >= b && pos % a === bMod;
		};
	}

	a *= -1; //make `a` positive

	return function(pos){
		return pos <= b && pos % a === bMod;
	};
}

/***/ }),
/* 117 */
/*!************************************************************************************************!*\
  !*** D:/projects/bookingVaccine/bookingVaccineMini/node_modules/cheerio-select/lib/helpers.js ***!
  \************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
exports.groupSelectors = exports.getDocumentRoot = void 0;
var positionals_1 = __webpack_require__(/*! ./positionals */ 118);
function getDocumentRoot(node) {
  while (node.parent) {
    node = node.parent;}
  return node;
}
exports.getDocumentRoot = getDocumentRoot;
function groupSelectors(selectors) {
  var filteredSelectors = [];
  var plainSelectors = [];
  for (var _i = 0, selectors_1 = selectors; _i < selectors_1.length; _i++) {
    var selector = selectors_1[_i];
    if (selector.some(positionals_1.isFilter)) {
      filteredSelectors.push(selector);
    } else
    {
      plainSelectors.push(selector);
    }
  }
  return [plainSelectors, filteredSelectors];
}
exports.groupSelectors = groupSelectors;

/***/ }),
/* 118 */
/*!****************************************************************************************************!*\
  !*** D:/projects/bookingVaccine/bookingVaccineMini/node_modules/cheerio-select/lib/positionals.js ***!
  \****************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
exports.getLimit = exports.isFilter = exports.filterNames = void 0;
exports.filterNames = new Set([
"first",
"last",
"eq",
"gt",
"nth",
"lt",
"even",
"odd"]);

function isFilter(s) {
  if (s.type !== "pseudo")
  return false;
  if (exports.filterNames.has(s.name))
  return true;
  if (s.name === "not" && Array.isArray(s.data)) {
    // Only consider `:not` with embedded filters
    return s.data.some(function (s) {return s.some(isFilter);});
  }
  return false;
}
exports.isFilter = isFilter;
function getLimit(filter, data) {
  var num = data != null ? parseInt(data, 10) : NaN;
  switch (filter) {
    case "first":
      return 1;
    case "nth":
    case "eq":
      return isFinite(num) ? num >= 0 ? num + 1 : Infinity : 0;
    case "lt":
      return isFinite(num) ? num >= 0 ? num : Infinity : 0;
    case "gt":
      return isFinite(num) ? Infinity : 0;
    default:
      return Infinity;}

}
exports.getLimit = getLimit;

/***/ }),
/* 119 */
/*!************************************************************************************************!*\
  !*** D:/projects/bookingVaccine/bookingVaccineMini/node_modules/cheerio/lib/api/attributes.js ***!
  \************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

/**
               * Methods for getting and modifying attributes.
               *
               * @module cheerio/attributes
               */
Object.defineProperty(exports, "__esModule", { value: true });
exports.is = exports.toggleClass = exports.removeClass = exports.addClass = exports.hasClass = exports.removeAttr = exports.val = exports.data = exports.prop = exports.attr = void 0;
var static_1 = __webpack_require__(/*! ../static */ 101);
var utils_1 = __webpack_require__(/*! ../utils */ 100);
var hasOwn = Object.prototype.hasOwnProperty;
var rspace = /\s+/;
var dataAttrPrefix = 'data-';
/*
                               * Lookup table for coercing string data-* attributes to their corresponding
                               * JavaScript primitives
                               */
var primitives = {
  null: null,
  true: true,
  false: false };

// Attributes that are booleans
var rboolean = /^(?:autofocus|autoplay|async|checked|controls|defer|disabled|hidden|loop|multiple|open|readonly|required|scoped|selected)$/i;
// Matches strings that look like JSON objects or arrays
var rbrace = /^(?:{[\w\W]*}|\[[\w\W]*])$/;
function getAttr(elem, name) {
  var _a;
  if (!elem || !utils_1.isTag(elem))
  return undefined;
  (_a = elem.attribs) !== null && _a !== void 0 ? _a : elem.attribs = {};
  // Return the entire attribs object if no attribute specified
  if (!name) {
    return elem.attribs;
  }
  if (hasOwn.call(elem.attribs, name)) {
    // Get the (decoded) attribute
    return rboolean.test(name) ? name : elem.attribs[name];
  }
  // Mimic the DOM and return text content as value for `option's`
  if (elem.name === 'option' && name === 'value') {
    return static_1.text(elem.children);
  }
  // Mimic DOM with default value for radios/checkboxes
  if (elem.name === 'input' && (
  elem.attribs.type === 'radio' || elem.attribs.type === 'checkbox') &&
  name === 'value') {
    return 'on';
  }
  return undefined;
}
/**
   * Sets the value of an attribute. The attribute will be deleted if the value is `null`.
   *
   * @private
   * @param el - The element to set the attribute on.
   * @param name - The attribute's name.
   * @param value - The attribute's value.
   */
function setAttr(el, name, value) {
  if (value === null) {
    removeAttribute(el, name);
  } else
  {
    el.attribs[name] = "" + value;
  }
}
function attr(name, value) {
  // Set the value (with attr map support)
  if (typeof name === 'object' || value !== undefined) {
    if (typeof value === 'function') {
      if (typeof name !== 'string') {
        {
          throw new Error('Bad combination of arguments.');
        }
      }
      return utils_1.domEach(this, function (i, el) {
        if (utils_1.isTag(el))
        setAttr(el, name, value.call(el, i, el.attribs[name]));
      });
    }
    return utils_1.domEach(this, function (_, el) {
      if (!utils_1.isTag(el))
      return;
      if (typeof name === 'object') {
        Object.keys(name).forEach(function (objName) {
          var objValue = name[objName];
          setAttr(el, objName, objValue);
        });
      } else
      {
        setAttr(el, name, value);
      }
    });
  }
  return arguments.length > 1 ? this : getAttr(this[0], name);
}
exports.attr = attr;
/**
                      * Gets a node's prop.
                      *
                      * @private
                      * @category Attributes
                      * @param el - Elenent to get the prop of.
                      * @param name - Name of the prop.
                      * @returns The prop's value.
                      */
function getProp(el, name) {
  if (!el || !utils_1.isTag(el))
  return;
  return name in el ?
  // @ts-expect-error TS doesn't like us accessing the value directly here.
  el[name] :
  rboolean.test(name) ?
  getAttr(el, name) !== undefined :
  getAttr(el, name);
}
/**
   * Sets the value of a prop.
   *
   * @private
   * @param el - The element to set the prop on.
   * @param name - The prop's name.
   * @param value - The prop's value.
   */
function setProp(el, name, value) {
  if (name in el) {
    // @ts-expect-error Overriding value
    el[name] = value;
  } else
  {
    setAttr(el, name, rboolean.test(name) ? value ? '' : null : "" + value);
  }
}
function prop(name, value) {
  if (typeof name === 'string' && value === undefined) {
    switch (name) {
      case 'style':{
          var property_1 = this.css();
          var keys = Object.keys(property_1);
          keys.forEach(function (p, i) {
            property_1[i] = p;
          });
          property_1.length = keys.length;
          return property_1;
        }
      case 'tagName':
      case 'nodeName':{
          var el = this[0];
          return utils_1.isTag(el) ? el.name.toUpperCase() : undefined;
        }
      case 'outerHTML':
        return this.clone().wrap('<container />').parent().html();
      case 'innerHTML':
        return this.html();
      default:
        return getProp(this[0], name);}

  }
  if (typeof name === 'object' || value !== undefined) {
    if (typeof value === 'function') {
      if (typeof name === 'object') {
        throw new Error('Bad combination of arguments.');
      }
      return utils_1.domEach(this, function (j, el) {
        if (utils_1.isTag(el))
        setProp(el, name, value.call(el, j, getProp(el, name)));
      });
    }
    return utils_1.domEach(this, function (__, el) {
      if (!utils_1.isTag(el))
      return;
      if (typeof name === 'object') {
        Object.keys(name).forEach(function (key) {
          var val = name[key];
          setProp(el, key, val);
        });
      } else
      {
        setProp(el, name, value);
      }
    });
  }
  return undefined;
}
exports.prop = prop;
/**
                      * Sets the value of a data attribute.
                      *
                      * @private
                      * @param el - The element to set the data attribute on.
                      * @param name - The data attribute's name.
                      * @param value - The data attribute's value.
                      */
function setData(el, name, value) {
  var _a;
  var elem = el;
  (_a = elem.data) !== null && _a !== void 0 ? _a : elem.data = {};
  if (typeof name === 'object')
  Object.assign(elem.data, name);else
  if (typeof name === 'string' && value !== undefined) {
    elem.data[name] = value;
  }
}
/**
   * Read the specified attribute from the equivalent HTML5 `data-*` attribute,
   * and (if present) cache the value in the node's internal data store. If no
   * attribute name is specified, read *all* HTML5 `data-*` attributes in this manner.
   *
   * @private
   * @category Attributes
   * @param el - Elenent to get the data attribute of.
   * @param name - Name of the data attribute.
   * @returns The data attribute's value, or a map with all of the data attribute.
   */
function readData(el, name) {
  var domNames;
  var jsNames;
  var value;
  if (name == null) {
    domNames = Object.keys(el.attribs).filter(function (attrName) {
      return attrName.startsWith(dataAttrPrefix);
    });
    jsNames = domNames.map(function (domName) {
      return utils_1.camelCase(domName.slice(dataAttrPrefix.length));
    });
  } else
  {
    domNames = [dataAttrPrefix + utils_1.cssCase(name)];
    jsNames = [name];
  }
  for (var idx = 0; idx < domNames.length; ++idx) {
    var domName = domNames[idx];
    var jsName = jsNames[idx];
    if (hasOwn.call(el.attribs, domName) &&
    !hasOwn.call(el.data, jsName)) {
      value = el.attribs[domName];
      if (hasOwn.call(primitives, value)) {
        value = primitives[value];
      } else
      if (value === String(Number(value))) {
        value = Number(value);
      } else
      if (rbrace.test(value)) {
        try {
          value = JSON.parse(value);
        }
        catch (e) {
          /* Ignore */
        }
      }
      el.data[jsName] = value;
    }
  }
  return name == null ? el.data : value;
}
function data(name, value) {
  var _a;
  var elem = this[0];
  if (!elem || !utils_1.isTag(elem))
  return;
  var dataEl = elem;
  (_a = dataEl.data) !== null && _a !== void 0 ? _a : dataEl.data = {};
  // Return the entire data object if no data specified
  if (!name) {
    return readData(dataEl);
  }
  // Set the value (with attr map support)
  if (typeof name === 'object' || value !== undefined) {
    utils_1.domEach(this, function (_, el) {
      if (utils_1.isTag(el))
      if (typeof name === 'object')
      setData(el, name);else

      setData(el, name, value);
    });
    return this;
  }
  if (hasOwn.call(dataEl.data, name)) {
    return dataEl.data[name];
  }
  return readData(dataEl, name);
}
exports.data = data;
function val(value) {
  var querying = arguments.length === 0;
  var element = this[0];
  if (!element || !utils_1.isTag(element))
  return querying ? undefined : this;
  switch (element.name) {
    case 'textarea':
      return this.text(value);
    case 'select':{
        var option = this.find('option:selected');
        if (!querying) {
          if (this.attr('multiple') == null && typeof value === 'object') {
            return this;
          }
          this.find('option').removeAttr('selected');
          var values = typeof value !== 'object' ? [value] : value;
          for (var i = 0; i < values.length; i++) {
            this.find("option[value=\"" + values[i] + "\"]").attr('selected', '');
          }
          return this;
        }
        return this.attr('multiple') ?
        option.toArray().map(function (el) {return static_1.text(el.children);}) :
        option.attr('value');
      }
    case 'input':
    case 'option':
      return querying ?
      this.attr('value') :
      this.attr('value', value);}

  return undefined;
}
exports.val = val;
/**
                    * Remove an attribute.
                    *
                    * @private
                    * @param elem - Node to remove attribute from.
                    * @param name - Name of the attribute to remove.
                    */
function removeAttribute(elem, name) {
  if (!elem.attribs || !hasOwn.call(elem.attribs, name))
  return;
  delete elem.attribs[name];
}
/**
   * Splits a space-separated list of names to individual names.
   *
   * @category Attributes
   * @param names - Names to split.
   * @returns - Split names.
   */
function splitNames(names) {
  return names ? names.trim().split(rspace) : [];
}
/**
   * Method for removing attributes by `name`.
   *
   * @category Attributes
   * @example
   *
   * ```js
   * $('.pear').removeAttr('class').html();
   * //=> <li>Pear</li>
   *
   * $('.apple').attr('id', 'favorite');
   * $('.apple').removeAttr('id class').html();
   * //=> <li>Apple</li>
   * ```
   *
   * @param name - Name of the attribute.
   * @returns The instance itself.
   * @see {@link https://api.jquery.com/removeAttr/}
   */
function removeAttr(name) {
  var attrNames = splitNames(name);
  var _loop_1 = function _loop_1(i) {
    utils_1.domEach(this_1, function (_, elem) {
      if (utils_1.isTag(elem))
      removeAttribute(elem, attrNames[i]);
    });
  };
  var this_1 = this;
  for (var i = 0; i < attrNames.length; i++) {
    _loop_1(i);
  }
  return this;
}
exports.removeAttr = removeAttr;
/**
                                  * Check to see if *any* of the matched elements have the given `className`.
                                  *
                                  * @category Attributes
                                  * @example
                                  *
                                  * ```js
                                  * $('.pear').hasClass('pear');
                                  * //=> true
                                  *
                                  * $('apple').hasClass('fruit');
                                  * //=> false
                                  *
                                  * $('li').hasClass('pear');
                                  * //=> true
                                  * ```
                                  *
                                  * @param className - Name of the class.
                                  * @returns Indicates if an element has the given `className`.
                                  * @see {@link https://api.jquery.com/hasClass/}
                                  */
function hasClass(className) {
  return this.toArray().some(function (elem) {
    var clazz = utils_1.isTag(elem) && elem.attribs.class;
    var idx = -1;
    if (clazz && className.length) {
      while ((idx = clazz.indexOf(className, idx + 1)) > -1) {
        var end = idx + className.length;
        if ((idx === 0 || rspace.test(clazz[idx - 1])) && (
        end === clazz.length || rspace.test(clazz[end]))) {
          return true;
        }
      }
    }
    return false;
  });
}
exports.hasClass = hasClass;
/**
                              * Adds class(es) to all of the matched elements. Also accepts a `function`.
                              *
                              * @category Attributes
                              * @example
                              *
                              * ```js
                              * $('.pear').addClass('fruit').html();
                              * //=> <li class="pear fruit">Pear</li>
                              *
                              * $('.apple').addClass('fruit red').html();
                              * //=> <li class="apple fruit red">Apple</li>
                              * ```
                              *
                              * @param value - Name of new class.
                              * @returns The instance itself.
                              * @see {@link https://api.jquery.com/addClass/}
                              */
function addClass(value) {
  // Support functions
  if (typeof value === 'function') {
    return utils_1.domEach(this, function (i, el) {
      if (utils_1.isTag(el)) {
        var className = el.attribs.class || '';
        addClass.call([el], value.call(el, i, className));
      }
    });
  }
  // Return if no value or not a string or function
  if (!value || typeof value !== 'string')
  return this;
  var classNames = value.split(rspace);
  var numElements = this.length;
  for (var i = 0; i < numElements; i++) {
    var el = this[i];
    // If selected element isn't a tag, move on
    if (!utils_1.isTag(el))
    continue;
    // If we don't already have classes
    var className = getAttr(el, 'class');
    if (!className) {
      setAttr(el, 'class', classNames.join(' ').trim());
    } else
    {
      var setClass = " " + className + " ";
      // Check if class already exists
      for (var j = 0; j < classNames.length; j++) {
        var appendClass = classNames[j] + " ";
        if (!setClass.includes(" " + appendClass))
        setClass += appendClass;
      }
      setAttr(el, 'class', setClass.trim());
    }
  }
  return this;
}
exports.addClass = addClass;
/**
                              * Removes one or more space-separated classes from the selected elements. If no
                              * `className` is defined, all classes will be removed. Also accepts a `function`.
                              *
                              * @category Attributes
                              * @example
                              *
                              * ```js
                              * $('.pear').removeClass('pear').html();
                              * //=> <li class="">Pear</li>
                              *
                              * $('.apple').addClass('red').removeClass().html();
                              * //=> <li class="">Apple</li>
                              * ```
                              *
                              * @param name - Name of the class. If not specified, removes all elements.
                              * @returns The instance itself.
                              * @see {@link https://api.jquery.com/removeClass/}
                              */
function removeClass(name) {
  // Handle if value is a function
  if (typeof name === 'function') {
    return utils_1.domEach(this, function (i, el) {
      if (utils_1.isTag(el))
      removeClass.call([el], name.call(el, i, el.attribs.class || ''));
    });
  }
  var classes = splitNames(name);
  var numClasses = classes.length;
  var removeAll = arguments.length === 0;
  return utils_1.domEach(this, function (_, el) {
    if (!utils_1.isTag(el))
    return;
    if (removeAll) {
      // Short circuit the remove all case as this is the nice one
      el.attribs.class = '';
    } else
    {
      var elClasses = splitNames(el.attribs.class);
      var changed = false;
      for (var j = 0; j < numClasses; j++) {
        var index = elClasses.indexOf(classes[j]);
        if (index >= 0) {
          elClasses.splice(index, 1);
          changed = true;
          /*
                           * We have to do another pass to ensure that there are not duplicate
                           * classes listed
                           */
          j--;
        }
      }
      if (changed) {
        el.attribs.class = elClasses.join(' ');
      }
    }
  });
}
exports.removeClass = removeClass;
/**
                                    * Add or remove class(es) from the matched elements, depending on either the
                                    * class's presence or the value of the switch argument. Also accepts a `function`.
                                    *
                                    * @category Attributes
                                    * @example
                                    *
                                    * ```js
                                    * $('.apple.green').toggleClass('fruit green red').html();
                                    * //=> <li class="apple fruit red">Apple</li>
                                    *
                                    * $('.apple.green').toggleClass('fruit green red', true).html();
                                    * //=> <li class="apple green fruit red">Apple</li>
                                    * ```
                                    *
                                    * @param value - Name of the class. Can also be a function.
                                    * @param stateVal - If specified the state of the class.
                                    * @returns The instance itself.
                                    * @see {@link https://api.jquery.com/toggleClass/}
                                    */
function toggleClass(value, stateVal) {
  // Support functions
  if (typeof value === 'function') {
    return utils_1.domEach(this, function (i, el) {
      if (utils_1.isTag(el)) {
        toggleClass.call([el], value.call(el, i, el.attribs.class || '', stateVal), stateVal);
      }
    });
  }
  // Return if no value or not a string or function
  if (!value || typeof value !== 'string')
  return this;
  var classNames = value.split(rspace);
  var numClasses = classNames.length;
  var state = typeof stateVal === 'boolean' ? stateVal ? 1 : -1 : 0;
  var numElements = this.length;
  for (var i = 0; i < numElements; i++) {
    var el = this[i];
    // If selected element isn't a tag, move on
    if (!utils_1.isTag(el))
    continue;
    var elementClasses = splitNames(el.attribs.class);
    // Check if class already exists
    for (var j = 0; j < numClasses; j++) {
      // Check if the class name is currently defined
      var index = elementClasses.indexOf(classNames[j]);
      // Add if stateValue === true or we are toggling and there is no value
      if (state >= 0 && index < 0) {
        elementClasses.push(classNames[j]);
      } else
      if (state <= 0 && index >= 0) {
        // Otherwise remove but only if the item exists
        elementClasses.splice(index, 1);
      }
    }
    el.attribs.class = elementClasses.join(' ');
  }
  return this;
}
exports.toggleClass = toggleClass;
/**
                                    * Checks the current list of elements and returns `true` if *any* of the
                                    * elements match the selector. If using an element or Cheerio selection,
                                    * returns `true` if *any* of the elements match. If using a predicate function,
                                    * the function is executed in the context of the selected element, so `this`
                                    * refers to the current element.
                                    *
                                    * @category Attributes
                                    * @param selector - Selector for the selection.
                                    * @returns Whether or not the selector matches an element of the instance.
                                    * @see {@link https://api.jquery.com/is/}
                                    */
function is(selector) {
  if (selector) {
    return this.filter(selector).length > 0;
  }
  return false;
}
exports.is = is;

/***/ }),
/* 120 */
/*!************************************************************************************************!*\
  !*** D:/projects/bookingVaccine/bookingVaccineMini/node_modules/cheerio/lib/api/traversing.js ***!
  \************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

/**
               * Methods for traversing the DOM structure.
               *
               * @module cheerio/traversing
               */
Object.defineProperty(exports, "__esModule", { value: true });
exports.addBack = exports.add = exports.end = exports.slice = exports.index = exports.get = exports.eq = exports.last = exports.first = exports.has = exports.not = exports.filter = exports.map = exports.each = exports.contents = exports.children = exports.siblings = exports.prevUntil = exports.prevAll = exports.prev = exports.nextUntil = exports.nextAll = exports.next = exports.closest = exports.parentsUntil = exports.parents = exports.parent = exports.find = void 0;
var tslib_1 = __webpack_require__(/*! tslib */ 31);
var domhandler_1 = __webpack_require__(/*! domhandler */ 48);
var select = tslib_1.__importStar(__webpack_require__(/*! cheerio-select */ 102));
var utils_1 = __webpack_require__(/*! ../utils */ 100);
var htmlparser2_1 = __webpack_require__(/*! htmlparser2 */ 38);
var uniqueSort = htmlparser2_1.DomUtils.uniqueSort;
var reSiblingSelector = /^\s*[~+]/;
/**
                                     * Get the descendants of each element in the current set of matched elements,
                                     * filtered by a selector, jQuery object, or element.
                                     *
                                     * @category Traversing
                                     * @example
                                     *
                                     * ```js
                                     * $('#fruits').find('li').length;
                                     * //=> 3
                                     * $('#fruits').find($('.apple')).length;
                                     * //=> 1
                                     * ```
                                     *
                                     * @param selectorOrHaystack - Element to look for.
                                     * @returns The found elements.
                                     * @see {@link https://api.jquery.com/find/}
                                     */
function find(selectorOrHaystack) {
  if (!selectorOrHaystack) {
    return this._make([]);
  }
  var context = this.toArray();
  if (typeof selectorOrHaystack !== 'string') {
    var contains_1 = this.constructor.contains;
    var haystack = utils_1.isCheerio(selectorOrHaystack) ?
    selectorOrHaystack.get() :
    [selectorOrHaystack];
    return this._make(haystack.filter(function (elem) {return context.some(function (node) {return contains_1(node, elem);});}));
  }
  var elems = reSiblingSelector.test(selectorOrHaystack) ?
  context :
  context.reduce(function (newElems, elem) {
    return domhandler_1.hasChildren(elem) ?
    newElems.concat(elem.children.filter(utils_1.isTag)) :
    newElems;
  }, []);
  var options = { context: context, xmlMode: this.options.xmlMode };
  return this._make(select.select(selectorOrHaystack, elems, options));
}
exports.find = find;
/**
                      * Get the parent of each element in the current set of matched elements,
                      * optionally filtered by a selector.
                      *
                      * @category Traversing
                      * @example
                      *
                      * ```js
                      * $('.pear').parent().attr('id');
                      * //=> fruits
                      * ```
                      *
                      * @param selector - If specified filter for parent.
                      * @returns The parents.
                      * @see {@link https://api.jquery.com/parent/}
                      */
function parent(selector) {
  var set = [];
  utils_1.domEach(this, function (_, elem) {
    var parentElem = elem.parent;
    if (parentElem &&
    parentElem.type !== 'root' &&
    !set.includes(parentElem)) {
      set.push(parentElem);
    }
  });
  return selector ? filter.call(set, selector, this) : this._make(set);
}
exports.parent = parent;
/**
                          * Get a set of parents filtered by `selector` of each element in the current
                          * set of match elements.
                          *
                          * @category Traversing
                          * @example
                          *
                          * ```js
                          * $('.orange').parents().length;
                          * //=> 2
                          * $('.orange').parents('#fruits').length;
                          * //=> 1
                          * ```
                          *
                          * @param selector - If specified filter for parents.
                          * @returns The parents.
                          * @see {@link https://api.jquery.com/parents/}
                          */
function parents(selector) {
  var _this = this;
  var parentNodes = [];
  /*
                         * When multiple DOM elements are in the original set, the resulting set will
                         * be in *reverse* order of the original elements as well, with duplicates
                         * removed.
                         */
  this.get().
  reverse().
  forEach(function (elem) {
    return traverseParents(_this, elem.parent, selector, Infinity).forEach(function (node) {
      // We know these must be `Element`s, as we filter out root nodes.
      if (!parentNodes.includes(node)) {
        parentNodes.push(node);
      }
    });
  });
  return this._make(parentNodes);
}
exports.parents = parents;
/**
                            * Get the ancestors of each element in the current set of matched elements, up
                            * to but not including the element matched by the selector, DOM node, or cheerio object.
                            *
                            * @category Traversing
                            * @example
                            *
                            * ```js
                            * $('.orange').parentsUntil('#food').length;
                            * //=> 1
                            * ```
                            *
                            * @param selector - Selector for element to stop at.
                            * @param filterBy - Optional filter for parents.
                            * @returns The parents.
                            * @see {@link https://api.jquery.com/parentsUntil/}
                            */
function parentsUntil(selector, filterBy) {
  var parentNodes = [];
  var untilNode;
  var untilNodes;
  if (typeof selector === 'string') {
    untilNodes = this.parents(selector).toArray();
  } else
  if (selector && utils_1.isCheerio(selector)) {
    untilNodes = selector.toArray();
  } else
  if (selector) {
    untilNode = selector;
  }
  /*
     * When multiple DOM elements are in the original set, the resulting set will
     * be in *reverse* order of the original elements as well, with duplicates
     * removed.
     */
  this.toArray().
  reverse().
  forEach(function (elem) {
    while (elem.parent) {
      elem = elem.parent;
      if (untilNode && elem !== untilNode ||
      untilNodes && !untilNodes.includes(elem) ||
      !untilNode && !untilNodes) {
        if (utils_1.isTag(elem) && !parentNodes.includes(elem)) {
          parentNodes.push(elem);
        }
      } else
      {
        break;
      }
    }
  }, this);
  return filterBy ?
  filter.call(parentNodes, filterBy, this) :
  this._make(parentNodes);
}
exports.parentsUntil = parentsUntil;
/**
                                      * For each element in the set, get the first element that matches the selector
                                      * by testing the element itself and traversing up through its ancestors in the DOM tree.
                                      *
                                      * @category Traversing
                                      * @example
                                      *
                                      * ```js
                                      * $('.orange').closest();
                                      * //=> []
                                      *
                                      * $('.orange').closest('.apple');
                                      * // => []
                                      *
                                      * $('.orange').closest('li');
                                      * //=> [<li class="orange">Orange</li>]
                                      *
                                      * $('.orange').closest('#fruits');
                                      * //=> [<ul id="fruits"> ... </ul>]
                                      * ```
                                      *
                                      * @param selector - Selector for the element to find.
                                      * @returns The closest nodes.
                                      * @see {@link https://api.jquery.com/closest/}
                                      */
function closest(selector) {
  var _this = this;
  var set = [];
  if (!selector) {
    return this._make(set);
  }
  utils_1.domEach(this, function (_, elem) {
    var closestElem = traverseParents(_this, elem, selector, 1)[0];
    // Do not add duplicate elements to the set
    if (closestElem && !set.includes(closestElem)) {
      set.push(closestElem);
    }
  });
  return this._make(set);
}
exports.closest = closest;
/**
                            * Gets the next sibling of the first selected element, optionally filtered by a selector.
                            *
                            * @category Traversing
                            * @example
                            *
                            * ```js
                            * $('.apple').next().hasClass('orange');
                            * //=> true
                            * ```
                            *
                            * @param selector - If specified filter for sibling.
                            * @returns The next nodes.
                            * @see {@link https://api.jquery.com/next/}
                            */
function next(selector) {
  var elems = [];
  utils_1.domEach(this, function (_, elem) {
    while (elem.next) {
      elem = elem.next;
      if (utils_1.isTag(elem)) {
        elems.push(elem);
        return;
      }
    }
  });
  return selector ? filter.call(elems, selector, this) : this._make(elems);
}
exports.next = next;
/**
                      * Gets all the following siblings of the first selected element, optionally
                      * filtered by a selector.
                      *
                      * @category Traversing
                      * @example
                      *
                      * ```js
                      * $('.apple').nextAll();
                      * //=> [<li class="orange">Orange</li>, <li class="pear">Pear</li>]
                      * $('.apple').nextAll('.orange');
                      * //=> [<li class="orange">Orange</li>]
                      * ```
                      *
                      * @param selector - If specified filter for siblings.
                      * @returns The next nodes.
                      * @see {@link https://api.jquery.com/nextAll/}
                      */
function nextAll(selector) {
  var elems = [];
  utils_1.domEach(this, function (_, elem) {
    while (elem.next) {
      elem = elem.next;
      if (utils_1.isTag(elem) && !elems.includes(elem)) {
        elems.push(elem);
      }
    }
  });
  return selector ? filter.call(elems, selector, this) : this._make(elems);
}
exports.nextAll = nextAll;
/**
                            * Gets all the following siblings up to but not including the element matched
                            * by the selector, optionally filtered by another selector.
                            *
                            * @category Traversing
                            * @example
                            *
                            * ```js
                            * $('.apple').nextUntil('.pear');
                            * //=> [<li class="orange">Orange</li>]
                            * ```
                            *
                            * @param selector - Selector for element to stop at.
                            * @param filterSelector - If specified filter for siblings.
                            * @returns The next nodes.
                            * @see {@link https://api.jquery.com/nextUntil/}
                            */
function nextUntil(selector, filterSelector) {
  var elems = [];
  var untilNode;
  var untilNodes;
  if (typeof selector === 'string') {
    untilNodes = this.nextAll(selector).toArray();
  } else
  if (selector && utils_1.isCheerio(selector)) {
    untilNodes = selector.get();
  } else
  if (selector) {
    untilNode = selector;
  }
  utils_1.domEach(this, function (_, elem) {
    while (elem.next) {
      elem = elem.next;
      if (untilNode && elem !== untilNode ||
      untilNodes && !untilNodes.includes(elem) ||
      !untilNode && !untilNodes) {
        if (utils_1.isTag(elem) && !elems.includes(elem)) {
          elems.push(elem);
        }
      } else
      {
        break;
      }
    }
  });
  return filterSelector ?
  filter.call(elems, filterSelector, this) :
  this._make(elems);
}
exports.nextUntil = nextUntil;
/**
                                * Gets the previous sibling of the first selected element optionally filtered
                                * by a selector.
                                *
                                * @category Traversing
                                * @example
                                *
                                * ```js
                                * $('.orange').prev().hasClass('apple');
                                * //=> true
                                * ```
                                *
                                * @param selector - If specified filter for siblings.
                                * @returns The previous nodes.
                                * @see {@link https://api.jquery.com/prev/}
                                */
function prev(selector) {
  var elems = [];
  utils_1.domEach(this, function (_, elem) {
    while (elem.prev) {
      elem = elem.prev;
      if (utils_1.isTag(elem)) {
        elems.push(elem);
        return;
      }
    }
  });
  return selector ? filter.call(elems, selector, this) : this._make(elems);
}
exports.prev = prev;
/**
                      * Gets all the preceding siblings of the first selected element, optionally
                      * filtered by a selector.
                      *
                      * @category Traversing
                      * @example
                      *
                      * ```js
                      * $('.pear').prevAll();
                      * //=> [<li class="orange">Orange</li>, <li class="apple">Apple</li>]
                      *
                      * $('.pear').prevAll('.orange');
                      * //=> [<li class="orange">Orange</li>]
                      * ```
                      *
                      * @param selector - If specified filter for siblings.
                      * @returns The previous nodes.
                      * @see {@link https://api.jquery.com/prevAll/}
                      */
function prevAll(selector) {
  var elems = [];
  utils_1.domEach(this, function (_, elem) {
    while (elem.prev) {
      elem = elem.prev;
      if (utils_1.isTag(elem) && !elems.includes(elem)) {
        elems.push(elem);
      }
    }
  });
  return selector ? filter.call(elems, selector, this) : this._make(elems);
}
exports.prevAll = prevAll;
/**
                            * Gets all the preceding siblings up to but not including the element matched
                            * by the selector, optionally filtered by another selector.
                            *
                            * @category Traversing
                            * @example
                            *
                            * ```js
                            * $('.pear').prevUntil('.apple');
                            * //=> [<li class="orange">Orange</li>]
                            * ```
                            *
                            * @param selector - Selector for element to stop at.
                            * @param filterSelector - If specified filter for siblings.
                            * @returns The previous nodes.
                            * @see {@link https://api.jquery.com/prevUntil/}
                            */
function prevUntil(selector, filterSelector) {
  var elems = [];
  var untilNode;
  var untilNodes;
  if (typeof selector === 'string') {
    untilNodes = this.prevAll(selector).toArray();
  } else
  if (selector && utils_1.isCheerio(selector)) {
    untilNodes = selector.get();
  } else
  if (selector) {
    untilNode = selector;
  }
  utils_1.domEach(this, function (_, elem) {
    while (elem.prev) {
      elem = elem.prev;
      if (untilNode && elem !== untilNode ||
      untilNodes && !untilNodes.includes(elem) ||
      !untilNode && !untilNodes) {
        if (utils_1.isTag(elem) && !elems.includes(elem)) {
          elems.push(elem);
        }
      } else
      {
        break;
      }
    }
  });
  return filterSelector ?
  filter.call(elems, filterSelector, this) :
  this._make(elems);
}
exports.prevUntil = prevUntil;
/**
                                * Get the siblings of each element (excluding the element) in the set of
                                * matched elements, optionally filtered by a selector.
                                *
                                * @category Traversing
                                * @example
                                *
                                * ```js
                                * $('.pear').siblings().length;
                                * //=> 2
                                *
                                * $('.pear').siblings('.orange').length;
                                * //=> 1
                                * ```
                                *
                                * @param selector - If specified filter for siblings.
                                * @returns The siblings.
                                * @see {@link https://api.jquery.com/siblings/}
                                */
function siblings(selector) {
  var _this = this;
  // TODO Still get siblings if `parent` is null; see DomUtils' `getSiblings`.
  var parent = this.parent();
  var elems = parent.
  children().
  toArray()
  // TODO: This removes all elements in the selection. Note that they could be added here, if siblings are part of the selection.
  .filter(function (elem) {return !_this.is(elem);});
  return selector ? filter.call(elems, selector, this) : this._make(elems);
}
exports.siblings = siblings;
/**
                              * Gets the children of the first selected element.
                              *
                              * @category Traversing
                              * @example
                              *
                              * ```js
                              * $('#fruits').children().length;
                              * //=> 3
                              *
                              * $('#fruits').children('.pear').text();
                              * //=> Pear
                              * ```
                              *
                              * @param selector - If specified filter for children.
                              * @returns The children.
                              * @see {@link https://api.jquery.com/children/}
                              */
function children(selector) {
  var elems = this.toArray().reduce(function (newElems, elem) {
    return domhandler_1.hasChildren(elem) ?
    newElems.concat(elem.children.filter(utils_1.isTag)) :
    newElems;
  }, []);
  return selector ? filter.call(elems, selector, this) : this._make(elems);
}
exports.children = children;
/**
                              * Gets the children of each element in the set of matched elements, including
                              * text and comment nodes.
                              *
                              * @category Traversing
                              * @example
                              *
                              * ```js
                              * $('#fruits').contents().length;
                              * //=> 3
                              * ```
                              *
                              * @returns The children.
                              * @see {@link https://api.jquery.com/contents/}
                              */
function contents() {
  var elems = this.toArray().reduce(function (newElems, elem) {
    return domhandler_1.hasChildren(elem) ? newElems.concat(elem.children) : newElems;
  }, []);
  return this._make(elems);
}
exports.contents = contents;
/**
                              * Iterates over a cheerio object, executing a function for each matched
                              * element. When the callback is fired, the function is fired in the context of
                              * the DOM element, so `this` refers to the current element, which is equivalent
                              * to the function parameter `element`. To break out of the `each` loop early,
                              * return with `false`.
                              *
                              * @category Traversing
                              * @example
                              *
                              * ```js
                              * const fruits = [];
                              *
                              * $('li').each(function (i, elem) {
                              *   fruits[i] = $(this).text();
                              * });
                              *
                              * fruits.join(', ');
                              * //=> Apple, Orange, Pear
                              * ```
                              *
                              * @param fn - Function to execute.
                              * @returns The instance itself, useful for chaining.
                              * @see {@link https://api.jquery.com/each/}
                              */
function each(fn) {
  var i = 0;
  var len = this.length;
  while (i < len && fn.call(this[i], i, this[i]) !== false) {
    ++i;}
  return this;
}
exports.each = each;
/**
                      * Pass each element in the current matched set through a function, producing a
                      * new Cheerio object containing the return values. The function can return an
                      * individual data item or an array of data items to be inserted into the
                      * resulting set. If an array is returned, the elements inside the array are
                      * inserted into the set. If the function returns null or undefined, no element
                      * will be inserted.
                      *
                      * @category Traversing
                      * @example
                      *
                      * ```js
                      * $('li')
                      *   .map(function (i, el) {
                      *     // this === el
                      *     return $(this).text();
                      *   })
                      *   .toArray()
                      *   .join(' ');
                      * //=> "apple orange pear"
                      * ```
                      *
                      * @param fn - Function to execute.
                      * @returns The mapped elements, wrapped in a Cheerio collection.
                      * @see {@link https://api.jquery.com/map/}
                      */
function map(fn) {
  var elems = [];
  for (var i = 0; i < this.length; i++) {
    var el = this[i];
    var val = fn.call(el, i, el);
    if (val != null) {
      elems = elems.concat(val);
    }
  }
  return this._make(elems);
}
exports.map = map;
function getFilterFn(match) {
  if (typeof match === 'function') {
    return function (el, i) {
      return match.call(el, i, el);
    };
  }
  if (utils_1.isCheerio(match)) {
    return match.is.bind(match);
  }
  return function (el) {
    return match === el;
  };
}
/**
   * Iterates over a cheerio object, reducing the set of selector elements to
   * those that match the selector or pass the function's test. When a Cheerio
   * selection is specified, return only the elements contained in that selection.
   * When an element is specified, return only that element (if it is contained in
   * the original selection). If using the function method, the function is
   * executed in the context of the selected element, so `this` refers to the
   * current element.
   *
   * @category Traversing
   * @example <caption>Selector</caption>
   *
   * ```js
   * $('li').filter('.orange').attr('class');
   * //=> orange
   * ```
   *
   * @example <caption>Function</caption>
   *
   * ```js
   * $('li')
   *   .filter(function (i, el) {
   *     // this === el
   *     return $(this).attr('class') === 'orange';
   *   })
   *   .attr('class'); //=> orange
   * ```
   *
   * @param match - Value to look for, following the rules above.
   * @param container - Optional node to filter instead.
   * @returns The filtered collection.
   * @see {@link https://api.jquery.com/filter/}
   */
function filter(match, container) {
  if (container === void 0) {container = this;}
  if (!utils_1.isCheerio(container)) {
    throw new Error('Not able to create a Cheerio instance.');
  }
  var nodes = utils_1.isCheerio(this) ? this.toArray() : this;
  var elements = nodes.filter(utils_1.isTag);
  elements =
  typeof match === 'string' ?
  select.filter(match, elements, container.options) :
  elements.filter(getFilterFn(match));
  return container._make(elements);
}
exports.filter = filter;
/**
                          * Remove elements from the set of matched elements. Given a Cheerio object that
                          * represents a set of DOM elements, the `.not()` method constructs a new
                          * Cheerio object from a subset of the matching elements. The supplied selector
                          * is tested against each element; the elements that don't match the selector
                          * will be included in the result.
                          *
                          * The `.not()` method can take a function as its argument in the same way that
                          * `.filter()` does. Elements for which the function returns `true` are excluded
                          * from the filtered set; all other elements are included.
                          *
                          * @category Traversing
                          * @example <caption>Selector</caption>
                          *
                          * ```js
                          * $('li').not('.apple').length;
                          * //=> 2
                          * ```
                          *
                          * @example <caption>Function</caption>
                          *
                          * ```js
                          * $('li').not(function (i, el) {
                          *   // this === el
                          *   return $(this).attr('class') === 'orange';
                          * }).length; //=> 2
                          * ```
                          *
                          * @param match - Value to look for, following the rules above.
                          * @param container - Optional node to filter instead.
                          * @returns The filtered collection.
                          * @see {@link https://api.jquery.com/not/}
                          */
function not(match, container) {
  if (container === void 0) {container = this;}
  if (!utils_1.isCheerio(container)) {
    throw new Error('Not able to create a Cheerio instance.');
  }
  var nodes = utils_1.isCheerio(this) ? this.toArray() : this;
  if (typeof match === 'string') {
    var elements = nodes.filter(utils_1.isTag);
    var matches_1 = new Set(select.filter(match, elements, container.options));
    nodes = nodes.filter(function (el) {return !matches_1.has(el);});
  } else
  {
    var filterFn_1 = getFilterFn(match);
    nodes = nodes.filter(function (el, i) {return !filterFn_1(el, i);});
  }
  return container._make(nodes);
}
exports.not = not;
/**
                    * Filters the set of matched elements to only those which have the given DOM
                    * element as a descendant or which have a descendant that matches the given
                    * selector. Equivalent to `.filter(':has(selector)')`.
                    *
                    * @category Traversing
                    * @example <caption>Selector</caption>
                    *
                    * ```js
                    * $('ul').has('.pear').attr('id');
                    * //=> fruits
                    * ```
                    *
                    * @example <caption>Element</caption>
                    *
                    * ```js
                    * $('ul').has($('.pear')[0]).attr('id');
                    * //=> fruits
                    * ```
                    *
                    * @param selectorOrHaystack - Element to look for.
                    * @returns The filtered collection.
                    * @see {@link https://api.jquery.com/has/}
                    */
function has(selectorOrHaystack) {
  var _this = this;
  return filter.call(this, typeof selectorOrHaystack === 'string' ?
  // Using the `:has` selector here short-circuits searches.
  ":has(" + selectorOrHaystack + ")" :
  function (_, el) {return _this._make(el).find(selectorOrHaystack).length > 0;});
}
exports.has = has;
/**
                    * Will select the first element of a cheerio object.
                    *
                    * @category Traversing
                    * @example
                    *
                    * ```js
                    * $('#fruits').children().first().text();
                    * //=> Apple
                    * ```
                    *
                    * @returns The first element.
                    * @see {@link https://api.jquery.com/first/}
                    */
function first() {
  return this.length > 1 ? this._make(this[0]) : this;
}
exports.first = first;
/**
                        * Will select the last element of a cheerio object.
                        *
                        * @category Traversing
                        * @example
                        *
                        * ```js
                        * $('#fruits').children().last().text();
                        * //=> Pear
                        * ```
                        *
                        * @returns The last element.
                        * @see {@link https://api.jquery.com/last/}
                        */
function last() {
  return this.length > 0 ? this._make(this[this.length - 1]) : this;
}
exports.last = last;
/**
                      * Reduce the set of matched elements to the one at the specified index. Use
                      * `.eq(-i)` to count backwards from the last selected element.
                      *
                      * @category Traversing
                      * @example
                      *
                      * ```js
                      * $('li').eq(0).text();
                      * //=> Apple
                      *
                      * $('li').eq(-1).text();
                      * //=> Pear
                      * ```
                      *
                      * @param i - Index of the element to select.
                      * @returns The element at the `i`th position.
                      * @see {@link https://api.jquery.com/eq/}
                      */
function eq(i) {
  var _a;
  i = +i;
  // Use the first identity optimization if possible
  if (i === 0 && this.length <= 1)
  return this;
  if (i < 0)
  i = this.length + i;
  return this._make((_a = this[i]) !== null && _a !== void 0 ? _a : []);
}
exports.eq = eq;
function get(i) {
  if (i == null) {
    return Array.prototype.slice.call(this);
  }
  return this[i < 0 ? this.length + i : i];
}
exports.get = get;
/**
                    * Search for a given element from among the matched elements.
                    *
                    * @category Traversing
                    * @example
                    *
                    * ```js
                    * $('.pear').index();
                    * //=> 2 $('.orange').index('li');
                    * //=> 1
                    * $('.apple').index($('#fruit, li'));
                    * //=> 1
                    * ```
                    *
                    * @param selectorOrNeedle - Element to look for.
                    * @returns The index of the element.
                    * @see {@link https://api.jquery.com/index/}
                    */
function index(selectorOrNeedle) {
  var $haystack;
  var needle;
  if (selectorOrNeedle == null) {
    $haystack = this.parent().children();
    needle = this[0];
  } else
  if (typeof selectorOrNeedle === 'string') {
    $haystack = this._make(selectorOrNeedle);
    needle = this[0];
  } else
  {
    $haystack = this;
    needle = utils_1.isCheerio(selectorOrNeedle) ?
    selectorOrNeedle[0] :
    selectorOrNeedle;
  }
  return $haystack.get().indexOf(needle);
}
exports.index = index;
/**
                        * Gets the elements matching the specified range (0-based position).
                        *
                        * @category Traversing
                        * @example
                        *
                        * ```js
                        * $('li').slice(1).eq(0).text();
                        * //=> 'Orange'
                        *
                        * $('li').slice(1, 2).length;
                        * //=> 1
                        * ```
                        *
                        * @param start - An position at which the elements begin to be selected. If
                        *   negative, it indicates an offset from the end of the set.
                        * @param end - An position at which the elements stop being selected. If
                        *   negative, it indicates an offset from the end of the set. If omitted, the
                        *   range continues until the end of the set.
                        * @returns The elements matching the specified range.
                        * @see {@link https://api.jquery.com/slice/}
                        */
function slice(start, end) {
  return this._make(Array.prototype.slice.call(this, start, end));
}
exports.slice = slice;
function traverseParents(self, elem, selector, limit) {
  var elems = [];
  while (elem && elems.length < limit && elem.type !== 'root') {
    if (!selector || filter.call([elem], selector, self).length) {
      elems.push(elem);
    }
    elem = elem.parent;
  }
  return elems;
}
/**
   * End the most recent filtering operation in the current chain and return the
   * set of matched elements to its previous state.
   *
   * @category Traversing
   * @example
   *
   * ```js
   * $('li').eq(0).end().length;
   * //=> 3
   * ```
   *
   * @returns The previous state of the set of matched elements.
   * @see {@link https://api.jquery.com/end/}
   */
function end() {
  var _a;
  return (_a = this.prevObject) !== null && _a !== void 0 ? _a : this._make([]);
}
exports.end = end;
/**
                    * Add elements to the set of matched elements.
                    *
                    * @category Traversing
                    * @example
                    *
                    * ```js
                    * $('.apple').add('.orange').length;
                    * //=> 2
                    * ```
                    *
                    * @param other - Elements to add.
                    * @param context - Optionally the context of the new selection.
                    * @returns The combined set.
                    * @see {@link https://api.jquery.com/add/}
                    */
function add(other, context) {
  var selection = this._make(other, context);
  var contents = uniqueSort(tslib_1.__spreadArray(tslib_1.__spreadArray([], this.get()), selection.get()));
  return this._make(contents);
}
exports.add = add;
/**
                    * Add the previous set of elements on the stack to the current set, optionally
                    * filtered by a selector.
                    *
                    * @category Traversing
                    * @example
                    *
                    * ```js
                    * $('li').eq(0).addBack('.orange').length;
                    * //=> 2
                    * ```
                    *
                    * @param selector - Selector for the elements to add.
                    * @returns The combined set.
                    * @see {@link https://api.jquery.com/addBack/}
                    */
function addBack(selector) {
  return this.prevObject ?
  this.add(selector ? this.prevObject.filter(selector) : this.prevObject) :
  this;
}
exports.addBack = addBack;

/***/ }),
/* 121 */
/*!**************************************************************************************************!*\
  !*** D:/projects/bookingVaccine/bookingVaccineMini/node_modules/cheerio/lib/api/manipulation.js ***!
  \**************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
exports.clone = exports.text = exports.toString = exports.html = exports.empty = exports.replaceWith = exports.remove = exports.insertBefore = exports.before = exports.insertAfter = exports.after = exports.wrapAll = exports.unwrap = exports.wrapInner = exports.wrap = exports.prepend = exports.append = exports.prependTo = exports.appendTo = exports._makeDomArray = void 0;
var tslib_1 = __webpack_require__(/*! tslib */ 31);
var domhandler_1 = __webpack_require__(/*! domhandler */ 48);
/**
                                           * Methods for modifying the DOM structure.
                                           *
                                           * @module cheerio/manipulation
                                           */
var domhandler_2 = __webpack_require__(/*! domhandler */ 48);
var parse_1 = tslib_1.__importStar(__webpack_require__(/*! ../parse */ 33));
var static_1 = __webpack_require__(/*! ../static */ 101);
var utils_1 = __webpack_require__(/*! ../utils */ 100);
var htmlparser2_1 = __webpack_require__(/*! htmlparser2 */ 38);
/**
                                             * Create an array of nodes, recursing into arrays and parsing strings if necessary.
                                             *
                                             * @private
                                             * @category Manipulation
                                             * @param elem - Elements to make an array of.
                                             * @param clone - Optionally clone nodes.
                                             * @returns The array of nodes.
                                             */
function _makeDomArray(elem, clone) {
  var _this = this;
  if (elem == null) {
    return [];
  }
  if (utils_1.isCheerio(elem)) {
    return clone ? utils_1.cloneDom(elem.get()) : elem.get();
  }
  if (Array.isArray(elem)) {
    return elem.reduce(function (newElems, el) {return newElems.concat(_this._makeDomArray(el, clone));}, []);
  }
  if (typeof elem === 'string') {
    return parse_1.default(elem, this.options, false).children;
  }
  return clone ? utils_1.cloneDom([elem]) : [elem];
}
exports._makeDomArray = _makeDomArray;
function _insert(concatenator) {
  return function () {
    var _this = this;
    var elems = [];
    for (var _i = 0; _i < arguments.length; _i++) {
      elems[_i] = arguments[_i];
    }
    var lastIdx = this.length - 1;
    return utils_1.domEach(this, function (i, el) {
      if (!domhandler_1.hasChildren(el))
      return;
      var domSrc = typeof elems[0] === 'function' ?
      elems[0].call(el, i, static_1.html(el.children)) :
      elems;
      var dom = _this._makeDomArray(domSrc, i < lastIdx);
      concatenator(dom, el.children, el);
    });
  };
}
/**
   * Modify an array in-place, removing some number of elements and adding new
   * elements directly following them.
   *
   * @private
   * @category Manipulation
   * @param array - Target array to splice.
   * @param spliceIdx - Index at which to begin changing the array.
   * @param spliceCount - Number of elements to remove from the array.
   * @param newElems - Elements to insert into the array.
   * @param parent - The parent of the node.
   * @returns The spliced array.
   */
function uniqueSplice(array, spliceIdx, spliceCount, newElems, parent) {
  var _a, _b;
  var spliceArgs = tslib_1.__spreadArray([
  spliceIdx,
  spliceCount],
  newElems);
  var prev = array[spliceIdx - 1] || null;
  var next = array[spliceIdx + spliceCount] || null;
  /*
                                                      * Before splicing in new elements, ensure they do not already appear in the
                                                      * current array.
                                                      */
  for (var idx = 0; idx < newElems.length; ++idx) {
    var node = newElems[idx];
    var oldParent = node.parent;
    if (oldParent) {
      var prevIdx = oldParent.children.indexOf(newElems[idx]);
      if (prevIdx > -1) {
        oldParent.children.splice(prevIdx, 1);
        if (parent === oldParent && spliceIdx > prevIdx) {
          spliceArgs[0]--;
        }
      }
    }
    node.parent = parent;
    if (node.prev) {
      node.prev.next = (_a = node.next) !== null && _a !== void 0 ? _a : null;
    }
    if (node.next) {
      node.next.prev = (_b = node.prev) !== null && _b !== void 0 ? _b : null;
    }
    node.prev = newElems[idx - 1] || prev;
    node.next = newElems[idx + 1] || next;
  }
  if (prev) {
    prev.next = newElems[0];
  }
  if (next) {
    next.prev = newElems[newElems.length - 1];
  }
  return array.splice.apply(array, spliceArgs);
}
/**
   * Insert every element in the set of matched elements to the end of the target.
   *
   * @category Manipulation
   * @example
   *
   * ```js
   * $('<li class="plum">Plum</li>').appendTo('#fruits');
   * $.html();
   * //=>  <ul id="fruits">
   * //      <li class="apple">Apple</li>
   * //      <li class="orange">Orange</li>
   * //      <li class="pear">Pear</li>
   * //      <li class="plum">Plum</li>
   * //    </ul>
   * ```
   *
   * @param target - Element to append elements to.
   * @returns The instance itself.
   * @see {@link https://api.jquery.com/appendTo/}
   */
function appendTo(target) {
  var appendTarget = utils_1.isCheerio(target) ?
  target :
  this._make(target, null, this._originalRoot);
  appendTarget.append(this);
  return this;
}
exports.appendTo = appendTo;
/**
                              * Insert every element in the set of matched elements to the beginning of the target.
                              *
                              * @category Manipulation
                              * @example
                              *
                              * ```js
                              * $('<li class="plum">Plum</li>').prependTo('#fruits');
                              * $.html();
                              * //=>  <ul id="fruits">
                              * //      <li class="plum">Plum</li>
                              * //      <li class="apple">Apple</li>
                              * //      <li class="orange">Orange</li>
                              * //      <li class="pear">Pear</li>
                              * //    </ul>
                              * ```
                              *
                              * @param target - Element to prepend elements to.
                              * @returns The instance itself.
                              * @see {@link https://api.jquery.com/prependTo/}
                              */
function prependTo(target) {
  var prependTarget = utils_1.isCheerio(target) ?
  target :
  this._make(target, null, this._originalRoot);
  prependTarget.prepend(this);
  return this;
}
exports.prependTo = prependTo;
/**
                                * Inserts content as the *last* child of each of the selected elements.
                                *
                                * @category Manipulation
                                * @example
                                *
                                * ```js
                                * $('ul').append('<li class="plum">Plum</li>');
                                * $.html();
                                * //=>  <ul id="fruits">
                                * //      <li class="apple">Apple</li>
                                * //      <li class="orange">Orange</li>
                                * //      <li class="pear">Pear</li>
                                * //      <li class="plum">Plum</li>
                                * //    </ul>
                                * ```
                                *
                                * @see {@link https://api.jquery.com/append/}
                                */
exports.append = _insert(function (dom, children, parent) {
  uniqueSplice(children, children.length, 0, dom, parent);
});
/**
     * Inserts content as the *first* child of each of the selected elements.
     *
     * @category Manipulation
     * @example
     *
     * ```js
     * $('ul').prepend('<li class="plum">Plum</li>');
     * $.html();
     * //=>  <ul id="fruits">
     * //      <li class="plum">Plum</li>
     * //      <li class="apple">Apple</li>
     * //      <li class="orange">Orange</li>
     * //      <li class="pear">Pear</li>
     * //    </ul>
     * ```
     *
     * @see {@link https://api.jquery.com/prepend/}
     */
exports.prepend = _insert(function (dom, children, parent) {
  uniqueSplice(children, 0, 0, dom, parent);
});
function _wrap(insert) {
  return function (wrapper) {
    var lastIdx = this.length - 1;
    var lastParent = this.parents().last();
    for (var i = 0; i < this.length; i++) {
      var el = this[i];
      var wrap_1 = typeof wrapper === 'function' ?
      wrapper.call(el, i, el) :
      typeof wrapper === 'string' && !utils_1.isHtml(wrapper) ?
      lastParent.find(wrapper).clone() :
      wrapper;
      var wrapperDom = this._makeDomArray(wrap_1, i < lastIdx)[0];
      if (!wrapperDom || !htmlparser2_1.DomUtils.hasChildren(wrapperDom))
      continue;
      var elInsertLocation = wrapperDom;
      /*
                                          * Find the deepest child. Only consider the first tag child of each node
                                          * (ignore text); stop if no children are found.
                                          */
      var j = 0;
      while (j < elInsertLocation.children.length) {
        var child = elInsertLocation.children[j];
        if (utils_1.isTag(child)) {
          elInsertLocation = child;
          j = 0;
        } else
        {
          j++;
        }
      }
      insert(el, elInsertLocation, [wrapperDom]);
    }
    return this;
  };
}
/**
   * The .wrap() function can take any string or object that could be passed to
   * the $() factory function to specify a DOM structure. This structure may be
   * nested several levels deep, but should contain only one inmost element. A
   * copy of this structure will be wrapped around each of the elements in the set
   * of matched elements. This method returns the original set of elements for
   * chaining purposes.
   *
   * @category Manipulation
   * @example
   *
   * ```js
   * const redFruit = $('<div class="red-fruit"></div>');
   * $('.apple').wrap(redFruit);
   *
   * //=> <ul id="fruits">
   * //     <div class="red-fruit">
   * //      <li class="apple">Apple</li>
   * //     </div>
   * //     <li class="orange">Orange</li>
   * //     <li class="plum">Plum</li>
   * //   </ul>
   *
   * const healthy = $('<div class="healthy"></div>');
   * $('li').wrap(healthy);
   *
   * //=> <ul id="fruits">
   * //     <div class="healthy">
   * //       <li class="apple">Apple</li>
   * //     </div>
   * //     <div class="healthy">
   * //       <li class="orange">Orange</li>
   * //     </div>
   * //     <div class="healthy">
   * //        <li class="plum">Plum</li>
   * //     </div>
   * //   </ul>
   * ```
   *
   * @param wrapper - The DOM structure to wrap around each element in the selection.
   * @see {@link https://api.jquery.com/wrap/}
   */
exports.wrap = _wrap(function (el, elInsertLocation, wrapperDom) {
  var parent = el.parent;
  if (!parent)
  return;
  var siblings = parent.children;
  var index = siblings.indexOf(el);
  parse_1.update([el], elInsertLocation);
  /*
                                           * The previous operation removed the current element from the `siblings`
                                           * array, so the `dom` array can be inserted without removing any
                                           * additional elements.
                                           */
  uniqueSplice(siblings, index, 0, wrapperDom, parent);
});
/**
     * The .wrapInner() function can take any string or object that could be passed
     * to the $() factory function to specify a DOM structure. This structure may be
     * nested several levels deep, but should contain only one inmost element. The
     * structure will be wrapped around the content of each of the elements in the
     * set of matched elements.
     *
     * @category Manipulation
     * @example
     *
     * ```js
     * const redFruit = $('<div class="red-fruit"></div>');
     * $('.apple').wrapInner(redFruit);
     *
     * //=> <ul id="fruits">
     * //     <li class="apple">
     * //       <div class="red-fruit">Apple</div>
     * //     </li>
     * //     <li class="orange">Orange</li>
     * //     <li class="pear">Pear</li>
     * //   </ul>
     *
     * const healthy = $('<div class="healthy"></div>');
     * $('li').wrapInner(healthy);
     *
     * //=> <ul id="fruits">
     * //     <li class="apple">
     * //       <div class="healthy">Apple</div>
     * //     </li>
     * //     <li class="orange">
     * //       <div class="healthy">Orange</div>
     * //     </li>
     * //     <li class="pear">
     * //       <div class="healthy">Pear</div>
     * //     </li>
     * //   </ul>
     * ```
     *
     * @param wrapper - The DOM structure to wrap around the content of each element
     *   in the selection.
     * @returns The instance itself, for chaining.
     * @see {@link https://api.jquery.com/wrapInner/}
     */
exports.wrapInner = _wrap(function (el, elInsertLocation, wrapperDom) {
  if (!domhandler_1.hasChildren(el))
  return;
  parse_1.update(el.children, elInsertLocation);
  parse_1.update(wrapperDom, el);
});
/**
     * The .unwrap() function, removes the parents of the set of matched elements
     * from the DOM, leaving the matched elements in their place.
     *
     * @category Manipulation
     * @example <caption>without selector</caption>
     *
     * ```js
     * const $ = cheerio.load(
     *   '<div id=test>\n  <div><p>Hello</p></div>\n  <div><p>World</p></div>\n</div>'
     * );
     * $('#test p').unwrap();
     *
     * //=> <div id=test>
     * //     <p>Hello</p>
     * //     <p>World</p>
     * //   </div>
     * ```
     *
     * @example <caption>with selector</caption>
     *
     * ```js
     * const $ = cheerio.load(
     *   '<div id=test>\n  <p>Hello</p>\n  <b><p>World</p></b>\n</div>'
     * );
     * $('#test p').unwrap('b');
     *
     * //=> <div id=test>
     * //     <p>Hello</p>
     * //     <p>World</p>
     * //   </div>
     * ```
     *
     * @param selector - A selector to check the parent element against. If an
     *   element's parent does not match the selector, the element won't be unwrapped.
     * @returns The instance itself, for chaining.
     * @see {@link https://api.jquery.com/unwrap/}
     */
function unwrap(selector) {
  var _this = this;
  this.parent(selector).
  not('body').
  each(function (_, el) {
    _this._make(el).replaceWith(el.children);
  });
  return this;
}
exports.unwrap = unwrap;
/**
                          * The .wrapAll() function can take any string or object that could be passed to
                          * the $() function to specify a DOM structure. This structure may be nested
                          * several levels deep, but should contain only one inmost element. The
                          * structure will be wrapped around all of the elements in the set of matched
                          * elements, as a single group.
                          *
                          * @category Manipulation
                          * @example <caption>With markup passed to `wrapAll`</caption>
                          *
                          * ```js
                          * const $ = cheerio.load(
                          *   '<div class="container"><div class="inner">First</div><div class="inner">Second</div></div>'
                          * );
                          * $('.inner').wrapAll("<div class='new'></div>");
                          *
                          * //=> <div class="container">
                          * //     <div class='new'>
                          * //       <div class="inner">First</div>
                          * //       <div class="inner">Second</div>
                          * //     </div>
                          * //   </div>
                          * ```
                          *
                          * @example <caption>With an existing cheerio instance</caption>
                          *
                          * ```js
                          * const $ = cheerio.load(
                          *   '<span>Span 1</span><strong>Strong</strong><span>Span 2</span>'
                          * );
                          * const wrap = $('<div><p><em><b></b></em></p></div>');
                          * $('span').wrapAll(wrap);
                          *
                          * //=> <div>
                          * //     <p>
                          * //       <em>
                          * //         <b>
                          * //           <span>Span 1</span>
                          * //           <span>Span 2</span>
                          * //         </b>
                          * //       </em>
                          * //     </p>
                          * //   </div>
                          * //   <strong>Strong</strong>
                          * ```
                          *
                          * @param wrapper - The DOM structure to wrap around all matched elements in the
                          *   selection.
                          * @returns The instance itself.
                          * @see {@link https://api.jquery.com/wrapAll/}
                          */
function wrapAll(wrapper) {
  var el = this[0];
  if (el) {
    var wrap_2 = this._make(typeof wrapper === 'function' ? wrapper.call(el, 0, el) : wrapper).insertBefore(el);
    // If html is given as wrapper, wrap may contain text elements
    var elInsertLocation = void 0;
    for (var i = 0; i < wrap_2.length; i++) {
      if (wrap_2[i].type === 'tag')
      elInsertLocation = wrap_2[i];
    }
    var j = 0;
    /*
                * Find the deepest child. Only consider the first tag child of each node
                * (ignore text); stop if no children are found.
                */
    while (elInsertLocation && j < elInsertLocation.children.length) {
      var child = elInsertLocation.children[j];
      if (child.type === 'tag') {
        elInsertLocation = child;
        j = 0;
      } else
      {
        j++;
      }
    }
    if (elInsertLocation)
    this._make(elInsertLocation).append(this);
  }
  return this;
}
exports.wrapAll = wrapAll;
/* eslint-disable jsdoc/check-param-names*/
/**
                                             * Insert content next to each element in the set of matched elements.
                                             *
                                             * @category Manipulation
                                             * @example
                                             *
                                             * ```js
                                             * $('.apple').after('<li class="plum">Plum</li>');
                                             * $.html();
                                             * //=>  <ul id="fruits">
                                             * //      <li class="apple">Apple</li>
                                             * //      <li class="plum">Plum</li>
                                             * //      <li class="orange">Orange</li>
                                             * //      <li class="pear">Pear</li>
                                             * //    </ul>
                                             * ```
                                             *
                                             * @param content - HTML string, DOM element, array of DOM elements or Cheerio
                                             *   to insert after each element in the set of matched elements.
                                             * @returns The instance itself.
                                             * @see {@link https://api.jquery.com/after/}
                                             */
function after() {
  var _this = this;
  var elems = [];
  for (var _i = 0; _i < arguments.length; _i++) {
    elems[_i] = arguments[_i];
  }
  var lastIdx = this.length - 1;
  return utils_1.domEach(this, function (i, el) {
    var parent = el.parent;
    if (!htmlparser2_1.DomUtils.hasChildren(el) || !parent) {
      return;
    }
    var siblings = parent.children;
    var index = siblings.indexOf(el);
    // If not found, move on
    /* istanbul ignore next */
    if (index < 0)
    return;
    var domSrc = typeof elems[0] === 'function' ?
    elems[0].call(el, i, static_1.html(el.children)) :
    elems;
    var dom = _this._makeDomArray(domSrc, i < lastIdx);
    // Add element after `this` element
    uniqueSplice(siblings, index + 1, 0, dom, parent);
  });
}
exports.after = after;
/* eslint-enable jsdoc/check-param-names*/
/**
                                            * Insert every element in the set of matched elements after the target.
                                            *
                                            * @category Manipulation
                                            * @example
                                            *
                                            * ```js
                                            * $('<li class="plum">Plum</li>').insertAfter('.apple');
                                            * $.html();
                                            * //=>  <ul id="fruits">
                                            * //      <li class="apple">Apple</li>
                                            * //      <li class="plum">Plum</li>
                                            * //      <li class="orange">Orange</li>
                                            * //      <li class="pear">Pear</li>
                                            * //    </ul>
                                            * ```
                                            *
                                            * @param target - Element to insert elements after.
                                            * @returns The set of newly inserted elements.
                                            * @see {@link https://api.jquery.com/insertAfter/}
                                            */
function insertAfter(target) {
  var _this = this;
  if (typeof target === 'string') {
    target = this._make(target, null, this._originalRoot);
  }
  this.remove();
  var clones = [];
  utils_1.domEach(this._makeDomArray(target), function (_, el) {
    var clonedSelf = _this.clone().toArray();
    var parent = el.parent;
    if (!parent) {
      return;
    }
    var siblings = parent.children;
    var index = siblings.indexOf(el);
    // If not found, move on
    /* istanbul ignore next */
    if (index < 0)
    return;
    // Add cloned `this` element(s) after target element
    uniqueSplice(siblings, index + 1, 0, clonedSelf, parent);
    clones.push.apply(clones, clonedSelf);
  });
  return this._make(clones);
}
exports.insertAfter = insertAfter;
/* eslint-disable jsdoc/check-param-names*/
/**
                                             * Insert content previous to each element in the set of matched elements.
                                             *
                                             * @category Manipulation
                                             * @example
                                             *
                                             * ```js
                                             * $('.apple').before('<li class="plum">Plum</li>');
                                             * $.html();
                                             * //=>  <ul id="fruits">
                                             * //      <li class="plum">Plum</li>
                                             * //      <li class="apple">Apple</li>
                                             * //      <li class="orange">Orange</li>
                                             * //      <li class="pear">Pear</li>
                                             * //    </ul>
                                             * ```
                                             *
                                             * @param content - HTML string, DOM element, array of DOM elements or Cheerio
                                             *   to insert before each element in the set of matched elements.
                                             * @returns The instance itself.
                                             * @see {@link https://api.jquery.com/before/}
                                             */
function before() {
  var _this = this;
  var elems = [];
  for (var _i = 0; _i < arguments.length; _i++) {
    elems[_i] = arguments[_i];
  }
  var lastIdx = this.length - 1;
  return utils_1.domEach(this, function (i, el) {
    var parent = el.parent;
    if (!htmlparser2_1.DomUtils.hasChildren(el) || !parent) {
      return;
    }
    var siblings = parent.children;
    var index = siblings.indexOf(el);
    // If not found, move on
    /* istanbul ignore next */
    if (index < 0)
    return;
    var domSrc = typeof elems[0] === 'function' ?
    elems[0].call(el, i, static_1.html(el.children)) :
    elems;
    var dom = _this._makeDomArray(domSrc, i < lastIdx);
    // Add element before `el` element
    uniqueSplice(siblings, index, 0, dom, parent);
  });
}
exports.before = before;
/* eslint-enable jsdoc/check-param-names*/
/**
                                            * Insert every element in the set of matched elements before the target.
                                            *
                                            * @category Manipulation
                                            * @example
                                            *
                                            * ```js
                                            * $('<li class="plum">Plum</li>').insertBefore('.apple');
                                            * $.html();
                                            * //=>  <ul id="fruits">
                                            * //      <li class="plum">Plum</li>
                                            * //      <li class="apple">Apple</li>
                                            * //      <li class="orange">Orange</li>
                                            * //      <li class="pear">Pear</li>
                                            * //    </ul>
                                            * ```
                                            *
                                            * @param target - Element to insert elements before.
                                            * @returns The set of newly inserted elements.
                                            * @see {@link https://api.jquery.com/insertBefore/}
                                            */
function insertBefore(target) {
  var _this = this;
  var targetArr = this._make(target, null, this._originalRoot);
  this.remove();
  var clones = [];
  utils_1.domEach(targetArr, function (_, el) {
    var clonedSelf = _this.clone().toArray();
    var parent = el.parent;
    if (!parent) {
      return;
    }
    var siblings = parent.children;
    var index = siblings.indexOf(el);
    // If not found, move on
    /* istanbul ignore next */
    if (index < 0)
    return;
    // Add cloned `this` element(s) after target element
    uniqueSplice(siblings, index, 0, clonedSelf, parent);
    clones.push.apply(clones, clonedSelf);
  });
  return this._make(clones);
}
exports.insertBefore = insertBefore;
/**
                                      * Removes the set of matched elements from the DOM and all their children.
                                      * `selector` filters the set of matched elements to be removed.
                                      *
                                      * @category Manipulation
                                      * @example
                                      *
                                      * ```js
                                      * $('.pear').remove();
                                      * $.html();
                                      * //=>  <ul id="fruits">
                                      * //      <li class="apple">Apple</li>
                                      * //      <li class="orange">Orange</li>
                                      * //    </ul>
                                      * ```
                                      *
                                      * @param selector - Optional selector for elements to remove.
                                      * @returns The instance itself.
                                      * @see {@link https://api.jquery.com/remove/}
                                      */
function remove(selector) {
  // Filter if we have selector
  var elems = selector ? this.filter(selector) : this;
  utils_1.domEach(elems, function (_, el) {
    htmlparser2_1.DomUtils.removeElement(el);
    el.prev = el.next = el.parent = null;
  });
  return this;
}
exports.remove = remove;
/**
                          * Replaces matched elements with `content`.
                          *
                          * @category Manipulation
                          * @example
                          *
                          * ```js
                          * const plum = $('<li class="plum">Plum</li>');
                          * $('.pear').replaceWith(plum);
                          * $.html();
                          * //=> <ul id="fruits">
                          * //     <li class="apple">Apple</li>
                          * //     <li class="orange">Orange</li>
                          * //     <li class="plum">Plum</li>
                          * //   </ul>
                          * ```
                          *
                          * @param content - Replacement for matched elements.
                          * @returns The instance itself.
                          * @see {@link https://api.jquery.com/replaceWith/}
                          */
function replaceWith(content) {
  var _this = this;
  return utils_1.domEach(this, function (i, el) {
    var parent = el.parent;
    if (!parent) {
      return;
    }
    var siblings = parent.children;
    var cont = typeof content === 'function' ? content.call(el, i, el) : content;
    var dom = _this._makeDomArray(cont);
    /*
                                          * In the case that `dom` contains nodes that already exist in other
                                          * structures, ensure those nodes are properly removed.
                                          */
    parse_1.update(dom, null);
    var index = siblings.indexOf(el);
    // Completely remove old element
    uniqueSplice(siblings, index, 1, dom, parent);
    if (!dom.includes(el)) {
      el.parent = el.prev = el.next = null;
    }
  });
}
exports.replaceWith = replaceWith;
/**
                                    * Empties an element, removing all its children.
                                    *
                                    * @category Manipulation
                                    * @example
                                    *
                                    * ```js
                                    * $('ul').empty();
                                    * $.html();
                                    * //=>  <ul id="fruits"></ul>
                                    * ```
                                    *
                                    * @returns The instance itself.
                                    * @see {@link https://api.jquery.com/empty/}
                                    */
function empty() {
  return utils_1.domEach(this, function (_, el) {
    if (!htmlparser2_1.DomUtils.hasChildren(el))
    return;
    el.children.forEach(function (child) {
      child.next = child.prev = child.parent = null;
    });
    el.children.length = 0;
  });
}
exports.empty = empty;
function html(str) {
  if (str === undefined) {
    var el = this[0];
    if (!el || !htmlparser2_1.DomUtils.hasChildren(el))
    return null;
    return static_1.html(el.children, this.options);
  }
  // Keep main options unchanged
  var opts = tslib_1.__assign(tslib_1.__assign({}, this.options), { context: null });
  return utils_1.domEach(this, function (_, el) {
    if (!htmlparser2_1.DomUtils.hasChildren(el))
    return;
    el.children.forEach(function (child) {
      child.next = child.prev = child.parent = null;
    });
    opts.context = el;
    var content = utils_1.isCheerio(str) ?
    str.clone().get() :
    parse_1.default("" + str, opts, false).children;
    parse_1.update(content, el);
  });
}
exports.html = html;
/**
                      * Turns the collection to a string. Alias for `.html()`.
                      *
                      * @category Manipulation
                      * @returns The rendered document.
                      */
function toString() {
  return static_1.html(this, this.options);
}
exports.toString = toString;
function text(str) {
  var _this = this;
  // If `str` is undefined, act as a "getter"
  if (str === undefined) {
    return static_1.text(this);
  }
  if (typeof str === 'function') {
    // Function support
    return utils_1.domEach(this, function (i, el) {
      text.call(_this._make(el), str.call(el, i, static_1.text([el])));
    });
  }
  // Append text node to each selected elements
  return utils_1.domEach(this, function (_, el) {
    if (!htmlparser2_1.DomUtils.hasChildren(el))
    return;
    el.children.forEach(function (child) {
      child.next = child.prev = child.parent = null;
    });
    var textNode = new domhandler_2.Text(str);
    parse_1.update(textNode, el);
  });
}
exports.text = text;
/**
                      * Clone the cheerio object.
                      *
                      * @category Manipulation
                      * @example
                      *
                      * ```js
                      * const moreFruit = $('#fruits').clone();
                      * ```
                      *
                      * @returns The cloned object.
                      * @see {@link https://api.jquery.com/clone/}
                      */
function clone() {
  return this._make(utils_1.cloneDom(this.get()));
}
exports.clone = clone;

/***/ }),
/* 122 */
/*!*****************************************************************************************!*\
  !*** D:/projects/bookingVaccine/bookingVaccineMini/node_modules/cheerio/lib/api/css.js ***!
  \*****************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
exports.css = void 0;
var utils_1 = __webpack_require__(/*! ../utils */ 100);
function css(prop, val) {
  if (prop != null && val != null ||
  // When `prop` is a "plain" object
  typeof prop === 'object' && !Array.isArray(prop)) {
    return utils_1.domEach(this, function (idx, el) {
      if (utils_1.isTag(el)) {
        // `prop` can't be an array here anymore.
        setCss(el, prop, val, idx);
      }
    });
  }
  return getCss(this[0], prop);
}
exports.css = css;
/**
                    * Set styles of all elements.
                    *
                    * @private
                    * @param el - Element to set style of.
                    * @param prop - Name of property.
                    * @param value - Value to set property to.
                    * @param idx - Optional index within the selection.
                    */
function setCss(el, prop, value, idx) {
  if (typeof prop === 'string') {
    var styles = getCss(el);
    var val = typeof value === 'function' ? value.call(el, idx, styles[prop]) : value;
    if (val === '') {
      delete styles[prop];
    } else
    if (val != null) {
      styles[prop] = val;
    }
    el.attribs.style = stringify(styles);
  } else
  if (typeof prop === 'object') {
    Object.keys(prop).forEach(function (k, i) {
      setCss(el, k, prop[k], i);
    });
  }
}
function getCss(el, prop) {
  if (!el || !utils_1.isTag(el))
  return;
  var styles = parse(el.attribs.style);
  if (typeof prop === 'string') {
    return styles[prop];
  }
  if (Array.isArray(prop)) {
    var newStyles_1 = {};
    prop.forEach(function (item) {
      if (styles[item] != null) {
        newStyles_1[item] = styles[item];
      }
    });
    return newStyles_1;
  }
  return styles;
}
/**
   * Stringify `obj` to styles.
   *
   * @private
   * @category CSS
   * @param obj - Object to stringify.
   * @returns The serialized styles.
   */
function stringify(obj) {
  return Object.keys(obj).reduce(function (str, prop) {return "" + str + (str ? ' ' : '') + prop + ": " + obj[prop] + ";";}, '');
}
/**
   * Parse `styles`.
   *
   * @private
   * @category CSS
   * @param styles - Styles to be parsed.
   * @returns The parsed styles.
   */
function parse(styles) {
  styles = (styles || '').trim();
  if (!styles)
  return {};
  return styles.split(';').reduce(function (obj, str) {
    var n = str.indexOf(':');
    // Skip if there is no :, or if it is the first/last character
    if (n < 1 || n === str.length - 1)
    return obj;
    obj[str.slice(0, n).trim()] = str.slice(n + 1).trim();
    return obj;
  }, {});
}

/***/ }),
/* 123 */
/*!*******************************************************************************************!*\
  !*** D:/projects/bookingVaccine/bookingVaccineMini/node_modules/cheerio/lib/api/forms.js ***!
  \*******************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
exports.serializeArray = exports.serialize = void 0;
var utils_1 = __webpack_require__(/*! ../utils */ 100);
/*
                                    * https://github.com/jquery/jquery/blob/2.1.3/src/manipulation/var/rcheckableType.js
                                    * https://github.com/jquery/jquery/blob/2.1.3/src/serialize.js
                                    */
var submittableSelector = 'input,select,textarea,keygen';
var r20 = /%20/g;
var rCRLF = /\r?\n/g;
/**
                       * Encode a set of form elements as a string for submission.
                       *
                       * @category Forms
                       * @returns The serialized form.
                       * @see {@link https://api.jquery.com/serialize/}
                       */
function serialize() {
  // Convert form elements into name/value objects
  var arr = this.serializeArray();
  // Serialize each element into a key/value string
  var retArr = arr.map(function (data) {
    return encodeURIComponent(data.name) + "=" + encodeURIComponent(data.value);
  });
  // Return the resulting serialization
  return retArr.join('&').replace(r20, '+');
}
exports.serialize = serialize;
/**
                                * Encode a set of form elements as an array of names and values.
                                *
                                * @category Forms
                                * @example
                                *
                                * ```js
                                * $('<form><input name="foo" value="bar" /></form>').serializeArray();
                                * //=> [ { name: 'foo', value: 'bar' } ]
                                * ```
                                *
                                * @returns The serialized form.
                                * @see {@link https://api.jquery.com/serializeArray/}
                                */
function serializeArray() {
  // Resolve all form elements from either forms or collections of form elements
  var Cheerio = this.constructor;
  return this.map(function (_, elem) {
    var $elem = Cheerio(elem);
    if (utils_1.isTag(elem) && elem.name === 'form') {
      return $elem.find(submittableSelector).toArray();
    }
    return $elem.filter(submittableSelector).toArray();
  }).
  filter(
  // Verify elements have a name (`attr.name`) and are not disabled (`:enabled`)
  '[name!=""]:enabled' +
  // And cannot be clicked (`[type=submit]`) or are used in `x-www-form-urlencoded` (`[type=file]`)
  ':not(:submit, :button, :image, :reset, :file)' +
  // And are either checked/don't have a checkable state
  ':matches([checked], :not(:checkbox, :radio))'
  // Convert each of the elements to its value(s)
  ).
  map(function (_, elem) {
    var _a;
    var $elem = Cheerio(elem);
    var name = $elem.attr('name'); // We have filtered for elements with a name before.
    // If there is no value set (e.g. `undefined`, `null`), then default value to empty
    var value = (_a = $elem.val()) !== null && _a !== void 0 ? _a : '';
    // If we have an array of values (e.g. `<select multiple>`), return an array of key/value pairs
    if (Array.isArray(value)) {
      return value.map(function (val) {
        /*
                                        * We trim replace any line endings (e.g. `\r` or `\r\n` with `\r\n`) to guarantee consistency across platforms
                                        * These can occur inside of `<textarea>'s`
                                        */
        return { name: name, value: val.replace(rCRLF, '\r\n') };
      });
    }
    // Otherwise (e.g. `<input type="text">`, return only one key/value pair
    return { name: name, value: value.replace(rCRLF, '\r\n') };
  }).
  toArray();
}
exports.serializeArray = serializeArray;

/***/ }),
/* 124 */
/*!***************************************************************************************!*\
  !*** D:/projects/bookingVaccine/bookingVaccineMini/node_modules/cheerio/lib/types.js ***!
  \***************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });

/***/ }),
/* 125 */
/*!**************************************************************************************!*\
  !*** D:/projects/bookingVaccine/bookingVaccineMini/node_modules/cheerio/lib/load.js ***!
  \**************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
exports.load = void 0;
var tslib_1 = __webpack_require__(/*! tslib */ 31);
var options_1 = tslib_1.__importStar(__webpack_require__(/*! ./options */ 99));
var staticMethods = tslib_1.__importStar(__webpack_require__(/*! ./static */ 101));
var cheerio_1 = __webpack_require__(/*! ./cheerio */ 32);
var parse_1 = tslib_1.__importDefault(__webpack_require__(/*! ./parse */ 33));
/**
                                                            * Create a querying function, bound to a document created from the provided
                                                            * markup. Note that similar to web browser contexts, this operation may
                                                            * introduce `<html>`, `<head>`, and `<body>` elements; set `isDocument` to
                                                            * `false` to switch to fragment mode and disable this.
                                                            *
                                                            * See the README section titled "Loading" for additional usage information.
                                                            *
                                                            * @param content - Markup to be loaded.
                                                            * @param options - Options for the created instance.
                                                            * @param isDocument - Allows parser to be switched to fragment mode.
                                                            * @returns The loaded document.
                                                            */
function load(content, options, isDocument) {
  if (content == null) {
    throw new Error('cheerio.load() expects a string');
  }
  options = tslib_1.__assign(tslib_1.__assign({}, options_1.default), options_1.flatten(options));
  if (typeof isDocument === 'undefined')
  isDocument = true;
  var root = parse_1.default(content, options, isDocument);
  var initialize = /** @class */function (_super) {
    tslib_1.__extends(initialize, _super);
    function initialize(selector, context, r, opts) {
      if (r === void 0) {r = root;}
      var _this = this;
      // @ts-expect-error Using `this` before calling the constructor.
      if (!(_this instanceof initialize)) {
        return new initialize(selector, context, r, opts);
      }
      _this = _super.call(this, selector, context, r, tslib_1.__assign(tslib_1.__assign({}, options), opts)) || this;
      return _this;
    }
    // Mimic jQuery's prototype alias for plugin authors.
    initialize.fn = initialize.prototype;
    return initialize;
  }(cheerio_1.Cheerio);
  /*
                         * Keep a reference to the top-level scope so we can chain methods that implicitly
                         * resolve selectors; e.g. $("<span>").(".bar"), which otherwise loses ._root
                         */
  initialize.prototype._originalRoot = root;
  // Add in the static methods
  Object.assign(initialize, staticMethods, { load: load });
  // Add in the root
  initialize._root = root;
  // Store options
  initialize._options = options;
  return initialize;
}
exports.load = load;

/***/ }),
/* 126 */,
/* 127 */,
/* 128 */,
/* 129 */,
/* 130 */,
/* 131 */,
/* 132 */,
/* 133 */,
/* 134 */,
/* 135 */,
/* 136 */,
/* 137 */,
/* 138 */,
/* 139 */,
/* 140 */,
/* 141 */,
/* 142 */,
/* 143 */,
/* 144 */,
/* 145 */,
/* 146 */,
/* 147 */,
/* 148 */,
/* 149 */,
/* 150 */,
/* 151 */,
/* 152 */,
/* 153 */,
/* 154 */,
/* 155 */,
/* 156 */,
/* 157 */,
/* 158 */,
/* 159 */,
/* 160 */,
/* 161 */,
/* 162 */,
/* 163 */,
/* 164 */,
/* 165 */,
/* 166 */,
/* 167 */,
/* 168 */,
/* 169 */,
/* 170 */,
/* 171 */,
/* 172 */,
/* 173 */,
/* 174 */,
/* 175 */,
/* 176 */,
/* 177 */,
/* 178 */,
/* 179 */,
/* 180 */,
/* 181 */,
/* 182 */,
/* 183 */,
/* 184 */,
/* 185 */,
/* 186 */,
/* 187 */,
/* 188 */,
/* 189 */,
/* 190 */,
/* 191 */,
/* 192 */,
/* 193 */,
/* 194 */,
/* 195 */,
/* 196 */,
/* 197 */,
/* 198 */,
/* 199 */,
/* 200 */,
/* 201 */,
/* 202 */,
/* 203 */,
/* 204 */,
/* 205 */,
/* 206 */,
/* 207 */,
/* 208 */,
/* 209 */,
/* 210 */,
/* 211 */,
/* 212 */,
/* 213 */,
/* 214 */,
/* 215 */,
/* 216 */,
/* 217 */,
/* 218 */,
/* 219 */,
/* 220 */,
/* 221 */,
/* 222 */,
/* 223 */,
/* 224 */,
/* 225 */,
/* 226 */,
/* 227 */,
/* 228 */,
/* 229 */,
/* 230 */,
/* 231 */,
/* 232 */,
/* 233 */,
/* 234 */,
/* 235 */,
/* 236 */,
/* 237 */,
/* 238 */,
/* 239 */,
/* 240 */,
/* 241 */,
/* 242 */,
/* 243 */,
/* 244 */,
/* 245 */,
/* 246 */,
/* 247 */,
/* 248 */,
/* 249 */,
/* 250 */,
/* 251 */,
/* 252 */,
/* 253 */,
/* 254 */,
/* 255 */,
/* 256 */,
/* 257 */,
/* 258 */,
/* 259 */,
/* 260 */,
/* 261 */,
/* 262 */,
/* 263 */,
/* 264 */,
/* 265 */,
/* 266 */,
/* 267 */,
/* 268 */,
/* 269 */,
/* 270 */,
/* 271 */,
/* 272 */,
/* 273 */,
/* 274 */,
/* 275 */,
/* 276 */,
/* 277 */,
/* 278 */,
/* 279 */,
/* 280 */,
/* 281 */,
/* 282 */,
/* 283 */,
/* 284 */,
/* 285 */,
/* 286 */,
/* 287 */,
/* 288 */,
/* 289 */,
/* 290 */,
/* 291 */,
/* 292 */,
/* 293 */
/*!******************************************************************************************!*\
  !*** D:/projects/bookingVaccine/bookingVaccineMini/components/u-parse/libs/html2json.js ***!
  \******************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
Object.defineProperty(exports, "__esModule", { value: true });exports.default = void 0;













var _wxDiscode = _interopRequireDefault(__webpack_require__(/*! ./wxDiscode */ 294));
var _htmlparser = _interopRequireDefault(__webpack_require__(/*! ./htmlparser */ 295));function _interopRequireDefault(obj) {return obj && obj.__esModule ? obj : { default: obj };} /**
                                                                                                                                                                 * html2Json 改造来自: https://github.com/Jxck/html2json
                                                                                                                                                                 *
                                                                                                                                                                 *
                                                                                                                                                                 * author: Di (微信小程序开发工程师)
                                                                                                                                                                 * organization: WeAppDev(微信小程序开发论坛)(http://weappdev.com)
                                                                                                                                                                 *               垂直微信小程序开发交流社区
                                                                                                                                                                 *
                                                                                                                                                                 * github地址: https://github.com/icindy/wxParse
                                                                                                                                                                 *
                                                                                                                                                                 * for: 微信小程序富文本解析
                                                                                                                                                                 * detail : http://weappdev.com/t/wxparse-alpha0-1-html-markdown/184
                                                                                                                                                                 */function makeMap(str) {var obj = {};var items = str.split(',');for (var i = 0; i < items.length; i += 1) {obj[items[i]] = true;}return obj;} // Block Elements - HTML 5
var block = makeMap('br,code,address,article,applet,aside,audio,blockquote,button,canvas,center,dd,del,dir,div,dl,dt,fieldset,figcaption,figure,footer,form,frameset,h1,h2,h3,h4,h5,h6,header,hgroup,hr,iframe,ins,isindex,li,map,menu,noframes,noscript,object,ol,output,p,pre,section,script,table,tbody,td,tfoot,th,thead,tr,ul,video'); // Inline Elements - HTML 5
var inline = makeMap('a,abbr,acronym,applet,b,basefont,bdo,big,button,cite,del,dfn,em,font,i,iframe,img,input,ins,kbd,label,map,object,q,s,samp,script,select,small,span,strike,strong,sub,sup,textarea,tt,u,var');
// Elements that you can, intentionally, leave open
// (and which close themselves)
var closeSelf = makeMap('colgroup,dd,dt,li,options,p,td,tfoot,th,thead,tr');

function removeDOCTYPE(html) {
  var isDocument = /<body.*>([^]*)<\/body>/.test(html);
  return isDocument ? RegExp.$1 : html;
}

function trimHtml(html) {
  return html.
  replace(/<!--.*?-->/gi, '').
  replace(/\/\*.*?\*\//gi, '').
  replace(/[ ]+</gi, '<').
  replace(/<script[^]*<\/script>/gi, '').
  replace(/<style[^]*<\/style>/gi, '');
}

function getScreenInfo() {
  var screen = {};
  wx.getSystemInfo({
    success: function success(res) {
      screen.width = res.windowWidth;
      screen.height = res.windowHeight;
    } });

  return screen;
}

function html2json(html, customHandler, imageProp, host) {
  // 处理字符串
  html = removeDOCTYPE(html);
  html = trimHtml(html);
  html = _wxDiscode.default.strDiscode(html);
  // 生成node节点
  var bufArray = [];
  var results = {
    nodes: [],
    imageUrls: [] };


  var screen = getScreenInfo();
  function Node(tag) {
    this.node = 'element';
    this.tag = tag;

    this.$screen = screen;
  }

  (0, _htmlparser.default)(html, {
    start: function start(tag, attrs, unary) {
      // node for this element
      var node = new Node(tag);

      if (bufArray.length !== 0) {
        var parent = bufArray[0];
        if (parent.nodes === undefined) {
          parent.nodes = [];
        }
      }

      if (block[tag]) {
        node.tagType = 'block';
      } else if (inline[tag]) {
        node.tagType = 'inline';
      } else if (closeSelf[tag]) {
        node.tagType = 'closeSelf';
      }

      node.attr = attrs.reduce(function (pre, attr) {var
        name = attr.name;var
        value = attr.value;
        if (name === 'class') {
          node.classStr = value;
        }
        // has multi attibutes
        // make it array of attribute
        if (name === 'style') {
          node.styleStr = value;
        }
        if (value.match(/ /)) {
          value = value.split(' ');
        }

        // if attr already exists
        // merge it
        if (pre[name]) {
          if (Array.isArray(pre[name])) {
            // already array, push to last
            pre[name].push(value);
          } else {
            // single value, make it array
            pre[name] = [pre[name], value];
          }
        } else {
          // not exist, put it
          pre[name] = value;
        }

        return pre;
      }, {});

      // 优化样式相关属性
      if (node.classStr) {
        node.classStr += " ".concat(node.tag);
      } else {
        node.classStr = node.tag;
      }
      if (node.tagType === 'inline') {
        node.classStr += ' inline';
      }

      // 对img添加额外数据
      if (node.tag === 'img') {
        var imgUrl = node.attr.src;
        imgUrl = _wxDiscode.default.urlToHttpUrl(imgUrl, imageProp.domain);
        Object.assign(node.attr, imageProp, {
          src: imgUrl || '' });

        if (imgUrl) {
          results.imageUrls.push(imgUrl);
        }
      }

      // 处理a标签属性
      if (node.tag === 'a') {
        node.attr.href = node.attr.href || '';
      }

      // 处理font标签样式属性
      if (node.tag === 'font') {
        var fontSize = [
        'x-small',
        'small',
        'medium',
        'large',
        'x-large',
        'xx-large',
        '-webkit-xxx-large'];

        var styleAttrs = {
          color: 'color',
          face: 'font-family',
          size: 'font-size' };

        if (!node.styleStr) node.styleStr = '';
        Object.keys(styleAttrs).forEach(function (key) {
          if (node.attr[key]) {
            var value = key === 'size' ? fontSize[node.attr[key] - 1] : node.attr[key];
            node.styleStr += "".concat(styleAttrs[key], ": ").concat(value, ";");
          }
        });
      }

      // 临时记录source资源
      if (node.tag === 'source') {
        results.source = node.attr.src;
      }

      if (customHandler.start) {
        customHandler.start(node, results);
      }

      if (unary) {
        // if this tag doesn't have end tag
        // like <img src="hoge.png"/>
        // add to parents
        var _parent = bufArray[0] || results;
        if (_parent.nodes === undefined) {
          _parent.nodes = [];
        }
        _parent.nodes.push(node);
      } else {
        bufArray.unshift(node);
      }
    },
    end: function end(tag) {
      // merge into parent tag
      var node = bufArray.shift();
      if (node.tag !== tag) {
        console.error('invalid state: mismatch end tag');
      }

      // 当有缓存source资源时于于video补上src资源
      if (node.tag === 'video' && results.source) {
        node.attr.src = results.source;
        delete results.source;
      }

      if (customHandler.end) {
        customHandler.end(node, results);
      }

      if (bufArray.length === 0) {
        results.nodes.push(node);
      } else {
        var parent = bufArray[0];
        if (!parent.nodes) {
          parent.nodes = [];
        }
        parent.nodes.push(node);
      }
    },
    chars: function chars(text) {
      if (!text.trim()) return;

      var node = {
        node: 'text',
        text: text };


      if (customHandler.chars) {
        customHandler.chars(node, results);
      }

      if (bufArray.length === 0) {
        results.nodes.push(node);
      } else {
        var parent = bufArray[0];
        if (parent.nodes === undefined) {
          parent.nodes = [];
        }
        parent.nodes.push(node);
      }
    } });


  return results;
}var _default =

html2json;exports.default = _default;

/***/ }),
/* 294 */
/*!******************************************************************************************!*\
  !*** D:/projects/bookingVaccine/bookingVaccineMini/components/u-parse/libs/wxDiscode.js ***!
  \******************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
Object.defineProperty(exports, "__esModule", { value: true });exports.default = void 0; // HTML 支持的数学符号
function strNumDiscode(str) {
  str = str.replace(/&forall;/g, '∀');
  str = str.replace(/&part;/g, '∂');
  str = str.replace(/&exist;/g, '∃');
  str = str.replace(/&empty;/g, '∅');
  str = str.replace(/&nabla;/g, '∇');
  str = str.replace(/&isin;/g, '∈');
  str = str.replace(/&notin;/g, '∉');
  str = str.replace(/&ni;/g, '∋');
  str = str.replace(/&prod;/g, '∏');
  str = str.replace(/&sum;/g, '∑');
  str = str.replace(/&minus;/g, '−');
  str = str.replace(/&lowast;/g, '∗');
  str = str.replace(/&radic;/g, '√');
  str = str.replace(/&prop;/g, '∝');
  str = str.replace(/&infin;/g, '∞');
  str = str.replace(/&ang;/g, '∠');
  str = str.replace(/&and;/g, '∧');
  str = str.replace(/&or;/g, '∨');
  str = str.replace(/&cap;/g, '∩');
  str = str.replace(/&cup;/g, '∪');
  str = str.replace(/&int;/g, '∫');
  str = str.replace(/&there4;/g, '∴');
  str = str.replace(/&sim;/g, '∼');
  str = str.replace(/&cong;/g, '≅');
  str = str.replace(/&asymp;/g, '≈');
  str = str.replace(/&ne;/g, '≠');
  str = str.replace(/&le;/g, '≤');
  str = str.replace(/&ge;/g, '≥');
  str = str.replace(/&sub;/g, '⊂');
  str = str.replace(/&sup;/g, '⊃');
  str = str.replace(/&nsub;/g, '⊄');
  str = str.replace(/&sube;/g, '⊆');
  str = str.replace(/&supe;/g, '⊇');
  str = str.replace(/&oplus;/g, '⊕');
  str = str.replace(/&otimes;/g, '⊗');
  str = str.replace(/&perp;/g, '⊥');
  str = str.replace(/&sdot;/g, '⋅');
  return str;
}

// HTML 支持的希腊字母
function strGreeceDiscode(str) {
  str = str.replace(/&Alpha;/g, 'Α');
  str = str.replace(/&Beta;/g, 'Β');
  str = str.replace(/&Gamma;/g, 'Γ');
  str = str.replace(/&Delta;/g, 'Δ');
  str = str.replace(/&Epsilon;/g, 'Ε');
  str = str.replace(/&Zeta;/g, 'Ζ');
  str = str.replace(/&Eta;/g, 'Η');
  str = str.replace(/&Theta;/g, 'Θ');
  str = str.replace(/&Iota;/g, 'Ι');
  str = str.replace(/&Kappa;/g, 'Κ');
  str = str.replace(/&Lambda;/g, 'Λ');
  str = str.replace(/&Mu;/g, 'Μ');
  str = str.replace(/&Nu;/g, 'Ν');
  str = str.replace(/&Xi;/g, 'Ν');
  str = str.replace(/&Omicron;/g, 'Ο');
  str = str.replace(/&Pi;/g, 'Π');
  str = str.replace(/&Rho;/g, 'Ρ');
  str = str.replace(/&Sigma;/g, 'Σ');
  str = str.replace(/&Tau;/g, 'Τ');
  str = str.replace(/&Upsilon;/g, 'Υ');
  str = str.replace(/&Phi;/g, 'Φ');
  str = str.replace(/&Chi;/g, 'Χ');
  str = str.replace(/&Psi;/g, 'Ψ');
  str = str.replace(/&Omega;/g, 'Ω');

  str = str.replace(/&alpha;/g, 'α');
  str = str.replace(/&beta;/g, 'β');
  str = str.replace(/&gamma;/g, 'γ');
  str = str.replace(/&delta;/g, 'δ');
  str = str.replace(/&epsilon;/g, 'ε');
  str = str.replace(/&zeta;/g, 'ζ');
  str = str.replace(/&eta;/g, 'η');
  str = str.replace(/&theta;/g, 'θ');
  str = str.replace(/&iota;/g, 'ι');
  str = str.replace(/&kappa;/g, 'κ');
  str = str.replace(/&lambda;/g, 'λ');
  str = str.replace(/&mu;/g, 'μ');
  str = str.replace(/&nu;/g, 'ν');
  str = str.replace(/&xi;/g, 'ξ');
  str = str.replace(/&omicron;/g, 'ο');
  str = str.replace(/&pi;/g, 'π');
  str = str.replace(/&rho;/g, 'ρ');
  str = str.replace(/&sigmaf;/g, 'ς');
  str = str.replace(/&sigma;/g, 'σ');
  str = str.replace(/&tau;/g, 'τ');
  str = str.replace(/&upsilon;/g, 'υ');
  str = str.replace(/&phi;/g, 'φ');
  str = str.replace(/&chi;/g, 'χ');
  str = str.replace(/&psi;/g, 'ψ');
  str = str.replace(/&omega;/g, 'ω');
  str = str.replace(/&thetasym;/g, 'ϑ');
  str = str.replace(/&upsih;/g, 'ϒ');
  str = str.replace(/&piv;/g, 'ϖ');
  str = str.replace(/&middot;/g, '·');
  return str;
}

function strcharacterDiscode(str) {
  // 加入常用解析
  str = str.replace(/&nbsp;/g, ' ');
  str = str.replace(/&ensp;/g, ' ');
  str = str.replace(/&emsp;/g, '　');
  str = str.replace(/&quot;/g, "'");
  str = str.replace(/&amp;/g, '&');
  str = str.replace(/&lt;/g, '<');
  str = str.replace(/&gt;/g, '>');
  str = str.replace(/&#8226;/g, '•');

  return str;
}

// HTML 支持的其他实体
function strOtherDiscode(str) {
  str = str.replace(/&OElig;/g, 'Œ');
  str = str.replace(/&oelig;/g, 'œ');
  str = str.replace(/&Scaron;/g, 'Š');
  str = str.replace(/&scaron;/g, 'š');
  str = str.replace(/&Yuml;/g, 'Ÿ');
  str = str.replace(/&fnof;/g, 'ƒ');
  str = str.replace(/&circ;/g, 'ˆ');
  str = str.replace(/&tilde;/g, '˜');
  str = str.replace(/&ensp;/g, '');
  str = str.replace(/&emsp;/g, '');
  str = str.replace(/&thinsp;/g, '');
  str = str.replace(/&zwnj;/g, '');
  str = str.replace(/&zwj;/g, '');
  str = str.replace(/&lrm;/g, '');
  str = str.replace(/&rlm;/g, '');
  str = str.replace(/&ndash;/g, '–');
  str = str.replace(/&mdash;/g, '—');
  str = str.replace(/&lsquo;/g, '‘');
  str = str.replace(/&rsquo;/g, '’');
  str = str.replace(/&sbquo;/g, '‚');
  str = str.replace(/&ldquo;/g, '“');
  str = str.replace(/&rdquo;/g, '”');
  str = str.replace(/&bdquo;/g, '„');
  str = str.replace(/&dagger;/g, '†');
  str = str.replace(/&Dagger;/g, '‡');
  str = str.replace(/&bull;/g, '•');
  str = str.replace(/&hellip;/g, '…');
  str = str.replace(/&permil;/g, '‰');
  str = str.replace(/&prime;/g, '′');
  str = str.replace(/&Prime;/g, '″');
  str = str.replace(/&lsaquo;/g, '‹');
  str = str.replace(/&rsaquo;/g, '›');
  str = str.replace(/&oline;/g, '‾');
  str = str.replace(/&euro;/g, '€');
  str = str.replace(/&trade;/g, '™');

  str = str.replace(/&larr;/g, '←');
  str = str.replace(/&uarr;/g, '↑');
  str = str.replace(/&rarr;/g, '→');
  str = str.replace(/&darr;/g, '↓');
  str = str.replace(/&harr;/g, '↔');
  str = str.replace(/&crarr;/g, '↵');
  str = str.replace(/&lceil;/g, '⌈');
  str = str.replace(/&rceil;/g, '⌉');

  str = str.replace(/&lfloor;/g, '⌊');
  str = str.replace(/&rfloor;/g, '⌋');
  str = str.replace(/&loz;/g, '◊');
  str = str.replace(/&spades;/g, '♠');
  str = str.replace(/&clubs;/g, '♣');
  str = str.replace(/&hearts;/g, '♥');

  str = str.replace(/&diams;/g, '♦');
  str = str.replace(/&#39;/g, "'");
  return str;
}

function strDiscode(str) {
  str = strNumDiscode(str);
  str = strGreeceDiscode(str);
  str = strcharacterDiscode(str);
  str = strOtherDiscode(str);
  return str;
}

function urlToHttpUrl(url, domain) {
  if (/^\/\//.test(url)) {
    return "https:".concat(url);
  } else if (/^\//.test(url)) {
    return "https://".concat(domain).concat(url);
  }
  return url;
}var _default =

{
  strDiscode: strDiscode,
  urlToHttpUrl: urlToHttpUrl };exports.default = _default;

/***/ }),
/* 295 */
/*!*******************************************************************************************!*\
  !*** D:/projects/bookingVaccine/bookingVaccineMini/components/u-parse/libs/htmlparser.js ***!
  \*******************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
Object.defineProperty(exports, "__esModule", { value: true });exports.default = void 0; /**
                                                                                                      *
                                                                                                      * htmlParser改造自: https://github.com/blowsie/Pure-JavaScript-HTML5-Parser
                                                                                                      *
                                                                                                      * author: Di (微信小程序开发工程师)
                                                                                                      * organization: WeAppDev(微信小程序开发论坛)(http://weappdev.com)
                                                                                                      *               垂直微信小程序开发交流社区
                                                                                                      *
                                                                                                      * github地址: https://github.com/icindy/wxParse
                                                                                                      *
                                                                                                      * for: 微信小程序富文本解析
                                                                                                      * detail : http://weappdev.com/t/wxparse-alpha0-1-html-markdown/184
                                                                                                      */
// Regular Expressions for parsing tags and attributes

var startTag = /^<([-A-Za-z0-9_]+)((?:\s+[a-zA-Z0-9_:][-a-zA-Z0-9_:.]*(?:\s*=\s*(?:(?:"[^"]*")|(?:'[^']*')|[^>\s]+))?)*)\s*(\/?)>/;
var endTag = /^<\/([-A-Za-z0-9_]+)[^>]*>/;
var attr = /([a-zA-Z0-9_:][-a-zA-Z0-9_:.]*)(?:\s*=\s*(?:(?:"((?:\\.|[^"])*)")|(?:'((?:\\.|[^'])*)')|([^>\s]+)))?/g;

function makeMap(str) {
  var obj = {};
  var items = str.split(',');
  for (var i = 0; i < items.length; i += 1) {obj[items[i]] = true;}
  return obj;
}

// Empty Elements - HTML 5
var empty = makeMap('area,base,basefont,br,col,frame,hr,img,input,link,meta,param,embed,command,keygen,source,track,wbr');

// Block Elements - HTML 5
var block = makeMap('address,code,article,applet,aside,audio,blockquote,button,canvas,center,dd,del,dir,div,dl,dt,fieldset,figcaption,figure,footer,form,frameset,h1,h2,h3,h4,h5,h6,header,hgroup,hr,iframe,ins,isindex,li,map,menu,noframes,noscript,object,ol,output,p,pre,section,script,table,tbody,td,tfoot,th,thead,tr,ul,video');

// Inline Elements - HTML 5
var inline = makeMap('a,abbr,acronym,applet,b,basefont,bdo,big,br,button,cite,del,dfn,em,font,i,iframe,img,input,ins,kbd,label,map,object,q,s,samp,script,select,small,span,strike,strong,sub,sup,textarea,tt,u,var');

// Elements that you can, intentionally, leave open
// (and which close themselves)
var closeSelf = makeMap('colgroup,dd,dt,li,options,p,td,tfoot,th,thead,tr');

// Attributes that have their values filled in disabled="disabled"
var fillAttrs = makeMap('checked,compact,declare,defer,disabled,ismap,multiple,nohref,noresize,noshade,nowrap,readonly,selected');

function HTMLParser(html, handler) {
  var index;
  var chars;
  var match;
  var last = html;
  var stack = [];

  stack.last = function () {return stack[stack.length - 1];};

  function parseEndTag(tag, tagName) {
    // If no tag name is provided, clean shop
    var pos;
    if (!tagName) {
      pos = 0;
    } else {
      // Find the closest opened tag of the same type
      tagName = tagName.toLowerCase();
      for (pos = stack.length - 1; pos >= 0; pos -= 1) {
        if (stack[pos] === tagName) break;
      }
    }
    if (pos >= 0) {
      // Close all the open elements, up the stack
      for (var i = stack.length - 1; i >= pos; i -= 1) {
        if (handler.end) handler.end(stack[i]);
      }

      // Remove the open elements from the stack
      stack.length = pos;
    }
  }

  function parseStartTag(tag, tagName, rest, unary) {
    tagName = tagName.toLowerCase();

    if (block[tagName]) {
      while (stack.last() && inline[stack.last()]) {
        parseEndTag('', stack.last());
      }
    }

    if (closeSelf[tagName] && stack.last() === tagName) {
      parseEndTag('', tagName);
    }

    unary = empty[tagName] || !!unary;

    if (!unary) stack.push(tagName);

    if (handler.start) {
      var attrs = [];

      rest.replace(attr, function genAttr(matches, name) {
        var value = arguments[2] || arguments[3] || arguments[4] || (fillAttrs[name] ? name : '');

        attrs.push({
          name: name,
          value: value,
          escaped: value.replace(/(^|[^\\])"/g, '$1\\"') // "
        });
      });

      if (handler.start) {
        handler.start(tagName, attrs, unary);
      }
    }
  }

  while (html) {
    chars = true;

    if (html.indexOf('</') === 0) {
      match = html.match(endTag);

      if (match) {
        html = html.substring(match[0].length);
        match[0].replace(endTag, parseEndTag);
        chars = false;
      }

      // start tag
    } else if (html.indexOf('<') === 0) {
      match = html.match(startTag);

      if (match) {
        html = html.substring(match[0].length);
        match[0].replace(startTag, parseStartTag);
        chars = false;
      }
    }

    if (chars) {
      index = html.indexOf('<');
      var text = '';
      while (index === 0) {
        text += '<';
        html = html.substring(1);
        index = html.indexOf('<');
      }
      text += index < 0 ? html : html.substring(0, index);
      html = index < 0 ? '' : html.substring(index);

      if (handler.chars) handler.chars(text);
    }

    if (html === last) throw new Error("Parse Error: ".concat(html));
    last = html;
  }

  // Clean up any remaining tags
  parseEndTag();
}var _default =

HTMLParser;exports.default = _default;

/***/ }),
/* 296 */,
/* 297 */,
/* 298 */,
/* 299 */,
/* 300 */,
/* 301 */,
/* 302 */,
/* 303 */,
/* 304 */,
/* 305 */,
/* 306 */,
/* 307 */,
/* 308 */
/*!*********************************************************************************************************!*\
  !*** D:/projects/bookingVaccine/bookingVaccineMini/uni_modules/uni-icons/components/uni-icons/icons.js ***!
  \*********************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
Object.defineProperty(exports, "__esModule", { value: true });exports.default = void 0;var _default = {
  "pulldown": "\uE588",
  "refreshempty": "\uE461",
  "back": "\uE471",
  "forward": "\uE470",
  "more": "\uE507",
  "more-filled": "\uE537",
  "scan": "\uE612",
  "qq": "\uE264",
  "weibo": "\uE260",
  "weixin": "\uE261",
  "pengyouquan": "\uE262",
  "loop": "\uE565",
  "refresh": "\uE407",
  "refresh-filled": "\uE437",
  "arrowthindown": "\uE585",
  "arrowthinleft": "\uE586",
  "arrowthinright": "\uE587",
  "arrowthinup": "\uE584",
  "undo-filled": "\uE7D6",
  "undo": "\uE406",
  "redo": "\uE405",
  "redo-filled": "\uE7D9",
  "bars": "\uE563",
  "chatboxes": "\uE203",
  "camera": "\uE301",
  "chatboxes-filled": "\uE233",
  "camera-filled": "\uE7EF",
  "cart-filled": "\uE7F4",
  "cart": "\uE7F5",
  "checkbox-filled": "\uE442",
  "checkbox": "\uE7FA",
  "arrowleft": "\uE582",
  "arrowdown": "\uE581",
  "arrowright": "\uE583",
  "smallcircle-filled": "\uE801",
  "arrowup": "\uE580",
  "circle": "\uE411",
  "eye-filled": "\uE568",
  "eye-slash-filled": "\uE822",
  "eye-slash": "\uE823",
  "eye": "\uE824",
  "flag-filled": "\uE825",
  "flag": "\uE508",
  "gear-filled": "\uE532",
  "reload": "\uE462",
  "gear": "\uE502",
  "hand-thumbsdown-filled": "\uE83B",
  "hand-thumbsdown": "\uE83C",
  "hand-thumbsup-filled": "\uE83D",
  "heart-filled": "\uE83E",
  "hand-thumbsup": "\uE83F",
  "heart": "\uE840",
  "home": "\uE500",
  "info": "\uE504",
  "home-filled": "\uE530",
  "info-filled": "\uE534",
  "circle-filled": "\uE441",
  "chat-filled": "\uE847",
  "chat": "\uE263",
  "mail-open-filled": "\uE84D",
  "email-filled": "\uE231",
  "mail-open": "\uE84E",
  "email": "\uE201",
  "checkmarkempty": "\uE472",
  "list": "\uE562",
  "locked-filled": "\uE856",
  "locked": "\uE506",
  "map-filled": "\uE85C",
  "map-pin": "\uE85E",
  "map-pin-ellipse": "\uE864",
  "map": "\uE364",
  "minus-filled": "\uE440",
  "mic-filled": "\uE332",
  "minus": "\uE410",
  "micoff": "\uE360",
  "mic": "\uE302",
  "clear": "\uE434",
  "smallcircle": "\uE868",
  "close": "\uE404",
  "closeempty": "\uE460",
  "paperclip": "\uE567",
  "paperplane": "\uE503",
  "paperplane-filled": "\uE86E",
  "person-filled": "\uE131",
  "contact-filled": "\uE130",
  "person": "\uE101",
  "contact": "\uE100",
  "images-filled": "\uE87A",
  "phone": "\uE200",
  "images": "\uE87B",
  "image": "\uE363",
  "image-filled": "\uE877",
  "location-filled": "\uE333",
  "location": "\uE303",
  "plus-filled": "\uE439",
  "plus": "\uE409",
  "plusempty": "\uE468",
  "help-filled": "\uE535",
  "help": "\uE505",
  "navigate-filled": "\uE884",
  "navigate": "\uE501",
  "mic-slash-filled": "\uE892",
  "search": "\uE466",
  "settings": "\uE560",
  "sound": "\uE590",
  "sound-filled": "\uE8A1",
  "spinner-cycle": "\uE465",
  "download-filled": "\uE8A4",
  "personadd-filled": "\uE132",
  "videocam-filled": "\uE8AF",
  "personadd": "\uE102",
  "upload": "\uE402",
  "upload-filled": "\uE8B1",
  "starhalf": "\uE463",
  "star-filled": "\uE438",
  "star": "\uE408",
  "trash": "\uE401",
  "phone-filled": "\uE230",
  "compose": "\uE400",
  "videocam": "\uE300",
  "trash-filled": "\uE8DC",
  "download": "\uE403",
  "chatbubble-filled": "\uE232",
  "chatbubble": "\uE202",
  "cloud-download": "\uE8E4",
  "cloud-upload-filled": "\uE8E5",
  "cloud-upload": "\uE8E6",
  "cloud-download-filled": "\uE8E9",
  "headphones": "\uE8BF",
  "shop": "\uE609" };exports.default = _default;

/***/ }),
/* 309 */,
/* 310 */,
/* 311 */,
/* 312 */,
/* 313 */,
/* 314 */,
/* 315 */,
/* 316 */,
/* 317 */,
/* 318 */,
/* 319 */,
/* 320 */,
/* 321 */,
/* 322 */,
/* 323 */
/*!******************************************************************************************************!*\
  !*** D:/projects/bookingVaccine/bookingVaccineMini/components/lingdang-AddressPicker/AddressData.js ***!
  \******************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
Object.defineProperty(exports, "__esModule", { value: true });exports.default = void 0;var _default = [{
  "id": "110000",
  "name": "北京市",
  "children": [{
    "id": "110100",
    "name": "北京市",
    "parent": "110000",
    "children": [{
      "id": "110101",
      "name": "东城区",
      "parent": "110100",
      "children": null },
    {
      "id": "110102",
      "name": "西城区",
      "parent": "110100",
      "children": null },
    {
      "id": "110103",
      "name": "崇文区",
      "parent": "110100",
      "children": null },
    {
      "id": "110104",
      "name": "宣武区",
      "parent": "110100",
      "children": null },
    {
      "id": "110105",
      "name": "朝阳区",
      "parent": "110100",
      "children": null },
    {
      "id": "110106",
      "name": "丰台区",
      "parent": "110100",
      "children": null },
    {
      "id": "110107",
      "name": "石景山区",
      "parent": "110100",
      "children": null },
    {
      "id": "110108",
      "name": "海淀区",
      "parent": "110100",
      "children": null },
    {
      "id": "110109",
      "name": "门头沟区",
      "parent": "110100",
      "children": null },
    {
      "id": "110111",
      "name": "房山区",
      "parent": "110100",
      "children": null },
    {
      "id": "110112",
      "name": "通州区",
      "parent": "110100",
      "children": null },
    {
      "id": "110113",
      "name": "顺义区",
      "parent": "110100",
      "children": null },
    {
      "id": "110114",
      "name": "昌平区",
      "parent": "110100",
      "children": null },
    {
      "id": "110115",
      "name": "大兴区",
      "parent": "110100",
      "children": null },
    {
      "id": "110116",
      "name": "怀柔区",
      "parent": "110100",
      "children": null },
    {
      "id": "110117",
      "name": "平谷区",
      "parent": "110100",
      "children": null },
    {
      "id": "110228",
      "name": "密云县",
      "parent": "110100",
      "children": null },
    {
      "id": "110229",
      "name": "延庆县",
      "parent": "110100",
      "children": null },
    {
      "id": "110230",
      "name": "其它区",
      "parent": "110100",
      "children": null }] }] },


{
  "id": "120000",
  "name": "天津市",
  "children": [{
    "id": "120100",
    "name": "天津市",
    "parent": "120000",
    "children": [{
      "id": "120101",
      "name": "和平区",
      "parent": "120100",
      "children": null },
    {
      "id": "120102",
      "name": "河东区",
      "parent": "120100",
      "children": null },
    {
      "id": "120103",
      "name": "河西区",
      "parent": "120100",
      "children": null },
    {
      "id": "120104",
      "name": "南开区",
      "parent": "120100",
      "children": null },
    {
      "id": "120105",
      "name": "河北区",
      "parent": "120100",
      "children": null },
    {
      "id": "120106",
      "name": "红桥区",
      "parent": "120100",
      "children": null },
    {
      "id": "120107",
      "name": "塘沽区",
      "parent": "120100",
      "children": null },
    {
      "id": "120108",
      "name": "汉沽区",
      "parent": "120100",
      "children": null },
    {
      "id": "120109",
      "name": "大港区",
      "parent": "120100",
      "children": null },
    {
      "id": "120110",
      "name": "东丽区",
      "parent": "120100",
      "children": null },
    {
      "id": "120111",
      "name": "西青区",
      "parent": "120100",
      "children": null },
    {
      "id": "120112",
      "name": "津南区",
      "parent": "120100",
      "children": null },
    {
      "id": "120113",
      "name": "北辰区",
      "parent": "120100",
      "children": null },
    {
      "id": "120114",
      "name": "武清区",
      "parent": "120100",
      "children": null },
    {
      "id": "120115",
      "name": "宝坻区",
      "parent": "120100",
      "children": null },
    {
      "id": "120116",
      "name": "滨海新区",
      "parent": "120100",
      "children": null },
    {
      "id": "120221",
      "name": "宁河县",
      "parent": "120100",
      "children": null },
    {
      "id": "120223",
      "name": "静海县",
      "parent": "120100",
      "children": null },
    {
      "id": "120225",
      "name": "蓟县",
      "parent": "120100",
      "children": null },
    {
      "id": "120226",
      "name": "其它区",
      "parent": "120100",
      "children": null }] }] },


{
  "id": "130000",
  "name": "河北省",
  "children": [{
    "id": "130100",
    "name": "石家庄市",
    "parent": "130000",
    "children": [{
      "id": "130102",
      "name": "长安区",
      "parent": "130100",
      "children": null },
    {
      "id": "130103",
      "name": "桥东区",
      "parent": "130100",
      "children": null },
    {
      "id": "130104",
      "name": "桥西区",
      "parent": "130100",
      "children": null },
    {
      "id": "130105",
      "name": "新华区",
      "parent": "130100",
      "children": null },
    {
      "id": "130107",
      "name": "井陉矿区",
      "parent": "130100",
      "children": null },
    {
      "id": "130108",
      "name": "裕华区",
      "parent": "130100",
      "children": null },
    {
      "id": "130121",
      "name": "井陉县",
      "parent": "130100",
      "children": null },
    {
      "id": "130123",
      "name": "正定县",
      "parent": "130100",
      "children": null },
    {
      "id": "130124",
      "name": "栾城区",
      "parent": "130100",
      "children": null },
    {
      "id": "130125",
      "name": "行唐县",
      "parent": "130100",
      "children": null },
    {
      "id": "130126",
      "name": "灵寿县",
      "parent": "130100",
      "children": null },
    {
      "id": "130127",
      "name": "高邑县",
      "parent": "130100",
      "children": null },
    {
      "id": "130128",
      "name": "深泽县",
      "parent": "130100",
      "children": null },
    {
      "id": "130129",
      "name": "赞皇县",
      "parent": "130100",
      "children": null },
    {
      "id": "130130",
      "name": "无极县",
      "parent": "130100",
      "children": null },
    {
      "id": "130131",
      "name": "平山县",
      "parent": "130100",
      "children": null },
    {
      "id": "130132",
      "name": "元氏县",
      "parent": "130100",
      "children": null },
    {
      "id": "130133",
      "name": "赵县",
      "parent": "130100",
      "children": null },
    {
      "id": "130181",
      "name": "辛集市",
      "parent": "130100",
      "children": null },
    {
      "id": "130182",
      "name": "藁城区",
      "parent": "130100",
      "children": null },
    {
      "id": "130183",
      "name": "晋州市",
      "parent": "130100",
      "children": null },
    {
      "id": "130184",
      "name": "新乐市",
      "parent": "130100",
      "children": null },
    {
      "id": "130185",
      "name": "鹿泉区",
      "parent": "130100",
      "children": null },
    {
      "id": "130186",
      "name": "其它区",
      "parent": "130100",
      "children": null }] },

  {
    "id": "130200",
    "name": "唐山市",
    "parent": "130000",
    "children": [{
      "id": "130202",
      "name": "路南区",
      "parent": "130200",
      "children": null },
    {
      "id": "130203",
      "name": "路北区",
      "parent": "130200",
      "children": null },
    {
      "id": "130204",
      "name": "古冶区",
      "parent": "130200",
      "children": null },
    {
      "id": "130205",
      "name": "开平区",
      "parent": "130200",
      "children": null },
    {
      "id": "130207",
      "name": "丰南区",
      "parent": "130200",
      "children": null },
    {
      "id": "130208",
      "name": "丰润区",
      "parent": "130200",
      "children": null },
    {
      "id": "130223",
      "name": "滦县",
      "parent": "130200",
      "children": null },
    {
      "id": "130224",
      "name": "滦南县",
      "parent": "130200",
      "children": null },
    {
      "id": "130225",
      "name": "乐亭县",
      "parent": "130200",
      "children": null },
    {
      "id": "130227",
      "name": "迁西县",
      "parent": "130200",
      "children": null },
    {
      "id": "130229",
      "name": "玉田县",
      "parent": "130200",
      "children": null },
    {
      "id": "130230",
      "name": "曹妃甸区",
      "parent": "130200",
      "children": null },
    {
      "id": "130281",
      "name": "遵化市",
      "parent": "130200",
      "children": null },
    {
      "id": "130283",
      "name": "迁安市",
      "parent": "130200",
      "children": null },
    {
      "id": "130284",
      "name": "其它区",
      "parent": "130200",
      "children": null }] },

  {
    "id": "130300",
    "name": "秦皇岛市",
    "parent": "130000",
    "children": [{
      "id": "130302",
      "name": "海港区",
      "parent": "130300",
      "children": null },
    {
      "id": "130303",
      "name": "山海关区",
      "parent": "130300",
      "children": null },
    {
      "id": "130304",
      "name": "北戴河区",
      "parent": "130300",
      "children": null },
    {
      "id": "130321",
      "name": "青龙满族自治县",
      "parent": "130300",
      "children": null },
    {
      "id": "130322",
      "name": "昌黎县",
      "parent": "130300",
      "children": null },
    {
      "id": "130323",
      "name": "抚宁县",
      "parent": "130300",
      "children": null },
    {
      "id": "130324",
      "name": "卢龙县",
      "parent": "130300",
      "children": null },
    {
      "id": "130398",
      "name": "其它区",
      "parent": "130300",
      "children": null },
    {
      "id": "130399",
      "name": "经济技术开发区",
      "parent": "130300",
      "children": null }] },

  {
    "id": "130400",
    "name": "邯郸市",
    "parent": "130000",
    "children": [{
      "id": "130402",
      "name": "邯山区",
      "parent": "130400",
      "children": null },
    {
      "id": "130403",
      "name": "丛台区",
      "parent": "130400",
      "children": null },
    {
      "id": "130404",
      "name": "复兴区",
      "parent": "130400",
      "children": null },
    {
      "id": "130406",
      "name": "峰峰矿区",
      "parent": "130400",
      "children": null },
    {
      "id": "130421",
      "name": "邯郸县",
      "parent": "130400",
      "children": null },
    {
      "id": "130423",
      "name": "临漳县",
      "parent": "130400",
      "children": null },
    {
      "id": "130424",
      "name": "成安县",
      "parent": "130400",
      "children": null },
    {
      "id": "130425",
      "name": "大名县",
      "parent": "130400",
      "children": null },
    {
      "id": "130426",
      "name": "涉县",
      "parent": "130400",
      "children": null },
    {
      "id": "130427",
      "name": "磁县",
      "parent": "130400",
      "children": null },
    {
      "id": "130428",
      "name": "肥乡县",
      "parent": "130400",
      "children": null },
    {
      "id": "130429",
      "name": "永年县",
      "parent": "130400",
      "children": null },
    {
      "id": "130430",
      "name": "邱县",
      "parent": "130400",
      "children": null },
    {
      "id": "130431",
      "name": "鸡泽县",
      "parent": "130400",
      "children": null },
    {
      "id": "130432",
      "name": "广平县",
      "parent": "130400",
      "children": null },
    {
      "id": "130433",
      "name": "馆陶县",
      "parent": "130400",
      "children": null },
    {
      "id": "130434",
      "name": "魏县",
      "parent": "130400",
      "children": null },
    {
      "id": "130435",
      "name": "曲周县",
      "parent": "130400",
      "children": null },
    {
      "id": "130481",
      "name": "武安市",
      "parent": "130400",
      "children": null },
    {
      "id": "130482",
      "name": "其它区",
      "parent": "130400",
      "children": null }] },

  {
    "id": "130500",
    "name": "邢台市",
    "parent": "130000",
    "children": [{
      "id": "130502",
      "name": "桥东区",
      "parent": "130500",
      "children": null },
    {
      "id": "130503",
      "name": "桥西区",
      "parent": "130500",
      "children": null },
    {
      "id": "130521",
      "name": "邢台县",
      "parent": "130500",
      "children": null },
    {
      "id": "130522",
      "name": "临城县",
      "parent": "130500",
      "children": null },
    {
      "id": "130523",
      "name": "内丘县",
      "parent": "130500",
      "children": null },
    {
      "id": "130524",
      "name": "柏乡县",
      "parent": "130500",
      "children": null },
    {
      "id": "130525",
      "name": "隆尧县",
      "parent": "130500",
      "children": null },
    {
      "id": "130526",
      "name": "任县",
      "parent": "130500",
      "children": null },
    {
      "id": "130527",
      "name": "南和县",
      "parent": "130500",
      "children": null },
    {
      "id": "130528",
      "name": "宁晋县",
      "parent": "130500",
      "children": null },
    {
      "id": "130529",
      "name": "巨鹿县",
      "parent": "130500",
      "children": null },
    {
      "id": "130530",
      "name": "新河县",
      "parent": "130500",
      "children": null },
    {
      "id": "130531",
      "name": "广宗县",
      "parent": "130500",
      "children": null },
    {
      "id": "130532",
      "name": "平乡县",
      "parent": "130500",
      "children": null },
    {
      "id": "130533",
      "name": "威县",
      "parent": "130500",
      "children": null },
    {
      "id": "130534",
      "name": "清河县",
      "parent": "130500",
      "children": null },
    {
      "id": "130535",
      "name": "临西县",
      "parent": "130500",
      "children": null },
    {
      "id": "130581",
      "name": "南宫市",
      "parent": "130500",
      "children": null },
    {
      "id": "130582",
      "name": "沙河市",
      "parent": "130500",
      "children": null },
    {
      "id": "130583",
      "name": "其它区",
      "parent": "130500",
      "children": null }] },

  {
    "id": "130600",
    "name": "保定市",
    "parent": "130000",
    "children": [{
      "id": "130602",
      "name": "新市区",
      "parent": "130600",
      "children": null },
    {
      "id": "130603",
      "name": "北市区",
      "parent": "130600",
      "children": null },
    {
      "id": "130604",
      "name": "南市区",
      "parent": "130600",
      "children": null },
    {
      "id": "130621",
      "name": "满城县",
      "parent": "130600",
      "children": null },
    {
      "id": "130622",
      "name": "清苑县",
      "parent": "130600",
      "children": null },
    {
      "id": "130623",
      "name": "涞水县",
      "parent": "130600",
      "children": null },
    {
      "id": "130624",
      "name": "阜平县",
      "parent": "130600",
      "children": null },
    {
      "id": "130625",
      "name": "徐水县",
      "parent": "130600",
      "children": null },
    {
      "id": "130626",
      "name": "定兴县",
      "parent": "130600",
      "children": null },
    {
      "id": "130627",
      "name": "唐县",
      "parent": "130600",
      "children": null },
    {
      "id": "130628",
      "name": "高阳县",
      "parent": "130600",
      "children": null },
    {
      "id": "130629",
      "name": "容城县",
      "parent": "130600",
      "children": null },
    {
      "id": "130630",
      "name": "涞源县",
      "parent": "130600",
      "children": null },
    {
      "id": "130631",
      "name": "望都县",
      "parent": "130600",
      "children": null },
    {
      "id": "130632",
      "name": "安新县",
      "parent": "130600",
      "children": null },
    {
      "id": "130633",
      "name": "易县",
      "parent": "130600",
      "children": null },
    {
      "id": "130634",
      "name": "曲阳县",
      "parent": "130600",
      "children": null },
    {
      "id": "130635",
      "name": "蠡县",
      "parent": "130600",
      "children": null },
    {
      "id": "130636",
      "name": "顺平县",
      "parent": "130600",
      "children": null },
    {
      "id": "130637",
      "name": "博野县",
      "parent": "130600",
      "children": null },
    {
      "id": "130638",
      "name": "雄县",
      "parent": "130600",
      "children": null },
    {
      "id": "130681",
      "name": "涿州市",
      "parent": "130600",
      "children": null },
    {
      "id": "130682",
      "name": "定州市",
      "parent": "130600",
      "children": null },
    {
      "id": "130683",
      "name": "安国市",
      "parent": "130600",
      "children": null },
    {
      "id": "130684",
      "name": "高碑店市",
      "parent": "130600",
      "children": null },
    {
      "id": "130698",
      "name": "高开区",
      "parent": "130600",
      "children": null },
    {
      "id": "130699",
      "name": "其它区",
      "parent": "130600",
      "children": null }] },

  {
    "id": "130700",
    "name": "张家口市",
    "parent": "130000",
    "children": [{
      "id": "130702",
      "name": "桥东区",
      "parent": "130700",
      "children": null },
    {
      "id": "130703",
      "name": "桥西区",
      "parent": "130700",
      "children": null },
    {
      "id": "130705",
      "name": "宣化区",
      "parent": "130700",
      "children": null },
    {
      "id": "130706",
      "name": "下花园区",
      "parent": "130700",
      "children": null },
    {
      "id": "130721",
      "name": "宣化县",
      "parent": "130700",
      "children": null },
    {
      "id": "130722",
      "name": "张北县",
      "parent": "130700",
      "children": null },
    {
      "id": "130723",
      "name": "康保县",
      "parent": "130700",
      "children": null },
    {
      "id": "130724",
      "name": "沽源县",
      "parent": "130700",
      "children": null },
    {
      "id": "130725",
      "name": "尚义县",
      "parent": "130700",
      "children": null },
    {
      "id": "130726",
      "name": "蔚县",
      "parent": "130700",
      "children": null },
    {
      "id": "130727",
      "name": "阳原县",
      "parent": "130700",
      "children": null },
    {
      "id": "130728",
      "name": "怀安县",
      "parent": "130700",
      "children": null },
    {
      "id": "130729",
      "name": "万全县",
      "parent": "130700",
      "children": null },
    {
      "id": "130730",
      "name": "怀来县",
      "parent": "130700",
      "children": null },
    {
      "id": "130731",
      "name": "涿鹿县",
      "parent": "130700",
      "children": null },
    {
      "id": "130732",
      "name": "赤城县",
      "parent": "130700",
      "children": null },
    {
      "id": "130733",
      "name": "崇礼县",
      "parent": "130700",
      "children": null },
    {
      "id": "130734",
      "name": "其它区",
      "parent": "130700",
      "children": null }] },

  {
    "id": "130800",
    "name": "承德市",
    "parent": "130000",
    "children": [{
      "id": "130802",
      "name": "双桥区",
      "parent": "130800",
      "children": null },
    {
      "id": "130803",
      "name": "双滦区",
      "parent": "130800",
      "children": null },
    {
      "id": "130804",
      "name": "鹰手营子矿区",
      "parent": "130800",
      "children": null },
    {
      "id": "130821",
      "name": "承德县",
      "parent": "130800",
      "children": null },
    {
      "id": "130822",
      "name": "兴隆县",
      "parent": "130800",
      "children": null },
    {
      "id": "130823",
      "name": "平泉县",
      "parent": "130800",
      "children": null },
    {
      "id": "130824",
      "name": "滦平县",
      "parent": "130800",
      "children": null },
    {
      "id": "130825",
      "name": "隆化县",
      "parent": "130800",
      "children": null },
    {
      "id": "130826",
      "name": "丰宁满族自治县",
      "parent": "130800",
      "children": null },
    {
      "id": "130827",
      "name": "宽城满族自治县",
      "parent": "130800",
      "children": null },
    {
      "id": "130828",
      "name": "围场满族蒙古族自治县",
      "parent": "130800",
      "children": null },
    {
      "id": "130829",
      "name": "其它区",
      "parent": "130800",
      "children": null }] },

  {
    "id": "130900",
    "name": "沧州市",
    "parent": "130000",
    "children": [{
      "id": "130902",
      "name": "新华区",
      "parent": "130900",
      "children": null },
    {
      "id": "130903",
      "name": "运河区",
      "parent": "130900",
      "children": null },
    {
      "id": "130921",
      "name": "沧县",
      "parent": "130900",
      "children": null },
    {
      "id": "130922",
      "name": "青县",
      "parent": "130900",
      "children": null },
    {
      "id": "130923",
      "name": "东光县",
      "parent": "130900",
      "children": null },
    {
      "id": "130924",
      "name": "海兴县",
      "parent": "130900",
      "children": null },
    {
      "id": "130925",
      "name": "盐山县",
      "parent": "130900",
      "children": null },
    {
      "id": "130926",
      "name": "肃宁县",
      "parent": "130900",
      "children": null },
    {
      "id": "130927",
      "name": "南皮县",
      "parent": "130900",
      "children": null },
    {
      "id": "130928",
      "name": "吴桥县",
      "parent": "130900",
      "children": null },
    {
      "id": "130929",
      "name": "献县",
      "parent": "130900",
      "children": null },
    {
      "id": "130930",
      "name": "孟村回族自治县",
      "parent": "130900",
      "children": null },
    {
      "id": "130981",
      "name": "泊头市",
      "parent": "130900",
      "children": null },
    {
      "id": "130982",
      "name": "任丘市",
      "parent": "130900",
      "children": null },
    {
      "id": "130983",
      "name": "黄骅市",
      "parent": "130900",
      "children": null },
    {
      "id": "130984",
      "name": "河间市",
      "parent": "130900",
      "children": null },
    {
      "id": "130985",
      "name": "其它区",
      "parent": "130900",
      "children": null }] },

  {
    "id": "131000",
    "name": "廊坊市",
    "parent": "130000",
    "children": [{
      "id": "131002",
      "name": "安次区",
      "parent": "131000",
      "children": null },
    {
      "id": "131003",
      "name": "广阳区",
      "parent": "131000",
      "children": null },
    {
      "id": "131022",
      "name": "固安县",
      "parent": "131000",
      "children": null },
    {
      "id": "131023",
      "name": "永清县",
      "parent": "131000",
      "children": null },
    {
      "id": "131024",
      "name": "香河县",
      "parent": "131000",
      "children": null },
    {
      "id": "131025",
      "name": "大城县",
      "parent": "131000",
      "children": null },
    {
      "id": "131026",
      "name": "文安县",
      "parent": "131000",
      "children": null },
    {
      "id": "131028",
      "name": "大厂回族自治县",
      "parent": "131000",
      "children": null },
    {
      "id": "131051",
      "name": "开发区",
      "parent": "131000",
      "children": null },
    {
      "id": "131052",
      "name": "燕郊经济技术开发区",
      "parent": "131000",
      "children": null },
    {
      "id": "131081",
      "name": "霸州市",
      "parent": "131000",
      "children": null },
    {
      "id": "131082",
      "name": "三河市",
      "parent": "131000",
      "children": null },
    {
      "id": "131083",
      "name": "其它区",
      "parent": "131000",
      "children": null }] },

  {
    "id": "131100",
    "name": "衡水市",
    "parent": "130000",
    "children": [{
      "id": "131102",
      "name": "桃城区",
      "parent": "131100",
      "children": null },
    {
      "id": "131121",
      "name": "枣强县",
      "parent": "131100",
      "children": null },
    {
      "id": "131122",
      "name": "武邑县",
      "parent": "131100",
      "children": null },
    {
      "id": "131123",
      "name": "武强县",
      "parent": "131100",
      "children": null },
    {
      "id": "131124",
      "name": "饶阳县",
      "parent": "131100",
      "children": null },
    {
      "id": "131125",
      "name": "安平县",
      "parent": "131100",
      "children": null },
    {
      "id": "131126",
      "name": "故城县",
      "parent": "131100",
      "children": null },
    {
      "id": "131127",
      "name": "景县",
      "parent": "131100",
      "children": null },
    {
      "id": "131128",
      "name": "阜城县",
      "parent": "131100",
      "children": null },
    {
      "id": "131181",
      "name": "冀州市",
      "parent": "131100",
      "children": null },
    {
      "id": "131182",
      "name": "深州市",
      "parent": "131100",
      "children": null },
    {
      "id": "131183",
      "name": "其它区",
      "parent": "131100",
      "children": null }] }] },


{
  "id": "140000",
  "name": "山西省",
  "children": [{
    "id": "140100",
    "name": "太原市",
    "parent": "140000",
    "children": [{
      "id": "140105",
      "name": "小店区",
      "parent": "140100",
      "children": null },
    {
      "id": "140106",
      "name": "迎泽区",
      "parent": "140100",
      "children": null },
    {
      "id": "140107",
      "name": "杏花岭区",
      "parent": "140100",
      "children": null },
    {
      "id": "140108",
      "name": "尖草坪区",
      "parent": "140100",
      "children": null },
    {
      "id": "140109",
      "name": "万柏林区",
      "parent": "140100",
      "children": null },
    {
      "id": "140110",
      "name": "晋源区",
      "parent": "140100",
      "children": null },
    {
      "id": "140121",
      "name": "清徐县",
      "parent": "140100",
      "children": null },
    {
      "id": "140122",
      "name": "阳曲县",
      "parent": "140100",
      "children": null },
    {
      "id": "140123",
      "name": "娄烦县",
      "parent": "140100",
      "children": null },
    {
      "id": "140181",
      "name": "古交市",
      "parent": "140100",
      "children": null },
    {
      "id": "140182",
      "name": "其它区",
      "parent": "140100",
      "children": null }] },

  {
    "id": "140200",
    "name": "大同市",
    "parent": "140000",
    "children": [{
      "id": "140202",
      "name": "城区",
      "parent": "140200",
      "children": null },
    {
      "id": "140203",
      "name": "矿区",
      "parent": "140200",
      "children": null },
    {
      "id": "140211",
      "name": "南郊区",
      "parent": "140200",
      "children": null },
    {
      "id": "140212",
      "name": "新荣区",
      "parent": "140200",
      "children": null },
    {
      "id": "140221",
      "name": "阳高县",
      "parent": "140200",
      "children": null },
    {
      "id": "140222",
      "name": "天镇县",
      "parent": "140200",
      "children": null },
    {
      "id": "140223",
      "name": "广灵县",
      "parent": "140200",
      "children": null },
    {
      "id": "140224",
      "name": "灵丘县",
      "parent": "140200",
      "children": null },
    {
      "id": "140225",
      "name": "浑源县",
      "parent": "140200",
      "children": null },
    {
      "id": "140226",
      "name": "左云县",
      "parent": "140200",
      "children": null },
    {
      "id": "140227",
      "name": "大同县",
      "parent": "140200",
      "children": null },
    {
      "id": "140228",
      "name": "其它区",
      "parent": "140200",
      "children": null }] },

  {
    "id": "140300",
    "name": "阳泉市",
    "parent": "140000",
    "children": [{
      "id": "140302",
      "name": "城区",
      "parent": "140300",
      "children": null },
    {
      "id": "140303",
      "name": "矿区",
      "parent": "140300",
      "children": null },
    {
      "id": "140311",
      "name": "郊区",
      "parent": "140300",
      "children": null },
    {
      "id": "140321",
      "name": "平定县",
      "parent": "140300",
      "children": null },
    {
      "id": "140322",
      "name": "盂县",
      "parent": "140300",
      "children": null },
    {
      "id": "140323",
      "name": "其它区",
      "parent": "140300",
      "children": null }] },

  {
    "id": "140400",
    "name": "长治市",
    "parent": "140000",
    "children": [{
      "id": "140421",
      "name": "长治县",
      "parent": "140400",
      "children": null },
    {
      "id": "140423",
      "name": "襄垣县",
      "parent": "140400",
      "children": null },
    {
      "id": "140424",
      "name": "屯留县",
      "parent": "140400",
      "children": null },
    {
      "id": "140425",
      "name": "平顺县",
      "parent": "140400",
      "children": null },
    {
      "id": "140426",
      "name": "黎城县",
      "parent": "140400",
      "children": null },
    {
      "id": "140427",
      "name": "壶关县",
      "parent": "140400",
      "children": null },
    {
      "id": "140428",
      "name": "长子县",
      "parent": "140400",
      "children": null },
    {
      "id": "140429",
      "name": "武乡县",
      "parent": "140400",
      "children": null },
    {
      "id": "140430",
      "name": "沁县",
      "parent": "140400",
      "children": null },
    {
      "id": "140431",
      "name": "沁源县",
      "parent": "140400",
      "children": null },
    {
      "id": "140481",
      "name": "潞城市",
      "parent": "140400",
      "children": null },
    {
      "id": "140482",
      "name": "城区",
      "parent": "140400",
      "children": null },
    {
      "id": "140483",
      "name": "郊区",
      "parent": "140400",
      "children": null },
    {
      "id": "140484",
      "name": "高新区",
      "parent": "140400",
      "children": null },
    {
      "id": "140485",
      "name": "其它区",
      "parent": "140400",
      "children": null }] },

  {
    "id": "140500",
    "name": "晋城市",
    "parent": "140000",
    "children": [{
      "id": "140502",
      "name": "城区",
      "parent": "140500",
      "children": null },
    {
      "id": "140521",
      "name": "沁水县",
      "parent": "140500",
      "children": null },
    {
      "id": "140522",
      "name": "阳城县",
      "parent": "140500",
      "children": null },
    {
      "id": "140524",
      "name": "陵川县",
      "parent": "140500",
      "children": null },
    {
      "id": "140525",
      "name": "泽州县",
      "parent": "140500",
      "children": null },
    {
      "id": "140581",
      "name": "高平市",
      "parent": "140500",
      "children": null },
    {
      "id": "140582",
      "name": "其它区",
      "parent": "140500",
      "children": null }] },

  {
    "id": "140600",
    "name": "朔州市",
    "parent": "140000",
    "children": [{
      "id": "140602",
      "name": "朔城区",
      "parent": "140600",
      "children": null },
    {
      "id": "140603",
      "name": "平鲁区",
      "parent": "140600",
      "children": null },
    {
      "id": "140621",
      "name": "山阴县",
      "parent": "140600",
      "children": null },
    {
      "id": "140622",
      "name": "应县",
      "parent": "140600",
      "children": null },
    {
      "id": "140623",
      "name": "右玉县",
      "parent": "140600",
      "children": null },
    {
      "id": "140624",
      "name": "怀仁县",
      "parent": "140600",
      "children": null },
    {
      "id": "140625",
      "name": "其它区",
      "parent": "140600",
      "children": null }] },

  {
    "id": "140700",
    "name": "晋中市",
    "parent": "140000",
    "children": [{
      "id": "140702",
      "name": "榆次区",
      "parent": "140700",
      "children": null },
    {
      "id": "140721",
      "name": "榆社县",
      "parent": "140700",
      "children": null },
    {
      "id": "140722",
      "name": "左权县",
      "parent": "140700",
      "children": null },
    {
      "id": "140723",
      "name": "和顺县",
      "parent": "140700",
      "children": null },
    {
      "id": "140724",
      "name": "昔阳县",
      "parent": "140700",
      "children": null },
    {
      "id": "140725",
      "name": "寿阳县",
      "parent": "140700",
      "children": null },
    {
      "id": "140726",
      "name": "太谷县",
      "parent": "140700",
      "children": null },
    {
      "id": "140727",
      "name": "祁县",
      "parent": "140700",
      "children": null },
    {
      "id": "140728",
      "name": "平遥县",
      "parent": "140700",
      "children": null },
    {
      "id": "140729",
      "name": "灵石县",
      "parent": "140700",
      "children": null },
    {
      "id": "140781",
      "name": "介休市",
      "parent": "140700",
      "children": null },
    {
      "id": "140782",
      "name": "其它区",
      "parent": "140700",
      "children": null }] },

  {
    "id": "140800",
    "name": "运城市",
    "parent": "140000",
    "children": [{
      "id": "140802",
      "name": "盐湖区",
      "parent": "140800",
      "children": null },
    {
      "id": "140821",
      "name": "临猗县",
      "parent": "140800",
      "children": null },
    {
      "id": "140822",
      "name": "万荣县",
      "parent": "140800",
      "children": null },
    {
      "id": "140823",
      "name": "闻喜县",
      "parent": "140800",
      "children": null },
    {
      "id": "140824",
      "name": "稷山县",
      "parent": "140800",
      "children": null },
    {
      "id": "140825",
      "name": "新绛县",
      "parent": "140800",
      "children": null },
    {
      "id": "140826",
      "name": "绛县",
      "parent": "140800",
      "children": null },
    {
      "id": "140827",
      "name": "垣曲县",
      "parent": "140800",
      "children": null },
    {
      "id": "140828",
      "name": "夏县",
      "parent": "140800",
      "children": null },
    {
      "id": "140829",
      "name": "平陆县",
      "parent": "140800",
      "children": null },
    {
      "id": "140830",
      "name": "芮城县",
      "parent": "140800",
      "children": null },
    {
      "id": "140881",
      "name": "永济市",
      "parent": "140800",
      "children": null },
    {
      "id": "140882",
      "name": "河津市",
      "parent": "140800",
      "children": null },
    {
      "id": "140883",
      "name": "其它区",
      "parent": "140800",
      "children": null }] },

  {
    "id": "140900",
    "name": "忻州市",
    "parent": "140000",
    "children": [{
      "id": "140902",
      "name": "忻府区",
      "parent": "140900",
      "children": null },
    {
      "id": "140921",
      "name": "定襄县",
      "parent": "140900",
      "children": null },
    {
      "id": "140922",
      "name": "五台县",
      "parent": "140900",
      "children": null },
    {
      "id": "140923",
      "name": "代县",
      "parent": "140900",
      "children": null },
    {
      "id": "140924",
      "name": "繁峙县",
      "parent": "140900",
      "children": null },
    {
      "id": "140925",
      "name": "宁武县",
      "parent": "140900",
      "children": null },
    {
      "id": "140926",
      "name": "静乐县",
      "parent": "140900",
      "children": null },
    {
      "id": "140927",
      "name": "神池县",
      "parent": "140900",
      "children": null },
    {
      "id": "140928",
      "name": "五寨县",
      "parent": "140900",
      "children": null },
    {
      "id": "140929",
      "name": "岢岚县",
      "parent": "140900",
      "children": null },
    {
      "id": "140930",
      "name": "河曲县",
      "parent": "140900",
      "children": null },
    {
      "id": "140931",
      "name": "保德县",
      "parent": "140900",
      "children": null },
    {
      "id": "140932",
      "name": "偏关县",
      "parent": "140900",
      "children": null },
    {
      "id": "140981",
      "name": "原平市",
      "parent": "140900",
      "children": null },
    {
      "id": "140982",
      "name": "其它区",
      "parent": "140900",
      "children": null }] },

  {
    "id": "141000",
    "name": "临汾市",
    "parent": "140000",
    "children": [{
      "id": "141002",
      "name": "尧都区",
      "parent": "141000",
      "children": null },
    {
      "id": "141021",
      "name": "曲沃县",
      "parent": "141000",
      "children": null },
    {
      "id": "141022",
      "name": "翼城县",
      "parent": "141000",
      "children": null },
    {
      "id": "141023",
      "name": "襄汾县",
      "parent": "141000",
      "children": null },
    {
      "id": "141024",
      "name": "洪洞县",
      "parent": "141000",
      "children": null },
    {
      "id": "141025",
      "name": "古县",
      "parent": "141000",
      "children": null },
    {
      "id": "141026",
      "name": "安泽县",
      "parent": "141000",
      "children": null },
    {
      "id": "141027",
      "name": "浮山县",
      "parent": "141000",
      "children": null },
    {
      "id": "141028",
      "name": "吉县",
      "parent": "141000",
      "children": null },
    {
      "id": "141029",
      "name": "乡宁县",
      "parent": "141000",
      "children": null },
    {
      "id": "141030",
      "name": "大宁县",
      "parent": "141000",
      "children": null },
    {
      "id": "141031",
      "name": "隰县",
      "parent": "141000",
      "children": null },
    {
      "id": "141032",
      "name": "永和县",
      "parent": "141000",
      "children": null },
    {
      "id": "141033",
      "name": "蒲县",
      "parent": "141000",
      "children": null },
    {
      "id": "141034",
      "name": "汾西县",
      "parent": "141000",
      "children": null },
    {
      "id": "141081",
      "name": "侯马市",
      "parent": "141000",
      "children": null },
    {
      "id": "141082",
      "name": "霍州市",
      "parent": "141000",
      "children": null },
    {
      "id": "141083",
      "name": "其它区",
      "parent": "141000",
      "children": null }] },

  {
    "id": "141100",
    "name": "吕梁市",
    "parent": "140000",
    "children": [{
      "id": "141102",
      "name": "离石区",
      "parent": "141100",
      "children": null },
    {
      "id": "141121",
      "name": "文水县",
      "parent": "141100",
      "children": null },
    {
      "id": "141122",
      "name": "交城县",
      "parent": "141100",
      "children": null },
    {
      "id": "141123",
      "name": "兴县",
      "parent": "141100",
      "children": null },
    {
      "id": "141124",
      "name": "临县",
      "parent": "141100",
      "children": null },
    {
      "id": "141125",
      "name": "柳林县",
      "parent": "141100",
      "children": null },
    {
      "id": "141126",
      "name": "石楼县",
      "parent": "141100",
      "children": null },
    {
      "id": "141127",
      "name": "岚县",
      "parent": "141100",
      "children": null },
    {
      "id": "141128",
      "name": "方山县",
      "parent": "141100",
      "children": null },
    {
      "id": "141129",
      "name": "中阳县",
      "parent": "141100",
      "children": null },
    {
      "id": "141130",
      "name": "交口县",
      "parent": "141100",
      "children": null },
    {
      "id": "141181",
      "name": "孝义市",
      "parent": "141100",
      "children": null },
    {
      "id": "141182",
      "name": "汾阳市",
      "parent": "141100",
      "children": null },
    {
      "id": "141183",
      "name": "其它区",
      "parent": "141100",
      "children": null }] }] },


{
  "id": "150000",
  "name": "内蒙古自治区",
  "children": [{
    "id": "150100",
    "name": "呼和浩特市",
    "parent": "150000",
    "children": [{
      "id": "150102",
      "name": "新城区",
      "parent": "150100",
      "children": null },
    {
      "id": "150103",
      "name": "回民区",
      "parent": "150100",
      "children": null },
    {
      "id": "150104",
      "name": "玉泉区",
      "parent": "150100",
      "children": null },
    {
      "id": "150105",
      "name": "赛罕区",
      "parent": "150100",
      "children": null },
    {
      "id": "150121",
      "name": "土默特左旗",
      "parent": "150100",
      "children": null },
    {
      "id": "150122",
      "name": "托克托县",
      "parent": "150100",
      "children": null },
    {
      "id": "150123",
      "name": "和林格尔县",
      "parent": "150100",
      "children": null },
    {
      "id": "150124",
      "name": "清水河县",
      "parent": "150100",
      "children": null },
    {
      "id": "150125",
      "name": "武川县",
      "parent": "150100",
      "children": null },
    {
      "id": "150126",
      "name": "其它区",
      "parent": "150100",
      "children": null }] },

  {
    "id": "150200",
    "name": "包头市",
    "parent": "150000",
    "children": [{
      "id": "150202",
      "name": "东河区",
      "parent": "150200",
      "children": null },
    {
      "id": "150203",
      "name": "昆都仑区",
      "parent": "150200",
      "children": null },
    {
      "id": "150204",
      "name": "青山区",
      "parent": "150200",
      "children": null },
    {
      "id": "150205",
      "name": "石拐区",
      "parent": "150200",
      "children": null },
    {
      "id": "150206",
      "name": "白云鄂博矿区",
      "parent": "150200",
      "children": null },
    {
      "id": "150207",
      "name": "九原区",
      "parent": "150200",
      "children": null },
    {
      "id": "150221",
      "name": "土默特右旗",
      "parent": "150200",
      "children": null },
    {
      "id": "150222",
      "name": "固阳县",
      "parent": "150200",
      "children": null },
    {
      "id": "150223",
      "name": "达尔罕茂明安联合旗",
      "parent": "150200",
      "children": null },
    {
      "id": "150224",
      "name": "其它区",
      "parent": "150200",
      "children": null }] },

  {
    "id": "150300",
    "name": "乌海市",
    "parent": "150000",
    "children": [{
      "id": "150302",
      "name": "海勃湾区",
      "parent": "150300",
      "children": null },
    {
      "id": "150303",
      "name": "海南区",
      "parent": "150300",
      "children": null },
    {
      "id": "150304",
      "name": "乌达区",
      "parent": "150300",
      "children": null },
    {
      "id": "150305",
      "name": "其它区",
      "parent": "150300",
      "children": null }] },

  {
    "id": "150400",
    "name": "赤峰市",
    "parent": "150000",
    "children": [{
      "id": "150402",
      "name": "红山区",
      "parent": "150400",
      "children": null },
    {
      "id": "150403",
      "name": "元宝山区",
      "parent": "150400",
      "children": null },
    {
      "id": "150404",
      "name": "松山区",
      "parent": "150400",
      "children": null },
    {
      "id": "150421",
      "name": "阿鲁科尔沁旗",
      "parent": "150400",
      "children": null },
    {
      "id": "150422",
      "name": "巴林左旗",
      "parent": "150400",
      "children": null },
    {
      "id": "150423",
      "name": "巴林右旗",
      "parent": "150400",
      "children": null },
    {
      "id": "150424",
      "name": "林西县",
      "parent": "150400",
      "children": null },
    {
      "id": "150425",
      "name": "克什克腾旗",
      "parent": "150400",
      "children": null },
    {
      "id": "150426",
      "name": "翁牛特旗",
      "parent": "150400",
      "children": null },
    {
      "id": "150428",
      "name": "喀喇沁旗",
      "parent": "150400",
      "children": null },
    {
      "id": "150429",
      "name": "宁城县",
      "parent": "150400",
      "children": null },
    {
      "id": "150430",
      "name": "敖汉旗",
      "parent": "150400",
      "children": null },
    {
      "id": "150431",
      "name": "其它区",
      "parent": "150400",
      "children": null }] },

  {
    "id": "150500",
    "name": "通辽市",
    "parent": "150000",
    "children": [{
      "id": "150502",
      "name": "科尔沁区",
      "parent": "150500",
      "children": null },
    {
      "id": "150521",
      "name": "科尔沁左翼中旗",
      "parent": "150500",
      "children": null },
    {
      "id": "150522",
      "name": "科尔沁左翼后旗",
      "parent": "150500",
      "children": null },
    {
      "id": "150523",
      "name": "开鲁县",
      "parent": "150500",
      "children": null },
    {
      "id": "150524",
      "name": "库伦旗",
      "parent": "150500",
      "children": null },
    {
      "id": "150525",
      "name": "奈曼旗",
      "parent": "150500",
      "children": null },
    {
      "id": "150526",
      "name": "扎鲁特旗",
      "parent": "150500",
      "children": null },
    {
      "id": "150581",
      "name": "霍林郭勒市",
      "parent": "150500",
      "children": null },
    {
      "id": "150582",
      "name": "其它区",
      "parent": "150500",
      "children": null }] },

  {
    "id": "150600",
    "name": "鄂尔多斯市",
    "parent": "150000",
    "children": [{
      "id": "150602",
      "name": "东胜区",
      "parent": "150600",
      "children": null },
    {
      "id": "150621",
      "name": "达拉特旗",
      "parent": "150600",
      "children": null },
    {
      "id": "150622",
      "name": "准格尔旗",
      "parent": "150600",
      "children": null },
    {
      "id": "150623",
      "name": "鄂托克前旗",
      "parent": "150600",
      "children": null },
    {
      "id": "150624",
      "name": "鄂托克旗",
      "parent": "150600",
      "children": null },
    {
      "id": "150625",
      "name": "杭锦旗",
      "parent": "150600",
      "children": null },
    {
      "id": "150626",
      "name": "乌审旗",
      "parent": "150600",
      "children": null },
    {
      "id": "150627",
      "name": "伊金霍洛旗",
      "parent": "150600",
      "children": null },
    {
      "id": "150628",
      "name": "其它区",
      "parent": "150600",
      "children": null }] },

  {
    "id": "150700",
    "name": "呼伦贝尔市",
    "parent": "150000",
    "children": [{
      "id": "150702",
      "name": "海拉尔区",
      "parent": "150700",
      "children": null },
    {
      "id": "150703",
      "name": "扎赉诺尔区",
      "parent": "150700",
      "children": null },
    {
      "id": "150721",
      "name": "阿荣旗",
      "parent": "150700",
      "children": null },
    {
      "id": "150722",
      "name": "莫力达瓦达斡尔族自治旗",
      "parent": "150700",
      "children": null },
    {
      "id": "150723",
      "name": "鄂伦春自治旗",
      "parent": "150700",
      "children": null },
    {
      "id": "150724",
      "name": "鄂温克族自治旗",
      "parent": "150700",
      "children": null },
    {
      "id": "150725",
      "name": "陈巴尔虎旗",
      "parent": "150700",
      "children": null },
    {
      "id": "150726",
      "name": "新巴尔虎左旗",
      "parent": "150700",
      "children": null },
    {
      "id": "150727",
      "name": "新巴尔虎右旗",
      "parent": "150700",
      "children": null },
    {
      "id": "150781",
      "name": "满洲里市",
      "parent": "150700",
      "children": null },
    {
      "id": "150782",
      "name": "牙克石市",
      "parent": "150700",
      "children": null },
    {
      "id": "150783",
      "name": "扎兰屯市",
      "parent": "150700",
      "children": null },
    {
      "id": "150784",
      "name": "额尔古纳市",
      "parent": "150700",
      "children": null },
    {
      "id": "150785",
      "name": "根河市",
      "parent": "150700",
      "children": null },
    {
      "id": "150786",
      "name": "其它区",
      "parent": "150700",
      "children": null }] },

  {
    "id": "150800",
    "name": "巴彦淖尔市",
    "parent": "150000",
    "children": [{
      "id": "150802",
      "name": "临河区",
      "parent": "150800",
      "children": null },
    {
      "id": "150821",
      "name": "五原县",
      "parent": "150800",
      "children": null },
    {
      "id": "150822",
      "name": "磴口县",
      "parent": "150800",
      "children": null },
    {
      "id": "150823",
      "name": "乌拉特前旗",
      "parent": "150800",
      "children": null },
    {
      "id": "150824",
      "name": "乌拉特中旗",
      "parent": "150800",
      "children": null },
    {
      "id": "150825",
      "name": "乌拉特后旗",
      "parent": "150800",
      "children": null },
    {
      "id": "150826",
      "name": "杭锦后旗",
      "parent": "150800",
      "children": null },
    {
      "id": "150827",
      "name": "其它区",
      "parent": "150800",
      "children": null }] },

  {
    "id": "150900",
    "name": "乌兰察布市",
    "parent": "150000",
    "children": [{
      "id": "150902",
      "name": "集宁区",
      "parent": "150900",
      "children": null },
    {
      "id": "150921",
      "name": "卓资县",
      "parent": "150900",
      "children": null },
    {
      "id": "150922",
      "name": "化德县",
      "parent": "150900",
      "children": null },
    {
      "id": "150923",
      "name": "商都县",
      "parent": "150900",
      "children": null },
    {
      "id": "150924",
      "name": "兴和县",
      "parent": "150900",
      "children": null },
    {
      "id": "150925",
      "name": "凉城县",
      "parent": "150900",
      "children": null },
    {
      "id": "150926",
      "name": "察哈尔右翼前旗",
      "parent": "150900",
      "children": null },
    {
      "id": "150927",
      "name": "察哈尔右翼中旗",
      "parent": "150900",
      "children": null },
    {
      "id": "150928",
      "name": "察哈尔右翼后旗",
      "parent": "150900",
      "children": null },
    {
      "id": "150929",
      "name": "四子王旗",
      "parent": "150900",
      "children": null },
    {
      "id": "150981",
      "name": "丰镇市",
      "parent": "150900",
      "children": null },
    {
      "id": "150982",
      "name": "其它区",
      "parent": "150900",
      "children": null }] },

  {
    "id": "152200",
    "name": "兴安盟",
    "parent": "150000",
    "children": [{
      "id": "152201",
      "name": "乌兰浩特市",
      "parent": "152200",
      "children": null },
    {
      "id": "152202",
      "name": "阿尔山市",
      "parent": "152200",
      "children": null },
    {
      "id": "152221",
      "name": "科尔沁右翼前旗",
      "parent": "152200",
      "children": null },
    {
      "id": "152222",
      "name": "科尔沁右翼中旗",
      "parent": "152200",
      "children": null },
    {
      "id": "152223",
      "name": "扎赉特旗",
      "parent": "152200",
      "children": null },
    {
      "id": "152224",
      "name": "突泉县",
      "parent": "152200",
      "children": null },
    {
      "id": "152225",
      "name": "其它区",
      "parent": "152200",
      "children": null }] },

  {
    "id": "152500",
    "name": "锡林郭勒盟",
    "parent": "150000",
    "children": [{
      "id": "152501",
      "name": "二连浩特市",
      "parent": "152500",
      "children": null },
    {
      "id": "152502",
      "name": "锡林浩特市",
      "parent": "152500",
      "children": null },
    {
      "id": "152522",
      "name": "阿巴嘎旗",
      "parent": "152500",
      "children": null },
    {
      "id": "152523",
      "name": "苏尼特左旗",
      "parent": "152500",
      "children": null },
    {
      "id": "152524",
      "name": "苏尼特右旗",
      "parent": "152500",
      "children": null },
    {
      "id": "152525",
      "name": "东乌珠穆沁旗",
      "parent": "152500",
      "children": null },
    {
      "id": "152526",
      "name": "西乌珠穆沁旗",
      "parent": "152500",
      "children": null },
    {
      "id": "152527",
      "name": "太仆寺旗",
      "parent": "152500",
      "children": null },
    {
      "id": "152528",
      "name": "镶黄旗",
      "parent": "152500",
      "children": null },
    {
      "id": "152529",
      "name": "正镶白旗",
      "parent": "152500",
      "children": null },
    {
      "id": "152530",
      "name": "正蓝旗",
      "parent": "152500",
      "children": null },
    {
      "id": "152531",
      "name": "多伦县",
      "parent": "152500",
      "children": null },
    {
      "id": "152532",
      "name": "其它区",
      "parent": "152500",
      "children": null }] },

  {
    "id": "152900",
    "name": "阿拉善盟",
    "parent": "150000",
    "children": [{
      "id": "152921",
      "name": "阿拉善左旗",
      "parent": "152900",
      "children": null },
    {
      "id": "152922",
      "name": "阿拉善右旗",
      "parent": "152900",
      "children": null },
    {
      "id": "152923",
      "name": "额济纳旗",
      "parent": "152900",
      "children": null },
    {
      "id": "152924",
      "name": "其它区",
      "parent": "152900",
      "children": null }] }] },


{
  "id": "210000",
  "name": "辽宁省",
  "children": [{
    "id": "210100",
    "name": "沈阳市",
    "parent": "210000",
    "children": [{
      "id": "210102",
      "name": "和平区",
      "parent": "210100",
      "children": null },
    {
      "id": "210103",
      "name": "沈河区",
      "parent": "210100",
      "children": null },
    {
      "id": "210104",
      "name": "大东区",
      "parent": "210100",
      "children": null },
    {
      "id": "210105",
      "name": "皇姑区",
      "parent": "210100",
      "children": null },
    {
      "id": "210106",
      "name": "铁西区",
      "parent": "210100",
      "children": null },
    {
      "id": "210111",
      "name": "苏家屯区",
      "parent": "210100",
      "children": null },
    {
      "id": "210112",
      "name": "浑南区",
      "parent": "210100",
      "children": null },
    {
      "id": "210113",
      "name": "新城子区",
      "parent": "210100",
      "children": null },
    {
      "id": "210114",
      "name": "于洪区",
      "parent": "210100",
      "children": null },
    {
      "id": "210122",
      "name": "辽中县",
      "parent": "210100",
      "children": null },
    {
      "id": "210123",
      "name": "康平县",
      "parent": "210100",
      "children": null },
    {
      "id": "210124",
      "name": "法库县",
      "parent": "210100",
      "children": null },
    {
      "id": "210181",
      "name": "新民市",
      "parent": "210100",
      "children": null },
    {
      "id": "210182",
      "name": "浑南新区",
      "parent": "210100",
      "children": null },
    {
      "id": "210183",
      "name": "张士开发区",
      "parent": "210100",
      "children": null },
    {
      "id": "210184",
      "name": "沈北新区",
      "parent": "210100",
      "children": null },
    {
      "id": "210185",
      "name": "其它区",
      "parent": "210100",
      "children": null }] },

  {
    "id": "210200",
    "name": "大连市",
    "parent": "210000",
    "children": [{
      "id": "210202",
      "name": "中山区",
      "parent": "210200",
      "children": null },
    {
      "id": "210203",
      "name": "西岗区",
      "parent": "210200",
      "children": null },
    {
      "id": "210204",
      "name": "沙河口区",
      "parent": "210200",
      "children": null },
    {
      "id": "210211",
      "name": "甘井子区",
      "parent": "210200",
      "children": null },
    {
      "id": "210212",
      "name": "旅顺口区",
      "parent": "210200",
      "children": null },
    {
      "id": "210213",
      "name": "金州区",
      "parent": "210200",
      "children": null },
    {
      "id": "210224",
      "name": "长海县",
      "parent": "210200",
      "children": null },
    {
      "id": "210251",
      "name": "开发区",
      "parent": "210200",
      "children": null },
    {
      "id": "210281",
      "name": "瓦房店市",
      "parent": "210200",
      "children": null },
    {
      "id": "210282",
      "name": "普兰店市",
      "parent": "210200",
      "children": null },
    {
      "id": "210283",
      "name": "庄河市",
      "parent": "210200",
      "children": null },
    {
      "id": "210297",
      "name": "岭前区",
      "parent": "210200",
      "children": null },
    {
      "id": "210298",
      "name": "其它区",
      "parent": "210200",
      "children": null }] },

  {
    "id": "210300",
    "name": "鞍山市",
    "parent": "210000",
    "children": [{
      "id": "210302",
      "name": "铁东区",
      "parent": "210300",
      "children": null },
    {
      "id": "210303",
      "name": "铁西区",
      "parent": "210300",
      "children": null },
    {
      "id": "210304",
      "name": "立山区",
      "parent": "210300",
      "children": null },
    {
      "id": "210311",
      "name": "千山区",
      "parent": "210300",
      "children": null },
    {
      "id": "210321",
      "name": "台安县",
      "parent": "210300",
      "children": null },
    {
      "id": "210323",
      "name": "岫岩满族自治县",
      "parent": "210300",
      "children": null },
    {
      "id": "210351",
      "name": "高新区",
      "parent": "210300",
      "children": null },
    {
      "id": "210381",
      "name": "海城市",
      "parent": "210300",
      "children": null },
    {
      "id": "210382",
      "name": "其它区",
      "parent": "210300",
      "children": null }] },

  {
    "id": "210400",
    "name": "抚顺市",
    "parent": "210000",
    "children": [{
      "id": "210402",
      "name": "新抚区",
      "parent": "210400",
      "children": null },
    {
      "id": "210403",
      "name": "东洲区",
      "parent": "210400",
      "children": null },
    {
      "id": "210404",
      "name": "望花区",
      "parent": "210400",
      "children": null },
    {
      "id": "210411",
      "name": "顺城区",
      "parent": "210400",
      "children": null },
    {
      "id": "210421",
      "name": "抚顺县",
      "parent": "210400",
      "children": null },
    {
      "id": "210422",
      "name": "新宾满族自治县",
      "parent": "210400",
      "children": null },
    {
      "id": "210423",
      "name": "清原满族自治县",
      "parent": "210400",
      "children": null },
    {
      "id": "210424",
      "name": "其它区",
      "parent": "210400",
      "children": null }] },

  {
    "id": "210500",
    "name": "本溪市",
    "parent": "210000",
    "children": [{
      "id": "210502",
      "name": "平山区",
      "parent": "210500",
      "children": null },
    {
      "id": "210503",
      "name": "溪湖区",
      "parent": "210500",
      "children": null },
    {
      "id": "210504",
      "name": "明山区",
      "parent": "210500",
      "children": null },
    {
      "id": "210505",
      "name": "南芬区",
      "parent": "210500",
      "children": null },
    {
      "id": "210521",
      "name": "本溪满族自治县",
      "parent": "210500",
      "children": null },
    {
      "id": "210522",
      "name": "桓仁满族自治县",
      "parent": "210500",
      "children": null },
    {
      "id": "210523",
      "name": "其它区",
      "parent": "210500",
      "children": null }] },

  {
    "id": "210600",
    "name": "丹东市",
    "parent": "210000",
    "children": [{
      "id": "210602",
      "name": "元宝区",
      "parent": "210600",
      "children": null },
    {
      "id": "210603",
      "name": "振兴区",
      "parent": "210600",
      "children": null },
    {
      "id": "210604",
      "name": "振安区",
      "parent": "210600",
      "children": null },
    {
      "id": "210624",
      "name": "宽甸满族自治县",
      "parent": "210600",
      "children": null },
    {
      "id": "210681",
      "name": "东港市",
      "parent": "210600",
      "children": null },
    {
      "id": "210682",
      "name": "凤城市",
      "parent": "210600",
      "children": null },
    {
      "id": "210683",
      "name": "其它区",
      "parent": "210600",
      "children": null }] },

  {
    "id": "210700",
    "name": "锦州市",
    "parent": "210000",
    "children": [{
      "id": "210702",
      "name": "古塔区",
      "parent": "210700",
      "children": null },
    {
      "id": "210703",
      "name": "凌河区",
      "parent": "210700",
      "children": null },
    {
      "id": "210711",
      "name": "太和区",
      "parent": "210700",
      "children": null },
    {
      "id": "210726",
      "name": "黑山县",
      "parent": "210700",
      "children": null },
    {
      "id": "210727",
      "name": "义县",
      "parent": "210700",
      "children": null },
    {
      "id": "210781",
      "name": "凌海市",
      "parent": "210700",
      "children": null },
    {
      "id": "210782",
      "name": "北镇市",
      "parent": "210700",
      "children": null },
    {
      "id": "210783",
      "name": "其它区",
      "parent": "210700",
      "children": null }] },

  {
    "id": "210800",
    "name": "营口市",
    "parent": "210000",
    "children": [{
      "id": "210802",
      "name": "站前区",
      "parent": "210800",
      "children": null },
    {
      "id": "210803",
      "name": "西市区",
      "parent": "210800",
      "children": null },
    {
      "id": "210804",
      "name": "鲅鱼圈区",
      "parent": "210800",
      "children": null },
    {
      "id": "210811",
      "name": "老边区",
      "parent": "210800",
      "children": null },
    {
      "id": "210881",
      "name": "盖州市",
      "parent": "210800",
      "children": null },
    {
      "id": "210882",
      "name": "大石桥市",
      "parent": "210800",
      "children": null },
    {
      "id": "210883",
      "name": "其它区",
      "parent": "210800",
      "children": null }] },

  {
    "id": "210900",
    "name": "阜新市",
    "parent": "210000",
    "children": [{
      "id": "210902",
      "name": "海州区",
      "parent": "210900",
      "children": null },
    {
      "id": "210903",
      "name": "新邱区",
      "parent": "210900",
      "children": null },
    {
      "id": "210904",
      "name": "太平区",
      "parent": "210900",
      "children": null },
    {
      "id": "210905",
      "name": "清河门区",
      "parent": "210900",
      "children": null },
    {
      "id": "210911",
      "name": "细河区",
      "parent": "210900",
      "children": null },
    {
      "id": "210921",
      "name": "阜新蒙古族自治县",
      "parent": "210900",
      "children": null },
    {
      "id": "210922",
      "name": "彰武县",
      "parent": "210900",
      "children": null },
    {
      "id": "210923",
      "name": "其它区",
      "parent": "210900",
      "children": null }] },

  {
    "id": "211000",
    "name": "辽阳市",
    "parent": "210000",
    "children": [{
      "id": "211002",
      "name": "白塔区",
      "parent": "211000",
      "children": null },
    {
      "id": "211003",
      "name": "文圣区",
      "parent": "211000",
      "children": null },
    {
      "id": "211004",
      "name": "宏伟区",
      "parent": "211000",
      "children": null },
    {
      "id": "211005",
      "name": "弓长岭区",
      "parent": "211000",
      "children": null },
    {
      "id": "211011",
      "name": "太子河区",
      "parent": "211000",
      "children": null },
    {
      "id": "211021",
      "name": "辽阳县",
      "parent": "211000",
      "children": null },
    {
      "id": "211081",
      "name": "灯塔市",
      "parent": "211000",
      "children": null },
    {
      "id": "211082",
      "name": "其它区",
      "parent": "211000",
      "children": null }] },

  {
    "id": "211100",
    "name": "盘锦市",
    "parent": "210000",
    "children": [{
      "id": "211102",
      "name": "双台子区",
      "parent": "211100",
      "children": null },
    {
      "id": "211103",
      "name": "兴隆台区",
      "parent": "211100",
      "children": null },
    {
      "id": "211121",
      "name": "大洼县",
      "parent": "211100",
      "children": null },
    {
      "id": "211122",
      "name": "盘山县",
      "parent": "211100",
      "children": null },
    {
      "id": "211123",
      "name": "其它区",
      "parent": "211100",
      "children": null }] },

  {
    "id": "211200",
    "name": "铁岭市",
    "parent": "210000",
    "children": [{
      "id": "211202",
      "name": "银州区",
      "parent": "211200",
      "children": null },
    {
      "id": "211204",
      "name": "清河区",
      "parent": "211200",
      "children": null },
    {
      "id": "211221",
      "name": "铁岭县",
      "parent": "211200",
      "children": null },
    {
      "id": "211223",
      "name": "西丰县",
      "parent": "211200",
      "children": null },
    {
      "id": "211224",
      "name": "昌图县",
      "parent": "211200",
      "children": null },
    {
      "id": "211281",
      "name": "调兵山市",
      "parent": "211200",
      "children": null },
    {
      "id": "211282",
      "name": "开原市",
      "parent": "211200",
      "children": null },
    {
      "id": "211283",
      "name": "其它区",
      "parent": "211200",
      "children": null }] },

  {
    "id": "211300",
    "name": "朝阳市",
    "parent": "210000",
    "children": [{
      "id": "211302",
      "name": "双塔区",
      "parent": "211300",
      "children": null },
    {
      "id": "211303",
      "name": "龙城区",
      "parent": "211300",
      "children": null },
    {
      "id": "211321",
      "name": "朝阳县",
      "parent": "211300",
      "children": null },
    {
      "id": "211322",
      "name": "建平县",
      "parent": "211300",
      "children": null },
    {
      "id": "211324",
      "name": "喀喇沁左翼蒙古族自治县",
      "parent": "211300",
      "children": null },
    {
      "id": "211381",
      "name": "北票市",
      "parent": "211300",
      "children": null },
    {
      "id": "211382",
      "name": "凌源市",
      "parent": "211300",
      "children": null },
    {
      "id": "211383",
      "name": "其它区",
      "parent": "211300",
      "children": null }] },

  {
    "id": "211400",
    "name": "葫芦岛市",
    "parent": "210000",
    "children": [{
      "id": "211402",
      "name": "连山区",
      "parent": "211400",
      "children": null },
    {
      "id": "211403",
      "name": "龙港区",
      "parent": "211400",
      "children": null },
    {
      "id": "211404",
      "name": "南票区",
      "parent": "211400",
      "children": null },
    {
      "id": "211421",
      "name": "绥中县",
      "parent": "211400",
      "children": null },
    {
      "id": "211422",
      "name": "建昌县",
      "parent": "211400",
      "children": null },
    {
      "id": "211481",
      "name": "兴城市",
      "parent": "211400",
      "children": null },
    {
      "id": "211482",
      "name": "其它区",
      "parent": "211400",
      "children": null }] }] },


{
  "id": "220000",
  "name": "吉林省",
  "children": [{
    "id": "220100",
    "name": "长春市",
    "parent": "220000",
    "children": [{
      "id": "220102",
      "name": "南关区",
      "parent": "220100",
      "children": null },
    {
      "id": "220103",
      "name": "宽城区",
      "parent": "220100",
      "children": null },
    {
      "id": "220104",
      "name": "朝阳区",
      "parent": "220100",
      "children": null },
    {
      "id": "220105",
      "name": "二道区",
      "parent": "220100",
      "children": null },
    {
      "id": "220106",
      "name": "绿园区",
      "parent": "220100",
      "children": null },
    {
      "id": "220112",
      "name": "双阳区",
      "parent": "220100",
      "children": null },
    {
      "id": "220122",
      "name": "农安县",
      "parent": "220100",
      "children": null },
    {
      "id": "220181",
      "name": "九台区",
      "parent": "220100",
      "children": null },
    {
      "id": "220182",
      "name": "榆树市",
      "parent": "220100",
      "children": null },
    {
      "id": "220183",
      "name": "德惠市",
      "parent": "220100",
      "children": null },
    {
      "id": "220184",
      "name": "高新技术产业开发区",
      "parent": "220100",
      "children": null },
    {
      "id": "220185",
      "name": "汽车产业开发区",
      "parent": "220100",
      "children": null },
    {
      "id": "220186",
      "name": "经济技术开发区",
      "parent": "220100",
      "children": null },
    {
      "id": "220187",
      "name": "净月旅游开发区",
      "parent": "220100",
      "children": null },
    {
      "id": "220188",
      "name": "其它区",
      "parent": "220100",
      "children": null }] },

  {
    "id": "220200",
    "name": "吉林市",
    "parent": "220000",
    "children": [{
      "id": "220202",
      "name": "昌邑区",
      "parent": "220200",
      "children": null },
    {
      "id": "220203",
      "name": "龙潭区",
      "parent": "220200",
      "children": null },
    {
      "id": "220204",
      "name": "船营区",
      "parent": "220200",
      "children": null },
    {
      "id": "220211",
      "name": "丰满区",
      "parent": "220200",
      "children": null },
    {
      "id": "220221",
      "name": "永吉县",
      "parent": "220200",
      "children": null },
    {
      "id": "220281",
      "name": "蛟河市",
      "parent": "220200",
      "children": null },
    {
      "id": "220282",
      "name": "桦甸市",
      "parent": "220200",
      "children": null },
    {
      "id": "220283",
      "name": "舒兰市",
      "parent": "220200",
      "children": null },
    {
      "id": "220284",
      "name": "磐石市",
      "parent": "220200",
      "children": null },
    {
      "id": "220285",
      "name": "其它区",
      "parent": "220200",
      "children": null }] },

  {
    "id": "220300",
    "name": "四平市",
    "parent": "220000",
    "children": [{
      "id": "220302",
      "name": "铁西区",
      "parent": "220300",
      "children": null },
    {
      "id": "220303",
      "name": "铁东区",
      "parent": "220300",
      "children": null },
    {
      "id": "220322",
      "name": "梨树县",
      "parent": "220300",
      "children": null },
    {
      "id": "220323",
      "name": "伊通满族自治县",
      "parent": "220300",
      "children": null },
    {
      "id": "220381",
      "name": "公主岭市",
      "parent": "220300",
      "children": null },
    {
      "id": "220382",
      "name": "双辽市",
      "parent": "220300",
      "children": null },
    {
      "id": "220383",
      "name": "其它区",
      "parent": "220300",
      "children": null }] },

  {
    "id": "220400",
    "name": "辽源市",
    "parent": "220000",
    "children": [{
      "id": "220402",
      "name": "龙山区",
      "parent": "220400",
      "children": null },
    {
      "id": "220403",
      "name": "西安区",
      "parent": "220400",
      "children": null },
    {
      "id": "220421",
      "name": "东丰县",
      "parent": "220400",
      "children": null },
    {
      "id": "220422",
      "name": "东辽县",
      "parent": "220400",
      "children": null },
    {
      "id": "220423",
      "name": "其它区",
      "parent": "220400",
      "children": null }] },

  {
    "id": "220500",
    "name": "通化市",
    "parent": "220000",
    "children": [{
      "id": "220502",
      "name": "东昌区",
      "parent": "220500",
      "children": null },
    {
      "id": "220503",
      "name": "二道江区",
      "parent": "220500",
      "children": null },
    {
      "id": "220521",
      "name": "通化县",
      "parent": "220500",
      "children": null },
    {
      "id": "220523",
      "name": "辉南县",
      "parent": "220500",
      "children": null },
    {
      "id": "220524",
      "name": "柳河县",
      "parent": "220500",
      "children": null },
    {
      "id": "220581",
      "name": "梅河口市",
      "parent": "220500",
      "children": null },
    {
      "id": "220582",
      "name": "集安市",
      "parent": "220500",
      "children": null },
    {
      "id": "220583",
      "name": "其它区",
      "parent": "220500",
      "children": null }] },

  {
    "id": "220600",
    "name": "白山市",
    "parent": "220000",
    "children": [{
      "id": "220602",
      "name": "浑江区",
      "parent": "220600",
      "children": null },
    {
      "id": "220621",
      "name": "抚松县",
      "parent": "220600",
      "children": null },
    {
      "id": "220622",
      "name": "靖宇县",
      "parent": "220600",
      "children": null },
    {
      "id": "220623",
      "name": "长白朝鲜族自治县",
      "parent": "220600",
      "children": null },
    {
      "id": "220625",
      "name": "江源区",
      "parent": "220600",
      "children": null },
    {
      "id": "220681",
      "name": "临江市",
      "parent": "220600",
      "children": null },
    {
      "id": "220682",
      "name": "其它区",
      "parent": "220600",
      "children": null }] },

  {
    "id": "220700",
    "name": "松原市",
    "parent": "220000",
    "children": [{
      "id": "220702",
      "name": "宁江区",
      "parent": "220700",
      "children": null },
    {
      "id": "220721",
      "name": "前郭尔罗斯蒙古族自治县",
      "parent": "220700",
      "children": null },
    {
      "id": "220722",
      "name": "长岭县",
      "parent": "220700",
      "children": null },
    {
      "id": "220723",
      "name": "乾安县",
      "parent": "220700",
      "children": null },
    {
      "id": "220724",
      "name": "扶余市",
      "parent": "220700",
      "children": null },
    {
      "id": "220725",
      "name": "其它区",
      "parent": "220700",
      "children": null }] },

  {
    "id": "220800",
    "name": "白城市",
    "parent": "220000",
    "children": [{
      "id": "220802",
      "name": "洮北区",
      "parent": "220800",
      "children": null },
    {
      "id": "220821",
      "name": "镇赉县",
      "parent": "220800",
      "children": null },
    {
      "id": "220822",
      "name": "通榆县",
      "parent": "220800",
      "children": null },
    {
      "id": "220881",
      "name": "洮南市",
      "parent": "220800",
      "children": null },
    {
      "id": "220882",
      "name": "大安市",
      "parent": "220800",
      "children": null },
    {
      "id": "220883",
      "name": "其它区",
      "parent": "220800",
      "children": null }] },

  {
    "id": "222400",
    "name": "延边朝鲜族自治州",
    "parent": "220000",
    "children": [{
      "id": "222401",
      "name": "延吉市",
      "parent": "222400",
      "children": null },
    {
      "id": "222402",
      "name": "图们市",
      "parent": "222400",
      "children": null },
    {
      "id": "222403",
      "name": "敦化市",
      "parent": "222400",
      "children": null },
    {
      "id": "222404",
      "name": "珲春市",
      "parent": "222400",
      "children": null },
    {
      "id": "222405",
      "name": "龙井市",
      "parent": "222400",
      "children": null },
    {
      "id": "222406",
      "name": "和龙市",
      "parent": "222400",
      "children": null },
    {
      "id": "222424",
      "name": "汪清县",
      "parent": "222400",
      "children": null },
    {
      "id": "222426",
      "name": "安图县",
      "parent": "222400",
      "children": null },
    {
      "id": "222427",
      "name": "其它区",
      "parent": "222400",
      "children": null }] }] },


{
  "id": "230000",
  "name": "黑龙江省",
  "children": [{
    "id": "230100",
    "name": "哈尔滨市",
    "parent": "230000",
    "children": [{
      "id": "230102",
      "name": "道里区",
      "parent": "230100",
      "children": null },
    {
      "id": "230103",
      "name": "南岗区",
      "parent": "230100",
      "children": null },
    {
      "id": "230104",
      "name": "道外区",
      "parent": "230100",
      "children": null },
    {
      "id": "230106",
      "name": "香坊区",
      "parent": "230100",
      "children": null },
    {
      "id": "230107",
      "name": "动力区",
      "parent": "230100",
      "children": null },
    {
      "id": "230108",
      "name": "平房区",
      "parent": "230100",
      "children": null },
    {
      "id": "230109",
      "name": "松北区",
      "parent": "230100",
      "children": null },
    {
      "id": "230111",
      "name": "呼兰区",
      "parent": "230100",
      "children": null },
    {
      "id": "230123",
      "name": "依兰县",
      "parent": "230100",
      "children": null },
    {
      "id": "230124",
      "name": "方正县",
      "parent": "230100",
      "children": null },
    {
      "id": "230125",
      "name": "宾县",
      "parent": "230100",
      "children": null },
    {
      "id": "230126",
      "name": "巴彦县",
      "parent": "230100",
      "children": null },
    {
      "id": "230127",
      "name": "木兰县",
      "parent": "230100",
      "children": null },
    {
      "id": "230128",
      "name": "通河县",
      "parent": "230100",
      "children": null },
    {
      "id": "230129",
      "name": "延寿县",
      "parent": "230100",
      "children": null },
    {
      "id": "230181",
      "name": "阿城区",
      "parent": "230100",
      "children": null },
    {
      "id": "230182",
      "name": "双城区",
      "parent": "230100",
      "children": null },
    {
      "id": "230183",
      "name": "尚志市",
      "parent": "230100",
      "children": null },
    {
      "id": "230184",
      "name": "五常市",
      "parent": "230100",
      "children": null },
    {
      "id": "230185",
      "name": "阿城市",
      "parent": "230100",
      "children": null },
    {
      "id": "230186",
      "name": "其它区",
      "parent": "230100",
      "children": null }] },

  {
    "id": "230200",
    "name": "齐齐哈尔市",
    "parent": "230000",
    "children": [{
      "id": "230202",
      "name": "龙沙区",
      "parent": "230200",
      "children": null },
    {
      "id": "230203",
      "name": "建华区",
      "parent": "230200",
      "children": null },
    {
      "id": "230204",
      "name": "铁锋区",
      "parent": "230200",
      "children": null },
    {
      "id": "230205",
      "name": "昂昂溪区",
      "parent": "230200",
      "children": null },
    {
      "id": "230206",
      "name": "富拉尔基区",
      "parent": "230200",
      "children": null },
    {
      "id": "230207",
      "name": "碾子山区",
      "parent": "230200",
      "children": null },
    {
      "id": "230208",
      "name": "梅里斯达斡尔族区",
      "parent": "230200",
      "children": null },
    {
      "id": "230221",
      "name": "龙江县",
      "parent": "230200",
      "children": null },
    {
      "id": "230223",
      "name": "依安县",
      "parent": "230200",
      "children": null },
    {
      "id": "230224",
      "name": "泰来县",
      "parent": "230200",
      "children": null },
    {
      "id": "230225",
      "name": "甘南县",
      "parent": "230200",
      "children": null },
    {
      "id": "230227",
      "name": "富裕县",
      "parent": "230200",
      "children": null },
    {
      "id": "230229",
      "name": "克山县",
      "parent": "230200",
      "children": null },
    {
      "id": "230230",
      "name": "克东县",
      "parent": "230200",
      "children": null },
    {
      "id": "230231",
      "name": "拜泉县",
      "parent": "230200",
      "children": null },
    {
      "id": "230281",
      "name": "讷河市",
      "parent": "230200",
      "children": null },
    {
      "id": "230282",
      "name": "其它区",
      "parent": "230200",
      "children": null }] },

  {
    "id": "230300",
    "name": "鸡西市",
    "parent": "230000",
    "children": [{
      "id": "230302",
      "name": "鸡冠区",
      "parent": "230300",
      "children": null },
    {
      "id": "230303",
      "name": "恒山区",
      "parent": "230300",
      "children": null },
    {
      "id": "230304",
      "name": "滴道区",
      "parent": "230300",
      "children": null },
    {
      "id": "230305",
      "name": "梨树区",
      "parent": "230300",
      "children": null },
    {
      "id": "230306",
      "name": "城子河区",
      "parent": "230300",
      "children": null },
    {
      "id": "230307",
      "name": "麻山区",
      "parent": "230300",
      "children": null },
    {
      "id": "230321",
      "name": "鸡东县",
      "parent": "230300",
      "children": null },
    {
      "id": "230381",
      "name": "虎林市",
      "parent": "230300",
      "children": null },
    {
      "id": "230382",
      "name": "密山市",
      "parent": "230300",
      "children": null },
    {
      "id": "230383",
      "name": "其它区",
      "parent": "230300",
      "children": null }] },

  {
    "id": "230400",
    "name": "鹤岗市",
    "parent": "230000",
    "children": [{
      "id": "230402",
      "name": "向阳区",
      "parent": "230400",
      "children": null },
    {
      "id": "230403",
      "name": "工农区",
      "parent": "230400",
      "children": null },
    {
      "id": "230404",
      "name": "南山区",
      "parent": "230400",
      "children": null },
    {
      "id": "230405",
      "name": "兴安区",
      "parent": "230400",
      "children": null },
    {
      "id": "230406",
      "name": "东山区",
      "parent": "230400",
      "children": null },
    {
      "id": "230407",
      "name": "兴山区",
      "parent": "230400",
      "children": null },
    {
      "id": "230421",
      "name": "萝北县",
      "parent": "230400",
      "children": null },
    {
      "id": "230422",
      "name": "绥滨县",
      "parent": "230400",
      "children": null },
    {
      "id": "230423",
      "name": "其它区",
      "parent": "230400",
      "children": null }] },

  {
    "id": "230500",
    "name": "双鸭山市",
    "parent": "230000",
    "children": [{
      "id": "230502",
      "name": "尖山区",
      "parent": "230500",
      "children": null },
    {
      "id": "230503",
      "name": "岭东区",
      "parent": "230500",
      "children": null },
    {
      "id": "230505",
      "name": "四方台区",
      "parent": "230500",
      "children": null },
    {
      "id": "230506",
      "name": "宝山区",
      "parent": "230500",
      "children": null },
    {
      "id": "230521",
      "name": "集贤县",
      "parent": "230500",
      "children": null },
    {
      "id": "230522",
      "name": "友谊县",
      "parent": "230500",
      "children": null },
    {
      "id": "230523",
      "name": "宝清县",
      "parent": "230500",
      "children": null },
    {
      "id": "230524",
      "name": "饶河县",
      "parent": "230500",
      "children": null },
    {
      "id": "230525",
      "name": "其它区",
      "parent": "230500",
      "children": null }] },

  {
    "id": "230600",
    "name": "大庆市",
    "parent": "230000",
    "children": [{
      "id": "230602",
      "name": "萨尔图区",
      "parent": "230600",
      "children": null },
    {
      "id": "230603",
      "name": "龙凤区",
      "parent": "230600",
      "children": null },
    {
      "id": "230604",
      "name": "让胡路区",
      "parent": "230600",
      "children": null },
    {
      "id": "230605",
      "name": "红岗区",
      "parent": "230600",
      "children": null },
    {
      "id": "230606",
      "name": "大同区",
      "parent": "230600",
      "children": null },
    {
      "id": "230621",
      "name": "肇州县",
      "parent": "230600",
      "children": null },
    {
      "id": "230622",
      "name": "肇源县",
      "parent": "230600",
      "children": null },
    {
      "id": "230623",
      "name": "林甸县",
      "parent": "230600",
      "children": null },
    {
      "id": "230624",
      "name": "杜尔伯特蒙古族自治县",
      "parent": "230600",
      "children": null },
    {
      "id": "230625",
      "name": "其它区",
      "parent": "230600",
      "children": null }] },

  {
    "id": "230700",
    "name": "伊春市",
    "parent": "230000",
    "children": [{
      "id": "230702",
      "name": "伊春区",
      "parent": "230700",
      "children": null },
    {
      "id": "230703",
      "name": "南岔区",
      "parent": "230700",
      "children": null },
    {
      "id": "230704",
      "name": "友好区",
      "parent": "230700",
      "children": null },
    {
      "id": "230705",
      "name": "西林区",
      "parent": "230700",
      "children": null },
    {
      "id": "230706",
      "name": "翠峦区",
      "parent": "230700",
      "children": null },
    {
      "id": "230707",
      "name": "新青区",
      "parent": "230700",
      "children": null },
    {
      "id": "230708",
      "name": "美溪区",
      "parent": "230700",
      "children": null },
    {
      "id": "230709",
      "name": "金山屯区",
      "parent": "230700",
      "children": null },
    {
      "id": "230710",
      "name": "五营区",
      "parent": "230700",
      "children": null },
    {
      "id": "230711",
      "name": "乌马河区",
      "parent": "230700",
      "children": null },
    {
      "id": "230712",
      "name": "汤旺河区",
      "parent": "230700",
      "children": null },
    {
      "id": "230713",
      "name": "带岭区",
      "parent": "230700",
      "children": null },
    {
      "id": "230714",
      "name": "乌伊岭区",
      "parent": "230700",
      "children": null },
    {
      "id": "230715",
      "name": "红星区",
      "parent": "230700",
      "children": null },
    {
      "id": "230716",
      "name": "上甘岭区",
      "parent": "230700",
      "children": null },
    {
      "id": "230722",
      "name": "嘉荫县",
      "parent": "230700",
      "children": null },
    {
      "id": "230781",
      "name": "铁力市",
      "parent": "230700",
      "children": null },
    {
      "id": "230782",
      "name": "其它区",
      "parent": "230700",
      "children": null }] },

  {
    "id": "230800",
    "name": "佳木斯市",
    "parent": "230000",
    "children": [{
      "id": "230802",
      "name": "永红区",
      "parent": "230800",
      "children": null },
    {
      "id": "230803",
      "name": "向阳区",
      "parent": "230800",
      "children": null },
    {
      "id": "230804",
      "name": "前进区",
      "parent": "230800",
      "children": null },
    {
      "id": "230805",
      "name": "东风区",
      "parent": "230800",
      "children": null },
    {
      "id": "230811",
      "name": "郊区",
      "parent": "230800",
      "children": null },
    {
      "id": "230822",
      "name": "桦南县",
      "parent": "230800",
      "children": null },
    {
      "id": "230826",
      "name": "桦川县",
      "parent": "230800",
      "children": null },
    {
      "id": "230828",
      "name": "汤原县",
      "parent": "230800",
      "children": null },
    {
      "id": "230833",
      "name": "抚远县",
      "parent": "230800",
      "children": null },
    {
      "id": "230881",
      "name": "同江市",
      "parent": "230800",
      "children": null },
    {
      "id": "230882",
      "name": "富锦市",
      "parent": "230800",
      "children": null },
    {
      "id": "230883",
      "name": "其它区",
      "parent": "230800",
      "children": null }] },

  {
    "id": "230900",
    "name": "七台河市",
    "parent": "230000",
    "children": [{
      "id": "230902",
      "name": "新兴区",
      "parent": "230900",
      "children": null },
    {
      "id": "230903",
      "name": "桃山区",
      "parent": "230900",
      "children": null },
    {
      "id": "230904",
      "name": "茄子河区",
      "parent": "230900",
      "children": null },
    {
      "id": "230921",
      "name": "勃利县",
      "parent": "230900",
      "children": null },
    {
      "id": "230922",
      "name": "其它区",
      "parent": "230900",
      "children": null }] },

  {
    "id": "231000",
    "name": "牡丹江市",
    "parent": "230000",
    "children": [{
      "id": "231002",
      "name": "东安区",
      "parent": "231000",
      "children": null },
    {
      "id": "231003",
      "name": "阳明区",
      "parent": "231000",
      "children": null },
    {
      "id": "231004",
      "name": "爱民区",
      "parent": "231000",
      "children": null },
    {
      "id": "231005",
      "name": "西安区",
      "parent": "231000",
      "children": null },
    {
      "id": "231024",
      "name": "东宁县",
      "parent": "231000",
      "children": null },
    {
      "id": "231025",
      "name": "林口县",
      "parent": "231000",
      "children": null },
    {
      "id": "231081",
      "name": "绥芬河市",
      "parent": "231000",
      "children": null },
    {
      "id": "231083",
      "name": "海林市",
      "parent": "231000",
      "children": null },
    {
      "id": "231084",
      "name": "宁安市",
      "parent": "231000",
      "children": null },
    {
      "id": "231085",
      "name": "穆棱市",
      "parent": "231000",
      "children": null },
    {
      "id": "231086",
      "name": "其它区",
      "parent": "231000",
      "children": null }] },

  {
    "id": "231100",
    "name": "黑河市",
    "parent": "230000",
    "children": [{
      "id": "231102",
      "name": "爱辉区",
      "parent": "231100",
      "children": null },
    {
      "id": "231121",
      "name": "嫩江县",
      "parent": "231100",
      "children": null },
    {
      "id": "231123",
      "name": "逊克县",
      "parent": "231100",
      "children": null },
    {
      "id": "231124",
      "name": "孙吴县",
      "parent": "231100",
      "children": null },
    {
      "id": "231181",
      "name": "北安市",
      "parent": "231100",
      "children": null },
    {
      "id": "231182",
      "name": "五大连池市",
      "parent": "231100",
      "children": null },
    {
      "id": "231183",
      "name": "其它区",
      "parent": "231100",
      "children": null }] },

  {
    "id": "231200",
    "name": "绥化市",
    "parent": "230000",
    "children": [{
      "id": "231202",
      "name": "北林区",
      "parent": "231200",
      "children": null },
    {
      "id": "231221",
      "name": "望奎县",
      "parent": "231200",
      "children": null },
    {
      "id": "231222",
      "name": "兰西县",
      "parent": "231200",
      "children": null },
    {
      "id": "231223",
      "name": "青冈县",
      "parent": "231200",
      "children": null },
    {
      "id": "231224",
      "name": "庆安县",
      "parent": "231200",
      "children": null },
    {
      "id": "231225",
      "name": "明水县",
      "parent": "231200",
      "children": null },
    {
      "id": "231226",
      "name": "绥棱县",
      "parent": "231200",
      "children": null },
    {
      "id": "231281",
      "name": "安达市",
      "parent": "231200",
      "children": null },
    {
      "id": "231282",
      "name": "肇东市",
      "parent": "231200",
      "children": null },
    {
      "id": "231283",
      "name": "海伦市",
      "parent": "231200",
      "children": null },
    {
      "id": "231284",
      "name": "其它区",
      "parent": "231200",
      "children": null }] },

  {
    "id": "232700",
    "name": "大兴安岭地区",
    "parent": "230000",
    "children": [{
      "id": "232702",
      "name": "松岭区",
      "parent": "232700",
      "children": null },
    {
      "id": "232703",
      "name": "新林区",
      "parent": "232700",
      "children": null },
    {
      "id": "232704",
      "name": "呼中区",
      "parent": "232700",
      "children": null },
    {
      "id": "232721",
      "name": "呼玛县",
      "parent": "232700",
      "children": null },
    {
      "id": "232722",
      "name": "塔河县",
      "parent": "232700",
      "children": null },
    {
      "id": "232723",
      "name": "漠河县",
      "parent": "232700",
      "children": null },
    {
      "id": "232724",
      "name": "加格达奇区",
      "parent": "232700",
      "children": null },
    {
      "id": "232725",
      "name": "其它区",
      "parent": "232700",
      "children": null }] }] },


{
  "id": "310000",
  "name": "上海市",
  "children": [{
    "id": "310100",
    "name": "上海市",
    "parent": "310000",
    "children": [{
      "id": "310101",
      "name": "黄浦区",
      "parent": "310100",
      "children": null },
    {
      "id": "310103",
      "name": "卢湾区",
      "parent": "310100",
      "children": null },
    {
      "id": "310104",
      "name": "徐汇区",
      "parent": "310100",
      "children": null },
    {
      "id": "310105",
      "name": "长宁区",
      "parent": "310100",
      "children": null },
    {
      "id": "310106",
      "name": "静安区",
      "parent": "310100",
      "children": null },
    {
      "id": "310107",
      "name": "普陀区",
      "parent": "310100",
      "children": null },
    {
      "id": "310108",
      "name": "闸北区",
      "parent": "310100",
      "children": null },
    {
      "id": "310109",
      "name": "虹口区",
      "parent": "310100",
      "children": null },
    {
      "id": "310110",
      "name": "杨浦区",
      "parent": "310100",
      "children": null },
    {
      "id": "310112",
      "name": "闵行区",
      "parent": "310100",
      "children": null },
    {
      "id": "310113",
      "name": "宝山区",
      "parent": "310100",
      "children": null },
    {
      "id": "310114",
      "name": "嘉定区",
      "parent": "310100",
      "children": null },
    {
      "id": "310115",
      "name": "浦东新区",
      "parent": "310100",
      "children": null },
    {
      "id": "310116",
      "name": "金山区",
      "parent": "310100",
      "children": null },
    {
      "id": "310117",
      "name": "松江区",
      "parent": "310100",
      "children": null },
    {
      "id": "310118",
      "name": "青浦区",
      "parent": "310100",
      "children": null },
    {
      "id": "310119",
      "name": "南汇区",
      "parent": "310100",
      "children": null },
    {
      "id": "310120",
      "name": "奉贤区",
      "parent": "310100",
      "children": null },
    {
      "id": "310152",
      "name": "川沙区",
      "parent": "310100",
      "children": null },
    {
      "id": "310230",
      "name": "崇明县",
      "parent": "310100",
      "children": null },
    {
      "id": "310231",
      "name": "其它区",
      "parent": "310100",
      "children": null }] }] },


{
  "id": "320000",
  "name": "江苏省",
  "children": [{
    "id": "320100",
    "name": "南京市",
    "parent": "320000",
    "children": [{
      "id": "320102",
      "name": "玄武区",
      "parent": "320100",
      "children": null },
    {
      "id": "320103",
      "name": "白下区",
      "parent": "320100",
      "children": null },
    {
      "id": "320104",
      "name": "秦淮区",
      "parent": "320100",
      "children": null },
    {
      "id": "320105",
      "name": "建邺区",
      "parent": "320100",
      "children": null },
    {
      "id": "320106",
      "name": "鼓楼区",
      "parent": "320100",
      "children": null },
    {
      "id": "320107",
      "name": "下关区",
      "parent": "320100",
      "children": null },
    {
      "id": "320111",
      "name": "浦口区",
      "parent": "320100",
      "children": null },
    {
      "id": "320113",
      "name": "栖霞区",
      "parent": "320100",
      "children": null },
    {
      "id": "320114",
      "name": "雨花台区",
      "parent": "320100",
      "children": null },
    {
      "id": "320115",
      "name": "江宁区",
      "parent": "320100",
      "children": null },
    {
      "id": "320116",
      "name": "六合区",
      "parent": "320100",
      "children": null },
    {
      "id": "320124",
      "name": "溧水区",
      "parent": "320100",
      "children": null },
    {
      "id": "320125",
      "name": "高淳区",
      "parent": "320100",
      "children": null },
    {
      "id": "320126",
      "name": "其它区",
      "parent": "320100",
      "children": null }] },

  {
    "id": "320200",
    "name": "无锡市",
    "parent": "320000",
    "children": [{
      "id": "320202",
      "name": "崇安区",
      "parent": "320200",
      "children": null },
    {
      "id": "320203",
      "name": "南长区",
      "parent": "320200",
      "children": null },
    {
      "id": "320204",
      "name": "北塘区",
      "parent": "320200",
      "children": null },
    {
      "id": "320205",
      "name": "锡山区",
      "parent": "320200",
      "children": null },
    {
      "id": "320206",
      "name": "惠山区",
      "parent": "320200",
      "children": null },
    {
      "id": "320211",
      "name": "滨湖区",
      "parent": "320200",
      "children": null },
    {
      "id": "320213",
      "name": "梁溪区",
      "parent": "320200",
      "children": null },
    {
      "id": "320214",
      "name": "新吴区",
      "parent": "320200",
      "children": null },
    {
      "id": "320281",
      "name": "江阴市",
      "parent": "320200",
      "children": null },
    {
      "id": "320282",
      "name": "宜兴市",
      "parent": "320200",
      "children": null },
    {
      "id": "320296",
      "name": "新区",
      "parent": "320200",
      "children": null },
    {
      "id": "320297",
      "name": "其它区",
      "parent": "320200",
      "children": null }] },

  {
    "id": "320300",
    "name": "徐州市",
    "parent": "320000",
    "children": [{
      "id": "320302",
      "name": "鼓楼区",
      "parent": "320300",
      "children": null },
    {
      "id": "320303",
      "name": "云龙区",
      "parent": "320300",
      "children": null },
    {
      "id": "320304",
      "name": "九里区",
      "parent": "320300",
      "children": null },
    {
      "id": "320305",
      "name": "贾汪区",
      "parent": "320300",
      "children": null },
    {
      "id": "320311",
      "name": "泉山区",
      "parent": "320300",
      "children": null },
    {
      "id": "320321",
      "name": "丰县",
      "parent": "320300",
      "children": null },
    {
      "id": "320322",
      "name": "沛县",
      "parent": "320300",
      "children": null },
    {
      "id": "320323",
      "name": "铜山区",
      "parent": "320300",
      "children": null },
    {
      "id": "320324",
      "name": "睢宁县",
      "parent": "320300",
      "children": null },
    {
      "id": "320381",
      "name": "新沂市",
      "parent": "320300",
      "children": null },
    {
      "id": "320382",
      "name": "邳州市",
      "parent": "320300",
      "children": null },
    {
      "id": "320383",
      "name": "其它区",
      "parent": "320300",
      "children": null }] },

  {
    "id": "320400",
    "name": "常州市",
    "parent": "320000",
    "children": [{
      "id": "320402",
      "name": "天宁区",
      "parent": "320400",
      "children": null },
    {
      "id": "320404",
      "name": "钟楼区",
      "parent": "320400",
      "children": null },
    {
      "id": "320405",
      "name": "戚墅堰区",
      "parent": "320400",
      "children": null },
    {
      "id": "320411",
      "name": "新北区",
      "parent": "320400",
      "children": null },
    {
      "id": "320412",
      "name": "武进区",
      "parent": "320400",
      "children": null },
    {
      "id": "320481",
      "name": "溧阳市",
      "parent": "320400",
      "children": null },
    {
      "id": "320482",
      "name": "金坛市",
      "parent": "320400",
      "children": null },
    {
      "id": "320483",
      "name": "其它区",
      "parent": "320400",
      "children": null }] },

  {
    "id": "320500",
    "name": "苏州市",
    "parent": "320000",
    "children": [{
      "id": "320502",
      "name": "沧浪区",
      "parent": "320500",
      "children": null },
    {
      "id": "320503",
      "name": "平江区",
      "parent": "320500",
      "children": null },
    {
      "id": "320504",
      "name": "金阊区",
      "parent": "320500",
      "children": null },
    {
      "id": "320505",
      "name": "虎丘区",
      "parent": "320500",
      "children": null },
    {
      "id": "320506",
      "name": "吴中区",
      "parent": "320500",
      "children": null },
    {
      "id": "320507",
      "name": "相城区",
      "parent": "320500",
      "children": null },
    {
      "id": "320508",
      "name": "姑苏区",
      "parent": "320500",
      "children": null },
    {
      "id": "320581",
      "name": "常熟市",
      "parent": "320500",
      "children": null },
    {
      "id": "320582",
      "name": "张家港市",
      "parent": "320500",
      "children": null },
    {
      "id": "320583",
      "name": "昆山市",
      "parent": "320500",
      "children": null },
    {
      "id": "320584",
      "name": "吴江区",
      "parent": "320500",
      "children": null },
    {
      "id": "320585",
      "name": "太仓市",
      "parent": "320500",
      "children": null },
    {
      "id": "320594",
      "name": "新区",
      "parent": "320500",
      "children": null },
    {
      "id": "320595",
      "name": "园区",
      "parent": "320500",
      "children": null },
    {
      "id": "320596",
      "name": "其它区",
      "parent": "320500",
      "children": null }] },

  {
    "id": "320600",
    "name": "南通市",
    "parent": "320000",
    "children": [{
      "id": "320602",
      "name": "崇川区",
      "parent": "320600",
      "children": null },
    {
      "id": "320611",
      "name": "港闸区",
      "parent": "320600",
      "children": null },
    {
      "id": "320612",
      "name": "通州区",
      "parent": "320600",
      "children": null },
    {
      "id": "320621",
      "name": "海安县",
      "parent": "320600",
      "children": null },
    {
      "id": "320623",
      "name": "如东县",
      "parent": "320600",
      "children": null },
    {
      "id": "320681",
      "name": "启东市",
      "parent": "320600",
      "children": null },
    {
      "id": "320682",
      "name": "如皋市",
      "parent": "320600",
      "children": null },
    {
      "id": "320683",
      "name": "通州市",
      "parent": "320600",
      "children": null },
    {
      "id": "320684",
      "name": "海门市",
      "parent": "320600",
      "children": null },
    {
      "id": "320693",
      "name": "开发区",
      "parent": "320600",
      "children": null },
    {
      "id": "320694",
      "name": "其它区",
      "parent": "320600",
      "children": null }] },

  {
    "id": "320700",
    "name": "连云港市",
    "parent": "320000",
    "children": [{
      "id": "320703",
      "name": "连云区",
      "parent": "320700",
      "children": null },
    {
      "id": "320705",
      "name": "新浦区",
      "parent": "320700",
      "children": null },
    {
      "id": "320706",
      "name": "海州区",
      "parent": "320700",
      "children": null },
    {
      "id": "320721",
      "name": "赣榆区",
      "parent": "320700",
      "children": null },
    {
      "id": "320722",
      "name": "东海县",
      "parent": "320700",
      "children": null },
    {
      "id": "320723",
      "name": "灌云县",
      "parent": "320700",
      "children": null },
    {
      "id": "320724",
      "name": "灌南县",
      "parent": "320700",
      "children": null },
    {
      "id": "320725",
      "name": "其它区",
      "parent": "320700",
      "children": null }] },

  {
    "id": "320800",
    "name": "淮安市",
    "parent": "320000",
    "children": [{
      "id": "320802",
      "name": "清河区",
      "parent": "320800",
      "children": null },
    {
      "id": "320803",
      "name": "淮安区",
      "parent": "320800",
      "children": null },
    {
      "id": "320804",
      "name": "淮阴区",
      "parent": "320800",
      "children": null },
    {
      "id": "320811",
      "name": "清浦区",
      "parent": "320800",
      "children": null },
    {
      "id": "320826",
      "name": "涟水县",
      "parent": "320800",
      "children": null },
    {
      "id": "320829",
      "name": "洪泽县",
      "parent": "320800",
      "children": null },
    {
      "id": "320830",
      "name": "盱眙县",
      "parent": "320800",
      "children": null },
    {
      "id": "320831",
      "name": "金湖县",
      "parent": "320800",
      "children": null },
    {
      "id": "320832",
      "name": "其它区",
      "parent": "320800",
      "children": null }] },

  {
    "id": "320900",
    "name": "盐城市",
    "parent": "320000",
    "children": [{
      "id": "320902",
      "name": "亭湖区",
      "parent": "320900",
      "children": null },
    {
      "id": "320903",
      "name": "盐都区",
      "parent": "320900",
      "children": null },
    {
      "id": "320921",
      "name": "响水县",
      "parent": "320900",
      "children": null },
    {
      "id": "320922",
      "name": "滨海县",
      "parent": "320900",
      "children": null },
    {
      "id": "320923",
      "name": "阜宁县",
      "parent": "320900",
      "children": null },
    {
      "id": "320924",
      "name": "射阳县",
      "parent": "320900",
      "children": null },
    {
      "id": "320925",
      "name": "建湖县",
      "parent": "320900",
      "children": null },
    {
      "id": "320981",
      "name": "东台市",
      "parent": "320900",
      "children": null },
    {
      "id": "320982",
      "name": "大丰市",
      "parent": "320900",
      "children": null },
    {
      "id": "320983",
      "name": "其它区",
      "parent": "320900",
      "children": null }] },

  {
    "id": "321000",
    "name": "扬州市",
    "parent": "320000",
    "children": [{
      "id": "321002",
      "name": "广陵区",
      "parent": "321000",
      "children": null },
    {
      "id": "321003",
      "name": "邗江区",
      "parent": "321000",
      "children": null },
    {
      "id": "321011",
      "name": "维扬区",
      "parent": "321000",
      "children": null },
    {
      "id": "321023",
      "name": "宝应县",
      "parent": "321000",
      "children": null },
    {
      "id": "321081",
      "name": "仪征市",
      "parent": "321000",
      "children": null },
    {
      "id": "321084",
      "name": "高邮市",
      "parent": "321000",
      "children": null },
    {
      "id": "321088",
      "name": "江都区",
      "parent": "321000",
      "children": null },
    {
      "id": "321092",
      "name": "经济开发区",
      "parent": "321000",
      "children": null },
    {
      "id": "321093",
      "name": "其它区",
      "parent": "321000",
      "children": null }] },

  {
    "id": "321100",
    "name": "镇江市",
    "parent": "320000",
    "children": [{
      "id": "321102",
      "name": "京口区",
      "parent": "321100",
      "children": null },
    {
      "id": "321111",
      "name": "润州区",
      "parent": "321100",
      "children": null },
    {
      "id": "321112",
      "name": "丹徒区",
      "parent": "321100",
      "children": null },
    {
      "id": "321181",
      "name": "丹阳市",
      "parent": "321100",
      "children": null },
    {
      "id": "321182",
      "name": "扬中市",
      "parent": "321100",
      "children": null },
    {
      "id": "321183",
      "name": "句容市",
      "parent": "321100",
      "children": null },
    {
      "id": "321184",
      "name": "其它区",
      "parent": "321100",
      "children": null }] },

  {
    "id": "321200",
    "name": "泰州市",
    "parent": "320000",
    "children": [{
      "id": "321202",
      "name": "海陵区",
      "parent": "321200",
      "children": null },
    {
      "id": "321203",
      "name": "高港区",
      "parent": "321200",
      "children": null },
    {
      "id": "321281",
      "name": "兴化市",
      "parent": "321200",
      "children": null },
    {
      "id": "321282",
      "name": "靖江市",
      "parent": "321200",
      "children": null },
    {
      "id": "321283",
      "name": "泰兴市",
      "parent": "321200",
      "children": null },
    {
      "id": "321284",
      "name": "姜堰区",
      "parent": "321200",
      "children": null },
    {
      "id": "321285",
      "name": "其它区",
      "parent": "321200",
      "children": null }] },

  {
    "id": "321300",
    "name": "宿迁市",
    "parent": "320000",
    "children": [{
      "id": "321302",
      "name": "宿城区",
      "parent": "321300",
      "children": null },
    {
      "id": "321311",
      "name": "宿豫区",
      "parent": "321300",
      "children": null },
    {
      "id": "321322",
      "name": "沭阳县",
      "parent": "321300",
      "children": null },
    {
      "id": "321323",
      "name": "泗阳县",
      "parent": "321300",
      "children": null },
    {
      "id": "321324",
      "name": "泗洪县",
      "parent": "321300",
      "children": null },
    {
      "id": "321325",
      "name": "其它区",
      "parent": "321300",
      "children": null }] }] },


{
  "id": "330000",
  "name": "浙江省",
  "children": [{
    "id": "330100",
    "name": "杭州市",
    "parent": "330000",
    "children": [{
      "id": "330102",
      "name": "上城区",
      "parent": "330100",
      "children": null },
    {
      "id": "330103",
      "name": "下城区",
      "parent": "330100",
      "children": null },
    {
      "id": "330104",
      "name": "江干区",
      "parent": "330100",
      "children": null },
    {
      "id": "330105",
      "name": "拱墅区",
      "parent": "330100",
      "children": null },
    {
      "id": "330106",
      "name": "西湖区",
      "parent": "330100",
      "children": null },
    {
      "id": "330108",
      "name": "滨江区",
      "parent": "330100",
      "children": null },
    {
      "id": "330109",
      "name": "萧山区",
      "parent": "330100",
      "children": null },
    {
      "id": "330110",
      "name": "余杭区",
      "parent": "330100",
      "children": null },
    {
      "id": "330122",
      "name": "桐庐县",
      "parent": "330100",
      "children": null },
    {
      "id": "330127",
      "name": "淳安县",
      "parent": "330100",
      "children": null },
    {
      "id": "330182",
      "name": "建德市",
      "parent": "330100",
      "children": null },
    {
      "id": "330183",
      "name": "富阳区",
      "parent": "330100",
      "children": null },
    {
      "id": "330185",
      "name": "临安市",
      "parent": "330100",
      "children": null },
    {
      "id": "330186",
      "name": "其它区",
      "parent": "330100",
      "children": null }] },

  {
    "id": "330200",
    "name": "宁波市",
    "parent": "330000",
    "children": [{
      "id": "330203",
      "name": "海曙区",
      "parent": "330200",
      "children": null },
    {
      "id": "330204",
      "name": "江东区",
      "parent": "330200",
      "children": null },
    {
      "id": "330205",
      "name": "江北区",
      "parent": "330200",
      "children": null },
    {
      "id": "330206",
      "name": "北仑区",
      "parent": "330200",
      "children": null },
    {
      "id": "330211",
      "name": "镇海区",
      "parent": "330200",
      "children": null },
    {
      "id": "330212",
      "name": "鄞州区",
      "parent": "330200",
      "children": null },
    {
      "id": "330225",
      "name": "象山县",
      "parent": "330200",
      "children": null },
    {
      "id": "330226",
      "name": "宁海县",
      "parent": "330200",
      "children": null },
    {
      "id": "330281",
      "name": "余姚市",
      "parent": "330200",
      "children": null },
    {
      "id": "330282",
      "name": "慈溪市",
      "parent": "330200",
      "children": null },
    {
      "id": "330283",
      "name": "奉化市",
      "parent": "330200",
      "children": null },
    {
      "id": "330284",
      "name": "其它区",
      "parent": "330200",
      "children": null }] },

  {
    "id": "330300",
    "name": "温州市",
    "parent": "330000",
    "children": [{
      "id": "330302",
      "name": "鹿城区",
      "parent": "330300",
      "children": null },
    {
      "id": "330303",
      "name": "龙湾区",
      "parent": "330300",
      "children": null },
    {
      "id": "330304",
      "name": "瓯海区",
      "parent": "330300",
      "children": null },
    {
      "id": "330322",
      "name": "洞头县",
      "parent": "330300",
      "children": null },
    {
      "id": "330324",
      "name": "永嘉县",
      "parent": "330300",
      "children": null },
    {
      "id": "330326",
      "name": "平阳县",
      "parent": "330300",
      "children": null },
    {
      "id": "330327",
      "name": "苍南县",
      "parent": "330300",
      "children": null },
    {
      "id": "330328",
      "name": "文成县",
      "parent": "330300",
      "children": null },
    {
      "id": "330329",
      "name": "泰顺县",
      "parent": "330300",
      "children": null },
    {
      "id": "330381",
      "name": "瑞安市",
      "parent": "330300",
      "children": null },
    {
      "id": "330382",
      "name": "乐清市",
      "parent": "330300",
      "children": null },
    {
      "id": "330383",
      "name": "其它区",
      "parent": "330300",
      "children": null }] },

  {
    "id": "330400",
    "name": "嘉兴市",
    "parent": "330000",
    "children": [{
      "id": "330402",
      "name": "南湖区",
      "parent": "330400",
      "children": null },
    {
      "id": "330411",
      "name": "秀洲区",
      "parent": "330400",
      "children": null },
    {
      "id": "330421",
      "name": "嘉善县",
      "parent": "330400",
      "children": null },
    {
      "id": "330424",
      "name": "海盐县",
      "parent": "330400",
      "children": null },
    {
      "id": "330481",
      "name": "海宁市",
      "parent": "330400",
      "children": null },
    {
      "id": "330482",
      "name": "平湖市",
      "parent": "330400",
      "children": null },
    {
      "id": "330483",
      "name": "桐乡市",
      "parent": "330400",
      "children": null },
    {
      "id": "330484",
      "name": "其它区",
      "parent": "330400",
      "children": null }] },

  {
    "id": "330500",
    "name": "湖州市",
    "parent": "330000",
    "children": [{
      "id": "330502",
      "name": "吴兴区",
      "parent": "330500",
      "children": null },
    {
      "id": "330503",
      "name": "南浔区",
      "parent": "330500",
      "children": null },
    {
      "id": "330521",
      "name": "德清县",
      "parent": "330500",
      "children": null },
    {
      "id": "330522",
      "name": "长兴县",
      "parent": "330500",
      "children": null },
    {
      "id": "330523",
      "name": "安吉县",
      "parent": "330500",
      "children": null },
    {
      "id": "330524",
      "name": "其它区",
      "parent": "330500",
      "children": null }] },

  {
    "id": "330600",
    "name": "绍兴市",
    "parent": "330000",
    "children": [{
      "id": "330602",
      "name": "越城区",
      "parent": "330600",
      "children": null },
    {
      "id": "330621",
      "name": "柯桥区",
      "parent": "330600",
      "children": null },
    {
      "id": "330624",
      "name": "新昌县",
      "parent": "330600",
      "children": null },
    {
      "id": "330681",
      "name": "诸暨市",
      "parent": "330600",
      "children": null },
    {
      "id": "330682",
      "name": "上虞区",
      "parent": "330600",
      "children": null },
    {
      "id": "330683",
      "name": "嵊州市",
      "parent": "330600",
      "children": null },
    {
      "id": "330684",
      "name": "其它区",
      "parent": "330600",
      "children": null }] },

  {
    "id": "330700",
    "name": "金华市",
    "parent": "330000",
    "children": [{
      "id": "330702",
      "name": "婺城区",
      "parent": "330700",
      "children": null },
    {
      "id": "330703",
      "name": "金东区",
      "parent": "330700",
      "children": null },
    {
      "id": "330723",
      "name": "武义县",
      "parent": "330700",
      "children": null },
    {
      "id": "330726",
      "name": "浦江县",
      "parent": "330700",
      "children": null },
    {
      "id": "330727",
      "name": "磐安县",
      "parent": "330700",
      "children": null },
    {
      "id": "330781",
      "name": "兰溪市",
      "parent": "330700",
      "children": null },
    {
      "id": "330782",
      "name": "义乌市",
      "parent": "330700",
      "children": null },
    {
      "id": "330783",
      "name": "东阳市",
      "parent": "330700",
      "children": null },
    {
      "id": "330784",
      "name": "永康市",
      "parent": "330700",
      "children": null },
    {
      "id": "330785",
      "name": "其它区",
      "parent": "330700",
      "children": null }] },

  {
    "id": "330800",
    "name": "衢州市",
    "parent": "330000",
    "children": [{
      "id": "330802",
      "name": "柯城区",
      "parent": "330800",
      "children": null },
    {
      "id": "330803",
      "name": "衢江区",
      "parent": "330800",
      "children": null },
    {
      "id": "330822",
      "name": "常山县",
      "parent": "330800",
      "children": null },
    {
      "id": "330824",
      "name": "开化县",
      "parent": "330800",
      "children": null },
    {
      "id": "330825",
      "name": "龙游县",
      "parent": "330800",
      "children": null },
    {
      "id": "330881",
      "name": "江山市",
      "parent": "330800",
      "children": null },
    {
      "id": "330882",
      "name": "其它区",
      "parent": "330800",
      "children": null }] },

  {
    "id": "330900",
    "name": "舟山市",
    "parent": "330000",
    "children": [{
      "id": "330902",
      "name": "定海区",
      "parent": "330900",
      "children": null },
    {
      "id": "330903",
      "name": "普陀区",
      "parent": "330900",
      "children": null },
    {
      "id": "330921",
      "name": "岱山县",
      "parent": "330900",
      "children": null },
    {
      "id": "330922",
      "name": "嵊泗县",
      "parent": "330900",
      "children": null },
    {
      "id": "330923",
      "name": "其它区",
      "parent": "330900",
      "children": null }] },

  {
    "id": "331000",
    "name": "台州市",
    "parent": "330000",
    "children": [{
      "id": "331002",
      "name": "椒江区",
      "parent": "331000",
      "children": null },
    {
      "id": "331003",
      "name": "黄岩区",
      "parent": "331000",
      "children": null },
    {
      "id": "331004",
      "name": "路桥区",
      "parent": "331000",
      "children": null },
    {
      "id": "331021",
      "name": "玉环县",
      "parent": "331000",
      "children": null },
    {
      "id": "331022",
      "name": "三门县",
      "parent": "331000",
      "children": null },
    {
      "id": "331023",
      "name": "天台县",
      "parent": "331000",
      "children": null },
    {
      "id": "331024",
      "name": "仙居县",
      "parent": "331000",
      "children": null },
    {
      "id": "331081",
      "name": "温岭市",
      "parent": "331000",
      "children": null },
    {
      "id": "331082",
      "name": "临海市",
      "parent": "331000",
      "children": null },
    {
      "id": "331083",
      "name": "其它区",
      "parent": "331000",
      "children": null }] },

  {
    "id": "331100",
    "name": "丽水市",
    "parent": "330000",
    "children": [{
      "id": "331102",
      "name": "莲都区",
      "parent": "331100",
      "children": null },
    {
      "id": "331121",
      "name": "青田县",
      "parent": "331100",
      "children": null },
    {
      "id": "331122",
      "name": "缙云县",
      "parent": "331100",
      "children": null },
    {
      "id": "331123",
      "name": "遂昌县",
      "parent": "331100",
      "children": null },
    {
      "id": "331124",
      "name": "松阳县",
      "parent": "331100",
      "children": null },
    {
      "id": "331125",
      "name": "云和县",
      "parent": "331100",
      "children": null },
    {
      "id": "331126",
      "name": "庆元县",
      "parent": "331100",
      "children": null },
    {
      "id": "331127",
      "name": "景宁畲族自治县",
      "parent": "331100",
      "children": null },
    {
      "id": "331181",
      "name": "龙泉市",
      "parent": "331100",
      "children": null },
    {
      "id": "331182",
      "name": "其它区",
      "parent": "331100",
      "children": null }] }] },


{
  "id": "340000",
  "name": "安徽省",
  "children": [{
    "id": "340100",
    "name": "合肥市",
    "parent": "340000",
    "children": [{
      "id": "340102",
      "name": "瑶海区",
      "parent": "340100",
      "children": null },
    {
      "id": "340103",
      "name": "庐阳区",
      "parent": "340100",
      "children": null },
    {
      "id": "340104",
      "name": "蜀山区",
      "parent": "340100",
      "children": null },
    {
      "id": "340111",
      "name": "包河区",
      "parent": "340100",
      "children": null },
    {
      "id": "340121",
      "name": "长丰县",
      "parent": "340100",
      "children": null },
    {
      "id": "340122",
      "name": "肥东县",
      "parent": "340100",
      "children": null },
    {
      "id": "340123",
      "name": "肥西县",
      "parent": "340100",
      "children": null },
    {
      "id": "340151",
      "name": "高新区",
      "parent": "340100",
      "children": null },
    {
      "id": "340191",
      "name": "中区",
      "parent": "340100",
      "children": null },
    {
      "id": "340192",
      "name": "其它区",
      "parent": "340100",
      "children": null },
    {
      "id": "341400",
      "name": "巢湖市",
      "parent": "340100",
      "children": null },
    {
      "id": "341402",
      "name": "居巢区",
      "parent": "340100",
      "children": null },
    {
      "id": "341421",
      "name": "庐江县",
      "parent": "340100",
      "children": null }] },

  {
    "id": "340200",
    "name": "芜湖市",
    "parent": "340000",
    "children": [{
      "id": "340202",
      "name": "镜湖区",
      "parent": "340200",
      "children": null },
    {
      "id": "340203",
      "name": "弋江区",
      "parent": "340200",
      "children": null },
    {
      "id": "340207",
      "name": "鸠江区",
      "parent": "340200",
      "children": null },
    {
      "id": "340208",
      "name": "三山区",
      "parent": "340200",
      "children": null },
    {
      "id": "340221",
      "name": "芜湖县",
      "parent": "340200",
      "children": null },
    {
      "id": "340222",
      "name": "繁昌县",
      "parent": "340200",
      "children": null },
    {
      "id": "340223",
      "name": "南陵县",
      "parent": "340200",
      "children": null },
    {
      "id": "340224",
      "name": "其它区",
      "parent": "340200",
      "children": null },
    {
      "id": "341422",
      "name": "无为县",
      "parent": "340200",
      "children": null }] },

  {
    "id": "340300",
    "name": "蚌埠市",
    "parent": "340000",
    "children": [{
      "id": "340302",
      "name": "龙子湖区",
      "parent": "340300",
      "children": null },
    {
      "id": "340303",
      "name": "蚌山区",
      "parent": "340300",
      "children": null },
    {
      "id": "340304",
      "name": "禹会区",
      "parent": "340300",
      "children": null },
    {
      "id": "340311",
      "name": "淮上区",
      "parent": "340300",
      "children": null },
    {
      "id": "340321",
      "name": "怀远县",
      "parent": "340300",
      "children": null },
    {
      "id": "340322",
      "name": "五河县",
      "parent": "340300",
      "children": null },
    {
      "id": "340323",
      "name": "固镇县",
      "parent": "340300",
      "children": null },
    {
      "id": "340324",
      "name": "其它区",
      "parent": "340300",
      "children": null }] },

  {
    "id": "340400",
    "name": "淮南市",
    "parent": "340000",
    "children": [{
      "id": "340402",
      "name": "大通区",
      "parent": "340400",
      "children": null },
    {
      "id": "340403",
      "name": "田家庵区",
      "parent": "340400",
      "children": null },
    {
      "id": "340404",
      "name": "谢家集区",
      "parent": "340400",
      "children": null },
    {
      "id": "340405",
      "name": "八公山区",
      "parent": "340400",
      "children": null },
    {
      "id": "340406",
      "name": "潘集区",
      "parent": "340400",
      "children": null },
    {
      "id": "340421",
      "name": "凤台县",
      "parent": "340400",
      "children": null },
    {
      "id": "340422",
      "name": "其它区",
      "parent": "340400",
      "children": null },
    {
      "id": "340499",
      "name": "寿县",
      "parent": "340400",
      "children": null }] },

  {
    "id": "340500",
    "name": "马鞍山市",
    "parent": "340000",
    "children": [{
      "id": "340502",
      "name": "金家庄区",
      "parent": "340500",
      "children": null },
    {
      "id": "340503",
      "name": "花山区",
      "parent": "340500",
      "children": null },
    {
      "id": "340504",
      "name": "雨山区",
      "parent": "340500",
      "children": null },
    {
      "id": "340506",
      "name": "博望区",
      "parent": "340500",
      "children": null },
    {
      "id": "340521",
      "name": "当涂县",
      "parent": "340500",
      "children": null },
    {
      "id": "340522",
      "name": "其它区",
      "parent": "340500",
      "children": null },
    {
      "id": "341423",
      "name": "含山县",
      "parent": "340500",
      "children": null },
    {
      "id": "341424",
      "name": "和县",
      "parent": "340500",
      "children": null }] },

  {
    "id": "340600",
    "name": "淮北市",
    "parent": "340000",
    "children": [{
      "id": "340602",
      "name": "杜集区",
      "parent": "340600",
      "children": null },
    {
      "id": "340603",
      "name": "相山区",
      "parent": "340600",
      "children": null },
    {
      "id": "340604",
      "name": "烈山区",
      "parent": "340600",
      "children": null },
    {
      "id": "340621",
      "name": "濉溪县",
      "parent": "340600",
      "children": null },
    {
      "id": "340622",
      "name": "其它区",
      "parent": "340600",
      "children": null }] },

  {
    "id": "340700",
    "name": "铜陵市",
    "parent": "340000",
    "children": [{
      "id": "340702",
      "name": "铜官山区",
      "parent": "340700",
      "children": null },
    {
      "id": "340703",
      "name": "狮子山区",
      "parent": "340700",
      "children": null },
    {
      "id": "340705",
      "name": "铜官区",
      "parent": "340700",
      "children": null },
    {
      "id": "340711",
      "name": "郊区",
      "parent": "340700",
      "children": null },
    {
      "id": "340721",
      "name": "铜陵县",
      "parent": "340700",
      "children": null },
    {
      "id": "340722",
      "name": "其它区",
      "parent": "340700",
      "children": null },
    {
      "id": "340799",
      "name": "枞阳县",
      "parent": "340700",
      "children": null }] },

  {
    "id": "340800",
    "name": "安庆市",
    "parent": "340000",
    "children": [{
      "id": "340802",
      "name": "迎江区",
      "parent": "340800",
      "children": null },
    {
      "id": "340803",
      "name": "大观区",
      "parent": "340800",
      "children": null },
    {
      "id": "340811",
      "name": "宜秀区",
      "parent": "340800",
      "children": null },
    {
      "id": "340822",
      "name": "怀宁县",
      "parent": "340800",
      "children": null },
    {
      "id": "340823",
      "name": "枞阳县",
      "parent": "340800",
      "children": null },
    {
      "id": "340824",
      "name": "潜山县",
      "parent": "340800",
      "children": null },
    {
      "id": "340825",
      "name": "太湖县",
      "parent": "340800",
      "children": null },
    {
      "id": "340826",
      "name": "宿松县",
      "parent": "340800",
      "children": null },
    {
      "id": "340827",
      "name": "望江县",
      "parent": "340800",
      "children": null },
    {
      "id": "340828",
      "name": "岳西县",
      "parent": "340800",
      "children": null },
    {
      "id": "340881",
      "name": "桐城市",
      "parent": "340800",
      "children": null },
    {
      "id": "340882",
      "name": "其它区",
      "parent": "340800",
      "children": null }] },

  {
    "id": "341000",
    "name": "黄山市",
    "parent": "340000",
    "children": [{
      "id": "341002",
      "name": "屯溪区",
      "parent": "341000",
      "children": null },
    {
      "id": "341003",
      "name": "黄山区",
      "parent": "341000",
      "children": null },
    {
      "id": "341004",
      "name": "徽州区",
      "parent": "341000",
      "children": null },
    {
      "id": "341021",
      "name": "歙县",
      "parent": "341000",
      "children": null },
    {
      "id": "341022",
      "name": "休宁县",
      "parent": "341000",
      "children": null },
    {
      "id": "341023",
      "name": "黟县",
      "parent": "341000",
      "children": null },
    {
      "id": "341024",
      "name": "祁门县",
      "parent": "341000",
      "children": null },
    {
      "id": "341025",
      "name": "其它区",
      "parent": "341000",
      "children": null }] },

  {
    "id": "341100",
    "name": "滁州市",
    "parent": "340000",
    "children": [{
      "id": "341102",
      "name": "琅琊区",
      "parent": "341100",
      "children": null },
    {
      "id": "341103",
      "name": "南谯区",
      "parent": "341100",
      "children": null },
    {
      "id": "341122",
      "name": "来安县",
      "parent": "341100",
      "children": null },
    {
      "id": "341124",
      "name": "全椒县",
      "parent": "341100",
      "children": null },
    {
      "id": "341125",
      "name": "定远县",
      "parent": "341100",
      "children": null },
    {
      "id": "341126",
      "name": "凤阳县",
      "parent": "341100",
      "children": null },
    {
      "id": "341181",
      "name": "天长市",
      "parent": "341100",
      "children": null },
    {
      "id": "341182",
      "name": "明光市",
      "parent": "341100",
      "children": null },
    {
      "id": "341183",
      "name": "其它区",
      "parent": "341100",
      "children": null }] },

  {
    "id": "341200",
    "name": "阜阳市",
    "parent": "340000",
    "children": [{
      "id": "341202",
      "name": "颍州区",
      "parent": "341200",
      "children": null },
    {
      "id": "341203",
      "name": "颍东区",
      "parent": "341200",
      "children": null },
    {
      "id": "341204",
      "name": "颍泉区",
      "parent": "341200",
      "children": null },
    {
      "id": "341221",
      "name": "临泉县",
      "parent": "341200",
      "children": null },
    {
      "id": "341222",
      "name": "太和县",
      "parent": "341200",
      "children": null },
    {
      "id": "341225",
      "name": "阜南县",
      "parent": "341200",
      "children": null },
    {
      "id": "341226",
      "name": "颍上县",
      "parent": "341200",
      "children": null },
    {
      "id": "341282",
      "name": "界首市",
      "parent": "341200",
      "children": null },
    {
      "id": "341283",
      "name": "其它区",
      "parent": "341200",
      "children": null }] },

  {
    "id": "341300",
    "name": "宿州市",
    "parent": "340000",
    "children": [{
      "id": "341302",
      "name": "埇桥区",
      "parent": "341300",
      "children": null },
    {
      "id": "341321",
      "name": "砀山县",
      "parent": "341300",
      "children": null },
    {
      "id": "341322",
      "name": "萧县",
      "parent": "341300",
      "children": null },
    {
      "id": "341323",
      "name": "灵璧县",
      "parent": "341300",
      "children": null },
    {
      "id": "341324",
      "name": "泗县",
      "parent": "341300",
      "children": null },
    {
      "id": "341325",
      "name": "其它区",
      "parent": "341300",
      "children": null }] },

  {
    "id": "341500",
    "name": "六安市",
    "parent": "340000",
    "children": [{
      "id": "341502",
      "name": "金安区",
      "parent": "341500",
      "children": null },
    {
      "id": "341503",
      "name": "裕安区",
      "parent": "341500",
      "children": null },
    {
      "id": "341504",
      "name": "叶集区",
      "parent": "341500",
      "children": null },
    {
      "id": "341521",
      "name": "寿县",
      "parent": "341500",
      "children": null },
    {
      "id": "341522",
      "name": "霍邱县",
      "parent": "341500",
      "children": null },
    {
      "id": "341523",
      "name": "舒城县",
      "parent": "341500",
      "children": null },
    {
      "id": "341524",
      "name": "金寨县",
      "parent": "341500",
      "children": null },
    {
      "id": "341525",
      "name": "霍山县",
      "parent": "341500",
      "children": null },
    {
      "id": "341526",
      "name": "其它区",
      "parent": "341500",
      "children": null }] },

  {
    "id": "341600",
    "name": "亳州市",
    "parent": "340000",
    "children": [{
      "id": "341602",
      "name": "谯城区",
      "parent": "341600",
      "children": null },
    {
      "id": "341621",
      "name": "涡阳县",
      "parent": "341600",
      "children": null },
    {
      "id": "341622",
      "name": "蒙城县",
      "parent": "341600",
      "children": null },
    {
      "id": "341623",
      "name": "利辛县",
      "parent": "341600",
      "children": null },
    {
      "id": "341624",
      "name": "其它区",
      "parent": "341600",
      "children": null }] },

  {
    "id": "341700",
    "name": "池州市",
    "parent": "340000",
    "children": [{
      "id": "341702",
      "name": "贵池区",
      "parent": "341700",
      "children": null },
    {
      "id": "341721",
      "name": "东至县",
      "parent": "341700",
      "children": null },
    {
      "id": "341722",
      "name": "石台县",
      "parent": "341700",
      "children": null },
    {
      "id": "341723",
      "name": "青阳县",
      "parent": "341700",
      "children": null },
    {
      "id": "341724",
      "name": "其它区",
      "parent": "341700",
      "children": null }] },

  {
    "id": "341800",
    "name": "宣城市",
    "parent": "340000",
    "children": [{
      "id": "341802",
      "name": "宣州区",
      "parent": "341800",
      "children": null },
    {
      "id": "341821",
      "name": "郎溪县",
      "parent": "341800",
      "children": null },
    {
      "id": "341822",
      "name": "广德县",
      "parent": "341800",
      "children": null },
    {
      "id": "341823",
      "name": "泾县",
      "parent": "341800",
      "children": null },
    {
      "id": "341824",
      "name": "绩溪县",
      "parent": "341800",
      "children": null },
    {
      "id": "341825",
      "name": "旌德县",
      "parent": "341800",
      "children": null },
    {
      "id": "341881",
      "name": "宁国市",
      "parent": "341800",
      "children": null },
    {
      "id": "341882",
      "name": "其它区",
      "parent": "341800",
      "children": null }] }] },


{
  "id": "350000",
  "name": "福建省",
  "children": [{
    "id": "350100",
    "name": "福州市",
    "parent": "350000",
    "children": [{
      "id": "350102",
      "name": "鼓楼区",
      "parent": "350100",
      "children": null },
    {
      "id": "350103",
      "name": "台江区",
      "parent": "350100",
      "children": null },
    {
      "id": "350104",
      "name": "仓山区",
      "parent": "350100",
      "children": null },
    {
      "id": "350105",
      "name": "马尾区",
      "parent": "350100",
      "children": null },
    {
      "id": "350111",
      "name": "晋安区",
      "parent": "350100",
      "children": null },
    {
      "id": "350121",
      "name": "闽侯县",
      "parent": "350100",
      "children": null },
    {
      "id": "350122",
      "name": "连江县",
      "parent": "350100",
      "children": null },
    {
      "id": "350123",
      "name": "罗源县",
      "parent": "350100",
      "children": null },
    {
      "id": "350124",
      "name": "闽清县",
      "parent": "350100",
      "children": null },
    {
      "id": "350125",
      "name": "永泰县",
      "parent": "350100",
      "children": null },
    {
      "id": "350128",
      "name": "平潭县",
      "parent": "350100",
      "children": null },
    {
      "id": "350181",
      "name": "福清市",
      "parent": "350100",
      "children": null },
    {
      "id": "350182",
      "name": "长乐市",
      "parent": "350100",
      "children": null },
    {
      "id": "350183",
      "name": "其它区",
      "parent": "350100",
      "children": null }] },

  {
    "id": "350200",
    "name": "厦门市",
    "parent": "350000",
    "children": [{
      "id": "350203",
      "name": "思明区",
      "parent": "350200",
      "children": null },
    {
      "id": "350205",
      "name": "海沧区",
      "parent": "350200",
      "children": null },
    {
      "id": "350206",
      "name": "湖里区",
      "parent": "350200",
      "children": null },
    {
      "id": "350211",
      "name": "集美区",
      "parent": "350200",
      "children": null },
    {
      "id": "350212",
      "name": "同安区",
      "parent": "350200",
      "children": null },
    {
      "id": "350213",
      "name": "翔安区",
      "parent": "350200",
      "children": null },
    {
      "id": "350214",
      "name": "其它区",
      "parent": "350200",
      "children": null }] },

  {
    "id": "350300",
    "name": "莆田市",
    "parent": "350000",
    "children": [{
      "id": "350302",
      "name": "城厢区",
      "parent": "350300",
      "children": null },
    {
      "id": "350303",
      "name": "涵江区",
      "parent": "350300",
      "children": null },
    {
      "id": "350304",
      "name": "荔城区",
      "parent": "350300",
      "children": null },
    {
      "id": "350305",
      "name": "秀屿区",
      "parent": "350300",
      "children": null },
    {
      "id": "350322",
      "name": "仙游县",
      "parent": "350300",
      "children": null },
    {
      "id": "350323",
      "name": "其它区",
      "parent": "350300",
      "children": null }] },

  {
    "id": "350400",
    "name": "三明市",
    "parent": "350000",
    "children": [{
      "id": "350402",
      "name": "梅列区",
      "parent": "350400",
      "children": null },
    {
      "id": "350403",
      "name": "三元区",
      "parent": "350400",
      "children": null },
    {
      "id": "350421",
      "name": "明溪县",
      "parent": "350400",
      "children": null },
    {
      "id": "350423",
      "name": "清流县",
      "parent": "350400",
      "children": null },
    {
      "id": "350424",
      "name": "宁化县",
      "parent": "350400",
      "children": null },
    {
      "id": "350425",
      "name": "大田县",
      "parent": "350400",
      "children": null },
    {
      "id": "350426",
      "name": "尤溪县",
      "parent": "350400",
      "children": null },
    {
      "id": "350427",
      "name": "沙县",
      "parent": "350400",
      "children": null },
    {
      "id": "350428",
      "name": "将乐县",
      "parent": "350400",
      "children": null },
    {
      "id": "350429",
      "name": "泰宁县",
      "parent": "350400",
      "children": null },
    {
      "id": "350430",
      "name": "建宁县",
      "parent": "350400",
      "children": null },
    {
      "id": "350481",
      "name": "永安市",
      "parent": "350400",
      "children": null },
    {
      "id": "350482",
      "name": "其它区",
      "parent": "350400",
      "children": null }] },

  {
    "id": "350500",
    "name": "泉州市",
    "parent": "350000",
    "children": [{
      "id": "350502",
      "name": "鲤城区",
      "parent": "350500",
      "children": null },
    {
      "id": "350503",
      "name": "丰泽区",
      "parent": "350500",
      "children": null },
    {
      "id": "350504",
      "name": "洛江区",
      "parent": "350500",
      "children": null },
    {
      "id": "350505",
      "name": "泉港区",
      "parent": "350500",
      "children": null },
    {
      "id": "350521",
      "name": "惠安县",
      "parent": "350500",
      "children": null },
    {
      "id": "350524",
      "name": "安溪县",
      "parent": "350500",
      "children": null },
    {
      "id": "350525",
      "name": "永春县",
      "parent": "350500",
      "children": null },
    {
      "id": "350526",
      "name": "德化县",
      "parent": "350500",
      "children": null },
    {
      "id": "350527",
      "name": "金门县",
      "parent": "350500",
      "children": null },
    {
      "id": "350581",
      "name": "石狮市",
      "parent": "350500",
      "children": null },
    {
      "id": "350582",
      "name": "晋江市",
      "parent": "350500",
      "children": null },
    {
      "id": "350583",
      "name": "南安市",
      "parent": "350500",
      "children": null },
    {
      "id": "350584",
      "name": "其它区",
      "parent": "350500",
      "children": null }] },

  {
    "id": "350600",
    "name": "漳州市",
    "parent": "350000",
    "children": [{
      "id": "350602",
      "name": "芗城区",
      "parent": "350600",
      "children": null },
    {
      "id": "350603",
      "name": "龙文区",
      "parent": "350600",
      "children": null },
    {
      "id": "350622",
      "name": "云霄县",
      "parent": "350600",
      "children": null },
    {
      "id": "350623",
      "name": "漳浦县",
      "parent": "350600",
      "children": null },
    {
      "id": "350624",
      "name": "诏安县",
      "parent": "350600",
      "children": null },
    {
      "id": "350625",
      "name": "长泰县",
      "parent": "350600",
      "children": null },
    {
      "id": "350626",
      "name": "东山县",
      "parent": "350600",
      "children": null },
    {
      "id": "350627",
      "name": "南靖县",
      "parent": "350600",
      "children": null },
    {
      "id": "350628",
      "name": "平和县",
      "parent": "350600",
      "children": null },
    {
      "id": "350629",
      "name": "华安县",
      "parent": "350600",
      "children": null },
    {
      "id": "350681",
      "name": "龙海市",
      "parent": "350600",
      "children": null },
    {
      "id": "350682",
      "name": "其它区",
      "parent": "350600",
      "children": null }] },

  {
    "id": "350700",
    "name": "南平市",
    "parent": "350000",
    "children": [{
      "id": "350702",
      "name": "延平区",
      "parent": "350700",
      "children": null },
    {
      "id": "350721",
      "name": "顺昌县",
      "parent": "350700",
      "children": null },
    {
      "id": "350722",
      "name": "浦城县",
      "parent": "350700",
      "children": null },
    {
      "id": "350723",
      "name": "光泽县",
      "parent": "350700",
      "children": null },
    {
      "id": "350724",
      "name": "松溪县",
      "parent": "350700",
      "children": null },
    {
      "id": "350725",
      "name": "政和县",
      "parent": "350700",
      "children": null },
    {
      "id": "350781",
      "name": "邵武市",
      "parent": "350700",
      "children": null },
    {
      "id": "350782",
      "name": "武夷山市",
      "parent": "350700",
      "children": null },
    {
      "id": "350783",
      "name": "建瓯市",
      "parent": "350700",
      "children": null },
    {
      "id": "350784",
      "name": "建阳区",
      "parent": "350700",
      "children": null },
    {
      "id": "350785",
      "name": "其它区",
      "parent": "350700",
      "children": null }] },

  {
    "id": "350800",
    "name": "龙岩市",
    "parent": "350000",
    "children": [{
      "id": "350802",
      "name": "新罗区",
      "parent": "350800",
      "children": null },
    {
      "id": "350821",
      "name": "长汀县",
      "parent": "350800",
      "children": null },
    {
      "id": "350822",
      "name": "永定区",
      "parent": "350800",
      "children": null },
    {
      "id": "350823",
      "name": "上杭县",
      "parent": "350800",
      "children": null },
    {
      "id": "350824",
      "name": "武平县",
      "parent": "350800",
      "children": null },
    {
      "id": "350825",
      "name": "连城县",
      "parent": "350800",
      "children": null },
    {
      "id": "350881",
      "name": "漳平市",
      "parent": "350800",
      "children": null },
    {
      "id": "350882",
      "name": "其它区",
      "parent": "350800",
      "children": null }] },

  {
    "id": "350900",
    "name": "宁德市",
    "parent": "350000",
    "children": [{
      "id": "350902",
      "name": "蕉城区",
      "parent": "350900",
      "children": null },
    {
      "id": "350921",
      "name": "霞浦县",
      "parent": "350900",
      "children": null },
    {
      "id": "350922",
      "name": "古田县",
      "parent": "350900",
      "children": null },
    {
      "id": "350923",
      "name": "屏南县",
      "parent": "350900",
      "children": null },
    {
      "id": "350924",
      "name": "寿宁县",
      "parent": "350900",
      "children": null },
    {
      "id": "350925",
      "name": "周宁县",
      "parent": "350900",
      "children": null },
    {
      "id": "350926",
      "name": "柘荣县",
      "parent": "350900",
      "children": null },
    {
      "id": "350981",
      "name": "福安市",
      "parent": "350900",
      "children": null },
    {
      "id": "350982",
      "name": "福鼎市",
      "parent": "350900",
      "children": null },
    {
      "id": "350983",
      "name": "其它区",
      "parent": "350900",
      "children": null }] }] },


{
  "id": "360000",
  "name": "江西省",
  "children": [{
    "id": "360100",
    "name": "南昌市",
    "parent": "360000",
    "children": [{
      "id": "360102",
      "name": "东湖区",
      "parent": "360100",
      "children": null },
    {
      "id": "360103",
      "name": "西湖区",
      "parent": "360100",
      "children": null },
    {
      "id": "360104",
      "name": "青云谱区",
      "parent": "360100",
      "children": null },
    {
      "id": "360105",
      "name": "湾里区",
      "parent": "360100",
      "children": null },
    {
      "id": "360111",
      "name": "青山湖区",
      "parent": "360100",
      "children": null },
    {
      "id": "360121",
      "name": "南昌县",
      "parent": "360100",
      "children": null },
    {
      "id": "360122",
      "name": "新建县",
      "parent": "360100",
      "children": null },
    {
      "id": "360123",
      "name": "安义县",
      "parent": "360100",
      "children": null },
    {
      "id": "360124",
      "name": "进贤县",
      "parent": "360100",
      "children": null },
    {
      "id": "360125",
      "name": "红谷滩新区",
      "parent": "360100",
      "children": null },
    {
      "id": "360126",
      "name": "经济技术开发区",
      "parent": "360100",
      "children": null },
    {
      "id": "360127",
      "name": "昌北区",
      "parent": "360100",
      "children": null },
    {
      "id": "360128",
      "name": "其它区",
      "parent": "360100",
      "children": null }] },

  {
    "id": "360200",
    "name": "景德镇市",
    "parent": "360000",
    "children": [{
      "id": "360202",
      "name": "昌江区",
      "parent": "360200",
      "children": null },
    {
      "id": "360203",
      "name": "珠山区",
      "parent": "360200",
      "children": null },
    {
      "id": "360222",
      "name": "浮梁县",
      "parent": "360200",
      "children": null },
    {
      "id": "360281",
      "name": "乐平市",
      "parent": "360200",
      "children": null },
    {
      "id": "360282",
      "name": "其它区",
      "parent": "360200",
      "children": null }] },

  {
    "id": "360300",
    "name": "萍乡市",
    "parent": "360000",
    "children": [{
      "id": "360302",
      "name": "安源区",
      "parent": "360300",
      "children": null },
    {
      "id": "360313",
      "name": "湘东区",
      "parent": "360300",
      "children": null },
    {
      "id": "360321",
      "name": "莲花县",
      "parent": "360300",
      "children": null },
    {
      "id": "360322",
      "name": "上栗县",
      "parent": "360300",
      "children": null },
    {
      "id": "360323",
      "name": "芦溪县",
      "parent": "360300",
      "children": null },
    {
      "id": "360324",
      "name": "其它区",
      "parent": "360300",
      "children": null }] },

  {
    "id": "360400",
    "name": "九江市",
    "parent": "360000",
    "children": [{
      "id": "360402",
      "name": "庐山区",
      "parent": "360400",
      "children": null },
    {
      "id": "360403",
      "name": "浔阳区",
      "parent": "360400",
      "children": null },
    {
      "id": "360421",
      "name": "九江县",
      "parent": "360400",
      "children": null },
    {
      "id": "360423",
      "name": "武宁县",
      "parent": "360400",
      "children": null },
    {
      "id": "360424",
      "name": "修水县",
      "parent": "360400",
      "children": null },
    {
      "id": "360425",
      "name": "永修县",
      "parent": "360400",
      "children": null },
    {
      "id": "360426",
      "name": "德安县",
      "parent": "360400",
      "children": null },
    {
      "id": "360427",
      "name": "星子县",
      "parent": "360400",
      "children": null },
    {
      "id": "360428",
      "name": "都昌县",
      "parent": "360400",
      "children": null },
    {
      "id": "360429",
      "name": "湖口县",
      "parent": "360400",
      "children": null },
    {
      "id": "360430",
      "name": "彭泽县",
      "parent": "360400",
      "children": null },
    {
      "id": "360481",
      "name": "瑞昌市",
      "parent": "360400",
      "children": null },
    {
      "id": "360482",
      "name": "其它区",
      "parent": "360400",
      "children": null },
    {
      "id": "360483",
      "name": "共青城市",
      "parent": "360400",
      "children": null }] },

  {
    "id": "360500",
    "name": "新余市",
    "parent": "360000",
    "children": [{
      "id": "360502",
      "name": "渝水区",
      "parent": "360500",
      "children": null },
    {
      "id": "360521",
      "name": "分宜县",
      "parent": "360500",
      "children": null },
    {
      "id": "360522",
      "name": "其它区",
      "parent": "360500",
      "children": null }] },

  {
    "id": "360600",
    "name": "鹰潭市",
    "parent": "360000",
    "children": [{
      "id": "360602",
      "name": "月湖区",
      "parent": "360600",
      "children": null },
    {
      "id": "360622",
      "name": "余江县",
      "parent": "360600",
      "children": null },
    {
      "id": "360681",
      "name": "贵溪市",
      "parent": "360600",
      "children": null },
    {
      "id": "360682",
      "name": "其它区",
      "parent": "360600",
      "children": null }] },

  {
    "id": "360700",
    "name": "赣州市",
    "parent": "360000",
    "children": [{
      "id": "360702",
      "name": "章贡区",
      "parent": "360700",
      "children": null },
    {
      "id": "360721",
      "name": "赣县",
      "parent": "360700",
      "children": null },
    {
      "id": "360722",
      "name": "信丰县",
      "parent": "360700",
      "children": null },
    {
      "id": "360723",
      "name": "大余县",
      "parent": "360700",
      "children": null },
    {
      "id": "360724",
      "name": "上犹县",
      "parent": "360700",
      "children": null },
    {
      "id": "360725",
      "name": "崇义县",
      "parent": "360700",
      "children": null },
    {
      "id": "360726",
      "name": "安远县",
      "parent": "360700",
      "children": null },
    {
      "id": "360727",
      "name": "龙南县",
      "parent": "360700",
      "children": null },
    {
      "id": "360728",
      "name": "定南县",
      "parent": "360700",
      "children": null },
    {
      "id": "360729",
      "name": "全南县",
      "parent": "360700",
      "children": null },
    {
      "id": "360730",
      "name": "宁都县",
      "parent": "360700",
      "children": null },
    {
      "id": "360731",
      "name": "于都县",
      "parent": "360700",
      "children": null },
    {
      "id": "360732",
      "name": "兴国县",
      "parent": "360700",
      "children": null },
    {
      "id": "360733",
      "name": "会昌县",
      "parent": "360700",
      "children": null },
    {
      "id": "360734",
      "name": "寻乌县",
      "parent": "360700",
      "children": null },
    {
      "id": "360735",
      "name": "石城县",
      "parent": "360700",
      "children": null },
    {
      "id": "360751",
      "name": "黄金区",
      "parent": "360700",
      "children": null },
    {
      "id": "360781",
      "name": "瑞金市",
      "parent": "360700",
      "children": null },
    {
      "id": "360782",
      "name": "南康区",
      "parent": "360700",
      "children": null },
    {
      "id": "360783",
      "name": "其它区",
      "parent": "360700",
      "children": null }] },

  {
    "id": "360800",
    "name": "吉安市",
    "parent": "360000",
    "children": [{
      "id": "360802",
      "name": "吉州区",
      "parent": "360800",
      "children": null },
    {
      "id": "360803",
      "name": "青原区",
      "parent": "360800",
      "children": null },
    {
      "id": "360821",
      "name": "吉安县",
      "parent": "360800",
      "children": null },
    {
      "id": "360822",
      "name": "吉水县",
      "parent": "360800",
      "children": null },
    {
      "id": "360823",
      "name": "峡江县",
      "parent": "360800",
      "children": null },
    {
      "id": "360824",
      "name": "新干县",
      "parent": "360800",
      "children": null },
    {
      "id": "360825",
      "name": "永丰县",
      "parent": "360800",
      "children": null },
    {
      "id": "360826",
      "name": "泰和县",
      "parent": "360800",
      "children": null },
    {
      "id": "360827",
      "name": "遂川县",
      "parent": "360800",
      "children": null },
    {
      "id": "360828",
      "name": "万安县",
      "parent": "360800",
      "children": null },
    {
      "id": "360829",
      "name": "安福县",
      "parent": "360800",
      "children": null },
    {
      "id": "360830",
      "name": "永新县",
      "parent": "360800",
      "children": null },
    {
      "id": "360881",
      "name": "井冈山市",
      "parent": "360800",
      "children": null },
    {
      "id": "360882",
      "name": "其它区",
      "parent": "360800",
      "children": null }] },

  {
    "id": "360900",
    "name": "宜春市",
    "parent": "360000",
    "children": [{
      "id": "360902",
      "name": "袁州区",
      "parent": "360900",
      "children": null },
    {
      "id": "360921",
      "name": "奉新县",
      "parent": "360900",
      "children": null },
    {
      "id": "360922",
      "name": "万载县",
      "parent": "360900",
      "children": null },
    {
      "id": "360923",
      "name": "上高县",
      "parent": "360900",
      "children": null },
    {
      "id": "360924",
      "name": "宜丰县",
      "parent": "360900",
      "children": null },
    {
      "id": "360925",
      "name": "靖安县",
      "parent": "360900",
      "children": null },
    {
      "id": "360926",
      "name": "铜鼓县",
      "parent": "360900",
      "children": null },
    {
      "id": "360981",
      "name": "丰城市",
      "parent": "360900",
      "children": null },
    {
      "id": "360982",
      "name": "樟树市",
      "parent": "360900",
      "children": null },
    {
      "id": "360983",
      "name": "高安市",
      "parent": "360900",
      "children": null },
    {
      "id": "360984",
      "name": "其它区",
      "parent": "360900",
      "children": null }] },

  {
    "id": "361000",
    "name": "抚州市",
    "parent": "360000",
    "children": [{
      "id": "361002",
      "name": "临川区",
      "parent": "361000",
      "children": null },
    {
      "id": "361021",
      "name": "南城县",
      "parent": "361000",
      "children": null },
    {
      "id": "361022",
      "name": "黎川县",
      "parent": "361000",
      "children": null },
    {
      "id": "361023",
      "name": "南丰县",
      "parent": "361000",
      "children": null },
    {
      "id": "361024",
      "name": "崇仁县",
      "parent": "361000",
      "children": null },
    {
      "id": "361025",
      "name": "乐安县",
      "parent": "361000",
      "children": null },
    {
      "id": "361026",
      "name": "宜黄县",
      "parent": "361000",
      "children": null },
    {
      "id": "361027",
      "name": "金溪县",
      "parent": "361000",
      "children": null },
    {
      "id": "361028",
      "name": "资溪县",
      "parent": "361000",
      "children": null },
    {
      "id": "361029",
      "name": "东乡县",
      "parent": "361000",
      "children": null },
    {
      "id": "361030",
      "name": "广昌县",
      "parent": "361000",
      "children": null },
    {
      "id": "361031",
      "name": "其它区",
      "parent": "361000",
      "children": null }] },

  {
    "id": "361100",
    "name": "上饶市",
    "parent": "360000",
    "children": [{
      "id": "361102",
      "name": "信州区",
      "parent": "361100",
      "children": null },
    {
      "id": "361121",
      "name": "上饶县",
      "parent": "361100",
      "children": null },
    {
      "id": "361122",
      "name": "广丰区",
      "parent": "361100",
      "children": null },
    {
      "id": "361123",
      "name": "玉山县",
      "parent": "361100",
      "children": null },
    {
      "id": "361124",
      "name": "铅山县",
      "parent": "361100",
      "children": null },
    {
      "id": "361125",
      "name": "横峰县",
      "parent": "361100",
      "children": null },
    {
      "id": "361126",
      "name": "弋阳县",
      "parent": "361100",
      "children": null },
    {
      "id": "361127",
      "name": "余干县",
      "parent": "361100",
      "children": null },
    {
      "id": "361128",
      "name": "鄱阳县",
      "parent": "361100",
      "children": null },
    {
      "id": "361129",
      "name": "万年县",
      "parent": "361100",
      "children": null },
    {
      "id": "361130",
      "name": "婺源县",
      "parent": "361100",
      "children": null },
    {
      "id": "361181",
      "name": "德兴市",
      "parent": "361100",
      "children": null },
    {
      "id": "361182",
      "name": "其它区",
      "parent": "361100",
      "children": null }] }] },


{
  "id": "370000",
  "name": "山东省",
  "children": [{
    "id": "370100",
    "name": "济南市",
    "parent": "370000",
    "children": [{
      "id": "370102",
      "name": "历下区",
      "parent": "370100",
      "children": null },
    {
      "id": "370103",
      "name": "市中区",
      "parent": "370100",
      "children": null },
    {
      "id": "370104",
      "name": "槐荫区",
      "parent": "370100",
      "children": null },
    {
      "id": "370105",
      "name": "天桥区",
      "parent": "370100",
      "children": null },
    {
      "id": "370112",
      "name": "历城区",
      "parent": "370100",
      "children": null },
    {
      "id": "370113",
      "name": "长清区",
      "parent": "370100",
      "children": null },
    {
      "id": "370124",
      "name": "平阴县",
      "parent": "370100",
      "children": null },
    {
      "id": "370125",
      "name": "济阳县",
      "parent": "370100",
      "children": null },
    {
      "id": "370126",
      "name": "商河县",
      "parent": "370100",
      "children": null },
    {
      "id": "370181",
      "name": "章丘市",
      "parent": "370100",
      "children": null },
    {
      "id": "370182",
      "name": "其它区",
      "parent": "370100",
      "children": null }] },

  {
    "id": "370200",
    "name": "青岛市",
    "parent": "370000",
    "children": [{
      "id": "370202",
      "name": "市南区",
      "parent": "370200",
      "children": null },
    {
      "id": "370203",
      "name": "市北区",
      "parent": "370200",
      "children": null },
    {
      "id": "370205",
      "name": "四方区",
      "parent": "370200",
      "children": null },
    {
      "id": "370211",
      "name": "黄岛区",
      "parent": "370200",
      "children": null },
    {
      "id": "370212",
      "name": "崂山区",
      "parent": "370200",
      "children": null },
    {
      "id": "370213",
      "name": "李沧区",
      "parent": "370200",
      "children": null },
    {
      "id": "370214",
      "name": "城阳区",
      "parent": "370200",
      "children": null },
    {
      "id": "370251",
      "name": "开发区",
      "parent": "370200",
      "children": null },
    {
      "id": "370281",
      "name": "胶州市",
      "parent": "370200",
      "children": null },
    {
      "id": "370282",
      "name": "即墨市",
      "parent": "370200",
      "children": null },
    {
      "id": "370283",
      "name": "平度市",
      "parent": "370200",
      "children": null },
    {
      "id": "370284",
      "name": "胶南市",
      "parent": "370200",
      "children": null },
    {
      "id": "370285",
      "name": "莱西市",
      "parent": "370200",
      "children": null },
    {
      "id": "370286",
      "name": "其它区",
      "parent": "370200",
      "children": null }] },

  {
    "id": "370300",
    "name": "淄博市",
    "parent": "370000",
    "children": [{
      "id": "370302",
      "name": "淄川区",
      "parent": "370300",
      "children": null },
    {
      "id": "370303",
      "name": "张店区",
      "parent": "370300",
      "children": null },
    {
      "id": "370304",
      "name": "博山区",
      "parent": "370300",
      "children": null },
    {
      "id": "370305",
      "name": "临淄区",
      "parent": "370300",
      "children": null },
    {
      "id": "370306",
      "name": "周村区",
      "parent": "370300",
      "children": null },
    {
      "id": "370321",
      "name": "桓台县",
      "parent": "370300",
      "children": null },
    {
      "id": "370322",
      "name": "高青县",
      "parent": "370300",
      "children": null },
    {
      "id": "370323",
      "name": "沂源县",
      "parent": "370300",
      "children": null },
    {
      "id": "370324",
      "name": "其它区",
      "parent": "370300",
      "children": null }] },

  {
    "id": "370400",
    "name": "枣庄市",
    "parent": "370000",
    "children": [{
      "id": "370402",
      "name": "市中区",
      "parent": "370400",
      "children": null },
    {
      "id": "370403",
      "name": "薛城区",
      "parent": "370400",
      "children": null },
    {
      "id": "370404",
      "name": "峄城区",
      "parent": "370400",
      "children": null },
    {
      "id": "370405",
      "name": "台儿庄区",
      "parent": "370400",
      "children": null },
    {
      "id": "370406",
      "name": "山亭区",
      "parent": "370400",
      "children": null },
    {
      "id": "370481",
      "name": "滕州市",
      "parent": "370400",
      "children": null },
    {
      "id": "370482",
      "name": "其它区",
      "parent": "370400",
      "children": null }] },

  {
    "id": "370500",
    "name": "东营市",
    "parent": "370000",
    "children": [{
      "id": "370502",
      "name": "东营区",
      "parent": "370500",
      "children": null },
    {
      "id": "370503",
      "name": "河口区",
      "parent": "370500",
      "children": null },
    {
      "id": "370521",
      "name": "垦利县",
      "parent": "370500",
      "children": null },
    {
      "id": "370522",
      "name": "利津县",
      "parent": "370500",
      "children": null },
    {
      "id": "370523",
      "name": "广饶县",
      "parent": "370500",
      "children": null },
    {
      "id": "370589",
      "name": "西城区",
      "parent": "370500",
      "children": null },
    {
      "id": "370590",
      "name": "东城区",
      "parent": "370500",
      "children": null },
    {
      "id": "370591",
      "name": "其它区",
      "parent": "370500",
      "children": null }] },

  {
    "id": "370600",
    "name": "烟台市",
    "parent": "370000",
    "children": [{
      "id": "370602",
      "name": "芝罘区",
      "parent": "370600",
      "children": null },
    {
      "id": "370611",
      "name": "福山区",
      "parent": "370600",
      "children": null },
    {
      "id": "370612",
      "name": "牟平区",
      "parent": "370600",
      "children": null },
    {
      "id": "370613",
      "name": "莱山区",
      "parent": "370600",
      "children": null },
    {
      "id": "370634",
      "name": "长岛县",
      "parent": "370600",
      "children": null },
    {
      "id": "370681",
      "name": "龙口市",
      "parent": "370600",
      "children": null },
    {
      "id": "370682",
      "name": "莱阳市",
      "parent": "370600",
      "children": null },
    {
      "id": "370683",
      "name": "莱州市",
      "parent": "370600",
      "children": null },
    {
      "id": "370684",
      "name": "蓬莱市",
      "parent": "370600",
      "children": null },
    {
      "id": "370685",
      "name": "招远市",
      "parent": "370600",
      "children": null },
    {
      "id": "370686",
      "name": "栖霞市",
      "parent": "370600",
      "children": null },
    {
      "id": "370687",
      "name": "海阳市",
      "parent": "370600",
      "children": null },
    {
      "id": "370688",
      "name": "其它区",
      "parent": "370600",
      "children": null }] },

  {
    "id": "370700",
    "name": "潍坊市",
    "parent": "370000",
    "children": [{
      "id": "370702",
      "name": "潍城区",
      "parent": "370700",
      "children": null },
    {
      "id": "370703",
      "name": "寒亭区",
      "parent": "370700",
      "children": null },
    {
      "id": "370704",
      "name": "坊子区",
      "parent": "370700",
      "children": null },
    {
      "id": "370705",
      "name": "奎文区",
      "parent": "370700",
      "children": null },
    {
      "id": "370724",
      "name": "临朐县",
      "parent": "370700",
      "children": null },
    {
      "id": "370725",
      "name": "昌乐县",
      "parent": "370700",
      "children": null },
    {
      "id": "370751",
      "name": "开发区",
      "parent": "370700",
      "children": null },
    {
      "id": "370781",
      "name": "青州市",
      "parent": "370700",
      "children": null },
    {
      "id": "370782",
      "name": "诸城市",
      "parent": "370700",
      "children": null },
    {
      "id": "370783",
      "name": "寿光市",
      "parent": "370700",
      "children": null },
    {
      "id": "370784",
      "name": "安丘市",
      "parent": "370700",
      "children": null },
    {
      "id": "370785",
      "name": "高密市",
      "parent": "370700",
      "children": null },
    {
      "id": "370786",
      "name": "昌邑市",
      "parent": "370700",
      "children": null },
    {
      "id": "370787",
      "name": "其它区",
      "parent": "370700",
      "children": null }] },

  {
    "id": "370800",
    "name": "济宁市",
    "parent": "370000",
    "children": [{
      "id": "370802",
      "name": "市中区",
      "parent": "370800",
      "children": null },
    {
      "id": "370811",
      "name": "任城区",
      "parent": "370800",
      "children": null },
    {
      "id": "370826",
      "name": "微山县",
      "parent": "370800",
      "children": null },
    {
      "id": "370827",
      "name": "鱼台县",
      "parent": "370800",
      "children": null },
    {
      "id": "370828",
      "name": "金乡县",
      "parent": "370800",
      "children": null },
    {
      "id": "370829",
      "name": "嘉祥县",
      "parent": "370800",
      "children": null },
    {
      "id": "370830",
      "name": "汶上县",
      "parent": "370800",
      "children": null },
    {
      "id": "370831",
      "name": "泗水县",
      "parent": "370800",
      "children": null },
    {
      "id": "370832",
      "name": "梁山县",
      "parent": "370800",
      "children": null },
    {
      "id": "370881",
      "name": "曲阜市",
      "parent": "370800",
      "children": null },
    {
      "id": "370882",
      "name": "兖州区",
      "parent": "370800",
      "children": null },
    {
      "id": "370883",
      "name": "邹城市",
      "parent": "370800",
      "children": null },
    {
      "id": "370884",
      "name": "其它区",
      "parent": "370800",
      "children": null }] },

  {
    "id": "370900",
    "name": "泰安市",
    "parent": "370000",
    "children": [{
      "id": "370902",
      "name": "泰山区",
      "parent": "370900",
      "children": null },
    {
      "id": "370903",
      "name": "岱岳区",
      "parent": "370900",
      "children": null },
    {
      "id": "370921",
      "name": "宁阳县",
      "parent": "370900",
      "children": null },
    {
      "id": "370923",
      "name": "东平县",
      "parent": "370900",
      "children": null },
    {
      "id": "370982",
      "name": "新泰市",
      "parent": "370900",
      "children": null },
    {
      "id": "370983",
      "name": "肥城市",
      "parent": "370900",
      "children": null },
    {
      "id": "370984",
      "name": "其它区",
      "parent": "370900",
      "children": null }] },

  {
    "id": "371000",
    "name": "威海市",
    "parent": "370000",
    "children": [{
      "id": "371002",
      "name": "环翠区",
      "parent": "371000",
      "children": null },
    {
      "id": "371081",
      "name": "文登区",
      "parent": "371000",
      "children": null },
    {
      "id": "371082",
      "name": "荣成市",
      "parent": "371000",
      "children": null },
    {
      "id": "371083",
      "name": "乳山市",
      "parent": "371000",
      "children": null },
    {
      "id": "371084",
      "name": "其它区",
      "parent": "371000",
      "children": null }] },

  {
    "id": "371100",
    "name": "日照市",
    "parent": "370000",
    "children": [{
      "id": "371102",
      "name": "东港区",
      "parent": "371100",
      "children": null },
    {
      "id": "371103",
      "name": "岚山区",
      "parent": "371100",
      "children": null },
    {
      "id": "371121",
      "name": "五莲县",
      "parent": "371100",
      "children": null },
    {
      "id": "371122",
      "name": "莒县",
      "parent": "371100",
      "children": null },
    {
      "id": "371123",
      "name": "其它区",
      "parent": "371100",
      "children": null }] },

  {
    "id": "371200",
    "name": "莱芜市",
    "parent": "370000",
    "children": [{
      "id": "371202",
      "name": "莱城区",
      "parent": "371200",
      "children": null },
    {
      "id": "371203",
      "name": "钢城区",
      "parent": "371200",
      "children": null },
    {
      "id": "371204",
      "name": "其它区",
      "parent": "371200",
      "children": null }] },

  {
    "id": "371300",
    "name": "临沂市",
    "parent": "370000",
    "children": [{
      "id": "371302",
      "name": "兰山区",
      "parent": "371300",
      "children": null },
    {
      "id": "371311",
      "name": "罗庄区",
      "parent": "371300",
      "children": null },
    {
      "id": "371312",
      "name": "河东区",
      "parent": "371300",
      "children": null },
    {
      "id": "371321",
      "name": "沂南县",
      "parent": "371300",
      "children": null },
    {
      "id": "371322",
      "name": "郯城县",
      "parent": "371300",
      "children": null },
    {
      "id": "371323",
      "name": "沂水县",
      "parent": "371300",
      "children": null },
    {
      "id": "371324",
      "name": "兰陵县",
      "parent": "371300",
      "children": null },
    {
      "id": "371325",
      "name": "费县",
      "parent": "371300",
      "children": null },
    {
      "id": "371326",
      "name": "平邑县",
      "parent": "371300",
      "children": null },
    {
      "id": "371327",
      "name": "莒南县",
      "parent": "371300",
      "children": null },
    {
      "id": "371328",
      "name": "蒙阴县",
      "parent": "371300",
      "children": null },
    {
      "id": "371329",
      "name": "临沭县",
      "parent": "371300",
      "children": null },
    {
      "id": "371330",
      "name": "其它区",
      "parent": "371300",
      "children": null }] },

  {
    "id": "371400",
    "name": "德州市",
    "parent": "370000",
    "children": [{
      "id": "371402",
      "name": "德城区",
      "parent": "371400",
      "children": null },
    {
      "id": "371421",
      "name": "陵城区",
      "parent": "371400",
      "children": null },
    {
      "id": "371422",
      "name": "宁津县",
      "parent": "371400",
      "children": null },
    {
      "id": "371423",
      "name": "庆云县",
      "parent": "371400",
      "children": null },
    {
      "id": "371424",
      "name": "临邑县",
      "parent": "371400",
      "children": null },
    {
      "id": "371425",
      "name": "齐河县",
      "parent": "371400",
      "children": null },
    {
      "id": "371426",
      "name": "平原县",
      "parent": "371400",
      "children": null },
    {
      "id": "371427",
      "name": "夏津县",
      "parent": "371400",
      "children": null },
    {
      "id": "371428",
      "name": "武城县",
      "parent": "371400",
      "children": null },
    {
      "id": "371451",
      "name": "开发区",
      "parent": "371400",
      "children": null },
    {
      "id": "371481",
      "name": "乐陵市",
      "parent": "371400",
      "children": null },
    {
      "id": "371482",
      "name": "禹城市",
      "parent": "371400",
      "children": null },
    {
      "id": "371483",
      "name": "其它区",
      "parent": "371400",
      "children": null }] },

  {
    "id": "371500",
    "name": "聊城市",
    "parent": "370000",
    "children": [{
      "id": "371502",
      "name": "东昌府区",
      "parent": "371500",
      "children": null },
    {
      "id": "371521",
      "name": "阳谷县",
      "parent": "371500",
      "children": null },
    {
      "id": "371522",
      "name": "莘县",
      "parent": "371500",
      "children": null },
    {
      "id": "371523",
      "name": "茌平县",
      "parent": "371500",
      "children": null },
    {
      "id": "371524",
      "name": "东阿县",
      "parent": "371500",
      "children": null },
    {
      "id": "371525",
      "name": "冠县",
      "parent": "371500",
      "children": null },
    {
      "id": "371526",
      "name": "高唐县",
      "parent": "371500",
      "children": null },
    {
      "id": "371581",
      "name": "临清市",
      "parent": "371500",
      "children": null },
    {
      "id": "371582",
      "name": "其它区",
      "parent": "371500",
      "children": null }] },

  {
    "id": "371600",
    "name": "滨州市",
    "parent": "370000",
    "children": [{
      "id": "371602",
      "name": "滨城区",
      "parent": "371600",
      "children": null },
    {
      "id": "371621",
      "name": "惠民县",
      "parent": "371600",
      "children": null },
    {
      "id": "371622",
      "name": "阳信县",
      "parent": "371600",
      "children": null },
    {
      "id": "371623",
      "name": "无棣县",
      "parent": "371600",
      "children": null },
    {
      "id": "371624",
      "name": "沾化区",
      "parent": "371600",
      "children": null },
    {
      "id": "371625",
      "name": "博兴县",
      "parent": "371600",
      "children": null },
    {
      "id": "371626",
      "name": "邹平县",
      "parent": "371600",
      "children": null },
    {
      "id": "371627",
      "name": "其它区",
      "parent": "371600",
      "children": null }] },

  {
    "id": "371700",
    "name": "菏泽市",
    "parent": "370000",
    "children": [{
      "id": "371702",
      "name": "牡丹区",
      "parent": "371700",
      "children": null },
    {
      "id": "371721",
      "name": "曹县",
      "parent": "371700",
      "children": null },
    {
      "id": "371722",
      "name": "单县",
      "parent": "371700",
      "children": null },
    {
      "id": "371723",
      "name": "成武县",
      "parent": "371700",
      "children": null },
    {
      "id": "371724",
      "name": "巨野县",
      "parent": "371700",
      "children": null },
    {
      "id": "371725",
      "name": "郓城县",
      "parent": "371700",
      "children": null },
    {
      "id": "371726",
      "name": "鄄城县",
      "parent": "371700",
      "children": null },
    {
      "id": "371727",
      "name": "定陶县",
      "parent": "371700",
      "children": null },
    {
      "id": "371728",
      "name": "东明县",
      "parent": "371700",
      "children": null },
    {
      "id": "371729",
      "name": "其它区",
      "parent": "371700",
      "children": null }] }] },


{
  "id": "410000",
  "name": "河南省",
  "children": [{
    "id": "410100",
    "name": "郑州市",
    "parent": "410000",
    "children": [{
      "id": "410102",
      "name": "中原区",
      "parent": "410100",
      "children": null },
    {
      "id": "410103",
      "name": "二七区",
      "parent": "410100",
      "children": null },
    {
      "id": "410104",
      "name": "管城回族区",
      "parent": "410100",
      "children": null },
    {
      "id": "410105",
      "name": "金水区",
      "parent": "410100",
      "children": null },
    {
      "id": "410106",
      "name": "上街区",
      "parent": "410100",
      "children": null },
    {
      "id": "410108",
      "name": "惠济区",
      "parent": "410100",
      "children": null },
    {
      "id": "410122",
      "name": "中牟县",
      "parent": "410100",
      "children": null },
    {
      "id": "410181",
      "name": "巩义市",
      "parent": "410100",
      "children": null },
    {
      "id": "410182",
      "name": "荥阳市",
      "parent": "410100",
      "children": null },
    {
      "id": "410183",
      "name": "新密市",
      "parent": "410100",
      "children": null },
    {
      "id": "410184",
      "name": "新郑市",
      "parent": "410100",
      "children": null },
    {
      "id": "410185",
      "name": "登封市",
      "parent": "410100",
      "children": null },
    {
      "id": "410186",
      "name": "郑东新区",
      "parent": "410100",
      "children": null },
    {
      "id": "410187",
      "name": "高新区",
      "parent": "410100",
      "children": null },
    {
      "id": "410188",
      "name": "其它区",
      "parent": "410100",
      "children": null }] },

  {
    "id": "410200",
    "name": "开封市",
    "parent": "410000",
    "children": [{
      "id": "410202",
      "name": "龙亭区",
      "parent": "410200",
      "children": null },
    {
      "id": "410203",
      "name": "顺河回族区",
      "parent": "410200",
      "children": null },
    {
      "id": "410204",
      "name": "鼓楼区",
      "parent": "410200",
      "children": null },
    {
      "id": "410205",
      "name": "禹王台区",
      "parent": "410200",
      "children": null },
    {
      "id": "410211",
      "name": "金明区",
      "parent": "410200",
      "children": null },
    {
      "id": "410221",
      "name": "杞县",
      "parent": "410200",
      "children": null },
    {
      "id": "410222",
      "name": "通许县",
      "parent": "410200",
      "children": null },
    {
      "id": "410223",
      "name": "尉氏县",
      "parent": "410200",
      "children": null },
    {
      "id": "410224",
      "name": "祥符区",
      "parent": "410200",
      "children": null },
    {
      "id": "410225",
      "name": "兰考县",
      "parent": "410200",
      "children": null },
    {
      "id": "410226",
      "name": "其它区",
      "parent": "410200",
      "children": null }] },

  {
    "id": "410300",
    "name": "洛阳市",
    "parent": "410000",
    "children": [{
      "id": "410302",
      "name": "老城区",
      "parent": "410300",
      "children": null },
    {
      "id": "410303",
      "name": "西工区",
      "parent": "410300",
      "children": null },
    {
      "id": "410304",
      "name": "瀍河回族区",
      "parent": "410300",
      "children": null },
    {
      "id": "410305",
      "name": "涧西区",
      "parent": "410300",
      "children": null },
    {
      "id": "410306",
      "name": "吉利区",
      "parent": "410300",
      "children": null },
    {
      "id": "410307",
      "name": "洛龙区",
      "parent": "410300",
      "children": null },
    {
      "id": "410322",
      "name": "孟津县",
      "parent": "410300",
      "children": null },
    {
      "id": "410323",
      "name": "新安县",
      "parent": "410300",
      "children": null },
    {
      "id": "410324",
      "name": "栾川县",
      "parent": "410300",
      "children": null },
    {
      "id": "410325",
      "name": "嵩县",
      "parent": "410300",
      "children": null },
    {
      "id": "410326",
      "name": "汝阳县",
      "parent": "410300",
      "children": null },
    {
      "id": "410327",
      "name": "宜阳县",
      "parent": "410300",
      "children": null },
    {
      "id": "410328",
      "name": "洛宁县",
      "parent": "410300",
      "children": null },
    {
      "id": "410329",
      "name": "伊川县",
      "parent": "410300",
      "children": null },
    {
      "id": "410381",
      "name": "偃师市",
      "parent": "410300",
      "children": null },
    {
      "id": "471004",
      "name": "高新区",
      "parent": "410300",
      "children": null },
    {
      "id": "471005",
      "name": "其它区",
      "parent": "410300",
      "children": null }] },

  {
    "id": "410400",
    "name": "平顶山市",
    "parent": "410000",
    "children": [{
      "id": "410402",
      "name": "新华区",
      "parent": "410400",
      "children": null },
    {
      "id": "410403",
      "name": "卫东区",
      "parent": "410400",
      "children": null },
    {
      "id": "410404",
      "name": "石龙区",
      "parent": "410400",
      "children": null },
    {
      "id": "410411",
      "name": "湛河区",
      "parent": "410400",
      "children": null },
    {
      "id": "410421",
      "name": "宝丰县",
      "parent": "410400",
      "children": null },
    {
      "id": "410422",
      "name": "叶县",
      "parent": "410400",
      "children": null },
    {
      "id": "410423",
      "name": "鲁山县",
      "parent": "410400",
      "children": null },
    {
      "id": "410425",
      "name": "郏县",
      "parent": "410400",
      "children": null },
    {
      "id": "410481",
      "name": "舞钢市",
      "parent": "410400",
      "children": null },
    {
      "id": "410482",
      "name": "汝州市",
      "parent": "410400",
      "children": null },
    {
      "id": "410483",
      "name": "其它区",
      "parent": "410400",
      "children": null }] },

  {
    "id": "410500",
    "name": "安阳市",
    "parent": "410000",
    "children": [{
      "id": "410502",
      "name": "文峰区",
      "parent": "410500",
      "children": null },
    {
      "id": "410503",
      "name": "北关区",
      "parent": "410500",
      "children": null },
    {
      "id": "410505",
      "name": "殷都区",
      "parent": "410500",
      "children": null },
    {
      "id": "410506",
      "name": "龙安区",
      "parent": "410500",
      "children": null },
    {
      "id": "410522",
      "name": "安阳县",
      "parent": "410500",
      "children": null },
    {
      "id": "410523",
      "name": "汤阴县",
      "parent": "410500",
      "children": null },
    {
      "id": "410526",
      "name": "滑县",
      "parent": "410500",
      "children": null },
    {
      "id": "410527",
      "name": "内黄县",
      "parent": "410500",
      "children": null },
    {
      "id": "410581",
      "name": "林州市",
      "parent": "410500",
      "children": null },
    {
      "id": "410582",
      "name": "其它区",
      "parent": "410500",
      "children": null }] },

  {
    "id": "410600",
    "name": "鹤壁市",
    "parent": "410000",
    "children": [{
      "id": "410602",
      "name": "鹤山区",
      "parent": "410600",
      "children": null },
    {
      "id": "410603",
      "name": "山城区",
      "parent": "410600",
      "children": null },
    {
      "id": "410611",
      "name": "淇滨区",
      "parent": "410600",
      "children": null },
    {
      "id": "410621",
      "name": "浚县",
      "parent": "410600",
      "children": null },
    {
      "id": "410622",
      "name": "淇县",
      "parent": "410600",
      "children": null },
    {
      "id": "410623",
      "name": "其它区",
      "parent": "410600",
      "children": null }] },

  {
    "id": "410700",
    "name": "新乡市",
    "parent": "410000",
    "children": [{
      "id": "410702",
      "name": "红旗区",
      "parent": "410700",
      "children": null },
    {
      "id": "410703",
      "name": "卫滨区",
      "parent": "410700",
      "children": null },
    {
      "id": "410704",
      "name": "凤泉区",
      "parent": "410700",
      "children": null },
    {
      "id": "410711",
      "name": "牧野区",
      "parent": "410700",
      "children": null },
    {
      "id": "410721",
      "name": "新乡县",
      "parent": "410700",
      "children": null },
    {
      "id": "410724",
      "name": "获嘉县",
      "parent": "410700",
      "children": null },
    {
      "id": "410725",
      "name": "原阳县",
      "parent": "410700",
      "children": null },
    {
      "id": "410726",
      "name": "延津县",
      "parent": "410700",
      "children": null },
    {
      "id": "410727",
      "name": "封丘县",
      "parent": "410700",
      "children": null },
    {
      "id": "410728",
      "name": "长垣县",
      "parent": "410700",
      "children": null },
    {
      "id": "410781",
      "name": "卫辉市",
      "parent": "410700",
      "children": null },
    {
      "id": "410782",
      "name": "辉县市",
      "parent": "410700",
      "children": null },
    {
      "id": "410783",
      "name": "其它区",
      "parent": "410700",
      "children": null }] },

  {
    "id": "410800",
    "name": "焦作市",
    "parent": "410000",
    "children": [{
      "id": "410802",
      "name": "解放区",
      "parent": "410800",
      "children": null },
    {
      "id": "410803",
      "name": "中站区",
      "parent": "410800",
      "children": null },
    {
      "id": "410804",
      "name": "马村区",
      "parent": "410800",
      "children": null },
    {
      "id": "410811",
      "name": "山阳区",
      "parent": "410800",
      "children": null },
    {
      "id": "410821",
      "name": "修武县",
      "parent": "410800",
      "children": null },
    {
      "id": "410822",
      "name": "博爱县",
      "parent": "410800",
      "children": null },
    {
      "id": "410823",
      "name": "武陟县",
      "parent": "410800",
      "children": null },
    {
      "id": "410825",
      "name": "温县",
      "parent": "410800",
      "children": null },
    {
      "id": "410882",
      "name": "沁阳市",
      "parent": "410800",
      "children": null },
    {
      "id": "410883",
      "name": "孟州市",
      "parent": "410800",
      "children": null },
    {
      "id": "410884",
      "name": "其它区",
      "parent": "410800",
      "children": null }] },

  {
    "id": "410900",
    "name": "濮阳市",
    "parent": "410000",
    "children": [{
      "id": "410902",
      "name": "华龙区",
      "parent": "410900",
      "children": null },
    {
      "id": "410922",
      "name": "清丰县",
      "parent": "410900",
      "children": null },
    {
      "id": "410923",
      "name": "南乐县",
      "parent": "410900",
      "children": null },
    {
      "id": "410926",
      "name": "范县",
      "parent": "410900",
      "children": null },
    {
      "id": "410927",
      "name": "台前县",
      "parent": "410900",
      "children": null },
    {
      "id": "410928",
      "name": "濮阳县",
      "parent": "410900",
      "children": null },
    {
      "id": "410929",
      "name": "其它区",
      "parent": "410900",
      "children": null }] },

  {
    "id": "411000",
    "name": "许昌市",
    "parent": "410000",
    "children": [{
      "id": "411002",
      "name": "魏都区",
      "parent": "411000",
      "children": null },
    {
      "id": "411023",
      "name": "许昌县",
      "parent": "411000",
      "children": null },
    {
      "id": "411024",
      "name": "鄢陵县",
      "parent": "411000",
      "children": null },
    {
      "id": "411025",
      "name": "襄城县",
      "parent": "411000",
      "children": null },
    {
      "id": "411081",
      "name": "禹州市",
      "parent": "411000",
      "children": null },
    {
      "id": "411082",
      "name": "长葛市",
      "parent": "411000",
      "children": null },
    {
      "id": "411083",
      "name": "其它区",
      "parent": "411000",
      "children": null }] },

  {
    "id": "411100",
    "name": "漯河市",
    "parent": "410000",
    "children": [{
      "id": "411102",
      "name": "源汇区",
      "parent": "411100",
      "children": null },
    {
      "id": "411103",
      "name": "郾城区",
      "parent": "411100",
      "children": null },
    {
      "id": "411104",
      "name": "召陵区",
      "parent": "411100",
      "children": null },
    {
      "id": "411121",
      "name": "舞阳县",
      "parent": "411100",
      "children": null },
    {
      "id": "411122",
      "name": "临颍县",
      "parent": "411100",
      "children": null },
    {
      "id": "411123",
      "name": "其它区",
      "parent": "411100",
      "children": null }] },

  {
    "id": "411200",
    "name": "三门峡市",
    "parent": "410000",
    "children": [{
      "id": "411202",
      "name": "湖滨区",
      "parent": "411200",
      "children": null },
    {
      "id": "411221",
      "name": "渑池县",
      "parent": "411200",
      "children": null },
    {
      "id": "411222",
      "name": "陕州区",
      "parent": "411200",
      "children": null },
    {
      "id": "411224",
      "name": "卢氏县",
      "parent": "411200",
      "children": null },
    {
      "id": "411281",
      "name": "义马市",
      "parent": "411200",
      "children": null },
    {
      "id": "411282",
      "name": "灵宝市",
      "parent": "411200",
      "children": null },
    {
      "id": "411283",
      "name": "其它区",
      "parent": "411200",
      "children": null }] },

  {
    "id": "411300",
    "name": "南阳市",
    "parent": "410000",
    "children": [{
      "id": "411302",
      "name": "宛城区",
      "parent": "411300",
      "children": null },
    {
      "id": "411303",
      "name": "卧龙区",
      "parent": "411300",
      "children": null },
    {
      "id": "411321",
      "name": "南召县",
      "parent": "411300",
      "children": null },
    {
      "id": "411322",
      "name": "方城县",
      "parent": "411300",
      "children": null },
    {
      "id": "411323",
      "name": "西峡县",
      "parent": "411300",
      "children": null },
    {
      "id": "411324",
      "name": "镇平县",
      "parent": "411300",
      "children": null },
    {
      "id": "411325",
      "name": "内乡县",
      "parent": "411300",
      "children": null },
    {
      "id": "411326",
      "name": "淅川县",
      "parent": "411300",
      "children": null },
    {
      "id": "411327",
      "name": "社旗县",
      "parent": "411300",
      "children": null },
    {
      "id": "411328",
      "name": "唐河县",
      "parent": "411300",
      "children": null },
    {
      "id": "411329",
      "name": "新野县",
      "parent": "411300",
      "children": null },
    {
      "id": "411330",
      "name": "桐柏县",
      "parent": "411300",
      "children": null },
    {
      "id": "411381",
      "name": "邓州市",
      "parent": "411300",
      "children": null },
    {
      "id": "411382",
      "name": "其它区",
      "parent": "411300",
      "children": null }] },

  {
    "id": "411400",
    "name": "商丘市",
    "parent": "410000",
    "children": [{
      "id": "411402",
      "name": "梁园区",
      "parent": "411400",
      "children": null },
    {
      "id": "411403",
      "name": "睢阳区",
      "parent": "411400",
      "children": null },
    {
      "id": "411421",
      "name": "民权县",
      "parent": "411400",
      "children": null },
    {
      "id": "411422",
      "name": "睢县",
      "parent": "411400",
      "children": null },
    {
      "id": "411423",
      "name": "宁陵县",
      "parent": "411400",
      "children": null },
    {
      "id": "411424",
      "name": "柘城县",
      "parent": "411400",
      "children": null },
    {
      "id": "411425",
      "name": "虞城县",
      "parent": "411400",
      "children": null },
    {
      "id": "411426",
      "name": "夏邑县",
      "parent": "411400",
      "children": null },
    {
      "id": "411481",
      "name": "永城市",
      "parent": "411400",
      "children": null },
    {
      "id": "411482",
      "name": "其它区",
      "parent": "411400",
      "children": null }] },

  {
    "id": "411500",
    "name": "信阳市",
    "parent": "410000",
    "children": [{
      "id": "411502",
      "name": "浉河区",
      "parent": "411500",
      "children": null },
    {
      "id": "411503",
      "name": "平桥区",
      "parent": "411500",
      "children": null },
    {
      "id": "411521",
      "name": "罗山县",
      "parent": "411500",
      "children": null },
    {
      "id": "411522",
      "name": "光山县",
      "parent": "411500",
      "children": null },
    {
      "id": "411523",
      "name": "新县",
      "parent": "411500",
      "children": null },
    {
      "id": "411524",
      "name": "商城县",
      "parent": "411500",
      "children": null },
    {
      "id": "411525",
      "name": "固始县",
      "parent": "411500",
      "children": null },
    {
      "id": "411526",
      "name": "潢川县",
      "parent": "411500",
      "children": null },
    {
      "id": "411527",
      "name": "淮滨县",
      "parent": "411500",
      "children": null },
    {
      "id": "411528",
      "name": "息县",
      "parent": "411500",
      "children": null },
    {
      "id": "411529",
      "name": "其它区",
      "parent": "411500",
      "children": null }] },

  {
    "id": "411600",
    "name": "周口市",
    "parent": "410000",
    "children": [{
      "id": "411602",
      "name": "川汇区",
      "parent": "411600",
      "children": null },
    {
      "id": "411621",
      "name": "扶沟县",
      "parent": "411600",
      "children": null },
    {
      "id": "411622",
      "name": "西华县",
      "parent": "411600",
      "children": null },
    {
      "id": "411623",
      "name": "商水县",
      "parent": "411600",
      "children": null },
    {
      "id": "411624",
      "name": "沈丘县",
      "parent": "411600",
      "children": null },
    {
      "id": "411625",
      "name": "郸城县",
      "parent": "411600",
      "children": null },
    {
      "id": "411626",
      "name": "淮阳县",
      "parent": "411600",
      "children": null },
    {
      "id": "411627",
      "name": "太康县",
      "parent": "411600",
      "children": null },
    {
      "id": "411628",
      "name": "鹿邑县",
      "parent": "411600",
      "children": null },
    {
      "id": "411681",
      "name": "项城市",
      "parent": "411600",
      "children": null },
    {
      "id": "411682",
      "name": "其它区",
      "parent": "411600",
      "children": null }] },

  {
    "id": "411700",
    "name": "驻马店市",
    "parent": "410000",
    "children": [{
      "id": "411702",
      "name": "驿城区",
      "parent": "411700",
      "children": null },
    {
      "id": "411721",
      "name": "西平县",
      "parent": "411700",
      "children": null },
    {
      "id": "411722",
      "name": "上蔡县",
      "parent": "411700",
      "children": null },
    {
      "id": "411723",
      "name": "平舆县",
      "parent": "411700",
      "children": null },
    {
      "id": "411724",
      "name": "正阳县",
      "parent": "411700",
      "children": null },
    {
      "id": "411725",
      "name": "确山县",
      "parent": "411700",
      "children": null },
    {
      "id": "411726",
      "name": "泌阳县",
      "parent": "411700",
      "children": null },
    {
      "id": "411727",
      "name": "汝南县",
      "parent": "411700",
      "children": null },
    {
      "id": "411728",
      "name": "遂平县",
      "parent": "411700",
      "children": null },
    {
      "id": "411729",
      "name": "新蔡县",
      "parent": "411700",
      "children": null },
    {
      "id": "411730",
      "name": "其它区",
      "parent": "411700",
      "children": null }] },

  {
    "id": "410881",
    "name": "济源市",
    "parent": "410000",
    "children": null }] },

{
  "id": "420000",
  "name": "湖北省",
  "children": [{
    "id": "420100",
    "name": "武汉市",
    "parent": "420000",
    "children": [{
      "id": "420102",
      "name": "江岸区",
      "parent": "420100",
      "children": null },
    {
      "id": "420103",
      "name": "江汉区",
      "parent": "420100",
      "children": null },
    {
      "id": "420104",
      "name": "硚口区",
      "parent": "420100",
      "children": null },
    {
      "id": "420105",
      "name": "汉阳区",
      "parent": "420100",
      "children": null },
    {
      "id": "420106",
      "name": "武昌区",
      "parent": "420100",
      "children": null },
    {
      "id": "420107",
      "name": "青山区",
      "parent": "420100",
      "children": null },
    {
      "id": "420111",
      "name": "洪山区",
      "parent": "420100",
      "children": null },
    {
      "id": "420112",
      "name": "东西湖区",
      "parent": "420100",
      "children": null },
    {
      "id": "420113",
      "name": "汉南区",
      "parent": "420100",
      "children": null },
    {
      "id": "420114",
      "name": "蔡甸区",
      "parent": "420100",
      "children": null },
    {
      "id": "420115",
      "name": "江夏区",
      "parent": "420100",
      "children": null },
    {
      "id": "420116",
      "name": "黄陂区",
      "parent": "420100",
      "children": null },
    {
      "id": "420117",
      "name": "新洲区",
      "parent": "420100",
      "children": null },
    {
      "id": "420118",
      "name": "其它区",
      "parent": "420100",
      "children": null }] },

  {
    "id": "420200",
    "name": "黄石市",
    "parent": "420000",
    "children": [{
      "id": "420202",
      "name": "黄石港区",
      "parent": "420200",
      "children": null },
    {
      "id": "420203",
      "name": "西塞山区",
      "parent": "420200",
      "children": null },
    {
      "id": "420204",
      "name": "下陆区",
      "parent": "420200",
      "children": null },
    {
      "id": "420205",
      "name": "铁山区",
      "parent": "420200",
      "children": null },
    {
      "id": "420222",
      "name": "阳新县",
      "parent": "420200",
      "children": null },
    {
      "id": "420281",
      "name": "大冶市",
      "parent": "420200",
      "children": null },
    {
      "id": "420282",
      "name": "其它区",
      "parent": "420200",
      "children": null }] },

  {
    "id": "420300",
    "name": "十堰市",
    "parent": "420000",
    "children": [{
      "id": "420302",
      "name": "茅箭区",
      "parent": "420300",
      "children": null },
    {
      "id": "420303",
      "name": "张湾区",
      "parent": "420300",
      "children": null },
    {
      "id": "420321",
      "name": "郧阳区",
      "parent": "420300",
      "children": null },
    {
      "id": "420322",
      "name": "郧西县",
      "parent": "420300",
      "children": null },
    {
      "id": "420323",
      "name": "竹山县",
      "parent": "420300",
      "children": null },
    {
      "id": "420324",
      "name": "竹溪县",
      "parent": "420300",
      "children": null },
    {
      "id": "420325",
      "name": "房县",
      "parent": "420300",
      "children": null },
    {
      "id": "420381",
      "name": "丹江口市",
      "parent": "420300",
      "children": null },
    {
      "id": "420382",
      "name": "城区",
      "parent": "420300",
      "children": null },
    {
      "id": "420383",
      "name": "其它区",
      "parent": "420300",
      "children": null }] },

  {
    "id": "420500",
    "name": "宜昌市",
    "parent": "420000",
    "children": [{
      "id": "420502",
      "name": "西陵区",
      "parent": "420500",
      "children": null },
    {
      "id": "420503",
      "name": "伍家岗区",
      "parent": "420500",
      "children": null },
    {
      "id": "420504",
      "name": "点军区",
      "parent": "420500",
      "children": null },
    {
      "id": "420505",
      "name": "猇亭区",
      "parent": "420500",
      "children": null },
    {
      "id": "420506",
      "name": "夷陵区",
      "parent": "420500",
      "children": null },
    {
      "id": "420525",
      "name": "远安县",
      "parent": "420500",
      "children": null },
    {
      "id": "420526",
      "name": "兴山县",
      "parent": "420500",
      "children": null },
    {
      "id": "420527",
      "name": "秭归县",
      "parent": "420500",
      "children": null },
    {
      "id": "420528",
      "name": "长阳土家族自治县",
      "parent": "420500",
      "children": null },
    {
      "id": "420529",
      "name": "五峰土家族自治县",
      "parent": "420500",
      "children": null },
    {
      "id": "420551",
      "name": "葛洲坝区",
      "parent": "420500",
      "children": null },
    {
      "id": "420552",
      "name": "开发区",
      "parent": "420500",
      "children": null },
    {
      "id": "420581",
      "name": "宜都市",
      "parent": "420500",
      "children": null },
    {
      "id": "420582",
      "name": "当阳市",
      "parent": "420500",
      "children": null },
    {
      "id": "420583",
      "name": "枝江市",
      "parent": "420500",
      "children": null },
    {
      "id": "420584",
      "name": "其它区",
      "parent": "420500",
      "children": null }] },

  {
    "id": "420600",
    "name": "襄阳市",
    "parent": "420000",
    "children": [{
      "id": "420602",
      "name": "襄城区",
      "parent": "420600",
      "children": null },
    {
      "id": "420606",
      "name": "樊城区",
      "parent": "420600",
      "children": null },
    {
      "id": "420607",
      "name": "襄州区",
      "parent": "420600",
      "children": null },
    {
      "id": "420624",
      "name": "南漳县",
      "parent": "420600",
      "children": null },
    {
      "id": "420625",
      "name": "谷城县",
      "parent": "420600",
      "children": null },
    {
      "id": "420626",
      "name": "保康县",
      "parent": "420600",
      "children": null },
    {
      "id": "420682",
      "name": "老河口市",
      "parent": "420600",
      "children": null },
    {
      "id": "420683",
      "name": "枣阳市",
      "parent": "420600",
      "children": null },
    {
      "id": "420684",
      "name": "宜城市",
      "parent": "420600",
      "children": null },
    {
      "id": "420685",
      "name": "其它区",
      "parent": "420600",
      "children": null }] },

  {
    "id": "420700",
    "name": "鄂州市",
    "parent": "420000",
    "children": [{
      "id": "420702",
      "name": "梁子湖区",
      "parent": "420700",
      "children": null },
    {
      "id": "420703",
      "name": "华容区",
      "parent": "420700",
      "children": null },
    {
      "id": "420704",
      "name": "鄂城区",
      "parent": "420700",
      "children": null },
    {
      "id": "420705",
      "name": "其它区",
      "parent": "420700",
      "children": null }] },

  {
    "id": "420800",
    "name": "荆门市",
    "parent": "420000",
    "children": [{
      "id": "420802",
      "name": "东宝区",
      "parent": "420800",
      "children": null },
    {
      "id": "420804",
      "name": "掇刀区",
      "parent": "420800",
      "children": null },
    {
      "id": "420821",
      "name": "京山县",
      "parent": "420800",
      "children": null },
    {
      "id": "420822",
      "name": "沙洋县",
      "parent": "420800",
      "children": null },
    {
      "id": "420881",
      "name": "钟祥市",
      "parent": "420800",
      "children": null },
    {
      "id": "420882",
      "name": "其它区",
      "parent": "420800",
      "children": null }] },

  {
    "id": "420900",
    "name": "孝感市",
    "parent": "420000",
    "children": [{
      "id": "420902",
      "name": "孝南区",
      "parent": "420900",
      "children": null },
    {
      "id": "420921",
      "name": "孝昌县",
      "parent": "420900",
      "children": null },
    {
      "id": "420922",
      "name": "大悟县",
      "parent": "420900",
      "children": null },
    {
      "id": "420923",
      "name": "云梦县",
      "parent": "420900",
      "children": null },
    {
      "id": "420981",
      "name": "应城市",
      "parent": "420900",
      "children": null },
    {
      "id": "420982",
      "name": "安陆市",
      "parent": "420900",
      "children": null },
    {
      "id": "420984",
      "name": "汉川市",
      "parent": "420900",
      "children": null },
    {
      "id": "420985",
      "name": "其它区",
      "parent": "420900",
      "children": null }] },

  {
    "id": "421000",
    "name": "荆州市",
    "parent": "420000",
    "children": [{
      "id": "421002",
      "name": "沙市区",
      "parent": "421000",
      "children": null },
    {
      "id": "421003",
      "name": "荆州区",
      "parent": "421000",
      "children": null },
    {
      "id": "421022",
      "name": "公安县",
      "parent": "421000",
      "children": null },
    {
      "id": "421023",
      "name": "监利县",
      "parent": "421000",
      "children": null },
    {
      "id": "421024",
      "name": "江陵县",
      "parent": "421000",
      "children": null },
    {
      "id": "421081",
      "name": "石首市",
      "parent": "421000",
      "children": null },
    {
      "id": "421083",
      "name": "洪湖市",
      "parent": "421000",
      "children": null },
    {
      "id": "421087",
      "name": "松滋市",
      "parent": "421000",
      "children": null },
    {
      "id": "421088",
      "name": "其它区",
      "parent": "421000",
      "children": null }] },

  {
    "id": "421100",
    "name": "黄冈市",
    "parent": "420000",
    "children": [{
      "id": "421102",
      "name": "黄州区",
      "parent": "421100",
      "children": null },
    {
      "id": "421121",
      "name": "团风县",
      "parent": "421100",
      "children": null },
    {
      "id": "421122",
      "name": "红安县",
      "parent": "421100",
      "children": null },
    {
      "id": "421123",
      "name": "罗田县",
      "parent": "421100",
      "children": null },
    {
      "id": "421124",
      "name": "英山县",
      "parent": "421100",
      "children": null },
    {
      "id": "421125",
      "name": "浠水县",
      "parent": "421100",
      "children": null },
    {
      "id": "421126",
      "name": "蕲春县",
      "parent": "421100",
      "children": null },
    {
      "id": "421127",
      "name": "黄梅县",
      "parent": "421100",
      "children": null },
    {
      "id": "421181",
      "name": "麻城市",
      "parent": "421100",
      "children": null },
    {
      "id": "421182",
      "name": "武穴市",
      "parent": "421100",
      "children": null },
    {
      "id": "421183",
      "name": "其它区",
      "parent": "421100",
      "children": null }] },

  {
    "id": "421200",
    "name": "咸宁市",
    "parent": "420000",
    "children": [{
      "id": "421202",
      "name": "咸安区",
      "parent": "421200",
      "children": null },
    {
      "id": "421221",
      "name": "嘉鱼县",
      "parent": "421200",
      "children": null },
    {
      "id": "421222",
      "name": "通城县",
      "parent": "421200",
      "children": null },
    {
      "id": "421223",
      "name": "崇阳县",
      "parent": "421200",
      "children": null },
    {
      "id": "421224",
      "name": "通山县",
      "parent": "421200",
      "children": null },
    {
      "id": "421281",
      "name": "赤壁市",
      "parent": "421200",
      "children": null },
    {
      "id": "421282",
      "name": "温泉城区",
      "parent": "421200",
      "children": null },
    {
      "id": "421283",
      "name": "其它区",
      "parent": "421200",
      "children": null }] },

  {
    "id": "421300",
    "name": "随州市",
    "parent": "420000",
    "children": [{
      "id": "421302",
      "name": "曾都区",
      "parent": "421300",
      "children": null },
    {
      "id": "421321",
      "name": "随县",
      "parent": "421300",
      "children": null },
    {
      "id": "421381",
      "name": "广水市",
      "parent": "421300",
      "children": null },
    {
      "id": "421382",
      "name": "其它区",
      "parent": "421300",
      "children": null }] },

  {
    "id": "422800",
    "name": "恩施土家族苗族自治州",
    "parent": "420000",
    "children": [{
      "id": "422801",
      "name": "恩施市",
      "parent": "422800",
      "children": null },
    {
      "id": "422802",
      "name": "利川市",
      "parent": "422800",
      "children": null },
    {
      "id": "422822",
      "name": "建始县",
      "parent": "422800",
      "children": null },
    {
      "id": "422823",
      "name": "巴东县",
      "parent": "422800",
      "children": null },
    {
      "id": "422825",
      "name": "宣恩县",
      "parent": "422800",
      "children": null },
    {
      "id": "422826",
      "name": "咸丰县",
      "parent": "422800",
      "children": null },
    {
      "id": "422827",
      "name": "来凤县",
      "parent": "422800",
      "children": null },
    {
      "id": "422828",
      "name": "鹤峰县",
      "parent": "422800",
      "children": null },
    {
      "id": "422829",
      "name": "其它区",
      "parent": "422800",
      "children": null }] },

  {
    "id": "429004",
    "name": "仙桃市",
    "parent": "420000",
    "children": null },
  {
    "id": "429005",
    "name": "潜江市",
    "parent": "420000",
    "children": null },
  {
    "id": "429006",
    "name": "天门市",
    "parent": "420000",
    "children": null },
  {
    "id": "429021",
    "name": "神农架林区",
    "parent": "420000",
    "children": null }] },

{
  "id": "430000",
  "name": "湖南省",
  "children": [{
    "id": "430100",
    "name": "长沙市",
    "parent": "430000",
    "children": [{
      "id": "430102",
      "name": "芙蓉区",
      "parent": "430100",
      "children": null },
    {
      "id": "430103",
      "name": "天心区",
      "parent": "430100",
      "children": null },
    {
      "id": "430104",
      "name": "岳麓区",
      "parent": "430100",
      "children": null },
    {
      "id": "430105",
      "name": "开福区",
      "parent": "430100",
      "children": null },
    {
      "id": "430111",
      "name": "雨花区",
      "parent": "430100",
      "children": null },
    {
      "id": "430121",
      "name": "长沙县",
      "parent": "430100",
      "children": null },
    {
      "id": "430122",
      "name": "望城区",
      "parent": "430100",
      "children": null },
    {
      "id": "430124",
      "name": "宁乡县",
      "parent": "430100",
      "children": null },
    {
      "id": "430181",
      "name": "浏阳市",
      "parent": "430100",
      "children": null },
    {
      "id": "430182",
      "name": "其它区",
      "parent": "430100",
      "children": null }] },

  {
    "id": "430200",
    "name": "株洲市",
    "parent": "430000",
    "children": [{
      "id": "430202",
      "name": "荷塘区",
      "parent": "430200",
      "children": null },
    {
      "id": "430203",
      "name": "芦淞区",
      "parent": "430200",
      "children": null },
    {
      "id": "430204",
      "name": "石峰区",
      "parent": "430200",
      "children": null },
    {
      "id": "430211",
      "name": "天元区",
      "parent": "430200",
      "children": null },
    {
      "id": "430221",
      "name": "株洲县",
      "parent": "430200",
      "children": null },
    {
      "id": "430223",
      "name": "攸县",
      "parent": "430200",
      "children": null },
    {
      "id": "430224",
      "name": "茶陵县",
      "parent": "430200",
      "children": null },
    {
      "id": "430225",
      "name": "炎陵县",
      "parent": "430200",
      "children": null },
    {
      "id": "430281",
      "name": "醴陵市",
      "parent": "430200",
      "children": null },
    {
      "id": "430282",
      "name": "其它区",
      "parent": "430200",
      "children": null }] },

  {
    "id": "430300",
    "name": "湘潭市",
    "parent": "430000",
    "children": [{
      "id": "430302",
      "name": "雨湖区",
      "parent": "430300",
      "children": null },
    {
      "id": "430304",
      "name": "岳塘区",
      "parent": "430300",
      "children": null },
    {
      "id": "430321",
      "name": "湘潭县",
      "parent": "430300",
      "children": null },
    {
      "id": "430381",
      "name": "湘乡市",
      "parent": "430300",
      "children": null },
    {
      "id": "430382",
      "name": "韶山市",
      "parent": "430300",
      "children": null },
    {
      "id": "430383",
      "name": "其它区",
      "parent": "430300",
      "children": null }] },

  {
    "id": "430400",
    "name": "衡阳市",
    "parent": "430000",
    "children": [{
      "id": "430405",
      "name": "珠晖区",
      "parent": "430400",
      "children": null },
    {
      "id": "430406",
      "name": "雁峰区",
      "parent": "430400",
      "children": null },
    {
      "id": "430407",
      "name": "石鼓区",
      "parent": "430400",
      "children": null },
    {
      "id": "430408",
      "name": "蒸湘区",
      "parent": "430400",
      "children": null },
    {
      "id": "430412",
      "name": "南岳区",
      "parent": "430400",
      "children": null },
    {
      "id": "430421",
      "name": "衡阳县",
      "parent": "430400",
      "children": null },
    {
      "id": "430422",
      "name": "衡南县",
      "parent": "430400",
      "children": null },
    {
      "id": "430423",
      "name": "衡山县",
      "parent": "430400",
      "children": null },
    {
      "id": "430424",
      "name": "衡东县",
      "parent": "430400",
      "children": null },
    {
      "id": "430426",
      "name": "祁东县",
      "parent": "430400",
      "children": null },
    {
      "id": "430481",
      "name": "耒阳市",
      "parent": "430400",
      "children": null },
    {
      "id": "430482",
      "name": "常宁市",
      "parent": "430400",
      "children": null },
    {
      "id": "430483",
      "name": "其它区",
      "parent": "430400",
      "children": null }] },

  {
    "id": "430500",
    "name": "邵阳市",
    "parent": "430000",
    "children": [{
      "id": "430502",
      "name": "双清区",
      "parent": "430500",
      "children": null },
    {
      "id": "430503",
      "name": "大祥区",
      "parent": "430500",
      "children": null },
    {
      "id": "430511",
      "name": "北塔区",
      "parent": "430500",
      "children": null },
    {
      "id": "430521",
      "name": "邵东县",
      "parent": "430500",
      "children": null },
    {
      "id": "430522",
      "name": "新邵县",
      "parent": "430500",
      "children": null },
    {
      "id": "430523",
      "name": "邵阳县",
      "parent": "430500",
      "children": null },
    {
      "id": "430524",
      "name": "隆回县",
      "parent": "430500",
      "children": null },
    {
      "id": "430525",
      "name": "洞口县",
      "parent": "430500",
      "children": null },
    {
      "id": "430527",
      "name": "绥宁县",
      "parent": "430500",
      "children": null },
    {
      "id": "430528",
      "name": "新宁县",
      "parent": "430500",
      "children": null },
    {
      "id": "430529",
      "name": "城步苗族自治县",
      "parent": "430500",
      "children": null },
    {
      "id": "430581",
      "name": "武冈市",
      "parent": "430500",
      "children": null },
    {
      "id": "430582",
      "name": "其它区",
      "parent": "430500",
      "children": null }] },

  {
    "id": "430600",
    "name": "岳阳市",
    "parent": "430000",
    "children": [{
      "id": "430602",
      "name": "岳阳楼区",
      "parent": "430600",
      "children": null },
    {
      "id": "430603",
      "name": "云溪区",
      "parent": "430600",
      "children": null },
    {
      "id": "430611",
      "name": "君山区",
      "parent": "430600",
      "children": null },
    {
      "id": "430621",
      "name": "岳阳县",
      "parent": "430600",
      "children": null },
    {
      "id": "430623",
      "name": "华容县",
      "parent": "430600",
      "children": null },
    {
      "id": "430624",
      "name": "湘阴县",
      "parent": "430600",
      "children": null },
    {
      "id": "430626",
      "name": "平江县",
      "parent": "430600",
      "children": null },
    {
      "id": "430681",
      "name": "汨罗市",
      "parent": "430600",
      "children": null },
    {
      "id": "430682",
      "name": "临湘市",
      "parent": "430600",
      "children": null },
    {
      "id": "430683",
      "name": "其它区",
      "parent": "430600",
      "children": null }] },

  {
    "id": "430700",
    "name": "常德市",
    "parent": "430000",
    "children": [{
      "id": "430702",
      "name": "武陵区",
      "parent": "430700",
      "children": null },
    {
      "id": "430703",
      "name": "鼎城区",
      "parent": "430700",
      "children": null },
    {
      "id": "430721",
      "name": "安乡县",
      "parent": "430700",
      "children": null },
    {
      "id": "430722",
      "name": "汉寿县",
      "parent": "430700",
      "children": null },
    {
      "id": "430723",
      "name": "澧县",
      "parent": "430700",
      "children": null },
    {
      "id": "430724",
      "name": "临澧县",
      "parent": "430700",
      "children": null },
    {
      "id": "430725",
      "name": "桃源县",
      "parent": "430700",
      "children": null },
    {
      "id": "430726",
      "name": "石门县",
      "parent": "430700",
      "children": null },
    {
      "id": "430781",
      "name": "津市市",
      "parent": "430700",
      "children": null },
    {
      "id": "430782",
      "name": "其它区",
      "parent": "430700",
      "children": null }] },

  {
    "id": "430800",
    "name": "张家界市",
    "parent": "430000",
    "children": [{
      "id": "430802",
      "name": "永定区",
      "parent": "430800",
      "children": null },
    {
      "id": "430811",
      "name": "武陵源区",
      "parent": "430800",
      "children": null },
    {
      "id": "430821",
      "name": "慈利县",
      "parent": "430800",
      "children": null },
    {
      "id": "430822",
      "name": "桑植县",
      "parent": "430800",
      "children": null },
    {
      "id": "430823",
      "name": "其它区",
      "parent": "430800",
      "children": null }] },

  {
    "id": "430900",
    "name": "益阳市",
    "parent": "430000",
    "children": [{
      "id": "430902",
      "name": "资阳区",
      "parent": "430900",
      "children": null },
    {
      "id": "430903",
      "name": "赫山区",
      "parent": "430900",
      "children": null },
    {
      "id": "430921",
      "name": "南县",
      "parent": "430900",
      "children": null },
    {
      "id": "430922",
      "name": "桃江县",
      "parent": "430900",
      "children": null },
    {
      "id": "430923",
      "name": "安化县",
      "parent": "430900",
      "children": null },
    {
      "id": "430981",
      "name": "沅江市",
      "parent": "430900",
      "children": null },
    {
      "id": "430982",
      "name": "其它区",
      "parent": "430900",
      "children": null }] },

  {
    "id": "431000",
    "name": "郴州市",
    "parent": "430000",
    "children": [{
      "id": "431002",
      "name": "北湖区",
      "parent": "431000",
      "children": null },
    {
      "id": "431003",
      "name": "苏仙区",
      "parent": "431000",
      "children": null },
    {
      "id": "431021",
      "name": "桂阳县",
      "parent": "431000",
      "children": null },
    {
      "id": "431022",
      "name": "宜章县",
      "parent": "431000",
      "children": null },
    {
      "id": "431023",
      "name": "永兴县",
      "parent": "431000",
      "children": null },
    {
      "id": "431024",
      "name": "嘉禾县",
      "parent": "431000",
      "children": null },
    {
      "id": "431025",
      "name": "临武县",
      "parent": "431000",
      "children": null },
    {
      "id": "431026",
      "name": "汝城县",
      "parent": "431000",
      "children": null },
    {
      "id": "431027",
      "name": "桂东县",
      "parent": "431000",
      "children": null },
    {
      "id": "431028",
      "name": "安仁县",
      "parent": "431000",
      "children": null },
    {
      "id": "431081",
      "name": "资兴市",
      "parent": "431000",
      "children": null },
    {
      "id": "431082",
      "name": "其它区",
      "parent": "431000",
      "children": null }] },

  {
    "id": "431100",
    "name": "永州市",
    "parent": "430000",
    "children": [{
      "id": "431102",
      "name": "零陵区",
      "parent": "431100",
      "children": null },
    {
      "id": "431103",
      "name": "冷水滩区",
      "parent": "431100",
      "children": null },
    {
      "id": "431121",
      "name": "祁阳县",
      "parent": "431100",
      "children": null },
    {
      "id": "431122",
      "name": "东安县",
      "parent": "431100",
      "children": null },
    {
      "id": "431123",
      "name": "双牌县",
      "parent": "431100",
      "children": null },
    {
      "id": "431124",
      "name": "道县",
      "parent": "431100",
      "children": null },
    {
      "id": "431125",
      "name": "江永县",
      "parent": "431100",
      "children": null },
    {
      "id": "431126",
      "name": "宁远县",
      "parent": "431100",
      "children": null },
    {
      "id": "431127",
      "name": "蓝山县",
      "parent": "431100",
      "children": null },
    {
      "id": "431128",
      "name": "新田县",
      "parent": "431100",
      "children": null },
    {
      "id": "431129",
      "name": "江华瑶族自治县",
      "parent": "431100",
      "children": null },
    {
      "id": "431130",
      "name": "其它区",
      "parent": "431100",
      "children": null }] },

  {
    "id": "431200",
    "name": "怀化市",
    "parent": "430000",
    "children": [{
      "id": "431202",
      "name": "鹤城区",
      "parent": "431200",
      "children": null },
    {
      "id": "431221",
      "name": "中方县",
      "parent": "431200",
      "children": null },
    {
      "id": "431222",
      "name": "沅陵县",
      "parent": "431200",
      "children": null },
    {
      "id": "431223",
      "name": "辰溪县",
      "parent": "431200",
      "children": null },
    {
      "id": "431224",
      "name": "溆浦县",
      "parent": "431200",
      "children": null },
    {
      "id": "431225",
      "name": "会同县",
      "parent": "431200",
      "children": null },
    {
      "id": "431226",
      "name": "麻阳苗族自治县",
      "parent": "431200",
      "children": null },
    {
      "id": "431227",
      "name": "新晃侗族自治县",
      "parent": "431200",
      "children": null },
    {
      "id": "431228",
      "name": "芷江侗族自治县",
      "parent": "431200",
      "children": null },
    {
      "id": "431229",
      "name": "靖州苗族侗族自治县",
      "parent": "431200",
      "children": null },
    {
      "id": "431230",
      "name": "通道侗族自治县",
      "parent": "431200",
      "children": null },
    {
      "id": "431281",
      "name": "洪江市",
      "parent": "431200",
      "children": null },
    {
      "id": "431282",
      "name": "其它区",
      "parent": "431200",
      "children": null }] },

  {
    "id": "431300",
    "name": "娄底市",
    "parent": "430000",
    "children": [{
      "id": "431302",
      "name": "娄星区",
      "parent": "431300",
      "children": null },
    {
      "id": "431321",
      "name": "双峰县",
      "parent": "431300",
      "children": null },
    {
      "id": "431322",
      "name": "新化县",
      "parent": "431300",
      "children": null },
    {
      "id": "431381",
      "name": "冷水江市",
      "parent": "431300",
      "children": null },
    {
      "id": "431382",
      "name": "涟源市",
      "parent": "431300",
      "children": null },
    {
      "id": "431383",
      "name": "其它区",
      "parent": "431300",
      "children": null }] },

  {
    "id": "433100",
    "name": "湘西土家族苗族自治州",
    "parent": "430000",
    "children": [{
      "id": "433101",
      "name": "吉首市",
      "parent": "433100",
      "children": null },
    {
      "id": "433122",
      "name": "泸溪县",
      "parent": "433100",
      "children": null },
    {
      "id": "433123",
      "name": "凤凰县",
      "parent": "433100",
      "children": null },
    {
      "id": "433124",
      "name": "花垣县",
      "parent": "433100",
      "children": null },
    {
      "id": "433125",
      "name": "保靖县",
      "parent": "433100",
      "children": null },
    {
      "id": "433126",
      "name": "古丈县",
      "parent": "433100",
      "children": null },
    {
      "id": "433127",
      "name": "永顺县",
      "parent": "433100",
      "children": null },
    {
      "id": "433130",
      "name": "龙山县",
      "parent": "433100",
      "children": null },
    {
      "id": "433131",
      "name": "其它区",
      "parent": "433100",
      "children": null }] }] },


{
  "id": "440000",
  "name": "广东省",
  "children": [{
    "id": "440100",
    "name": "广州市",
    "parent": "440000",
    "children": [{
      "id": "440103",
      "name": "荔湾区",
      "parent": "440100",
      "children": null },
    {
      "id": "440104",
      "name": "越秀区",
      "parent": "440100",
      "children": null },
    {
      "id": "440105",
      "name": "海珠区",
      "parent": "440100",
      "children": null },
    {
      "id": "440106",
      "name": "天河区",
      "parent": "440100",
      "children": null },
    {
      "id": "440111",
      "name": "白云区",
      "parent": "440100",
      "children": null },
    {
      "id": "440112",
      "name": "黄埔区",
      "parent": "440100",
      "children": null },
    {
      "id": "440113",
      "name": "番禺区",
      "parent": "440100",
      "children": null },
    {
      "id": "440114",
      "name": "花都区",
      "parent": "440100",
      "children": null },
    {
      "id": "440115",
      "name": "南沙区",
      "parent": "440100",
      "children": null },
    {
      "id": "440116",
      "name": "萝岗区",
      "parent": "440100",
      "children": null },
    {
      "id": "440183",
      "name": "增城区",
      "parent": "440100",
      "children": null },
    {
      "id": "440184",
      "name": "从化区",
      "parent": "440100",
      "children": null },
    {
      "id": "440188",
      "name": "东山区",
      "parent": "440100",
      "children": null },
    {
      "id": "440189",
      "name": "其它区",
      "parent": "440100",
      "children": null }] },

  {
    "id": "440200",
    "name": "韶关市",
    "parent": "440000",
    "children": [{
      "id": "440203",
      "name": "武江区",
      "parent": "440200",
      "children": null },
    {
      "id": "440204",
      "name": "浈江区",
      "parent": "440200",
      "children": null },
    {
      "id": "440205",
      "name": "曲江区",
      "parent": "440200",
      "children": null },
    {
      "id": "440222",
      "name": "始兴县",
      "parent": "440200",
      "children": null },
    {
      "id": "440224",
      "name": "仁化县",
      "parent": "440200",
      "children": null },
    {
      "id": "440229",
      "name": "翁源县",
      "parent": "440200",
      "children": null },
    {
      "id": "440232",
      "name": "乳源瑶族自治县",
      "parent": "440200",
      "children": null },
    {
      "id": "440233",
      "name": "新丰县",
      "parent": "440200",
      "children": null },
    {
      "id": "440281",
      "name": "乐昌市",
      "parent": "440200",
      "children": null },
    {
      "id": "440282",
      "name": "南雄市",
      "parent": "440200",
      "children": null },
    {
      "id": "440283",
      "name": "其它区",
      "parent": "440200",
      "children": null }] },

  {
    "id": "440300",
    "name": "深圳市",
    "parent": "440000",
    "children": [{
      "id": "440303",
      "name": "罗湖区",
      "parent": "440300",
      "children": null },
    {
      "id": "440304",
      "name": "福田区",
      "parent": "440300",
      "children": null },
    {
      "id": "440305",
      "name": "南山区",
      "parent": "440300",
      "children": null },
    {
      "id": "440306",
      "name": "宝安区",
      "parent": "440300",
      "children": null },
    {
      "id": "440307",
      "name": "龙岗区",
      "parent": "440300",
      "children": null },
    {
      "id": "440308",
      "name": "盐田区",
      "parent": "440300",
      "children": null },
    {
      "id": "440309",
      "name": "其它区",
      "parent": "440300",
      "children": null },
    {
      "id": "440320",
      "name": "光明新区",
      "parent": "440300",
      "children": null },
    {
      "id": "440321",
      "name": "坪山新区",
      "parent": "440300",
      "children": null },
    {
      "id": "440322",
      "name": "大鹏新区",
      "parent": "440300",
      "children": null },
    {
      "id": "440323",
      "name": "龙华新区",
      "parent": "440300",
      "children": null }] },

  {
    "id": "440400",
    "name": "珠海市",
    "parent": "440000",
    "children": [{
      "id": "440402",
      "name": "香洲区",
      "parent": "440400",
      "children": null },
    {
      "id": "440403",
      "name": "斗门区",
      "parent": "440400",
      "children": null },
    {
      "id": "440404",
      "name": "金湾区",
      "parent": "440400",
      "children": null },
    {
      "id": "440486",
      "name": "金唐区",
      "parent": "440400",
      "children": null },
    {
      "id": "440487",
      "name": "南湾区",
      "parent": "440400",
      "children": null },
    {
      "id": "440488",
      "name": "其它区",
      "parent": "440400",
      "children": null }] },

  {
    "id": "440500",
    "name": "汕头市",
    "parent": "440000",
    "children": [{
      "id": "440507",
      "name": "龙湖区",
      "parent": "440500",
      "children": null },
    {
      "id": "440511",
      "name": "金平区",
      "parent": "440500",
      "children": null },
    {
      "id": "440512",
      "name": "濠江区",
      "parent": "440500",
      "children": null },
    {
      "id": "440513",
      "name": "潮阳区",
      "parent": "440500",
      "children": null },
    {
      "id": "440514",
      "name": "潮南区",
      "parent": "440500",
      "children": null },
    {
      "id": "440515",
      "name": "澄海区",
      "parent": "440500",
      "children": null },
    {
      "id": "440523",
      "name": "南澳县",
      "parent": "440500",
      "children": null },
    {
      "id": "440524",
      "name": "其它区",
      "parent": "440500",
      "children": null }] },

  {
    "id": "440600",
    "name": "佛山市",
    "parent": "440000",
    "children": [{
      "id": "440604",
      "name": "禅城区",
      "parent": "440600",
      "children": null },
    {
      "id": "440605",
      "name": "南海区",
      "parent": "440600",
      "children": null },
    {
      "id": "440606",
      "name": "顺德区",
      "parent": "440600",
      "children": null },
    {
      "id": "440607",
      "name": "三水区",
      "parent": "440600",
      "children": null },
    {
      "id": "440608",
      "name": "高明区",
      "parent": "440600",
      "children": null },
    {
      "id": "440609",
      "name": "其它区",
      "parent": "440600",
      "children": null }] },

  {
    "id": "440700",
    "name": "江门市",
    "parent": "440000",
    "children": [{
      "id": "440703",
      "name": "蓬江区",
      "parent": "440700",
      "children": null },
    {
      "id": "440704",
      "name": "江海区",
      "parent": "440700",
      "children": null },
    {
      "id": "440705",
      "name": "新会区",
      "parent": "440700",
      "children": null },
    {
      "id": "440781",
      "name": "台山市",
      "parent": "440700",
      "children": null },
    {
      "id": "440783",
      "name": "开平市",
      "parent": "440700",
      "children": null },
    {
      "id": "440784",
      "name": "鹤山市",
      "parent": "440700",
      "children": null },
    {
      "id": "440785",
      "name": "恩平市",
      "parent": "440700",
      "children": null },
    {
      "id": "440786",
      "name": "其它区",
      "parent": "440700",
      "children": null }] },

  {
    "id": "440800",
    "name": "湛江市",
    "parent": "440000",
    "children": [{
      "id": "440802",
      "name": "赤坎区",
      "parent": "440800",
      "children": null },
    {
      "id": "440803",
      "name": "霞山区",
      "parent": "440800",
      "children": null },
    {
      "id": "440804",
      "name": "坡头区",
      "parent": "440800",
      "children": null },
    {
      "id": "440811",
      "name": "麻章区",
      "parent": "440800",
      "children": null },
    {
      "id": "440823",
      "name": "遂溪县",
      "parent": "440800",
      "children": null },
    {
      "id": "440825",
      "name": "徐闻县",
      "parent": "440800",
      "children": null },
    {
      "id": "440881",
      "name": "廉江市",
      "parent": "440800",
      "children": null },
    {
      "id": "440882",
      "name": "雷州市",
      "parent": "440800",
      "children": null },
    {
      "id": "440883",
      "name": "吴川市",
      "parent": "440800",
      "children": null },
    {
      "id": "440884",
      "name": "其它区",
      "parent": "440800",
      "children": null }] },

  {
    "id": "440900",
    "name": "茂名市",
    "parent": "440000",
    "children": [{
      "id": "440902",
      "name": "茂南区",
      "parent": "440900",
      "children": null },
    {
      "id": "440903",
      "name": "电白区",
      "parent": "440900",
      "children": null },
    {
      "id": "440923",
      "name": "电白县",
      "parent": "440900",
      "children": null },
    {
      "id": "440981",
      "name": "高州市",
      "parent": "440900",
      "children": null },
    {
      "id": "440982",
      "name": "化州市",
      "parent": "440900",
      "children": null },
    {
      "id": "440983",
      "name": "信宜市",
      "parent": "440900",
      "children": null },
    {
      "id": "440984",
      "name": "其它区",
      "parent": "440900",
      "children": null }] },

  {
    "id": "441200",
    "name": "肇庆市",
    "parent": "440000",
    "children": [{
      "id": "441202",
      "name": "端州区",
      "parent": "441200",
      "children": null },
    {
      "id": "441203",
      "name": "鼎湖区",
      "parent": "441200",
      "children": null },
    {
      "id": "441223",
      "name": "广宁县",
      "parent": "441200",
      "children": null },
    {
      "id": "441224",
      "name": "怀集县",
      "parent": "441200",
      "children": null },
    {
      "id": "441225",
      "name": "封开县",
      "parent": "441200",
      "children": null },
    {
      "id": "441226",
      "name": "德庆县",
      "parent": "441200",
      "children": null },
    {
      "id": "441283",
      "name": "高要市",
      "parent": "441200",
      "children": null },
    {
      "id": "441284",
      "name": "四会市",
      "parent": "441200",
      "children": null },
    {
      "id": "441285",
      "name": "其它区",
      "parent": "441200",
      "children": null }] },

  {
    "id": "441300",
    "name": "惠州市",
    "parent": "440000",
    "children": [{
      "id": "441302",
      "name": "惠城区",
      "parent": "441300",
      "children": null },
    {
      "id": "441303",
      "name": "惠阳区",
      "parent": "441300",
      "children": null },
    {
      "id": "441322",
      "name": "博罗县",
      "parent": "441300",
      "children": null },
    {
      "id": "441323",
      "name": "惠东县",
      "parent": "441300",
      "children": null },
    {
      "id": "441324",
      "name": "龙门县",
      "parent": "441300",
      "children": null },
    {
      "id": "441325",
      "name": "其它区",
      "parent": "441300",
      "children": null }] },

  {
    "id": "441400",
    "name": "梅州市",
    "parent": "440000",
    "children": [{
      "id": "441402",
      "name": "梅江区",
      "parent": "441400",
      "children": null },
    {
      "id": "441421",
      "name": "梅县区",
      "parent": "441400",
      "children": null },
    {
      "id": "441422",
      "name": "大埔县",
      "parent": "441400",
      "children": null },
    {
      "id": "441423",
      "name": "丰顺县",
      "parent": "441400",
      "children": null },
    {
      "id": "441424",
      "name": "五华县",
      "parent": "441400",
      "children": null },
    {
      "id": "441426",
      "name": "平远县",
      "parent": "441400",
      "children": null },
    {
      "id": "441427",
      "name": "蕉岭县",
      "parent": "441400",
      "children": null },
    {
      "id": "441481",
      "name": "兴宁市",
      "parent": "441400",
      "children": null },
    {
      "id": "441482",
      "name": "其它区",
      "parent": "441400",
      "children": null }] },

  {
    "id": "441500",
    "name": "汕尾市",
    "parent": "440000",
    "children": [{
      "id": "441502",
      "name": "城区",
      "parent": "441500",
      "children": null },
    {
      "id": "441521",
      "name": "海丰县",
      "parent": "441500",
      "children": null },
    {
      "id": "441523",
      "name": "陆河县",
      "parent": "441500",
      "children": null },
    {
      "id": "441581",
      "name": "陆丰市",
      "parent": "441500",
      "children": null },
    {
      "id": "441582",
      "name": "其它区",
      "parent": "441500",
      "children": null }] },

  {
    "id": "441600",
    "name": "河源市",
    "parent": "440000",
    "children": [{
      "id": "441602",
      "name": "源城区",
      "parent": "441600",
      "children": null },
    {
      "id": "441621",
      "name": "紫金县",
      "parent": "441600",
      "children": null },
    {
      "id": "441622",
      "name": "龙川县",
      "parent": "441600",
      "children": null },
    {
      "id": "441623",
      "name": "连平县",
      "parent": "441600",
      "children": null },
    {
      "id": "441624",
      "name": "和平县",
      "parent": "441600",
      "children": null },
    {
      "id": "441625",
      "name": "东源县",
      "parent": "441600",
      "children": null },
    {
      "id": "441626",
      "name": "其它区",
      "parent": "441600",
      "children": null }] },

  {
    "id": "441700",
    "name": "阳江市",
    "parent": "440000",
    "children": [{
      "id": "441702",
      "name": "江城区",
      "parent": "441700",
      "children": null },
    {
      "id": "441721",
      "name": "阳西县",
      "parent": "441700",
      "children": null },
    {
      "id": "441723",
      "name": "阳东区",
      "parent": "441700",
      "children": null },
    {
      "id": "441781",
      "name": "阳春市",
      "parent": "441700",
      "children": null },
    {
      "id": "441782",
      "name": "其它区",
      "parent": "441700",
      "children": null }] },

  {
    "id": "441800",
    "name": "清远市",
    "parent": "440000",
    "children": [{
      "id": "441802",
      "name": "清城区",
      "parent": "441800",
      "children": null },
    {
      "id": "441821",
      "name": "佛冈县",
      "parent": "441800",
      "children": null },
    {
      "id": "441823",
      "name": "阳山县",
      "parent": "441800",
      "children": null },
    {
      "id": "441825",
      "name": "连山壮族瑶族自治县",
      "parent": "441800",
      "children": null },
    {
      "id": "441826",
      "name": "连南瑶族自治县",
      "parent": "441800",
      "children": null },
    {
      "id": "441827",
      "name": "清新区",
      "parent": "441800",
      "children": null },
    {
      "id": "441881",
      "name": "英德市",
      "parent": "441800",
      "children": null },
    {
      "id": "441882",
      "name": "连州市",
      "parent": "441800",
      "children": null },
    {
      "id": "441883",
      "name": "其它区",
      "parent": "441800",
      "children": null }] },

  {
    "id": "441900",
    "name": "东莞市",
    "parent": "440000",
    "children": [{
      "id": "441901",
      "parent": "441900",
      "name": "莞城区",
      "children": null },
    {
      "id": "441902",
      "parent": "441900",
      "name": "南城区",
      "children": null },
    {
      "id": "441904",
      "parent": "441900",
      "name": "万江区",
      "children": null },
    {
      "id": "441905",
      "parent": "441900",
      "name": "石碣镇",
      "children": null },
    {
      "id": "441906",
      "parent": "441900",
      "name": "石龙镇",
      "children": null },
    {
      "id": "441907",
      "parent": "441900",
      "name": "茶山镇",
      "children": null },
    {
      "id": "441908",
      "parent": "441900",
      "name": "石排镇",
      "children": null },
    {
      "id": "441909",
      "parent": "441900",
      "name": "企石镇",
      "children": null },
    {
      "id": "441910",
      "parent": "441900",
      "name": "横沥镇",
      "children": null },
    {
      "id": "441911",
      "parent": "441900",
      "name": "桥头镇",
      "children": null },
    {
      "id": "441912",
      "parent": "441900",
      "name": "谢岗镇",
      "children": null },
    {
      "id": "441913",
      "parent": "441900",
      "name": "东坑镇",
      "children": null },
    {
      "id": "441914",
      "parent": "441900",
      "name": "常平镇",
      "children": null },
    {
      "id": "441915",
      "parent": "441900",
      "name": "寮步镇",
      "children": null },
    {
      "id": "441916",
      "parent": "441900",
      "name": "大朗镇",
      "children": null },
    {
      "id": "441917",
      "parent": "441900",
      "name": "麻涌镇",
      "children": null },
    {
      "id": "441918",
      "parent": "441900",
      "name": "中堂镇",
      "children": null },
    {
      "id": "441919",
      "parent": "441900",
      "name": "高埗镇",
      "children": null },
    {
      "id": "441920",
      "parent": "441900",
      "name": "樟木头镇",
      "children": null },
    {
      "id": "441921",
      "parent": "441900",
      "name": "大岭山镇",
      "children": null },
    {
      "id": "441922",
      "parent": "441900",
      "name": "望牛墩镇",
      "children": null },
    {
      "id": "441923",
      "parent": "441900",
      "name": "黄江镇",
      "children": null },
    {
      "id": "441924",
      "parent": "441900",
      "name": "洪梅镇",
      "children": null },
    {
      "id": "441925",
      "parent": "441900",
      "name": "清溪镇",
      "children": null },
    {
      "id": "441926",
      "parent": "441900",
      "name": "沙田镇",
      "children": null },
    {
      "id": "441927",
      "parent": "441900",
      "name": "道滘镇",
      "children": null },
    {
      "id": "441928",
      "parent": "441900",
      "name": "塘厦镇",
      "children": null },
    {
      "id": "441929",
      "parent": "441900",
      "name": "虎门镇",
      "children": null },
    {
      "id": "441930",
      "parent": "441900",
      "name": "厚街镇",
      "children": null },
    {
      "id": "441931",
      "parent": "441900",
      "name": "凤岗镇",
      "children": null },
    {
      "id": "441932",
      "parent": "441900",
      "name": "长安镇",
      "children": null }] },

  {
    "id": "442000",
    "name": "中山市",
    "parent": "440000",
    "children": [{
      "id": "442001",
      "parent": "442000",
      "name": "石岐区",
      "children": null },
    {
      "id": "442004",
      "parent": "442000",
      "name": "南区",
      "children": null },
    {
      "id": "442005",
      "parent": "442000",
      "name": "五桂山区",
      "children": null },
    {
      "id": "442006",
      "parent": "442000",
      "name": "火炬开发区",
      "children": null },
    {
      "id": "442007",
      "parent": "442000",
      "name": "黄圃镇",
      "children": null },
    {
      "id": "442008",
      "parent": "442000",
      "name": "南头镇",
      "children": null },
    {
      "id": "442009",
      "parent": "442000",
      "name": "东凤镇",
      "children": null },
    {
      "id": "442010",
      "parent": "442000",
      "name": "阜沙镇",
      "children": null },
    {
      "id": "442011",
      "parent": "442000",
      "name": "小榄镇",
      "children": null },
    {
      "id": "442012",
      "parent": "442000",
      "name": "东升镇",
      "children": null },
    {
      "id": "442013",
      "parent": "442000",
      "name": "古镇镇",
      "children": null },
    {
      "id": "442014",
      "parent": "442000",
      "name": "横栏镇",
      "children": null },
    {
      "id": "442015",
      "parent": "442000",
      "name": "三角镇",
      "children": null },
    {
      "id": "442016",
      "parent": "442000",
      "name": "民众镇",
      "children": null },
    {
      "id": "442017",
      "parent": "442000",
      "name": "南朗镇",
      "children": null },
    {
      "id": "442018",
      "parent": "442000",
      "name": "港口镇",
      "children": null },
    {
      "id": "442019",
      "parent": "442000",
      "name": "大涌镇",
      "children": null },
    {
      "id": "442020",
      "parent": "442000",
      "name": "沙溪镇",
      "children": null },
    {
      "id": "442021",
      "parent": "442000",
      "name": "三乡镇",
      "children": null },
    {
      "id": "442022",
      "parent": "442000",
      "name": "板芙镇",
      "children": null },
    {
      "id": "442023",
      "parent": "442000",
      "name": "神湾镇",
      "children": null },
    {
      "id": "442024",
      "parent": "442000",
      "name": "坦洲镇",
      "children": null }] },

  {
    "id": "442101",
    "name": "东沙群岛",
    "parent": "440000",
    "children": null },
  {
    "id": "445100",
    "name": "潮州市",
    "parent": "440000",
    "children": [{
      "id": "445102",
      "name": "湘桥区",
      "parent": "445100",
      "children": null },
    {
      "id": "445121",
      "name": "潮安区",
      "parent": "445100",
      "children": null },
    {
      "id": "445122",
      "name": "饶平县",
      "parent": "445100",
      "children": null },
    {
      "id": "445185",
      "name": "枫溪区",
      "parent": "445100",
      "children": null },
    {
      "id": "445186",
      "name": "其它区",
      "parent": "445100",
      "children": null }] },

  {
    "id": "445200",
    "name": "揭阳市",
    "parent": "440000",
    "children": [{
      "id": "445202",
      "name": "榕城区",
      "parent": "445200",
      "children": null },
    {
      "id": "445221",
      "name": "揭东区",
      "parent": "445200",
      "children": null },
    {
      "id": "445222",
      "name": "揭西县",
      "parent": "445200",
      "children": null },
    {
      "id": "445224",
      "name": "惠来县",
      "parent": "445200",
      "children": null },
    {
      "id": "445281",
      "name": "普宁市",
      "parent": "445200",
      "children": null },
    {
      "id": "445284",
      "name": "东山区",
      "parent": "445200",
      "children": null },
    {
      "id": "445285",
      "name": "其它区",
      "parent": "445200",
      "children": null }] },

  {
    "id": "445300",
    "name": "云浮市",
    "parent": "440000",
    "children": [{
      "id": "445302",
      "name": "云城区",
      "parent": "445300",
      "children": null },
    {
      "id": "445321",
      "name": "新兴县",
      "parent": "445300",
      "children": null },
    {
      "id": "445322",
      "name": "郁南县",
      "parent": "445300",
      "children": null },
    {
      "id": "445323",
      "name": "云安区",
      "parent": "445300",
      "children": null },
    {
      "id": "445381",
      "name": "罗定市",
      "parent": "445300",
      "children": null },
    {
      "id": "445382",
      "name": "其它区",
      "parent": "445300",
      "children": null }] }] },


{
  "id": "450000",
  "name": "广西壮族自治区",
  "children": [{
    "id": "450100",
    "name": "南宁市",
    "parent": "450000",
    "children": [{
      "id": "450102",
      "name": "兴宁区",
      "parent": "450100",
      "children": null },
    {
      "id": "450103",
      "name": "青秀区",
      "parent": "450100",
      "children": null },
    {
      "id": "450105",
      "name": "江南区",
      "parent": "450100",
      "children": null },
    {
      "id": "450107",
      "name": "西乡塘区",
      "parent": "450100",
      "children": null },
    {
      "id": "450108",
      "name": "良庆区",
      "parent": "450100",
      "children": null },
    {
      "id": "450109",
      "name": "邕宁区",
      "parent": "450100",
      "children": null },
    {
      "id": "450122",
      "name": "武鸣区",
      "parent": "450100",
      "children": null },
    {
      "id": "450123",
      "name": "隆安县",
      "parent": "450100",
      "children": null },
    {
      "id": "450124",
      "name": "马山县",
      "parent": "450100",
      "children": null },
    {
      "id": "450125",
      "name": "上林县",
      "parent": "450100",
      "children": null },
    {
      "id": "450126",
      "name": "宾阳县",
      "parent": "450100",
      "children": null },
    {
      "id": "450127",
      "name": "横县",
      "parent": "450100",
      "children": null },
    {
      "id": "450128",
      "name": "其它区",
      "parent": "450100",
      "children": null }] },

  {
    "id": "450200",
    "name": "柳州市",
    "parent": "450000",
    "children": [{
      "id": "450202",
      "name": "城中区",
      "parent": "450200",
      "children": null },
    {
      "id": "450203",
      "name": "鱼峰区",
      "parent": "450200",
      "children": null },
    {
      "id": "450204",
      "name": "柳南区",
      "parent": "450200",
      "children": null },
    {
      "id": "450205",
      "name": "柳北区",
      "parent": "450200",
      "children": null },
    {
      "id": "450221",
      "name": "柳江县",
      "parent": "450200",
      "children": null },
    {
      "id": "450222",
      "name": "柳城县",
      "parent": "450200",
      "children": null },
    {
      "id": "450223",
      "name": "鹿寨县",
      "parent": "450200",
      "children": null },
    {
      "id": "450224",
      "name": "融安县",
      "parent": "450200",
      "children": null },
    {
      "id": "450225",
      "name": "融水苗族自治县",
      "parent": "450200",
      "children": null },
    {
      "id": "450226",
      "name": "三江侗族自治县",
      "parent": "450200",
      "children": null },
    {
      "id": "450227",
      "name": "其它区",
      "parent": "450200",
      "children": null }] },

  {
    "id": "450300",
    "name": "桂林市",
    "parent": "450000",
    "children": [{
      "id": "450302",
      "name": "秀峰区",
      "parent": "450300",
      "children": null },
    {
      "id": "450303",
      "name": "叠彩区",
      "parent": "450300",
      "children": null },
    {
      "id": "450304",
      "name": "象山区",
      "parent": "450300",
      "children": null },
    {
      "id": "450305",
      "name": "七星区",
      "parent": "450300",
      "children": null },
    {
      "id": "450311",
      "name": "雁山区",
      "parent": "450300",
      "children": null },
    {
      "id": "450321",
      "name": "阳朔县",
      "parent": "450300",
      "children": null },
    {
      "id": "450322",
      "name": "临桂区",
      "parent": "450300",
      "children": null },
    {
      "id": "450323",
      "name": "灵川县",
      "parent": "450300",
      "children": null },
    {
      "id": "450324",
      "name": "全州县",
      "parent": "450300",
      "children": null },
    {
      "id": "450325",
      "name": "兴安县",
      "parent": "450300",
      "children": null },
    {
      "id": "450326",
      "name": "永福县",
      "parent": "450300",
      "children": null },
    {
      "id": "450327",
      "name": "灌阳县",
      "parent": "450300",
      "children": null },
    {
      "id": "450328",
      "name": "龙胜各族自治县",
      "parent": "450300",
      "children": null },
    {
      "id": "450329",
      "name": "资源县",
      "parent": "450300",
      "children": null },
    {
      "id": "450330",
      "name": "平乐县",
      "parent": "450300",
      "children": null },
    {
      "id": "450331",
      "name": "荔浦县",
      "parent": "450300",
      "children": null },
    {
      "id": "450332",
      "name": "恭城瑶族自治县",
      "parent": "450300",
      "children": null },
    {
      "id": "450333",
      "name": "其它区",
      "parent": "450300",
      "children": null }] },

  {
    "id": "450400",
    "name": "梧州市",
    "parent": "450000",
    "children": [{
      "id": "450403",
      "name": "万秀区",
      "parent": "450400",
      "children": null },
    {
      "id": "450404",
      "name": "蝶山区",
      "parent": "450400",
      "children": null },
    {
      "id": "450405",
      "name": "长洲区",
      "parent": "450400",
      "children": null },
    {
      "id": "450406",
      "name": "龙圩区",
      "parent": "450400",
      "children": null },
    {
      "id": "450421",
      "name": "苍梧县",
      "parent": "450400",
      "children": null },
    {
      "id": "450422",
      "name": "藤县",
      "parent": "450400",
      "children": null },
    {
      "id": "450423",
      "name": "蒙山县",
      "parent": "450400",
      "children": null },
    {
      "id": "450481",
      "name": "岑溪市",
      "parent": "450400",
      "children": null },
    {
      "id": "450482",
      "name": "其它区",
      "parent": "450400",
      "children": null }] },

  {
    "id": "450500",
    "name": "北海市",
    "parent": "450000",
    "children": [{
      "id": "450502",
      "name": "海城区",
      "parent": "450500",
      "children": null },
    {
      "id": "450503",
      "name": "银海区",
      "parent": "450500",
      "children": null },
    {
      "id": "450512",
      "name": "铁山港区",
      "parent": "450500",
      "children": null },
    {
      "id": "450521",
      "name": "合浦县",
      "parent": "450500",
      "children": null },
    {
      "id": "450522",
      "name": "其它区",
      "parent": "450500",
      "children": null }] },

  {
    "id": "450600",
    "name": "防城港市",
    "parent": "450000",
    "children": [{
      "id": "450602",
      "name": "港口区",
      "parent": "450600",
      "children": null },
    {
      "id": "450603",
      "name": "防城区",
      "parent": "450600",
      "children": null },
    {
      "id": "450621",
      "name": "上思县",
      "parent": "450600",
      "children": null },
    {
      "id": "450681",
      "name": "东兴市",
      "parent": "450600",
      "children": null },
    {
      "id": "450682",
      "name": "其它区",
      "parent": "450600",
      "children": null }] },

  {
    "id": "450700",
    "name": "钦州市",
    "parent": "450000",
    "children": [{
      "id": "450702",
      "name": "钦南区",
      "parent": "450700",
      "children": null },
    {
      "id": "450703",
      "name": "钦北区",
      "parent": "450700",
      "children": null },
    {
      "id": "450721",
      "name": "灵山县",
      "parent": "450700",
      "children": null },
    {
      "id": "450722",
      "name": "浦北县",
      "parent": "450700",
      "children": null },
    {
      "id": "450723",
      "name": "其它区",
      "parent": "450700",
      "children": null }] },

  {
    "id": "450800",
    "name": "贵港市",
    "parent": "450000",
    "children": [{
      "id": "450802",
      "name": "港北区",
      "parent": "450800",
      "children": null },
    {
      "id": "450803",
      "name": "港南区",
      "parent": "450800",
      "children": null },
    {
      "id": "450804",
      "name": "覃塘区",
      "parent": "450800",
      "children": null },
    {
      "id": "450821",
      "name": "平南县",
      "parent": "450800",
      "children": null },
    {
      "id": "450881",
      "name": "桂平市",
      "parent": "450800",
      "children": null },
    {
      "id": "450882",
      "name": "其它区",
      "parent": "450800",
      "children": null }] },

  {
    "id": "450900",
    "name": "玉林市",
    "parent": "450000",
    "children": [{
      "id": "450902",
      "name": "玉州区",
      "parent": "450900",
      "children": null },
    {
      "id": "450903",
      "name": "福绵区",
      "parent": "450900",
      "children": null },
    {
      "id": "450921",
      "name": "容县",
      "parent": "450900",
      "children": null },
    {
      "id": "450922",
      "name": "陆川县",
      "parent": "450900",
      "children": null },
    {
      "id": "450923",
      "name": "博白县",
      "parent": "450900",
      "children": null },
    {
      "id": "450924",
      "name": "兴业县",
      "parent": "450900",
      "children": null },
    {
      "id": "450981",
      "name": "北流市",
      "parent": "450900",
      "children": null },
    {
      "id": "450982",
      "name": "其它区",
      "parent": "450900",
      "children": null }] },

  {
    "id": "451000",
    "name": "百色市",
    "parent": "450000",
    "children": [{
      "id": "451002",
      "name": "右江区",
      "parent": "451000",
      "children": null },
    {
      "id": "451021",
      "name": "田阳县",
      "parent": "451000",
      "children": null },
    {
      "id": "451022",
      "name": "田东县",
      "parent": "451000",
      "children": null },
    {
      "id": "451023",
      "name": "平果县",
      "parent": "451000",
      "children": null },
    {
      "id": "451024",
      "name": "德保县",
      "parent": "451000",
      "children": null },
    {
      "id": "451025",
      "name": "靖西县",
      "parent": "451000",
      "children": null },
    {
      "id": "451026",
      "name": "那坡县",
      "parent": "451000",
      "children": null },
    {
      "id": "451027",
      "name": "凌云县",
      "parent": "451000",
      "children": null },
    {
      "id": "451028",
      "name": "乐业县",
      "parent": "451000",
      "children": null },
    {
      "id": "451029",
      "name": "田林县",
      "parent": "451000",
      "children": null },
    {
      "id": "451030",
      "name": "西林县",
      "parent": "451000",
      "children": null },
    {
      "id": "451031",
      "name": "隆林各族自治县",
      "parent": "451000",
      "children": null },
    {
      "id": "451032",
      "name": "其它区",
      "parent": "451000",
      "children": null }] },

  {
    "id": "451100",
    "name": "贺州市",
    "parent": "450000",
    "children": [{
      "id": "451102",
      "name": "八步区",
      "parent": "451100",
      "children": null },
    {
      "id": "451119",
      "name": "平桂管理区",
      "parent": "451100",
      "children": null },
    {
      "id": "451121",
      "name": "昭平县",
      "parent": "451100",
      "children": null },
    {
      "id": "451122",
      "name": "钟山县",
      "parent": "451100",
      "children": null },
    {
      "id": "451123",
      "name": "富川瑶族自治县",
      "parent": "451100",
      "children": null },
    {
      "id": "451124",
      "name": "其它区",
      "parent": "451100",
      "children": null }] },

  {
    "id": "451200",
    "name": "河池市",
    "parent": "450000",
    "children": [{
      "id": "451202",
      "name": "金城江区",
      "parent": "451200",
      "children": null },
    {
      "id": "451221",
      "name": "南丹县",
      "parent": "451200",
      "children": null },
    {
      "id": "451222",
      "name": "天峨县",
      "parent": "451200",
      "children": null },
    {
      "id": "451223",
      "name": "凤山县",
      "parent": "451200",
      "children": null },
    {
      "id": "451224",
      "name": "东兰县",
      "parent": "451200",
      "children": null },
    {
      "id": "451225",
      "name": "罗城仫佬族自治县",
      "parent": "451200",
      "children": null },
    {
      "id": "451226",
      "name": "环江毛南族自治县",
      "parent": "451200",
      "children": null },
    {
      "id": "451227",
      "name": "巴马瑶族自治县",
      "parent": "451200",
      "children": null },
    {
      "id": "451228",
      "name": "都安瑶族自治县",
      "parent": "451200",
      "children": null },
    {
      "id": "451229",
      "name": "大化瑶族自治县",
      "parent": "451200",
      "children": null },
    {
      "id": "451281",
      "name": "宜州市",
      "parent": "451200",
      "children": null },
    {
      "id": "451282",
      "name": "其它区",
      "parent": "451200",
      "children": null }] },

  {
    "id": "451300",
    "name": "来宾市",
    "parent": "450000",
    "children": [{
      "id": "451302",
      "name": "兴宾区",
      "parent": "451300",
      "children": null },
    {
      "id": "451321",
      "name": "忻城县",
      "parent": "451300",
      "children": null },
    {
      "id": "451322",
      "name": "象州县",
      "parent": "451300",
      "children": null },
    {
      "id": "451323",
      "name": "武宣县",
      "parent": "451300",
      "children": null },
    {
      "id": "451324",
      "name": "金秀瑶族自治县",
      "parent": "451300",
      "children": null },
    {
      "id": "451381",
      "name": "合山市",
      "parent": "451300",
      "children": null },
    {
      "id": "451382",
      "name": "其它区",
      "parent": "451300",
      "children": null }] },

  {
    "id": "451400",
    "name": "崇左市",
    "parent": "450000",
    "children": [{
      "id": "451402",
      "name": "江州区",
      "parent": "451400",
      "children": null },
    {
      "id": "451421",
      "name": "扶绥县",
      "parent": "451400",
      "children": null },
    {
      "id": "451422",
      "name": "宁明县",
      "parent": "451400",
      "children": null },
    {
      "id": "451423",
      "name": "龙州县",
      "parent": "451400",
      "children": null },
    {
      "id": "451424",
      "name": "大新县",
      "parent": "451400",
      "children": null },
    {
      "id": "451425",
      "name": "天等县",
      "parent": "451400",
      "children": null },
    {
      "id": "451481",
      "name": "凭祥市",
      "parent": "451400",
      "children": null },
    {
      "id": "451482",
      "name": "其它区",
      "parent": "451400",
      "children": null }] }] },


{
  "id": "460000",
  "name": "海南省",
  "children": [{
    "id": "460100",
    "name": "海口市",
    "parent": "460000",
    "children": [{
      "id": "460105",
      "name": "秀英区",
      "parent": "460100",
      "children": null },
    {
      "id": "460106",
      "name": "龙华区",
      "parent": "460100",
      "children": null },
    {
      "id": "460107",
      "name": "琼山区",
      "parent": "460100",
      "children": null },
    {
      "id": "460108",
      "name": "美兰区",
      "parent": "460100",
      "children": null },
    {
      "id": "460109",
      "name": "其它区",
      "parent": "460100",
      "children": null }] },

  {
    "id": "460200",
    "name": "三亚市",
    "parent": "460000",
    "children": null },
  {
    "id": "460300",
    "name": "三沙市",
    "parent": "460000",
    "children": [{
      "id": "460321",
      "name": "西沙群岛",
      "parent": "460300",
      "children": null },
    {
      "id": "460322",
      "name": "南沙群岛",
      "parent": "460300",
      "children": null },
    {
      "id": "460323",
      "name": "中沙群岛的岛礁及其海域",
      "parent": "460300",
      "children": null }] },

  {
    "id": "469001",
    "name": "五指山市",
    "parent": "460000",
    "children": null },
  {
    "id": "469002",
    "name": "琼海市",
    "parent": "460000",
    "children": null },
  {
    "id": "469003",
    "name": "儋州市",
    "parent": "460000",
    "children": null },
  {
    "id": "469005",
    "name": "文昌市",
    "parent": "460000",
    "children": null },
  {
    "id": "469006",
    "name": "万宁市",
    "parent": "460000",
    "children": null },
  {
    "id": "469007",
    "name": "东方市",
    "parent": "460000",
    "children": null },
  {
    "id": "469025",
    "name": "定安县",
    "parent": "460000",
    "children": null },
  {
    "id": "469026",
    "name": "屯昌县",
    "parent": "460000",
    "children": null },
  {
    "id": "469027",
    "name": "澄迈县",
    "parent": "460000",
    "children": null },
  {
    "id": "469028",
    "name": "临高县",
    "parent": "460000",
    "children": null },
  {
    "id": "469030",
    "name": "白沙黎族自治县",
    "parent": "460000",
    "children": null },
  {
    "id": "469031",
    "name": "昌江黎族自治县",
    "parent": "460000",
    "children": null },
  {
    "id": "469033",
    "name": "乐东黎族自治县",
    "parent": "460000",
    "children": null },
  {
    "id": "469034",
    "name": "陵水黎族自治县",
    "parent": "460000",
    "children": null },
  {
    "id": "469035",
    "name": "保亭黎族苗族自治县",
    "parent": "460000",
    "children": null },
  {
    "id": "469036",
    "name": "琼中黎族苗族自治县",
    "parent": "460000",
    "children": null },
  {
    "id": "469037",
    "name": "西沙群岛",
    "parent": "460000",
    "children": null },
  {
    "id": "469038",
    "name": "南沙群岛",
    "parent": "460000",
    "children": null },
  {
    "id": "469039",
    "name": "中沙群岛的岛礁及其海域",
    "parent": "460000",
    "children": null }] },

{
  "id": "500000",
  "name": "重庆市",
  "children": [{
    "id": "500100",
    "name": "重庆市",
    "parent": "500000",
    "children": [{
      "id": "500101",
      "name": "万州区",
      "parent": "500100",
      "children": null },
    {
      "id": "500102",
      "name": "涪陵区",
      "parent": "500100",
      "children": null },
    {
      "id": "500103",
      "name": "渝中区",
      "parent": "500100",
      "children": null },
    {
      "id": "500104",
      "name": "大渡口区",
      "parent": "500100",
      "children": null },
    {
      "id": "500105",
      "name": "江北区",
      "parent": "500100",
      "children": null },
    {
      "id": "500106",
      "name": "沙坪坝区",
      "parent": "500100",
      "children": null },
    {
      "id": "500107",
      "name": "九龙坡区",
      "parent": "500100",
      "children": null },
    {
      "id": "500108",
      "name": "南岸区",
      "parent": "500100",
      "children": null },
    {
      "id": "500109",
      "name": "北碚区",
      "parent": "500100",
      "children": null },
    {
      "id": "500110",
      "name": "万盛区",
      "parent": "500100",
      "children": null },
    {
      "id": "500111",
      "name": "双桥区",
      "parent": "500100",
      "children": null },
    {
      "id": "500112",
      "name": "渝北区",
      "parent": "500100",
      "children": null },
    {
      "id": "500113",
      "name": "巴南区",
      "parent": "500100",
      "children": null },
    {
      "id": "500114",
      "name": "黔江区",
      "parent": "500100",
      "children": null },
    {
      "id": "500115",
      "name": "长寿区",
      "parent": "500100",
      "children": null },
    {
      "id": "500222",
      "name": "綦江区",
      "parent": "500100",
      "children": null },
    {
      "id": "500223",
      "name": "潼南县",
      "parent": "500100",
      "children": null },
    {
      "id": "500224",
      "name": "铜梁区",
      "parent": "500100",
      "children": null },
    {
      "id": "500225",
      "name": "大足区",
      "parent": "500100",
      "children": null },
    {
      "id": "500226",
      "name": "荣昌县",
      "parent": "500100",
      "children": null },
    {
      "id": "500227",
      "name": "璧山区",
      "parent": "500100",
      "children": null },
    {
      "id": "500228",
      "name": "梁平县",
      "parent": "500100",
      "children": null },
    {
      "id": "500229",
      "name": "城口县",
      "parent": "500100",
      "children": null },
    {
      "id": "500230",
      "name": "丰都县",
      "parent": "500100",
      "children": null },
    {
      "id": "500231",
      "name": "垫江县",
      "parent": "500100",
      "children": null },
    {
      "id": "500232",
      "name": "武隆县",
      "parent": "500100",
      "children": null },
    {
      "id": "500233",
      "name": "忠县",
      "parent": "500100",
      "children": null },
    {
      "id": "500234",
      "name": "开县",
      "parent": "500100",
      "children": null },
    {
      "id": "500235",
      "name": "云阳县",
      "parent": "500100",
      "children": null },
    {
      "id": "500236",
      "name": "奉节县",
      "parent": "500100",
      "children": null },
    {
      "id": "500237",
      "name": "巫山县",
      "parent": "500100",
      "children": null },
    {
      "id": "500238",
      "name": "巫溪县",
      "parent": "500100",
      "children": null },
    {
      "id": "500240",
      "name": "石柱土家族自治县",
      "parent": "500100",
      "children": null },
    {
      "id": "500241",
      "name": "秀山土家族苗族自治县",
      "parent": "500100",
      "children": null },
    {
      "id": "500242",
      "name": "酉阳土家族苗族自治县",
      "parent": "500100",
      "children": null },
    {
      "id": "500243",
      "name": "彭水苗族土家族自治县",
      "parent": "500100",
      "children": null },
    {
      "id": "500381",
      "name": "江津区",
      "parent": "500100",
      "children": null },
    {
      "id": "500382",
      "name": "合川区",
      "parent": "500100",
      "children": null },
    {
      "id": "500383",
      "name": "永川区",
      "parent": "500100",
      "children": null },
    {
      "id": "500384",
      "name": "南川区",
      "parent": "500100",
      "children": null },
    {
      "id": "500385",
      "name": "其它区",
      "parent": "500100",
      "children": null }] }] },


{
  "id": "510000",
  "name": "四川省",
  "children": [{
    "id": "510100",
    "name": "成都市",
    "parent": "510000",
    "children": [{
      "id": "510104",
      "name": "锦江区",
      "parent": "510100",
      "children": null },
    {
      "id": "510105",
      "name": "青羊区",
      "parent": "510100",
      "children": null },
    {
      "id": "510106",
      "name": "金牛区",
      "parent": "510100",
      "children": null },
    {
      "id": "510107",
      "name": "武侯区",
      "parent": "510100",
      "children": null },
    {
      "id": "510108",
      "name": "成华区",
      "parent": "510100",
      "children": null },
    {
      "id": "510112",
      "name": "龙泉驿区",
      "parent": "510100",
      "children": null },
    {
      "id": "510113",
      "name": "青白江区",
      "parent": "510100",
      "children": null },
    {
      "id": "510114",
      "name": "新都区",
      "parent": "510100",
      "children": null },
    {
      "id": "510115",
      "name": "温江区",
      "parent": "510100",
      "children": null },
    {
      "id": "510121",
      "name": "金堂县",
      "parent": "510100",
      "children": null },
    {
      "id": "510122",
      "name": "双流县",
      "parent": "510100",
      "children": null },
    {
      "id": "510124",
      "name": "郫县",
      "parent": "510100",
      "children": null },
    {
      "id": "510129",
      "name": "大邑县",
      "parent": "510100",
      "children": null },
    {
      "id": "510131",
      "name": "蒲江县",
      "parent": "510100",
      "children": null },
    {
      "id": "510132",
      "name": "新津县",
      "parent": "510100",
      "children": null },
    {
      "id": "510181",
      "name": "都江堰市",
      "parent": "510100",
      "children": null },
    {
      "id": "510182",
      "name": "彭州市",
      "parent": "510100",
      "children": null },
    {
      "id": "510183",
      "name": "邛崃市",
      "parent": "510100",
      "children": null },
    {
      "id": "510184",
      "name": "崇州市",
      "parent": "510100",
      "children": null },
    {
      "id": "510185",
      "name": "其它区",
      "parent": "510100",
      "children": null }] },

  {
    "id": "510300",
    "name": "自贡市",
    "parent": "510000",
    "children": [{
      "id": "510302",
      "name": "自流井区",
      "parent": "510300",
      "children": null },
    {
      "id": "510303",
      "name": "贡井区",
      "parent": "510300",
      "children": null },
    {
      "id": "510304",
      "name": "大安区",
      "parent": "510300",
      "children": null },
    {
      "id": "510311",
      "name": "沿滩区",
      "parent": "510300",
      "children": null },
    {
      "id": "510321",
      "name": "荣县",
      "parent": "510300",
      "children": null },
    {
      "id": "510322",
      "name": "富顺县",
      "parent": "510300",
      "children": null },
    {
      "id": "510323",
      "name": "其它区",
      "parent": "510300",
      "children": null }] },

  {
    "id": "510400",
    "name": "攀枝花市",
    "parent": "510000",
    "children": [{
      "id": "510402",
      "name": "东区",
      "parent": "510400",
      "children": null },
    {
      "id": "510403",
      "name": "西区",
      "parent": "510400",
      "children": null },
    {
      "id": "510411",
      "name": "仁和区",
      "parent": "510400",
      "children": null },
    {
      "id": "510421",
      "name": "米易县",
      "parent": "510400",
      "children": null },
    {
      "id": "510422",
      "name": "盐边县",
      "parent": "510400",
      "children": null },
    {
      "id": "510423",
      "name": "其它区",
      "parent": "510400",
      "children": null }] },

  {
    "id": "510500",
    "name": "泸州市",
    "parent": "510000",
    "children": [{
      "id": "510502",
      "name": "江阳区",
      "parent": "510500",
      "children": null },
    {
      "id": "510503",
      "name": "纳溪区",
      "parent": "510500",
      "children": null },
    {
      "id": "510504",
      "name": "龙马潭区",
      "parent": "510500",
      "children": null },
    {
      "id": "510521",
      "name": "泸县",
      "parent": "510500",
      "children": null },
    {
      "id": "510522",
      "name": "合江县",
      "parent": "510500",
      "children": null },
    {
      "id": "510524",
      "name": "叙永县",
      "parent": "510500",
      "children": null },
    {
      "id": "510525",
      "name": "古蔺县",
      "parent": "510500",
      "children": null },
    {
      "id": "510526",
      "name": "其它区",
      "parent": "510500",
      "children": null }] },

  {
    "id": "510600",
    "name": "德阳市",
    "parent": "510000",
    "children": [{
      "id": "510603",
      "name": "旌阳区",
      "parent": "510600",
      "children": null },
    {
      "id": "510623",
      "name": "中江县",
      "parent": "510600",
      "children": null },
    {
      "id": "510626",
      "name": "罗江县",
      "parent": "510600",
      "children": null },
    {
      "id": "510681",
      "name": "广汉市",
      "parent": "510600",
      "children": null },
    {
      "id": "510682",
      "name": "什邡市",
      "parent": "510600",
      "children": null },
    {
      "id": "510683",
      "name": "绵竹市",
      "parent": "510600",
      "children": null },
    {
      "id": "510684",
      "name": "其它区",
      "parent": "510600",
      "children": null }] },

  {
    "id": "510700",
    "name": "绵阳市",
    "parent": "510000",
    "children": [{
      "id": "510703",
      "name": "涪城区",
      "parent": "510700",
      "children": null },
    {
      "id": "510704",
      "name": "游仙区",
      "parent": "510700",
      "children": null },
    {
      "id": "510722",
      "name": "三台县",
      "parent": "510700",
      "children": null },
    {
      "id": "510723",
      "name": "盐亭县",
      "parent": "510700",
      "children": null },
    {
      "id": "510724",
      "name": "安县",
      "parent": "510700",
      "children": null },
    {
      "id": "510725",
      "name": "梓潼县",
      "parent": "510700",
      "children": null },
    {
      "id": "510726",
      "name": "北川羌族自治县",
      "parent": "510700",
      "children": null },
    {
      "id": "510727",
      "name": "平武县",
      "parent": "510700",
      "children": null },
    {
      "id": "510751",
      "name": "高新区",
      "parent": "510700",
      "children": null },
    {
      "id": "510781",
      "name": "江油市",
      "parent": "510700",
      "children": null },
    {
      "id": "510782",
      "name": "其它区",
      "parent": "510700",
      "children": null }] },

  {
    "id": "510800",
    "name": "广元市",
    "parent": "510000",
    "children": [{
      "id": "510802",
      "name": "利州区",
      "parent": "510800",
      "children": null },
    {
      "id": "510811",
      "name": "昭化区",
      "parent": "510800",
      "children": null },
    {
      "id": "510812",
      "name": "朝天区",
      "parent": "510800",
      "children": null },
    {
      "id": "510821",
      "name": "旺苍县",
      "parent": "510800",
      "children": null },
    {
      "id": "510822",
      "name": "青川县",
      "parent": "510800",
      "children": null },
    {
      "id": "510823",
      "name": "剑阁县",
      "parent": "510800",
      "children": null },
    {
      "id": "510824",
      "name": "苍溪县",
      "parent": "510800",
      "children": null },
    {
      "id": "510825",
      "name": "其它区",
      "parent": "510800",
      "children": null }] },

  {
    "id": "510900",
    "name": "遂宁市",
    "parent": "510000",
    "children": [{
      "id": "510903",
      "name": "船山区",
      "parent": "510900",
      "children": null },
    {
      "id": "510904",
      "name": "安居区",
      "parent": "510900",
      "children": null },
    {
      "id": "510921",
      "name": "蓬溪县",
      "parent": "510900",
      "children": null },
    {
      "id": "510922",
      "name": "射洪县",
      "parent": "510900",
      "children": null },
    {
      "id": "510923",
      "name": "大英县",
      "parent": "510900",
      "children": null },
    {
      "id": "510924",
      "name": "其它区",
      "parent": "510900",
      "children": null }] },

  {
    "id": "511000",
    "name": "内江市",
    "parent": "510000",
    "children": [{
      "id": "511002",
      "name": "市中区",
      "parent": "511000",
      "children": null },
    {
      "id": "511011",
      "name": "东兴区",
      "parent": "511000",
      "children": null },
    {
      "id": "511024",
      "name": "威远县",
      "parent": "511000",
      "children": null },
    {
      "id": "511025",
      "name": "资中县",
      "parent": "511000",
      "children": null },
    {
      "id": "511028",
      "name": "隆昌县",
      "parent": "511000",
      "children": null },
    {
      "id": "511029",
      "name": "其它区",
      "parent": "511000",
      "children": null }] },

  {
    "id": "511100",
    "name": "乐山市",
    "parent": "510000",
    "children": [{
      "id": "511102",
      "name": "市中区",
      "parent": "511100",
      "children": null },
    {
      "id": "511111",
      "name": "沙湾区",
      "parent": "511100",
      "children": null },
    {
      "id": "511112",
      "name": "五通桥区",
      "parent": "511100",
      "children": null },
    {
      "id": "511113",
      "name": "金口河区",
      "parent": "511100",
      "children": null },
    {
      "id": "511123",
      "name": "犍为县",
      "parent": "511100",
      "children": null },
    {
      "id": "511124",
      "name": "井研县",
      "parent": "511100",
      "children": null },
    {
      "id": "511126",
      "name": "夹江县",
      "parent": "511100",
      "children": null },
    {
      "id": "511129",
      "name": "沐川县",
      "parent": "511100",
      "children": null },
    {
      "id": "511132",
      "name": "峨边彝族自治县",
      "parent": "511100",
      "children": null },
    {
      "id": "511133",
      "name": "马边彝族自治县",
      "parent": "511100",
      "children": null },
    {
      "id": "511181",
      "name": "峨眉山市",
      "parent": "511100",
      "children": null },
    {
      "id": "511182",
      "name": "其它区",
      "parent": "511100",
      "children": null }] },

  {
    "id": "511300",
    "name": "南充市",
    "parent": "510000",
    "children": [{
      "id": "511302",
      "name": "顺庆区",
      "parent": "511300",
      "children": null },
    {
      "id": "511303",
      "name": "高坪区",
      "parent": "511300",
      "children": null },
    {
      "id": "511304",
      "name": "嘉陵区",
      "parent": "511300",
      "children": null },
    {
      "id": "511321",
      "name": "南部县",
      "parent": "511300",
      "children": null },
    {
      "id": "511322",
      "name": "营山县",
      "parent": "511300",
      "children": null },
    {
      "id": "511323",
      "name": "蓬安县",
      "parent": "511300",
      "children": null },
    {
      "id": "511324",
      "name": "仪陇县",
      "parent": "511300",
      "children": null },
    {
      "id": "511325",
      "name": "西充县",
      "parent": "511300",
      "children": null },
    {
      "id": "511381",
      "name": "阆中市",
      "parent": "511300",
      "children": null },
    {
      "id": "511382",
      "name": "其它区",
      "parent": "511300",
      "children": null }] },

  {
    "id": "511400",
    "name": "眉山市",
    "parent": "510000",
    "children": [{
      "id": "511402",
      "name": "东坡区",
      "parent": "511400",
      "children": null },
    {
      "id": "511421",
      "name": "仁寿县",
      "parent": "511400",
      "children": null },
    {
      "id": "511422",
      "name": "彭山区",
      "parent": "511400",
      "children": null },
    {
      "id": "511423",
      "name": "洪雅县",
      "parent": "511400",
      "children": null },
    {
      "id": "511424",
      "name": "丹棱县",
      "parent": "511400",
      "children": null },
    {
      "id": "511425",
      "name": "青神县",
      "parent": "511400",
      "children": null },
    {
      "id": "511426",
      "name": "其它区",
      "parent": "511400",
      "children": null }] },

  {
    "id": "511500",
    "name": "宜宾市",
    "parent": "510000",
    "children": [{
      "id": "511502",
      "name": "翠屏区",
      "parent": "511500",
      "children": null },
    {
      "id": "511521",
      "name": "宜宾县",
      "parent": "511500",
      "children": null },
    {
      "id": "511522",
      "name": "南溪区",
      "parent": "511500",
      "children": null },
    {
      "id": "511523",
      "name": "江安县",
      "parent": "511500",
      "children": null },
    {
      "id": "511524",
      "name": "长宁县",
      "parent": "511500",
      "children": null },
    {
      "id": "511525",
      "name": "高县",
      "parent": "511500",
      "children": null },
    {
      "id": "511526",
      "name": "珙县",
      "parent": "511500",
      "children": null },
    {
      "id": "511527",
      "name": "筠连县",
      "parent": "511500",
      "children": null },
    {
      "id": "511528",
      "name": "兴文县",
      "parent": "511500",
      "children": null },
    {
      "id": "511529",
      "name": "屏山县",
      "parent": "511500",
      "children": null },
    {
      "id": "511530",
      "name": "其它区",
      "parent": "511500",
      "children": null }] },

  {
    "id": "511600",
    "name": "广安市",
    "parent": "510000",
    "children": [{
      "id": "511602",
      "name": "广安区",
      "parent": "511600",
      "children": null },
    {
      "id": "511603",
      "name": "前锋区",
      "parent": "511600",
      "children": null },
    {
      "id": "511621",
      "name": "岳池县",
      "parent": "511600",
      "children": null },
    {
      "id": "511622",
      "name": "武胜县",
      "parent": "511600",
      "children": null },
    {
      "id": "511623",
      "name": "邻水县",
      "parent": "511600",
      "children": null },
    {
      "id": "511681",
      "name": "华蓥市",
      "parent": "511600",
      "children": null },
    {
      "id": "511682",
      "name": "市辖区",
      "parent": "511600",
      "children": null },
    {
      "id": "511683",
      "name": "其它区",
      "parent": "511600",
      "children": null }] },

  {
    "id": "511700",
    "name": "达州市",
    "parent": "510000",
    "children": [{
      "id": "511702",
      "name": "通川区",
      "parent": "511700",
      "children": null },
    {
      "id": "511721",
      "name": "达川区",
      "parent": "511700",
      "children": null },
    {
      "id": "511722",
      "name": "宣汉县",
      "parent": "511700",
      "children": null },
    {
      "id": "511723",
      "name": "开江县",
      "parent": "511700",
      "children": null },
    {
      "id": "511724",
      "name": "大竹县",
      "parent": "511700",
      "children": null },
    {
      "id": "511725",
      "name": "渠县",
      "parent": "511700",
      "children": null },
    {
      "id": "511781",
      "name": "万源市",
      "parent": "511700",
      "children": null },
    {
      "id": "511782",
      "name": "其它区",
      "parent": "511700",
      "children": null }] },

  {
    "id": "511800",
    "name": "雅安市",
    "parent": "510000",
    "children": [{
      "id": "511802",
      "name": "雨城区",
      "parent": "511800",
      "children": null },
    {
      "id": "511821",
      "name": "名山区",
      "parent": "511800",
      "children": null },
    {
      "id": "511822",
      "name": "荥经县",
      "parent": "511800",
      "children": null },
    {
      "id": "511823",
      "name": "汉源县",
      "parent": "511800",
      "children": null },
    {
      "id": "511824",
      "name": "石棉县",
      "parent": "511800",
      "children": null },
    {
      "id": "511825",
      "name": "天全县",
      "parent": "511800",
      "children": null },
    {
      "id": "511826",
      "name": "芦山县",
      "parent": "511800",
      "children": null },
    {
      "id": "511827",
      "name": "宝兴县",
      "parent": "511800",
      "children": null },
    {
      "id": "511828",
      "name": "其它区",
      "parent": "511800",
      "children": null }] },

  {
    "id": "511900",
    "name": "巴中市",
    "parent": "510000",
    "children": [{
      "id": "511902",
      "name": "巴州区",
      "parent": "511900",
      "children": null },
    {
      "id": "511903",
      "name": "恩阳区",
      "parent": "511900",
      "children": null },
    {
      "id": "511921",
      "name": "通江县",
      "parent": "511900",
      "children": null },
    {
      "id": "511922",
      "name": "南江县",
      "parent": "511900",
      "children": null },
    {
      "id": "511923",
      "name": "平昌县",
      "parent": "511900",
      "children": null },
    {
      "id": "511924",
      "name": "其它区",
      "parent": "511900",
      "children": null }] },

  {
    "id": "512000",
    "name": "资阳市",
    "parent": "510000",
    "children": [{
      "id": "512002",
      "name": "雁江区",
      "parent": "512000",
      "children": null },
    {
      "id": "512021",
      "name": "安岳县",
      "parent": "512000",
      "children": null },
    {
      "id": "512022",
      "name": "乐至县",
      "parent": "512000",
      "children": null },
    {
      "id": "512081",
      "name": "简阳市",
      "parent": "512000",
      "children": null },
    {
      "id": "512082",
      "name": "其它区",
      "parent": "512000",
      "children": null }] },

  {
    "id": "513200",
    "name": "阿坝藏族羌族自治州",
    "parent": "510000",
    "children": [{
      "id": "513221",
      "name": "汶川县",
      "parent": "513200",
      "children": null },
    {
      "id": "513222",
      "name": "理县",
      "parent": "513200",
      "children": null },
    {
      "id": "513223",
      "name": "茂县",
      "parent": "513200",
      "children": null },
    {
      "id": "513224",
      "name": "松潘县",
      "parent": "513200",
      "children": null },
    {
      "id": "513225",
      "name": "九寨沟县",
      "parent": "513200",
      "children": null },
    {
      "id": "513226",
      "name": "金川县",
      "parent": "513200",
      "children": null },
    {
      "id": "513227",
      "name": "小金县",
      "parent": "513200",
      "children": null },
    {
      "id": "513228",
      "name": "黑水县",
      "parent": "513200",
      "children": null },
    {
      "id": "513229",
      "name": "马尔康县",
      "parent": "513200",
      "children": null },
    {
      "id": "513230",
      "name": "壤塘县",
      "parent": "513200",
      "children": null },
    {
      "id": "513231",
      "name": "阿坝县",
      "parent": "513200",
      "children": null },
    {
      "id": "513232",
      "name": "若尔盖县",
      "parent": "513200",
      "children": null },
    {
      "id": "513233",
      "name": "红原县",
      "parent": "513200",
      "children": null },
    {
      "id": "513234",
      "name": "其它区",
      "parent": "513200",
      "children": null }] },

  {
    "id": "513300",
    "name": "甘孜藏族自治州",
    "parent": "510000",
    "children": [{
      "id": "513321",
      "name": "康定市",
      "parent": "513300",
      "children": null },
    {
      "id": "513322",
      "name": "泸定县",
      "parent": "513300",
      "children": null },
    {
      "id": "513323",
      "name": "丹巴县",
      "parent": "513300",
      "children": null },
    {
      "id": "513324",
      "name": "九龙县",
      "parent": "513300",
      "children": null },
    {
      "id": "513325",
      "name": "雅江县",
      "parent": "513300",
      "children": null },
    {
      "id": "513326",
      "name": "道孚县",
      "parent": "513300",
      "children": null },
    {
      "id": "513327",
      "name": "炉霍县",
      "parent": "513300",
      "children": null },
    {
      "id": "513328",
      "name": "甘孜县",
      "parent": "513300",
      "children": null },
    {
      "id": "513329",
      "name": "新龙县",
      "parent": "513300",
      "children": null },
    {
      "id": "513330",
      "name": "德格县",
      "parent": "513300",
      "children": null },
    {
      "id": "513331",
      "name": "白玉县",
      "parent": "513300",
      "children": null },
    {
      "id": "513332",
      "name": "石渠县",
      "parent": "513300",
      "children": null },
    {
      "id": "513333",
      "name": "色达县",
      "parent": "513300",
      "children": null },
    {
      "id": "513334",
      "name": "理塘县",
      "parent": "513300",
      "children": null },
    {
      "id": "513335",
      "name": "巴塘县",
      "parent": "513300",
      "children": null },
    {
      "id": "513336",
      "name": "乡城县",
      "parent": "513300",
      "children": null },
    {
      "id": "513337",
      "name": "稻城县",
      "parent": "513300",
      "children": null },
    {
      "id": "513338",
      "name": "得荣县",
      "parent": "513300",
      "children": null },
    {
      "id": "513339",
      "name": "其它区",
      "parent": "513300",
      "children": null }] },

  {
    "id": "513400",
    "name": "凉山彝族自治州",
    "parent": "510000",
    "children": [{
      "id": "513401",
      "name": "西昌市",
      "parent": "513400",
      "children": null },
    {
      "id": "513422",
      "name": "木里藏族自治县",
      "parent": "513400",
      "children": null },
    {
      "id": "513423",
      "name": "盐源县",
      "parent": "513400",
      "children": null },
    {
      "id": "513424",
      "name": "德昌县",
      "parent": "513400",
      "children": null },
    {
      "id": "513425",
      "name": "会理县",
      "parent": "513400",
      "children": null },
    {
      "id": "513426",
      "name": "会东县",
      "parent": "513400",
      "children": null },
    {
      "id": "513427",
      "name": "宁南县",
      "parent": "513400",
      "children": null },
    {
      "id": "513428",
      "name": "普格县",
      "parent": "513400",
      "children": null },
    {
      "id": "513429",
      "name": "布拖县",
      "parent": "513400",
      "children": null },
    {
      "id": "513430",
      "name": "金阳县",
      "parent": "513400",
      "children": null },
    {
      "id": "513431",
      "name": "昭觉县",
      "parent": "513400",
      "children": null },
    {
      "id": "513432",
      "name": "喜德县",
      "parent": "513400",
      "children": null },
    {
      "id": "513433",
      "name": "冕宁县",
      "parent": "513400",
      "children": null },
    {
      "id": "513434",
      "name": "越西县",
      "parent": "513400",
      "children": null },
    {
      "id": "513435",
      "name": "甘洛县",
      "parent": "513400",
      "children": null },
    {
      "id": "513436",
      "name": "美姑县",
      "parent": "513400",
      "children": null },
    {
      "id": "513437",
      "name": "雷波县",
      "parent": "513400",
      "children": null },
    {
      "id": "513438",
      "name": "其它区",
      "parent": "513400",
      "children": null }] }] },


{
  "id": "520000",
  "name": "贵州省",
  "children": [{
    "id": "520100",
    "name": "贵阳市",
    "parent": "520000",
    "children": [{
      "id": "520102",
      "name": "南明区",
      "parent": "520100",
      "children": null },
    {
      "id": "520103",
      "name": "云岩区",
      "parent": "520100",
      "children": null },
    {
      "id": "520111",
      "name": "花溪区",
      "parent": "520100",
      "children": null },
    {
      "id": "520112",
      "name": "乌当区",
      "parent": "520100",
      "children": null },
    {
      "id": "520113",
      "name": "白云区",
      "parent": "520100",
      "children": null },
    {
      "id": "520114",
      "name": "小河区",
      "parent": "520100",
      "children": null },
    {
      "id": "520121",
      "name": "开阳县",
      "parent": "520100",
      "children": null },
    {
      "id": "520122",
      "name": "息烽县",
      "parent": "520100",
      "children": null },
    {
      "id": "520123",
      "name": "修文县",
      "parent": "520100",
      "children": null },
    {
      "id": "520151",
      "name": "观山湖区",
      "parent": "520100",
      "children": null },
    {
      "id": "520181",
      "name": "清镇市",
      "parent": "520100",
      "children": null },
    {
      "id": "520182",
      "name": "其它区",
      "parent": "520100",
      "children": null }] },

  {
    "id": "520200",
    "name": "六盘水市",
    "parent": "520000",
    "children": [{
      "id": "520201",
      "name": "钟山区",
      "parent": "520200",
      "children": null },
    {
      "id": "520203",
      "name": "六枝特区",
      "parent": "520200",
      "children": null },
    {
      "id": "520221",
      "name": "水城县",
      "parent": "520200",
      "children": null },
    {
      "id": "520222",
      "name": "盘县",
      "parent": "520200",
      "children": null },
    {
      "id": "520223",
      "name": "其它区",
      "parent": "520200",
      "children": null }] },

  {
    "id": "520300",
    "name": "遵义市",
    "parent": "520000",
    "children": [{
      "id": "520302",
      "name": "红花岗区",
      "parent": "520300",
      "children": null },
    {
      "id": "520303",
      "name": "汇川区",
      "parent": "520300",
      "children": null },
    {
      "id": "520321",
      "name": "遵义县",
      "parent": "520300",
      "children": null },
    {
      "id": "520322",
      "name": "桐梓县",
      "parent": "520300",
      "children": null },
    {
      "id": "520323",
      "name": "绥阳县",
      "parent": "520300",
      "children": null },
    {
      "id": "520324",
      "name": "正安县",
      "parent": "520300",
      "children": null },
    {
      "id": "520325",
      "name": "道真仡佬族苗族自治县",
      "parent": "520300",
      "children": null },
    {
      "id": "520326",
      "name": "务川仡佬族苗族自治县",
      "parent": "520300",
      "children": null },
    {
      "id": "520327",
      "name": "凤冈县",
      "parent": "520300",
      "children": null },
    {
      "id": "520328",
      "name": "湄潭县",
      "parent": "520300",
      "children": null },
    {
      "id": "520329",
      "name": "余庆县",
      "parent": "520300",
      "children": null },
    {
      "id": "520330",
      "name": "习水县",
      "parent": "520300",
      "children": null },
    {
      "id": "520381",
      "name": "赤水市",
      "parent": "520300",
      "children": null },
    {
      "id": "520382",
      "name": "仁怀市",
      "parent": "520300",
      "children": null },
    {
      "id": "520383",
      "name": "其它区",
      "parent": "520300",
      "children": null }] },

  {
    "id": "520400",
    "name": "安顺市",
    "parent": "520000",
    "children": [{
      "id": "520402",
      "name": "西秀区",
      "parent": "520400",
      "children": null },
    {
      "id": "520421",
      "name": "平坝区",
      "parent": "520400",
      "children": null },
    {
      "id": "520422",
      "name": "普定县",
      "parent": "520400",
      "children": null },
    {
      "id": "520423",
      "name": "镇宁布依族苗族自治县",
      "parent": "520400",
      "children": null },
    {
      "id": "520424",
      "name": "关岭布依族苗族自治县",
      "parent": "520400",
      "children": null },
    {
      "id": "520425",
      "name": "紫云苗族布依族自治县",
      "parent": "520400",
      "children": null },
    {
      "id": "520426",
      "name": "其它区",
      "parent": "520400",
      "children": null }] },

  {
    "id": "522200",
    "name": "铜仁市",
    "parent": "520000",
    "children": [{
      "id": "522201",
      "name": "碧江区",
      "parent": "522200",
      "children": null },
    {
      "id": "522222",
      "name": "江口县",
      "parent": "522200",
      "children": null },
    {
      "id": "522223",
      "name": "玉屏侗族自治县",
      "parent": "522200",
      "children": null },
    {
      "id": "522224",
      "name": "石阡县",
      "parent": "522200",
      "children": null },
    {
      "id": "522225",
      "name": "思南县",
      "parent": "522200",
      "children": null },
    {
      "id": "522226",
      "name": "印江土家族苗族自治县",
      "parent": "522200",
      "children": null },
    {
      "id": "522227",
      "name": "德江县",
      "parent": "522200",
      "children": null },
    {
      "id": "522228",
      "name": "沿河土家族自治县",
      "parent": "522200",
      "children": null },
    {
      "id": "522229",
      "name": "松桃苗族自治县",
      "parent": "522200",
      "children": null },
    {
      "id": "522230",
      "name": "万山区",
      "parent": "522200",
      "children": null },
    {
      "id": "522231",
      "name": "其它区",
      "parent": "522200",
      "children": null }] },

  {
    "id": "522300",
    "name": "黔西南布依族苗族自治州",
    "parent": "520000",
    "children": [{
      "id": "522301",
      "name": "兴义市",
      "parent": "522300",
      "children": null },
    {
      "id": "522322",
      "name": "兴仁县",
      "parent": "522300",
      "children": null },
    {
      "id": "522323",
      "name": "普安县",
      "parent": "522300",
      "children": null },
    {
      "id": "522324",
      "name": "晴隆县",
      "parent": "522300",
      "children": null },
    {
      "id": "522325",
      "name": "贞丰县",
      "parent": "522300",
      "children": null },
    {
      "id": "522326",
      "name": "望谟县",
      "parent": "522300",
      "children": null },
    {
      "id": "522327",
      "name": "册亨县",
      "parent": "522300",
      "children": null },
    {
      "id": "522328",
      "name": "安龙县",
      "parent": "522300",
      "children": null },
    {
      "id": "522329",
      "name": "其它区",
      "parent": "522300",
      "children": null }] },

  {
    "id": "522400",
    "name": "毕节市",
    "parent": "520000",
    "children": [{
      "id": "522401",
      "name": "七星关区",
      "parent": "522400",
      "children": null },
    {
      "id": "522422",
      "name": "大方县",
      "parent": "522400",
      "children": null },
    {
      "id": "522423",
      "name": "黔西县",
      "parent": "522400",
      "children": null },
    {
      "id": "522424",
      "name": "金沙县",
      "parent": "522400",
      "children": null },
    {
      "id": "522425",
      "name": "织金县",
      "parent": "522400",
      "children": null },
    {
      "id": "522426",
      "name": "纳雍县",
      "parent": "522400",
      "children": null },
    {
      "id": "522427",
      "name": "威宁彝族回族苗族自治县",
      "parent": "522400",
      "children": null },
    {
      "id": "522428",
      "name": "赫章县",
      "parent": "522400",
      "children": null },
    {
      "id": "522429",
      "name": "其它区",
      "parent": "522400",
      "children": null }] },

  {
    "id": "522600",
    "name": "黔东南苗族侗族自治州",
    "parent": "520000",
    "children": [{
      "id": "522601",
      "name": "凯里市",
      "parent": "522600",
      "children": null },
    {
      "id": "522622",
      "name": "黄平县",
      "parent": "522600",
      "children": null },
    {
      "id": "522623",
      "name": "施秉县",
      "parent": "522600",
      "children": null },
    {
      "id": "522624",
      "name": "三穗县",
      "parent": "522600",
      "children": null },
    {
      "id": "522625",
      "name": "镇远县",
      "parent": "522600",
      "children": null },
    {
      "id": "522626",
      "name": "岑巩县",
      "parent": "522600",
      "children": null },
    {
      "id": "522627",
      "name": "天柱县",
      "parent": "522600",
      "children": null },
    {
      "id": "522628",
      "name": "锦屏县",
      "parent": "522600",
      "children": null },
    {
      "id": "522629",
      "name": "剑河县",
      "parent": "522600",
      "children": null },
    {
      "id": "522630",
      "name": "台江县",
      "parent": "522600",
      "children": null },
    {
      "id": "522631",
      "name": "黎平县",
      "parent": "522600",
      "children": null },
    {
      "id": "522632",
      "name": "榕江县",
      "parent": "522600",
      "children": null },
    {
      "id": "522633",
      "name": "从江县",
      "parent": "522600",
      "children": null },
    {
      "id": "522634",
      "name": "雷山县",
      "parent": "522600",
      "children": null },
    {
      "id": "522635",
      "name": "麻江县",
      "parent": "522600",
      "children": null },
    {
      "id": "522636",
      "name": "丹寨县",
      "parent": "522600",
      "children": null },
    {
      "id": "522637",
      "name": "其它区",
      "parent": "522600",
      "children": null }] },

  {
    "id": "522700",
    "name": "黔南布依族苗族自治州",
    "parent": "520000",
    "children": [{
      "id": "522701",
      "name": "都匀市",
      "parent": "522700",
      "children": null },
    {
      "id": "522702",
      "name": "福泉市",
      "parent": "522700",
      "children": null },
    {
      "id": "522722",
      "name": "荔波县",
      "parent": "522700",
      "children": null },
    {
      "id": "522723",
      "name": "贵定县",
      "parent": "522700",
      "children": null },
    {
      "id": "522725",
      "name": "瓮安县",
      "parent": "522700",
      "children": null },
    {
      "id": "522726",
      "name": "独山县",
      "parent": "522700",
      "children": null },
    {
      "id": "522727",
      "name": "平塘县",
      "parent": "522700",
      "children": null },
    {
      "id": "522728",
      "name": "罗甸县",
      "parent": "522700",
      "children": null },
    {
      "id": "522729",
      "name": "长顺县",
      "parent": "522700",
      "children": null },
    {
      "id": "522730",
      "name": "龙里县",
      "parent": "522700",
      "children": null },
    {
      "id": "522731",
      "name": "惠水县",
      "parent": "522700",
      "children": null },
    {
      "id": "522732",
      "name": "三都水族自治县",
      "parent": "522700",
      "children": null },
    {
      "id": "522733",
      "name": "其它区",
      "parent": "522700",
      "children": null }] }] },


{
  "id": "530000",
  "name": "云南省",
  "children": [{
    "id": "530100",
    "name": "昆明市",
    "parent": "530000",
    "children": [{
      "id": "530102",
      "name": "五华区",
      "parent": "530100",
      "children": null },
    {
      "id": "530103",
      "name": "盘龙区",
      "parent": "530100",
      "children": null },
    {
      "id": "530111",
      "name": "官渡区",
      "parent": "530100",
      "children": null },
    {
      "id": "530112",
      "name": "西山区",
      "parent": "530100",
      "children": null },
    {
      "id": "530113",
      "name": "东川区",
      "parent": "530100",
      "children": null },
    {
      "id": "530121",
      "name": "呈贡区",
      "parent": "530100",
      "children": null },
    {
      "id": "530122",
      "name": "晋宁县",
      "parent": "530100",
      "children": null },
    {
      "id": "530124",
      "name": "富民县",
      "parent": "530100",
      "children": null },
    {
      "id": "530125",
      "name": "宜良县",
      "parent": "530100",
      "children": null },
    {
      "id": "530126",
      "name": "石林彝族自治县",
      "parent": "530100",
      "children": null },
    {
      "id": "530127",
      "name": "嵩明县",
      "parent": "530100",
      "children": null },
    {
      "id": "530128",
      "name": "禄劝彝族苗族自治县",
      "parent": "530100",
      "children": null },
    {
      "id": "530129",
      "name": "寻甸回族彝族自治县",
      "parent": "530100",
      "children": null },
    {
      "id": "530181",
      "name": "安宁市",
      "parent": "530100",
      "children": null },
    {
      "id": "530182",
      "name": "其它区",
      "parent": "530100",
      "children": null }] },

  {
    "id": "530300",
    "name": "曲靖市",
    "parent": "530000",
    "children": [{
      "id": "530302",
      "name": "麒麟区",
      "parent": "530300",
      "children": null },
    {
      "id": "530321",
      "name": "马龙县",
      "parent": "530300",
      "children": null },
    {
      "id": "530322",
      "name": "陆良县",
      "parent": "530300",
      "children": null },
    {
      "id": "530323",
      "name": "师宗县",
      "parent": "530300",
      "children": null },
    {
      "id": "530324",
      "name": "罗平县",
      "parent": "530300",
      "children": null },
    {
      "id": "530325",
      "name": "富源县",
      "parent": "530300",
      "children": null },
    {
      "id": "530326",
      "name": "会泽县",
      "parent": "530300",
      "children": null },
    {
      "id": "530328",
      "name": "沾益县",
      "parent": "530300",
      "children": null },
    {
      "id": "530381",
      "name": "宣威市",
      "parent": "530300",
      "children": null },
    {
      "id": "530382",
      "name": "其它区",
      "parent": "530300",
      "children": null }] },

  {
    "id": "530400",
    "name": "玉溪市",
    "parent": "530000",
    "children": [{
      "id": "530402",
      "name": "红塔区",
      "parent": "530400",
      "children": null },
    {
      "id": "530421",
      "name": "江川县",
      "parent": "530400",
      "children": null },
    {
      "id": "530422",
      "name": "澄江县",
      "parent": "530400",
      "children": null },
    {
      "id": "530423",
      "name": "通海县",
      "parent": "530400",
      "children": null },
    {
      "id": "530424",
      "name": "华宁县",
      "parent": "530400",
      "children": null },
    {
      "id": "530425",
      "name": "易门县",
      "parent": "530400",
      "children": null },
    {
      "id": "530426",
      "name": "峨山彝族自治县",
      "parent": "530400",
      "children": null },
    {
      "id": "530427",
      "name": "新平彝族傣族自治县",
      "parent": "530400",
      "children": null },
    {
      "id": "530428",
      "name": "元江哈尼族彝族傣族自治县",
      "parent": "530400",
      "children": null },
    {
      "id": "530429",
      "name": "其它区",
      "parent": "530400",
      "children": null }] },

  {
    "id": "530500",
    "name": "保山市",
    "parent": "530000",
    "children": [{
      "id": "530502",
      "name": "隆阳区",
      "parent": "530500",
      "children": null },
    {
      "id": "530521",
      "name": "施甸县",
      "parent": "530500",
      "children": null },
    {
      "id": "530522",
      "name": "腾冲县",
      "parent": "530500",
      "children": null },
    {
      "id": "530523",
      "name": "龙陵县",
      "parent": "530500",
      "children": null },
    {
      "id": "530524",
      "name": "昌宁县",
      "parent": "530500",
      "children": null },
    {
      "id": "530525",
      "name": "其它区",
      "parent": "530500",
      "children": null }] },

  {
    "id": "530600",
    "name": "昭通市",
    "parent": "530000",
    "children": [{
      "id": "530602",
      "name": "昭阳区",
      "parent": "530600",
      "children": null },
    {
      "id": "530621",
      "name": "鲁甸县",
      "parent": "530600",
      "children": null },
    {
      "id": "530622",
      "name": "巧家县",
      "parent": "530600",
      "children": null },
    {
      "id": "530623",
      "name": "盐津县",
      "parent": "530600",
      "children": null },
    {
      "id": "530624",
      "name": "大关县",
      "parent": "530600",
      "children": null },
    {
      "id": "530625",
      "name": "永善县",
      "parent": "530600",
      "children": null },
    {
      "id": "530626",
      "name": "绥江县",
      "parent": "530600",
      "children": null },
    {
      "id": "530627",
      "name": "镇雄县",
      "parent": "530600",
      "children": null },
    {
      "id": "530628",
      "name": "彝良县",
      "parent": "530600",
      "children": null },
    {
      "id": "530629",
      "name": "威信县",
      "parent": "530600",
      "children": null },
    {
      "id": "530630",
      "name": "水富县",
      "parent": "530600",
      "children": null },
    {
      "id": "530631",
      "name": "其它区",
      "parent": "530600",
      "children": null }] },

  {
    "id": "530700",
    "name": "丽江市",
    "parent": "530000",
    "children": [{
      "id": "530702",
      "name": "古城区",
      "parent": "530700",
      "children": null },
    {
      "id": "530721",
      "name": "玉龙纳西族自治县",
      "parent": "530700",
      "children": null },
    {
      "id": "530722",
      "name": "永胜县",
      "parent": "530700",
      "children": null },
    {
      "id": "530723",
      "name": "华坪县",
      "parent": "530700",
      "children": null },
    {
      "id": "530724",
      "name": "宁蒗彝族自治县",
      "parent": "530700",
      "children": null },
    {
      "id": "530725",
      "name": "其它区",
      "parent": "530700",
      "children": null }] },

  {
    "id": "530800",
    "name": "普洱市",
    "parent": "530000",
    "children": [{
      "id": "530802",
      "name": "思茅区",
      "parent": "530800",
      "children": null },
    {
      "id": "530821",
      "name": "宁洱哈尼族彝族自治县",
      "parent": "530800",
      "children": null },
    {
      "id": "530822",
      "name": "墨江哈尼族自治县",
      "parent": "530800",
      "children": null },
    {
      "id": "530823",
      "name": "景东彝族自治县",
      "parent": "530800",
      "children": null },
    {
      "id": "530824",
      "name": "景谷傣族彝族自治县",
      "parent": "530800",
      "children": null },
    {
      "id": "530825",
      "name": "镇沅彝族哈尼族拉祜族自治县",
      "parent": "530800",
      "children": null },
    {
      "id": "530826",
      "name": "江城哈尼族彝族自治县",
      "parent": "530800",
      "children": null },
    {
      "id": "530827",
      "name": "孟连傣族拉祜族佤族自治县",
      "parent": "530800",
      "children": null },
    {
      "id": "530828",
      "name": "澜沧拉祜族自治县",
      "parent": "530800",
      "children": null },
    {
      "id": "530829",
      "name": "西盟佤族自治县",
      "parent": "530800",
      "children": null },
    {
      "id": "530830",
      "name": "其它区",
      "parent": "530800",
      "children": null }] },

  {
    "id": "530900",
    "name": "临沧市",
    "parent": "530000",
    "children": [{
      "id": "530902",
      "name": "临翔区",
      "parent": "530900",
      "children": null },
    {
      "id": "530921",
      "name": "凤庆县",
      "parent": "530900",
      "children": null },
    {
      "id": "530922",
      "name": "云县",
      "parent": "530900",
      "children": null },
    {
      "id": "530923",
      "name": "永德县",
      "parent": "530900",
      "children": null },
    {
      "id": "530924",
      "name": "镇康县",
      "parent": "530900",
      "children": null },
    {
      "id": "530925",
      "name": "双江拉祜族佤族布朗族傣族自治县",
      "parent": "530900",
      "children": null },
    {
      "id": "530926",
      "name": "耿马傣族佤族自治县",
      "parent": "530900",
      "children": null },
    {
      "id": "530927",
      "name": "沧源佤族自治县",
      "parent": "530900",
      "children": null },
    {
      "id": "530928",
      "name": "其它区",
      "parent": "530900",
      "children": null }] },

  {
    "id": "532300",
    "name": "楚雄彝族自治州",
    "parent": "530000",
    "children": [{
      "id": "532301",
      "name": "楚雄市",
      "parent": "532300",
      "children": null },
    {
      "id": "532322",
      "name": "双柏县",
      "parent": "532300",
      "children": null },
    {
      "id": "532323",
      "name": "牟定县",
      "parent": "532300",
      "children": null },
    {
      "id": "532324",
      "name": "南华县",
      "parent": "532300",
      "children": null },
    {
      "id": "532325",
      "name": "姚安县",
      "parent": "532300",
      "children": null },
    {
      "id": "532326",
      "name": "大姚县",
      "parent": "532300",
      "children": null },
    {
      "id": "532327",
      "name": "永仁县",
      "parent": "532300",
      "children": null },
    {
      "id": "532328",
      "name": "元谋县",
      "parent": "532300",
      "children": null },
    {
      "id": "532329",
      "name": "武定县",
      "parent": "532300",
      "children": null },
    {
      "id": "532331",
      "name": "禄丰县",
      "parent": "532300",
      "children": null },
    {
      "id": "532332",
      "name": "其它区",
      "parent": "532300",
      "children": null }] },

  {
    "id": "532500",
    "name": "红河哈尼族彝族自治州",
    "parent": "530000",
    "children": [{
      "id": "532501",
      "name": "个旧市",
      "parent": "532500",
      "children": null },
    {
      "id": "532502",
      "name": "开远市",
      "parent": "532500",
      "children": null },
    {
      "id": "532522",
      "name": "蒙自市",
      "parent": "532500",
      "children": null },
    {
      "id": "532523",
      "name": "屏边苗族自治县",
      "parent": "532500",
      "children": null },
    {
      "id": "532524",
      "name": "建水县",
      "parent": "532500",
      "children": null },
    {
      "id": "532525",
      "name": "石屏县",
      "parent": "532500",
      "children": null },
    {
      "id": "532526",
      "name": "弥勒市",
      "parent": "532500",
      "children": null },
    {
      "id": "532527",
      "name": "泸西县",
      "parent": "532500",
      "children": null },
    {
      "id": "532528",
      "name": "元阳县",
      "parent": "532500",
      "children": null },
    {
      "id": "532529",
      "name": "红河县",
      "parent": "532500",
      "children": null },
    {
      "id": "532530",
      "name": "金平苗族瑶族傣族自治县",
      "parent": "532500",
      "children": null },
    {
      "id": "532531",
      "name": "绿春县",
      "parent": "532500",
      "children": null },
    {
      "id": "532532",
      "name": "河口瑶族自治县",
      "parent": "532500",
      "children": null },
    {
      "id": "532533",
      "name": "其它区",
      "parent": "532500",
      "children": null }] },

  {
    "id": "532600",
    "name": "文山壮族苗族自治州",
    "parent": "530000",
    "children": [{
      "id": "532621",
      "name": "文山市",
      "parent": "532600",
      "children": null },
    {
      "id": "532622",
      "name": "砚山县",
      "parent": "532600",
      "children": null },
    {
      "id": "532623",
      "name": "西畴县",
      "parent": "532600",
      "children": null },
    {
      "id": "532624",
      "name": "麻栗坡县",
      "parent": "532600",
      "children": null },
    {
      "id": "532625",
      "name": "马关县",
      "parent": "532600",
      "children": null },
    {
      "id": "532626",
      "name": "丘北县",
      "parent": "532600",
      "children": null },
    {
      "id": "532627",
      "name": "广南县",
      "parent": "532600",
      "children": null },
    {
      "id": "532628",
      "name": "富宁县",
      "parent": "532600",
      "children": null },
    {
      "id": "532629",
      "name": "其它区",
      "parent": "532600",
      "children": null }] },

  {
    "id": "532800",
    "name": "西双版纳傣族自治州",
    "parent": "530000",
    "children": [{
      "id": "532801",
      "name": "景洪市",
      "parent": "532800",
      "children": null },
    {
      "id": "532822",
      "name": "勐海县",
      "parent": "532800",
      "children": null },
    {
      "id": "532823",
      "name": "勐腊县",
      "parent": "532800",
      "children": null },
    {
      "id": "532824",
      "name": "其它区",
      "parent": "532800",
      "children": null }] },

  {
    "id": "532900",
    "name": "大理白族自治州",
    "parent": "530000",
    "children": [{
      "id": "532901",
      "name": "大理市",
      "parent": "532900",
      "children": null },
    {
      "id": "532922",
      "name": "漾濞彝族自治县",
      "parent": "532900",
      "children": null },
    {
      "id": "532923",
      "name": "祥云县",
      "parent": "532900",
      "children": null },
    {
      "id": "532924",
      "name": "宾川县",
      "parent": "532900",
      "children": null },
    {
      "id": "532925",
      "name": "弥渡县",
      "parent": "532900",
      "children": null },
    {
      "id": "532926",
      "name": "南涧彝族自治县",
      "parent": "532900",
      "children": null },
    {
      "id": "532927",
      "name": "巍山彝族回族自治县",
      "parent": "532900",
      "children": null },
    {
      "id": "532928",
      "name": "永平县",
      "parent": "532900",
      "children": null },
    {
      "id": "532929",
      "name": "云龙县",
      "parent": "532900",
      "children": null },
    {
      "id": "532930",
      "name": "洱源县",
      "parent": "532900",
      "children": null },
    {
      "id": "532931",
      "name": "剑川县",
      "parent": "532900",
      "children": null },
    {
      "id": "532932",
      "name": "鹤庆县",
      "parent": "532900",
      "children": null },
    {
      "id": "532933",
      "name": "其它区",
      "parent": "532900",
      "children": null }] },

  {
    "id": "533100",
    "name": "德宏傣族景颇族自治州",
    "parent": "530000",
    "children": [{
      "id": "533102",
      "name": "瑞丽市",
      "parent": "533100",
      "children": null },
    {
      "id": "533103",
      "name": "芒市",
      "parent": "533100",
      "children": null },
    {
      "id": "533122",
      "name": "梁河县",
      "parent": "533100",
      "children": null },
    {
      "id": "533123",
      "name": "盈江县",
      "parent": "533100",
      "children": null },
    {
      "id": "533124",
      "name": "陇川县",
      "parent": "533100",
      "children": null },
    {
      "id": "533125",
      "name": "其它区",
      "parent": "533100",
      "children": null }] },

  {
    "id": "533300",
    "name": "怒江傈僳族自治州",
    "parent": "530000",
    "children": [{
      "id": "533321",
      "name": "泸水县",
      "parent": "533300",
      "children": null },
    {
      "id": "533323",
      "name": "福贡县",
      "parent": "533300",
      "children": null },
    {
      "id": "533324",
      "name": "贡山独龙族怒族自治县",
      "parent": "533300",
      "children": null },
    {
      "id": "533325",
      "name": "兰坪白族普米族自治县",
      "parent": "533300",
      "children": null },
    {
      "id": "533326",
      "name": "其它区",
      "parent": "533300",
      "children": null }] },

  {
    "id": "533400",
    "name": "迪庆藏族自治州",
    "parent": "530000",
    "children": [{
      "id": "533421",
      "name": "香格里拉市",
      "parent": "533400",
      "children": null },
    {
      "id": "533422",
      "name": "德钦县",
      "parent": "533400",
      "children": null },
    {
      "id": "533423",
      "name": "维西傈僳族自治县",
      "parent": "533400",
      "children": null },
    {
      "id": "533424",
      "name": "其它区",
      "parent": "533400",
      "children": null }] }] },


{
  "id": "540000",
  "name": "西藏自治区",
  "children": [{
    "id": "540100",
    "name": "拉萨市",
    "parent": "540000",
    "children": [{
      "id": "540102",
      "name": "城关区",
      "parent": "540100",
      "children": null },
    {
      "id": "540121",
      "name": "林周县",
      "parent": "540100",
      "children": null },
    {
      "id": "540122",
      "name": "当雄县",
      "parent": "540100",
      "children": null },
    {
      "id": "540123",
      "name": "尼木县",
      "parent": "540100",
      "children": null },
    {
      "id": "540124",
      "name": "曲水县",
      "parent": "540100",
      "children": null },
    {
      "id": "540125",
      "name": "堆龙德庆县",
      "parent": "540100",
      "children": null },
    {
      "id": "540126",
      "name": "达孜县",
      "parent": "540100",
      "children": null },
    {
      "id": "540127",
      "name": "墨竹工卡县",
      "parent": "540100",
      "children": null },
    {
      "id": "540128",
      "name": "其它区",
      "parent": "540100",
      "children": null }] },

  {
    "id": "542100",
    "name": "昌都市",
    "parent": "540000",
    "children": [{
      "id": "542121",
      "name": "卡若区",
      "parent": "542100",
      "children": null },
    {
      "id": "542122",
      "name": "江达县",
      "parent": "542100",
      "children": null },
    {
      "id": "542123",
      "name": "贡觉县",
      "parent": "542100",
      "children": null },
    {
      "id": "542124",
      "name": "类乌齐县",
      "parent": "542100",
      "children": null },
    {
      "id": "542125",
      "name": "丁青县",
      "parent": "542100",
      "children": null },
    {
      "id": "542126",
      "name": "察雅县",
      "parent": "542100",
      "children": null },
    {
      "id": "542127",
      "name": "八宿县",
      "parent": "542100",
      "children": null },
    {
      "id": "542128",
      "name": "左贡县",
      "parent": "542100",
      "children": null },
    {
      "id": "542129",
      "name": "芒康县",
      "parent": "542100",
      "children": null },
    {
      "id": "542132",
      "name": "洛隆县",
      "parent": "542100",
      "children": null },
    {
      "id": "542133",
      "name": "边坝县",
      "parent": "542100",
      "children": null },
    {
      "id": "542134",
      "name": "其它区",
      "parent": "542100",
      "children": null }] },

  {
    "id": "542200",
    "name": "山南地区",
    "parent": "540000",
    "children": [{
      "id": "542221",
      "name": "乃东县",
      "parent": "542200",
      "children": null },
    {
      "id": "542222",
      "name": "扎囊县",
      "parent": "542200",
      "children": null },
    {
      "id": "542223",
      "name": "贡嘎县",
      "parent": "542200",
      "children": null },
    {
      "id": "542224",
      "name": "桑日县",
      "parent": "542200",
      "children": null },
    {
      "id": "542225",
      "name": "琼结县",
      "parent": "542200",
      "children": null },
    {
      "id": "542226",
      "name": "曲松县",
      "parent": "542200",
      "children": null },
    {
      "id": "542227",
      "name": "措美县",
      "parent": "542200",
      "children": null },
    {
      "id": "542228",
      "name": "洛扎县",
      "parent": "542200",
      "children": null },
    {
      "id": "542229",
      "name": "加查县",
      "parent": "542200",
      "children": null },
    {
      "id": "542231",
      "name": "隆子县",
      "parent": "542200",
      "children": null },
    {
      "id": "542232",
      "name": "错那县",
      "parent": "542200",
      "children": null },
    {
      "id": "542233",
      "name": "浪卡子县",
      "parent": "542200",
      "children": null },
    {
      "id": "542234",
      "name": "其它区",
      "parent": "542200",
      "children": null }] },

  {
    "id": "542300",
    "name": "日喀则市",
    "parent": "540000",
    "children": [{
      "id": "542301",
      "name": "桑珠孜区",
      "parent": "542300",
      "children": null },
    {
      "id": "542322",
      "name": "南木林县",
      "parent": "542300",
      "children": null },
    {
      "id": "542323",
      "name": "江孜县",
      "parent": "542300",
      "children": null },
    {
      "id": "542324",
      "name": "定日县",
      "parent": "542300",
      "children": null },
    {
      "id": "542325",
      "name": "萨迦县",
      "parent": "542300",
      "children": null },
    {
      "id": "542326",
      "name": "拉孜县",
      "parent": "542300",
      "children": null },
    {
      "id": "542327",
      "name": "昂仁县",
      "parent": "542300",
      "children": null },
    {
      "id": "542328",
      "name": "谢通门县",
      "parent": "542300",
      "children": null },
    {
      "id": "542329",
      "name": "白朗县",
      "parent": "542300",
      "children": null },
    {
      "id": "542330",
      "name": "仁布县",
      "parent": "542300",
      "children": null },
    {
      "id": "542331",
      "name": "康马县",
      "parent": "542300",
      "children": null },
    {
      "id": "542332",
      "name": "定结县",
      "parent": "542300",
      "children": null },
    {
      "id": "542333",
      "name": "仲巴县",
      "parent": "542300",
      "children": null },
    {
      "id": "542334",
      "name": "亚东县",
      "parent": "542300",
      "children": null },
    {
      "id": "542335",
      "name": "吉隆县",
      "parent": "542300",
      "children": null },
    {
      "id": "542336",
      "name": "聂拉木县",
      "parent": "542300",
      "children": null },
    {
      "id": "542337",
      "name": "萨嘎县",
      "parent": "542300",
      "children": null },
    {
      "id": "542338",
      "name": "岗巴县",
      "parent": "542300",
      "children": null },
    {
      "id": "542339",
      "name": "其它区",
      "parent": "542300",
      "children": null }] },

  {
    "id": "542400",
    "name": "那曲地区",
    "parent": "540000",
    "children": [{
      "id": "542421",
      "name": "那曲县",
      "parent": "542400",
      "children": null },
    {
      "id": "542422",
      "name": "嘉黎县",
      "parent": "542400",
      "children": null },
    {
      "id": "542423",
      "name": "比如县",
      "parent": "542400",
      "children": null },
    {
      "id": "542424",
      "name": "聂荣县",
      "parent": "542400",
      "children": null },
    {
      "id": "542425",
      "name": "安多县",
      "parent": "542400",
      "children": null },
    {
      "id": "542426",
      "name": "申扎县",
      "parent": "542400",
      "children": null },
    {
      "id": "542427",
      "name": "索县",
      "parent": "542400",
      "children": null },
    {
      "id": "542428",
      "name": "班戈县",
      "parent": "542400",
      "children": null },
    {
      "id": "542429",
      "name": "巴青县",
      "parent": "542400",
      "children": null },
    {
      "id": "542430",
      "name": "尼玛县",
      "parent": "542400",
      "children": null },
    {
      "id": "542431",
      "name": "其它区",
      "parent": "542400",
      "children": null },
    {
      "id": "542432",
      "name": "双湖县",
      "parent": "542400",
      "children": null }] },

  {
    "id": "542500",
    "name": "阿里地区",
    "parent": "540000",
    "children": [{
      "id": "542521",
      "name": "普兰县",
      "parent": "542500",
      "children": null },
    {
      "id": "542522",
      "name": "札达县",
      "parent": "542500",
      "children": null },
    {
      "id": "542523",
      "name": "噶尔县",
      "parent": "542500",
      "children": null },
    {
      "id": "542524",
      "name": "日土县",
      "parent": "542500",
      "children": null },
    {
      "id": "542525",
      "name": "革吉县",
      "parent": "542500",
      "children": null },
    {
      "id": "542526",
      "name": "改则县",
      "parent": "542500",
      "children": null },
    {
      "id": "542527",
      "name": "措勤县",
      "parent": "542500",
      "children": null },
    {
      "id": "542528",
      "name": "其它区",
      "parent": "542500",
      "children": null }] },

  {
    "id": "542600",
    "name": "林芝市",
    "parent": "540000",
    "children": [{
      "id": "542621",
      "name": "巴宜区",
      "parent": "542600",
      "children": null },
    {
      "id": "542622",
      "name": "工布江达县",
      "parent": "542600",
      "children": null },
    {
      "id": "542623",
      "name": "米林县",
      "parent": "542600",
      "children": null },
    {
      "id": "542624",
      "name": "墨脱县",
      "parent": "542600",
      "children": null },
    {
      "id": "542625",
      "name": "波密县",
      "parent": "542600",
      "children": null },
    {
      "id": "542626",
      "name": "察隅县",
      "parent": "542600",
      "children": null },
    {
      "id": "542627",
      "name": "朗县",
      "parent": "542600",
      "children": null },
    {
      "id": "542628",
      "name": "其它区",
      "parent": "542600",
      "children": null }] }] },


{
  "id": "610000",
  "name": "陕西省",
  "children": [{
    "id": "610100",
    "name": "西安市",
    "parent": "610000",
    "children": [{
      "id": "610102",
      "name": "新城区",
      "parent": "610100",
      "children": null },
    {
      "id": "610103",
      "name": "碑林区",
      "parent": "610100",
      "children": null },
    {
      "id": "610104",
      "name": "莲湖区",
      "parent": "610100",
      "children": null },
    {
      "id": "610111",
      "name": "灞桥区",
      "parent": "610100",
      "children": null },
    {
      "id": "610112",
      "name": "未央区",
      "parent": "610100",
      "children": null },
    {
      "id": "610113",
      "name": "雁塔区",
      "parent": "610100",
      "children": null },
    {
      "id": "610114",
      "name": "阎良区",
      "parent": "610100",
      "children": null },
    {
      "id": "610115",
      "name": "临潼区",
      "parent": "610100",
      "children": null },
    {
      "id": "610116",
      "name": "长安区",
      "parent": "610100",
      "children": null },
    {
      "id": "610122",
      "name": "蓝田县",
      "parent": "610100",
      "children": null },
    {
      "id": "610124",
      "name": "周至县",
      "parent": "610100",
      "children": null },
    {
      "id": "610125",
      "name": "户县",
      "parent": "610100",
      "children": null },
    {
      "id": "610126",
      "name": "高陵区",
      "parent": "610100",
      "children": null },
    {
      "id": "610127",
      "name": "其它区",
      "parent": "610100",
      "children": null }] },

  {
    "id": "610200",
    "name": "铜川市",
    "parent": "610000",
    "children": [{
      "id": "610202",
      "name": "王益区",
      "parent": "610200",
      "children": null },
    {
      "id": "610203",
      "name": "印台区",
      "parent": "610200",
      "children": null },
    {
      "id": "610204",
      "name": "耀州区",
      "parent": "610200",
      "children": null },
    {
      "id": "610222",
      "name": "宜君县",
      "parent": "610200",
      "children": null },
    {
      "id": "610223",
      "name": "其它区",
      "parent": "610200",
      "children": null }] },

  {
    "id": "610300",
    "name": "宝鸡市",
    "parent": "610000",
    "children": [{
      "id": "610302",
      "name": "渭滨区",
      "parent": "610300",
      "children": null },
    {
      "id": "610303",
      "name": "金台区",
      "parent": "610300",
      "children": null },
    {
      "id": "610304",
      "name": "陈仓区",
      "parent": "610300",
      "children": null },
    {
      "id": "610322",
      "name": "凤翔县",
      "parent": "610300",
      "children": null },
    {
      "id": "610323",
      "name": "岐山县",
      "parent": "610300",
      "children": null },
    {
      "id": "610324",
      "name": "扶风县",
      "parent": "610300",
      "children": null },
    {
      "id": "610326",
      "name": "眉县",
      "parent": "610300",
      "children": null },
    {
      "id": "610327",
      "name": "陇县",
      "parent": "610300",
      "children": null },
    {
      "id": "610328",
      "name": "千阳县",
      "parent": "610300",
      "children": null },
    {
      "id": "610329",
      "name": "麟游县",
      "parent": "610300",
      "children": null },
    {
      "id": "610330",
      "name": "凤县",
      "parent": "610300",
      "children": null },
    {
      "id": "610331",
      "name": "太白县",
      "parent": "610300",
      "children": null },
    {
      "id": "610332",
      "name": "其它区",
      "parent": "610300",
      "children": null }] },

  {
    "id": "610400",
    "name": "咸阳市",
    "parent": "610000",
    "children": [{
      "id": "610402",
      "name": "秦都区",
      "parent": "610400",
      "children": null },
    {
      "id": "610403",
      "name": "杨陵区",
      "parent": "610400",
      "children": null },
    {
      "id": "610404",
      "name": "渭城区",
      "parent": "610400",
      "children": null },
    {
      "id": "610422",
      "name": "三原县",
      "parent": "610400",
      "children": null },
    {
      "id": "610423",
      "name": "泾阳县",
      "parent": "610400",
      "children": null },
    {
      "id": "610424",
      "name": "乾县",
      "parent": "610400",
      "children": null },
    {
      "id": "610425",
      "name": "礼泉县",
      "parent": "610400",
      "children": null },
    {
      "id": "610426",
      "name": "永寿县",
      "parent": "610400",
      "children": null },
    {
      "id": "610427",
      "name": "彬县",
      "parent": "610400",
      "children": null },
    {
      "id": "610428",
      "name": "长武县",
      "parent": "610400",
      "children": null },
    {
      "id": "610429",
      "name": "旬邑县",
      "parent": "610400",
      "children": null },
    {
      "id": "610430",
      "name": "淳化县",
      "parent": "610400",
      "children": null },
    {
      "id": "610431",
      "name": "武功县",
      "parent": "610400",
      "children": null },
    {
      "id": "610481",
      "name": "兴平市",
      "parent": "610400",
      "children": null },
    {
      "id": "610482",
      "name": "其它区",
      "parent": "610400",
      "children": null }] },

  {
    "id": "610500",
    "name": "渭南市",
    "parent": "610000",
    "children": [{
      "id": "610502",
      "name": "临渭区",
      "parent": "610500",
      "children": null },
    {
      "id": "610521",
      "name": "华县",
      "parent": "610500",
      "children": null },
    {
      "id": "610522",
      "name": "潼关县",
      "parent": "610500",
      "children": null },
    {
      "id": "610523",
      "name": "大荔县",
      "parent": "610500",
      "children": null },
    {
      "id": "610524",
      "name": "合阳县",
      "parent": "610500",
      "children": null },
    {
      "id": "610525",
      "name": "澄城县",
      "parent": "610500",
      "children": null },
    {
      "id": "610526",
      "name": "蒲城县",
      "parent": "610500",
      "children": null },
    {
      "id": "610527",
      "name": "白水县",
      "parent": "610500",
      "children": null },
    {
      "id": "610528",
      "name": "富平县",
      "parent": "610500",
      "children": null },
    {
      "id": "610581",
      "name": "韩城市",
      "parent": "610500",
      "children": null },
    {
      "id": "610582",
      "name": "华阴市",
      "parent": "610500",
      "children": null },
    {
      "id": "610583",
      "name": "其它区",
      "parent": "610500",
      "children": null }] },

  {
    "id": "610600",
    "name": "延安市",
    "parent": "610000",
    "children": [{
      "id": "610602",
      "name": "宝塔区",
      "parent": "610600",
      "children": null },
    {
      "id": "610621",
      "name": "延长县",
      "parent": "610600",
      "children": null },
    {
      "id": "610622",
      "name": "延川县",
      "parent": "610600",
      "children": null },
    {
      "id": "610623",
      "name": "子长县",
      "parent": "610600",
      "children": null },
    {
      "id": "610624",
      "name": "安塞县",
      "parent": "610600",
      "children": null },
    {
      "id": "610625",
      "name": "志丹县",
      "parent": "610600",
      "children": null },
    {
      "id": "610626",
      "name": "吴起县",
      "parent": "610600",
      "children": null },
    {
      "id": "610627",
      "name": "甘泉县",
      "parent": "610600",
      "children": null },
    {
      "id": "610628",
      "name": "富县",
      "parent": "610600",
      "children": null },
    {
      "id": "610629",
      "name": "洛川县",
      "parent": "610600",
      "children": null },
    {
      "id": "610630",
      "name": "宜川县",
      "parent": "610600",
      "children": null },
    {
      "id": "610631",
      "name": "黄龙县",
      "parent": "610600",
      "children": null },
    {
      "id": "610632",
      "name": "黄陵县",
      "parent": "610600",
      "children": null },
    {
      "id": "610633",
      "name": "其它区",
      "parent": "610600",
      "children": null }] },

  {
    "id": "610700",
    "name": "汉中市",
    "parent": "610000",
    "children": [{
      "id": "610702",
      "name": "汉台区",
      "parent": "610700",
      "children": null },
    {
      "id": "610721",
      "name": "南郑县",
      "parent": "610700",
      "children": null },
    {
      "id": "610722",
      "name": "城固县",
      "parent": "610700",
      "children": null },
    {
      "id": "610723",
      "name": "洋县",
      "parent": "610700",
      "children": null },
    {
      "id": "610724",
      "name": "西乡县",
      "parent": "610700",
      "children": null },
    {
      "id": "610725",
      "name": "勉县",
      "parent": "610700",
      "children": null },
    {
      "id": "610726",
      "name": "宁强县",
      "parent": "610700",
      "children": null },
    {
      "id": "610727",
      "name": "略阳县",
      "parent": "610700",
      "children": null },
    {
      "id": "610728",
      "name": "镇巴县",
      "parent": "610700",
      "children": null },
    {
      "id": "610729",
      "name": "留坝县",
      "parent": "610700",
      "children": null },
    {
      "id": "610730",
      "name": "佛坪县",
      "parent": "610700",
      "children": null },
    {
      "id": "610731",
      "name": "其它区",
      "parent": "610700",
      "children": null }] },

  {
    "id": "610800",
    "name": "榆林市",
    "parent": "610000",
    "children": [{
      "id": "610802",
      "name": "榆阳区",
      "parent": "610800",
      "children": null },
    {
      "id": "610821",
      "name": "神木县",
      "parent": "610800",
      "children": null },
    {
      "id": "610822",
      "name": "府谷县",
      "parent": "610800",
      "children": null },
    {
      "id": "610823",
      "name": "横山县",
      "parent": "610800",
      "children": null },
    {
      "id": "610824",
      "name": "靖边县",
      "parent": "610800",
      "children": null },
    {
      "id": "610825",
      "name": "定边县",
      "parent": "610800",
      "children": null },
    {
      "id": "610826",
      "name": "绥德县",
      "parent": "610800",
      "children": null },
    {
      "id": "610827",
      "name": "米脂县",
      "parent": "610800",
      "children": null },
    {
      "id": "610828",
      "name": "佳县",
      "parent": "610800",
      "children": null },
    {
      "id": "610829",
      "name": "吴堡县",
      "parent": "610800",
      "children": null },
    {
      "id": "610830",
      "name": "清涧县",
      "parent": "610800",
      "children": null },
    {
      "id": "610831",
      "name": "子洲县",
      "parent": "610800",
      "children": null },
    {
      "id": "610832",
      "name": "其它区",
      "parent": "610800",
      "children": null }] },

  {
    "id": "610900",
    "name": "安康市",
    "parent": "610000",
    "children": [{
      "id": "610902",
      "name": "汉滨区",
      "parent": "610900",
      "children": null },
    {
      "id": "610921",
      "name": "汉阴县",
      "parent": "610900",
      "children": null },
    {
      "id": "610922",
      "name": "石泉县",
      "parent": "610900",
      "children": null },
    {
      "id": "610923",
      "name": "宁陕县",
      "parent": "610900",
      "children": null },
    {
      "id": "610924",
      "name": "紫阳县",
      "parent": "610900",
      "children": null },
    {
      "id": "610925",
      "name": "岚皋县",
      "parent": "610900",
      "children": null },
    {
      "id": "610926",
      "name": "平利县",
      "parent": "610900",
      "children": null },
    {
      "id": "610927",
      "name": "镇坪县",
      "parent": "610900",
      "children": null },
    {
      "id": "610928",
      "name": "旬阳县",
      "parent": "610900",
      "children": null },
    {
      "id": "610929",
      "name": "白河县",
      "parent": "610900",
      "children": null },
    {
      "id": "610930",
      "name": "其它区",
      "parent": "610900",
      "children": null }] },

  {
    "id": "611000",
    "name": "商洛市",
    "parent": "610000",
    "children": [{
      "id": "611002",
      "name": "商州区",
      "parent": "611000",
      "children": null },
    {
      "id": "611021",
      "name": "洛南县",
      "parent": "611000",
      "children": null },
    {
      "id": "611022",
      "name": "丹凤县",
      "parent": "611000",
      "children": null },
    {
      "id": "611023",
      "name": "商南县",
      "parent": "611000",
      "children": null },
    {
      "id": "611024",
      "name": "山阳县",
      "parent": "611000",
      "children": null },
    {
      "id": "611025",
      "name": "镇安县",
      "parent": "611000",
      "children": null },
    {
      "id": "611026",
      "name": "柞水县",
      "parent": "611000",
      "children": null },
    {
      "id": "611027",
      "name": "其它区",
      "parent": "611000",
      "children": null }] }] },


{
  "id": "620000",
  "name": "甘肃省",
  "children": [{
    "id": "620100",
    "name": "兰州市",
    "parent": "620000",
    "children": [{
      "id": "620102",
      "name": "城关区",
      "parent": "620100",
      "children": null },
    {
      "id": "620103",
      "name": "七里河区",
      "parent": "620100",
      "children": null },
    {
      "id": "620104",
      "name": "西固区",
      "parent": "620100",
      "children": null },
    {
      "id": "620105",
      "name": "安宁区",
      "parent": "620100",
      "children": null },
    {
      "id": "620111",
      "name": "红古区",
      "parent": "620100",
      "children": null },
    {
      "id": "620121",
      "name": "永登县",
      "parent": "620100",
      "children": null },
    {
      "id": "620122",
      "name": "皋兰县",
      "parent": "620100",
      "children": null },
    {
      "id": "620123",
      "name": "榆中县",
      "parent": "620100",
      "children": null },
    {
      "id": "620124",
      "name": "其它区",
      "parent": "620100",
      "children": null }] },

  {
    "id": "620200",
    "name": "嘉峪关市",
    "parent": "620000",
    "children": null },
  {
    "id": "620300",
    "name": "金昌市",
    "parent": "620000",
    "children": [{
      "id": "620302",
      "name": "金川区",
      "parent": "620300",
      "children": null },
    {
      "id": "620321",
      "name": "永昌县",
      "parent": "620300",
      "children": null },
    {
      "id": "620322",
      "name": "其它区",
      "parent": "620300",
      "children": null }] },

  {
    "id": "620400",
    "name": "白银市",
    "parent": "620000",
    "children": [{
      "id": "620402",
      "name": "白银区",
      "parent": "620400",
      "children": null },
    {
      "id": "620403",
      "name": "平川区",
      "parent": "620400",
      "children": null },
    {
      "id": "620421",
      "name": "靖远县",
      "parent": "620400",
      "children": null },
    {
      "id": "620422",
      "name": "会宁县",
      "parent": "620400",
      "children": null },
    {
      "id": "620423",
      "name": "景泰县",
      "parent": "620400",
      "children": null },
    {
      "id": "620424",
      "name": "其它区",
      "parent": "620400",
      "children": null }] },

  {
    "id": "620500",
    "name": "天水市",
    "parent": "620000",
    "children": [{
      "id": "620502",
      "name": "秦州区",
      "parent": "620500",
      "children": null },
    {
      "id": "620503",
      "name": "麦积区",
      "parent": "620500",
      "children": null },
    {
      "id": "620521",
      "name": "清水县",
      "parent": "620500",
      "children": null },
    {
      "id": "620522",
      "name": "秦安县",
      "parent": "620500",
      "children": null },
    {
      "id": "620523",
      "name": "甘谷县",
      "parent": "620500",
      "children": null },
    {
      "id": "620524",
      "name": "武山县",
      "parent": "620500",
      "children": null },
    {
      "id": "620525",
      "name": "张家川回族自治县",
      "parent": "620500",
      "children": null },
    {
      "id": "620526",
      "name": "其它区",
      "parent": "620500",
      "children": null }] },

  {
    "id": "620600",
    "name": "武威市",
    "parent": "620000",
    "children": [{
      "id": "620602",
      "name": "凉州区",
      "parent": "620600",
      "children": null },
    {
      "id": "620621",
      "name": "民勤县",
      "parent": "620600",
      "children": null },
    {
      "id": "620622",
      "name": "古浪县",
      "parent": "620600",
      "children": null },
    {
      "id": "620623",
      "name": "天祝藏族自治县",
      "parent": "620600",
      "children": null },
    {
      "id": "620624",
      "name": "其它区",
      "parent": "620600",
      "children": null }] },

  {
    "id": "620700",
    "name": "张掖市",
    "parent": "620000",
    "children": [{
      "id": "620702",
      "name": "甘州区",
      "parent": "620700",
      "children": null },
    {
      "id": "620721",
      "name": "肃南裕固族自治县",
      "parent": "620700",
      "children": null },
    {
      "id": "620722",
      "name": "民乐县",
      "parent": "620700",
      "children": null },
    {
      "id": "620723",
      "name": "临泽县",
      "parent": "620700",
      "children": null },
    {
      "id": "620724",
      "name": "高台县",
      "parent": "620700",
      "children": null },
    {
      "id": "620725",
      "name": "山丹县",
      "parent": "620700",
      "children": null },
    {
      "id": "620726",
      "name": "其它区",
      "parent": "620700",
      "children": null }] },

  {
    "id": "620800",
    "name": "平凉市",
    "parent": "620000",
    "children": [{
      "id": "620802",
      "name": "崆峒区",
      "parent": "620800",
      "children": null },
    {
      "id": "620821",
      "name": "泾川县",
      "parent": "620800",
      "children": null },
    {
      "id": "620822",
      "name": "灵台县",
      "parent": "620800",
      "children": null },
    {
      "id": "620823",
      "name": "崇信县",
      "parent": "620800",
      "children": null },
    {
      "id": "620824",
      "name": "华亭县",
      "parent": "620800",
      "children": null },
    {
      "id": "620825",
      "name": "庄浪县",
      "parent": "620800",
      "children": null },
    {
      "id": "620826",
      "name": "静宁县",
      "parent": "620800",
      "children": null },
    {
      "id": "620827",
      "name": "其它区",
      "parent": "620800",
      "children": null }] },

  {
    "id": "620900",
    "name": "酒泉市",
    "parent": "620000",
    "children": [{
      "id": "620902",
      "name": "肃州区",
      "parent": "620900",
      "children": null },
    {
      "id": "620921",
      "name": "金塔县",
      "parent": "620900",
      "children": null },
    {
      "id": "620922",
      "name": "瓜州县",
      "parent": "620900",
      "children": null },
    {
      "id": "620923",
      "name": "肃北蒙古族自治县",
      "parent": "620900",
      "children": null },
    {
      "id": "620924",
      "name": "阿克塞哈萨克族自治县",
      "parent": "620900",
      "children": null },
    {
      "id": "620981",
      "name": "玉门市",
      "parent": "620900",
      "children": null },
    {
      "id": "620982",
      "name": "敦煌市",
      "parent": "620900",
      "children": null },
    {
      "id": "620983",
      "name": "其它区",
      "parent": "620900",
      "children": null }] },

  {
    "id": "621000",
    "name": "庆阳市",
    "parent": "620000",
    "children": [{
      "id": "621002",
      "name": "西峰区",
      "parent": "621000",
      "children": null },
    {
      "id": "621021",
      "name": "庆城县",
      "parent": "621000",
      "children": null },
    {
      "id": "621022",
      "name": "环县",
      "parent": "621000",
      "children": null },
    {
      "id": "621023",
      "name": "华池县",
      "parent": "621000",
      "children": null },
    {
      "id": "621024",
      "name": "合水县",
      "parent": "621000",
      "children": null },
    {
      "id": "621025",
      "name": "正宁县",
      "parent": "621000",
      "children": null },
    {
      "id": "621026",
      "name": "宁县",
      "parent": "621000",
      "children": null },
    {
      "id": "621027",
      "name": "镇原县",
      "parent": "621000",
      "children": null },
    {
      "id": "621028",
      "name": "其它区",
      "parent": "621000",
      "children": null }] },

  {
    "id": "621100",
    "name": "定西市",
    "parent": "620000",
    "children": [{
      "id": "621102",
      "name": "安定区",
      "parent": "621100",
      "children": null },
    {
      "id": "621121",
      "name": "通渭县",
      "parent": "621100",
      "children": null },
    {
      "id": "621122",
      "name": "陇西县",
      "parent": "621100",
      "children": null },
    {
      "id": "621123",
      "name": "渭源县",
      "parent": "621100",
      "children": null },
    {
      "id": "621124",
      "name": "临洮县",
      "parent": "621100",
      "children": null },
    {
      "id": "621125",
      "name": "漳县",
      "parent": "621100",
      "children": null },
    {
      "id": "621126",
      "name": "岷县",
      "parent": "621100",
      "children": null },
    {
      "id": "621127",
      "name": "其它区",
      "parent": "621100",
      "children": null }] },

  {
    "id": "621200",
    "name": "陇南市",
    "parent": "620000",
    "children": [{
      "id": "621202",
      "name": "武都区",
      "parent": "621200",
      "children": null },
    {
      "id": "621221",
      "name": "成县",
      "parent": "621200",
      "children": null },
    {
      "id": "621222",
      "name": "文县",
      "parent": "621200",
      "children": null },
    {
      "id": "621223",
      "name": "宕昌县",
      "parent": "621200",
      "children": null },
    {
      "id": "621224",
      "name": "康县",
      "parent": "621200",
      "children": null },
    {
      "id": "621225",
      "name": "西和县",
      "parent": "621200",
      "children": null },
    {
      "id": "621226",
      "name": "礼县",
      "parent": "621200",
      "children": null },
    {
      "id": "621227",
      "name": "徽县",
      "parent": "621200",
      "children": null },
    {
      "id": "621228",
      "name": "两当县",
      "parent": "621200",
      "children": null },
    {
      "id": "621229",
      "name": "其它区",
      "parent": "621200",
      "children": null }] },

  {
    "id": "622900",
    "name": "临夏回族自治州",
    "parent": "620000",
    "children": [{
      "id": "622901",
      "name": "临夏市",
      "parent": "622900",
      "children": null },
    {
      "id": "622921",
      "name": "临夏县",
      "parent": "622900",
      "children": null },
    {
      "id": "622922",
      "name": "康乐县",
      "parent": "622900",
      "children": null },
    {
      "id": "622923",
      "name": "永靖县",
      "parent": "622900",
      "children": null },
    {
      "id": "622924",
      "name": "广河县",
      "parent": "622900",
      "children": null },
    {
      "id": "622925",
      "name": "和政县",
      "parent": "622900",
      "children": null },
    {
      "id": "622926",
      "name": "东乡族自治县",
      "parent": "622900",
      "children": null },
    {
      "id": "622927",
      "name": "积石山保安族东乡族撒拉族自治县",
      "parent": "622900",
      "children": null },
    {
      "id": "622928",
      "name": "其它区",
      "parent": "622900",
      "children": null }] },

  {
    "id": "623000",
    "name": "甘南藏族自治州",
    "parent": "620000",
    "children": [{
      "id": "623001",
      "name": "合作市",
      "parent": "623000",
      "children": null },
    {
      "id": "623021",
      "name": "临潭县",
      "parent": "623000",
      "children": null },
    {
      "id": "623022",
      "name": "卓尼县",
      "parent": "623000",
      "children": null },
    {
      "id": "623023",
      "name": "舟曲县",
      "parent": "623000",
      "children": null },
    {
      "id": "623024",
      "name": "迭部县",
      "parent": "623000",
      "children": null },
    {
      "id": "623025",
      "name": "玛曲县",
      "parent": "623000",
      "children": null },
    {
      "id": "623026",
      "name": "碌曲县",
      "parent": "623000",
      "children": null },
    {
      "id": "623027",
      "name": "夏河县",
      "parent": "623000",
      "children": null },
    {
      "id": "623028",
      "name": "其它区",
      "parent": "623000",
      "children": null }] }] },


{
  "id": "630000",
  "name": "青海省",
  "children": [{
    "id": "630100",
    "name": "西宁市",
    "parent": "630000",
    "children": [{
      "id": "630102",
      "name": "城东区",
      "parent": "630100",
      "children": null },
    {
      "id": "630103",
      "name": "城中区",
      "parent": "630100",
      "children": null },
    {
      "id": "630104",
      "name": "城西区",
      "parent": "630100",
      "children": null },
    {
      "id": "630105",
      "name": "城北区",
      "parent": "630100",
      "children": null },
    {
      "id": "630121",
      "name": "大通回族土族自治县",
      "parent": "630100",
      "children": null },
    {
      "id": "630122",
      "name": "湟中县",
      "parent": "630100",
      "children": null },
    {
      "id": "630123",
      "name": "湟源县",
      "parent": "630100",
      "children": null },
    {
      "id": "630124",
      "name": "其它区",
      "parent": "630100",
      "children": null }] },

  {
    "id": "632100",
    "name": "海东市",
    "parent": "630000",
    "children": [{
      "id": "632121",
      "name": "平安区",
      "parent": "632100",
      "children": null },
    {
      "id": "632122",
      "name": "民和回族土族自治县",
      "parent": "632100",
      "children": null },
    {
      "id": "632123",
      "name": "乐都区",
      "parent": "632100",
      "children": null },
    {
      "id": "632126",
      "name": "互助土族自治县",
      "parent": "632100",
      "children": null },
    {
      "id": "632127",
      "name": "化隆回族自治县",
      "parent": "632100",
      "children": null },
    {
      "id": "632128",
      "name": "循化撒拉族自治县",
      "parent": "632100",
      "children": null },
    {
      "id": "632129",
      "name": "其它区",
      "parent": "632100",
      "children": null }] },

  {
    "id": "632200",
    "name": "海北藏族自治州",
    "parent": "630000",
    "children": [{
      "id": "632221",
      "name": "门源回族自治县",
      "parent": "632200",
      "children": null },
    {
      "id": "632222",
      "name": "祁连县",
      "parent": "632200",
      "children": null },
    {
      "id": "632223",
      "name": "海晏县",
      "parent": "632200",
      "children": null },
    {
      "id": "632224",
      "name": "刚察县",
      "parent": "632200",
      "children": null },
    {
      "id": "632225",
      "name": "其它区",
      "parent": "632200",
      "children": null }] },

  {
    "id": "632300",
    "name": "黄南藏族自治州",
    "parent": "630000",
    "children": [{
      "id": "632321",
      "name": "同仁县",
      "parent": "632300",
      "children": null },
    {
      "id": "632322",
      "name": "尖扎县",
      "parent": "632300",
      "children": null },
    {
      "id": "632323",
      "name": "泽库县",
      "parent": "632300",
      "children": null },
    {
      "id": "632324",
      "name": "河南蒙古族自治县",
      "parent": "632300",
      "children": null },
    {
      "id": "632325",
      "name": "其它区",
      "parent": "632300",
      "children": null }] },

  {
    "id": "632500",
    "name": "海南藏族自治州",
    "parent": "630000",
    "children": [{
      "id": "632521",
      "name": "共和县",
      "parent": "632500",
      "children": null },
    {
      "id": "632522",
      "name": "同德县",
      "parent": "632500",
      "children": null },
    {
      "id": "632523",
      "name": "贵德县",
      "parent": "632500",
      "children": null },
    {
      "id": "632524",
      "name": "兴海县",
      "parent": "632500",
      "children": null },
    {
      "id": "632525",
      "name": "贵南县",
      "parent": "632500",
      "children": null },
    {
      "id": "632526",
      "name": "其它区",
      "parent": "632500",
      "children": null }] },

  {
    "id": "632600",
    "name": "果洛藏族自治州",
    "parent": "630000",
    "children": [{
      "id": "632621",
      "name": "玛沁县",
      "parent": "632600",
      "children": null },
    {
      "id": "632622",
      "name": "班玛县",
      "parent": "632600",
      "children": null },
    {
      "id": "632623",
      "name": "甘德县",
      "parent": "632600",
      "children": null },
    {
      "id": "632624",
      "name": "达日县",
      "parent": "632600",
      "children": null },
    {
      "id": "632625",
      "name": "久治县",
      "parent": "632600",
      "children": null },
    {
      "id": "632626",
      "name": "玛多县",
      "parent": "632600",
      "children": null },
    {
      "id": "632627",
      "name": "其它区",
      "parent": "632600",
      "children": null }] },

  {
    "id": "632700",
    "name": "玉树藏族自治州",
    "parent": "630000",
    "children": [{
      "id": "632721",
      "name": "玉树市",
      "parent": "632700",
      "children": null },
    {
      "id": "632722",
      "name": "杂多县",
      "parent": "632700",
      "children": null },
    {
      "id": "632723",
      "name": "称多县",
      "parent": "632700",
      "children": null },
    {
      "id": "632724",
      "name": "治多县",
      "parent": "632700",
      "children": null },
    {
      "id": "632725",
      "name": "囊谦县",
      "parent": "632700",
      "children": null },
    {
      "id": "632726",
      "name": "曲麻莱县",
      "parent": "632700",
      "children": null },
    {
      "id": "632727",
      "name": "其它区",
      "parent": "632700",
      "children": null }] },

  {
    "id": "632800",
    "name": "海西蒙古族藏族自治州",
    "parent": "630000",
    "children": [{
      "id": "632801",
      "name": "格尔木市",
      "parent": "632800",
      "children": null },
    {
      "id": "632802",
      "name": "德令哈市",
      "parent": "632800",
      "children": null },
    {
      "id": "632821",
      "name": "乌兰县",
      "parent": "632800",
      "children": null },
    {
      "id": "632822",
      "name": "都兰县",
      "parent": "632800",
      "children": null },
    {
      "id": "632823",
      "name": "天峻县",
      "parent": "632800",
      "children": null },
    {
      "id": "632824",
      "name": "其它区",
      "parent": "632800",
      "children": null }] }] },


{
  "id": "640000",
  "name": "宁夏回族自治区",
  "children": [{
    "id": "640100",
    "name": "银川市",
    "parent": "640000",
    "children": [{
      "id": "640104",
      "name": "兴庆区",
      "parent": "640100",
      "children": null },
    {
      "id": "640105",
      "name": "西夏区",
      "parent": "640100",
      "children": null },
    {
      "id": "640106",
      "name": "金凤区",
      "parent": "640100",
      "children": null },
    {
      "id": "640121",
      "name": "永宁县",
      "parent": "640100",
      "children": null },
    {
      "id": "640122",
      "name": "贺兰县",
      "parent": "640100",
      "children": null },
    {
      "id": "640181",
      "name": "灵武市",
      "parent": "640100",
      "children": null },
    {
      "id": "640182",
      "name": "其它区",
      "parent": "640100",
      "children": null }] },

  {
    "id": "640200",
    "name": "石嘴山市",
    "parent": "640000",
    "children": [{
      "id": "640202",
      "name": "大武口区",
      "parent": "640200",
      "children": null },
    {
      "id": "640205",
      "name": "惠农区",
      "parent": "640200",
      "children": null },
    {
      "id": "640221",
      "name": "平罗县",
      "parent": "640200",
      "children": null },
    {
      "id": "640222",
      "name": "其它区",
      "parent": "640200",
      "children": null }] },

  {
    "id": "640300",
    "name": "吴忠市",
    "parent": "640000",
    "children": [{
      "id": "640302",
      "name": "利通区",
      "parent": "640300",
      "children": null },
    {
      "id": "640303",
      "name": "红寺堡区",
      "parent": "640300",
      "children": null },
    {
      "id": "640323",
      "name": "盐池县",
      "parent": "640300",
      "children": null },
    {
      "id": "640324",
      "name": "同心县",
      "parent": "640300",
      "children": null },
    {
      "id": "640381",
      "name": "青铜峡市",
      "parent": "640300",
      "children": null },
    {
      "id": "640382",
      "name": "其它区",
      "parent": "640300",
      "children": null }] },

  {
    "id": "640400",
    "name": "固原市",
    "parent": "640000",
    "children": [{
      "id": "640402",
      "name": "原州区",
      "parent": "640400",
      "children": null },
    {
      "id": "640422",
      "name": "西吉县",
      "parent": "640400",
      "children": null },
    {
      "id": "640423",
      "name": "隆德县",
      "parent": "640400",
      "children": null },
    {
      "id": "640424",
      "name": "泾源县",
      "parent": "640400",
      "children": null },
    {
      "id": "640425",
      "name": "彭阳县",
      "parent": "640400",
      "children": null },
    {
      "id": "640426",
      "name": "其它区",
      "parent": "640400",
      "children": null }] },

  {
    "id": "640500",
    "name": "中卫市",
    "parent": "640000",
    "children": [{
      "id": "640502",
      "name": "沙坡头区",
      "parent": "640500",
      "children": null },
    {
      "id": "640521",
      "name": "中宁县",
      "parent": "640500",
      "children": null },
    {
      "id": "640522",
      "name": "海原县",
      "parent": "640500",
      "children": null },
    {
      "id": "640523",
      "name": "其它区",
      "parent": "640500",
      "children": null }] }] },


{
  "id": "650000",
  "name": "新疆维吾尔自治区",
  "children": [{
    "id": "650100",
    "name": "乌鲁木齐市",
    "parent": "650000",
    "children": [{
      "id": "650102",
      "name": "天山区",
      "parent": "650100",
      "children": null },
    {
      "id": "650103",
      "name": "沙依巴克区",
      "parent": "650100",
      "children": null },
    {
      "id": "650104",
      "name": "新市区",
      "parent": "650100",
      "children": null },
    {
      "id": "650105",
      "name": "水磨沟区",
      "parent": "650100",
      "children": null },
    {
      "id": "650106",
      "name": "头屯河区",
      "parent": "650100",
      "children": null },
    {
      "id": "650107",
      "name": "达坂城区",
      "parent": "650100",
      "children": null },
    {
      "id": "650108",
      "name": "东山区",
      "parent": "650100",
      "children": null },
    {
      "id": "650109",
      "name": "米东区",
      "parent": "650100",
      "children": null },
    {
      "id": "650121",
      "name": "乌鲁木齐县",
      "parent": "650100",
      "children": null },
    {
      "id": "650122",
      "name": "其它区",
      "parent": "650100",
      "children": null }] },

  {
    "id": "650200",
    "name": "克拉玛依市",
    "parent": "650000",
    "children": [{
      "id": "650202",
      "name": "独山子区",
      "parent": "650200",
      "children": null },
    {
      "id": "650203",
      "name": "克拉玛依区",
      "parent": "650200",
      "children": null },
    {
      "id": "650204",
      "name": "白碱滩区",
      "parent": "650200",
      "children": null },
    {
      "id": "650205",
      "name": "乌尔禾区",
      "parent": "650200",
      "children": null },
    {
      "id": "650206",
      "name": "其它区",
      "parent": "650200",
      "children": null }] },

  {
    "id": "652100",
    "name": "吐鲁番市",
    "parent": "650000",
    "children": [{
      "id": "652101",
      "name": "高昌区",
      "parent": "652100",
      "children": null },
    {
      "id": "652122",
      "name": "鄯善县",
      "parent": "652100",
      "children": null },
    {
      "id": "652123",
      "name": "托克逊县",
      "parent": "652100",
      "children": null },
    {
      "id": "652124",
      "name": "其它区",
      "parent": "652100",
      "children": null }] },

  {
    "id": "652200",
    "name": "哈密地区",
    "parent": "650000",
    "children": [{
      "id": "652201",
      "name": "哈密市",
      "parent": "652200",
      "children": null },
    {
      "id": "652222",
      "name": "巴里坤哈萨克自治县",
      "parent": "652200",
      "children": null },
    {
      "id": "652223",
      "name": "伊吾县",
      "parent": "652200",
      "children": null },
    {
      "id": "652224",
      "name": "其它区",
      "parent": "652200",
      "children": null }] },

  {
    "id": "652300",
    "name": "昌吉回族自治州",
    "parent": "650000",
    "children": [{
      "id": "652301",
      "name": "昌吉市",
      "parent": "652300",
      "children": null },
    {
      "id": "652302",
      "name": "阜康市",
      "parent": "652300",
      "children": null },
    {
      "id": "652303",
      "name": "米泉市",
      "parent": "652300",
      "children": null },
    {
      "id": "652323",
      "name": "呼图壁县",
      "parent": "652300",
      "children": null },
    {
      "id": "652324",
      "name": "玛纳斯县",
      "parent": "652300",
      "children": null },
    {
      "id": "652325",
      "name": "奇台县",
      "parent": "652300",
      "children": null },
    {
      "id": "652327",
      "name": "吉木萨尔县",
      "parent": "652300",
      "children": null },
    {
      "id": "652328",
      "name": "木垒哈萨克自治县",
      "parent": "652300",
      "children": null },
    {
      "id": "652329",
      "name": "其它区",
      "parent": "652300",
      "children": null }] },

  {
    "id": "652700",
    "name": "博尔塔拉蒙古自治州",
    "parent": "650000",
    "children": [{
      "id": "652701",
      "name": "博乐市",
      "parent": "652700",
      "children": null },
    {
      "id": "652702",
      "name": "阿拉山口市",
      "parent": "652700",
      "children": null },
    {
      "id": "652722",
      "name": "精河县",
      "parent": "652700",
      "children": null },
    {
      "id": "652723",
      "name": "温泉县",
      "parent": "652700",
      "children": null },
    {
      "id": "652724",
      "name": "其它区",
      "parent": "652700",
      "children": null }] },

  {
    "id": "652800",
    "name": "巴音郭楞蒙古自治州",
    "parent": "650000",
    "children": [{
      "id": "652801",
      "name": "库尔勒市",
      "parent": "652800",
      "children": null },
    {
      "id": "652822",
      "name": "轮台县",
      "parent": "652800",
      "children": null },
    {
      "id": "652823",
      "name": "尉犁县",
      "parent": "652800",
      "children": null },
    {
      "id": "652824",
      "name": "若羌县",
      "parent": "652800",
      "children": null },
    {
      "id": "652825",
      "name": "且末县",
      "parent": "652800",
      "children": null },
    {
      "id": "652826",
      "name": "焉耆回族自治县",
      "parent": "652800",
      "children": null },
    {
      "id": "652827",
      "name": "和静县",
      "parent": "652800",
      "children": null },
    {
      "id": "652828",
      "name": "和硕县",
      "parent": "652800",
      "children": null },
    {
      "id": "652829",
      "name": "博湖县",
      "parent": "652800",
      "children": null },
    {
      "id": "652830",
      "name": "其它区",
      "parent": "652800",
      "children": null }] },

  {
    "id": "652900",
    "name": "阿克苏地区",
    "parent": "650000",
    "children": [{
      "id": "652901",
      "name": "阿克苏市",
      "parent": "652900",
      "children": null },
    {
      "id": "652922",
      "name": "温宿县",
      "parent": "652900",
      "children": null },
    {
      "id": "652923",
      "name": "库车县",
      "parent": "652900",
      "children": null },
    {
      "id": "652924",
      "name": "沙雅县",
      "parent": "652900",
      "children": null },
    {
      "id": "652925",
      "name": "新和县",
      "parent": "652900",
      "children": null },
    {
      "id": "652926",
      "name": "拜城县",
      "parent": "652900",
      "children": null },
    {
      "id": "652927",
      "name": "乌什县",
      "parent": "652900",
      "children": null },
    {
      "id": "652928",
      "name": "阿瓦提县",
      "parent": "652900",
      "children": null },
    {
      "id": "652929",
      "name": "柯坪县",
      "parent": "652900",
      "children": null },
    {
      "id": "652930",
      "name": "其它区",
      "parent": "652900",
      "children": null }] },

  {
    "id": "653000",
    "name": "克孜勒苏柯尔克孜自治州",
    "parent": "650000",
    "children": [{
      "id": "653001",
      "name": "阿图什市",
      "parent": "653000",
      "children": null },
    {
      "id": "653022",
      "name": "阿克陶县",
      "parent": "653000",
      "children": null },
    {
      "id": "653023",
      "name": "阿合奇县",
      "parent": "653000",
      "children": null },
    {
      "id": "653024",
      "name": "乌恰县",
      "parent": "653000",
      "children": null },
    {
      "id": "653025",
      "name": "其它区",
      "parent": "653000",
      "children": null }] },

  {
    "id": "653100",
    "name": "喀什地区",
    "parent": "650000",
    "children": [{
      "id": "653101",
      "name": "喀什市",
      "parent": "653100",
      "children": null },
    {
      "id": "653121",
      "name": "疏附县",
      "parent": "653100",
      "children": null },
    {
      "id": "653122",
      "name": "疏勒县",
      "parent": "653100",
      "children": null },
    {
      "id": "653123",
      "name": "英吉沙县",
      "parent": "653100",
      "children": null },
    {
      "id": "653124",
      "name": "泽普县",
      "parent": "653100",
      "children": null },
    {
      "id": "653125",
      "name": "莎车县",
      "parent": "653100",
      "children": null },
    {
      "id": "653126",
      "name": "叶城县",
      "parent": "653100",
      "children": null },
    {
      "id": "653127",
      "name": "麦盖提县",
      "parent": "653100",
      "children": null },
    {
      "id": "653128",
      "name": "岳普湖县",
      "parent": "653100",
      "children": null },
    {
      "id": "653129",
      "name": "伽师县",
      "parent": "653100",
      "children": null },
    {
      "id": "653130",
      "name": "巴楚县",
      "parent": "653100",
      "children": null },
    {
      "id": "653131",
      "name": "塔什库尔干塔吉克自治县",
      "parent": "653100",
      "children": null },
    {
      "id": "653132",
      "name": "其它区",
      "parent": "653100",
      "children": null }] },

  {
    "id": "653200",
    "name": "和田地区",
    "parent": "650000",
    "children": [{
      "id": "653201",
      "name": "和田市",
      "parent": "653200",
      "children": null },
    {
      "id": "653221",
      "name": "和田县",
      "parent": "653200",
      "children": null },
    {
      "id": "653222",
      "name": "墨玉县",
      "parent": "653200",
      "children": null },
    {
      "id": "653223",
      "name": "皮山县",
      "parent": "653200",
      "children": null },
    {
      "id": "653224",
      "name": "洛浦县",
      "parent": "653200",
      "children": null },
    {
      "id": "653225",
      "name": "策勒县",
      "parent": "653200",
      "children": null },
    {
      "id": "653226",
      "name": "于田县",
      "parent": "653200",
      "children": null },
    {
      "id": "653227",
      "name": "民丰县",
      "parent": "653200",
      "children": null },
    {
      "id": "653228",
      "name": "其它区",
      "parent": "653200",
      "children": null }] },

  {
    "id": "654000",
    "name": "伊犁哈萨克自治州",
    "parent": "650000",
    "children": [{
      "id": "654002",
      "name": "伊宁市",
      "parent": "654000",
      "children": null },
    {
      "id": "654003",
      "name": "奎屯市",
      "parent": "654000",
      "children": null },
    {
      "id": "654004",
      "name": "霍尔果斯市",
      "parent": "654000",
      "children": null },
    {
      "id": "654021",
      "name": "伊宁县",
      "parent": "654000",
      "children": null },
    {
      "id": "654022",
      "name": "察布查尔锡伯自治县",
      "parent": "654000",
      "children": null },
    {
      "id": "654023",
      "name": "霍城县",
      "parent": "654000",
      "children": null },
    {
      "id": "654024",
      "name": "巩留县",
      "parent": "654000",
      "children": null },
    {
      "id": "654025",
      "name": "新源县",
      "parent": "654000",
      "children": null },
    {
      "id": "654026",
      "name": "昭苏县",
      "parent": "654000",
      "children": null },
    {
      "id": "654027",
      "name": "特克斯县",
      "parent": "654000",
      "children": null },
    {
      "id": "654028",
      "name": "尼勒克县",
      "parent": "654000",
      "children": null },
    {
      "id": "654029",
      "name": "其它区",
      "parent": "654000",
      "children": null }] },

  {
    "id": "654200",
    "name": "塔城地区",
    "parent": "650000",
    "children": [{
      "id": "654201",
      "name": "塔城市",
      "parent": "654200",
      "children": null },
    {
      "id": "654202",
      "name": "乌苏市",
      "parent": "654200",
      "children": null },
    {
      "id": "654221",
      "name": "额敏县",
      "parent": "654200",
      "children": null },
    {
      "id": "654223",
      "name": "沙湾县",
      "parent": "654200",
      "children": null },
    {
      "id": "654224",
      "name": "托里县",
      "parent": "654200",
      "children": null },
    {
      "id": "654225",
      "name": "裕民县",
      "parent": "654200",
      "children": null },
    {
      "id": "654226",
      "name": "和布克赛尔蒙古自治县",
      "parent": "654200",
      "children": null },
    {
      "id": "654227",
      "name": "其它区",
      "parent": "654200",
      "children": null }] },

  {
    "id": "654300",
    "name": "阿勒泰地区",
    "parent": "650000",
    "children": [{
      "id": "654301",
      "name": "阿勒泰市",
      "parent": "654300",
      "children": null },
    {
      "id": "654321",
      "name": "布尔津县",
      "parent": "654300",
      "children": null },
    {
      "id": "654322",
      "name": "富蕴县",
      "parent": "654300",
      "children": null },
    {
      "id": "654323",
      "name": "福海县",
      "parent": "654300",
      "children": null },
    {
      "id": "654324",
      "name": "哈巴河县",
      "parent": "654300",
      "children": null },
    {
      "id": "654325",
      "name": "青河县",
      "parent": "654300",
      "children": null },
    {
      "id": "654326",
      "name": "吉木乃县",
      "parent": "654300",
      "children": null },
    {
      "id": "654327",
      "name": "其它区",
      "parent": "654300",
      "children": null }] },

  {
    "id": "659000",
    "name": "可克达拉市",
    "parent": "650000",
    "children": [{
      "id": "659007",
      "name": "双河市",
      "parent": "659000",
      "children": null },
    {
      "id": "659008",
      "name": "可克达拉市",
      "parent": "659000",
      "children": null }] },

  {
    "id": "659001",
    "name": "石河子市",
    "parent": "650000",
    "children": null },
  {
    "id": "659002",
    "name": "阿拉尔市",
    "parent": "650000",
    "children": null },
  {
    "id": "659003",
    "name": "图木舒克市",
    "parent": "650000",
    "children": null },
  {
    "id": "659004",
    "name": "五家渠市",
    "parent": "650000",
    "children": null }] }];exports.default = _default;

/***/ }),
/* 324 */,
/* 325 */,
/* 326 */,
/* 327 */,
/* 328 */,
/* 329 */,
/* 330 */,
/* 331 */,
/* 332 */,
/* 333 */,
/* 334 */,
/* 335 */,
/* 336 */,
/* 337 */,
/* 338 */,
/* 339 */,
/* 340 */,
/* 341 */,
/* 342 */,
/* 343 */,
/* 344 */,
/* 345 */
/*!************************************************************************************************************!*\
  !*** D:/projects/bookingVaccine/bookingVaccineMini/uni_modules/uni-forms/components/uni-forms/validate.js ***!
  \************************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
Object.defineProperty(exports, "__esModule", { value: true });exports.default = void 0;var _regenerator = _interopRequireDefault(__webpack_require__(/*! ./node_modules/@babel/runtime/regenerator */ 19));function _interopRequireDefault(obj) {return obj && obj.__esModule ? obj : { default: obj };}function _inherits(subClass, superClass) {if (typeof superClass !== "function" && superClass !== null) {throw new TypeError("Super expression must either be null or a function");}subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } });if (superClass) _setPrototypeOf(subClass, superClass);}function _setPrototypeOf(o, p) {_setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) {o.__proto__ = p;return o;};return _setPrototypeOf(o, p);}function _createSuper(Derived) {var hasNativeReflectConstruct = _isNativeReflectConstruct();return function _createSuperInternal() {var Super = _getPrototypeOf(Derived),result;if (hasNativeReflectConstruct) {var NewTarget = _getPrototypeOf(this).constructor;result = Reflect.construct(Super, arguments, NewTarget);} else {result = Super.apply(this, arguments);}return _possibleConstructorReturn(this, result);};}function _possibleConstructorReturn(self, call) {if (call && (typeof call === "object" || typeof call === "function")) {return call;}return _assertThisInitialized(self);}function _assertThisInitialized(self) {if (self === void 0) {throw new ReferenceError("this hasn't been initialised - super() hasn't been called");}return self;}function _isNativeReflectConstruct() {if (typeof Reflect === "undefined" || !Reflect.construct) return false;if (Reflect.construct.sham) return false;if (typeof Proxy === "function") return true;try {Date.prototype.toString.call(Reflect.construct(Date, [], function () {}));return true;} catch (e) {return false;}}function _getPrototypeOf(o) {_getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) {return o.__proto__ || Object.getPrototypeOf(o);};return _getPrototypeOf(o);}function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) {try {var info = gen[key](arg);var value = info.value;} catch (error) {reject(error);return;}if (info.done) {resolve(value);} else {Promise.resolve(value).then(_next, _throw);}}function _asyncToGenerator(fn) {return function () {var self = this,args = arguments;return new Promise(function (resolve, reject) {var gen = fn.apply(self, args);function _next(value) {asyncGeneratorStep(gen, resolve, reject, _next, _throw, "next", value);}function _throw(err) {asyncGeneratorStep(gen, resolve, reject, _next, _throw, "throw", err);}_next(undefined);});};}function _classCallCheck(instance, Constructor) {if (!(instance instanceof Constructor)) {throw new TypeError("Cannot call a class as a function");}}function _defineProperties(target, props) {for (var i = 0; i < props.length; i++) {var descriptor = props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if ("value" in descriptor) descriptor.writable = true;Object.defineProperty(target, descriptor.key, descriptor);}}function _createClass(Constructor, protoProps, staticProps) {if (protoProps) _defineProperties(Constructor.prototype, protoProps);if (staticProps) _defineProperties(Constructor, staticProps);return Constructor;}
var pattern = {
  email: /^\S+?@\S+?\.\S+?$/,
  idcard: /^[1-9]\d{5}(18|19|([23]\d))\d{2}((0[1-9])|(10|11|12))(([0-2][1-9])|10|20|30|31)\d{3}[0-9Xx]$/,
  url: new RegExp("^(?!mailto:)(?:(?:http|https|ftp)://|//)(?:\\S+(?::\\S*)?@)?(?:(?:(?:[1-9]\\d?|1\\d\\d|2[01]\\d|22[0-3])(?:\\.(?:1?\\d{1,2}|2[0-4]\\d|25[0-5])){2}(?:\\.(?:[0-9]\\d?|1\\d\\d|2[0-4]\\d|25[0-4]))|(?:(?:[a-z\\u00a1-\\uffff0-9]+-*)*[a-z\\u00a1-\\uffff0-9]+)(?:\\.(?:[a-z\\u00a1-\\uffff0-9]+-*)*[a-z\\u00a1-\\uffff0-9]+)*(?:\\.(?:[a-z\\u00a1-\\uffff]{2,})))|localhost)(?::\\d{2,5})?(?:(/|\\?|#)[^\\s]*)?$", 'i') };


var FORMAT_MAPPING = {
  "int": 'integer',
  "bool": 'boolean',
  "double": 'number',
  "long": 'number',
  "password": 'string'
  // "fileurls": 'array'
};

function formatMessage(args) {var resources = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : '';
  var defaultMessage = ['label'];
  defaultMessage.forEach(function (item) {
    if (args[item] === undefined) {
      args[item] = '';
    }
  });

  var str = resources;
  for (var key in args) {
    var reg = new RegExp('{' + key + '}');
    str = str.replace(reg, args[key]);
  }
  return str;
}

function isEmptyValue(value, type) {
  if (value === undefined || value === null) {
    return true;
  }

  if (typeof value === 'string' && !value) {
    return true;
  }

  if (Array.isArray(value) && !value.length) {
    return true;
  }

  if (type === 'object' && !Object.keys(value).length) {
    return true;
  }

  return false;
}

var types = {
  integer: function integer(value) {
    return types.number(value) && parseInt(value, 10) === value;
  },
  string: function string(value) {
    return typeof value === 'string';
  },
  number: function number(value) {
    if (isNaN(value)) {
      return false;
    }
    return typeof value === 'number';
  },
  "boolean": function boolean(value) {
    return typeof value === 'boolean';
  },
  "float": function float(value) {
    return types.number(value) && !types.integer(value);
  },
  array: function array(value) {
    return Array.isArray(value);
  },
  object: function object(value) {
    return typeof value === 'object' && !types.array(value);
  },
  date: function date(value) {
    return value instanceof Date;
  },
  timestamp: function timestamp(value) {
    if (!this.integer(value) || Math.abs(value).toString().length > 16) {
      return false;
    }
    return true;
  },
  file: function file(value) {
    return typeof value.url === 'string';
  },
  email: function email(value) {
    return typeof value === 'string' && !!value.match(pattern.email) && value.length < 255;
  },
  url: function url(value) {
    return typeof value === 'string' && !!value.match(pattern.url);
  },
  pattern: function pattern(reg, value) {
    try {
      return new RegExp(reg).test(value);
    } catch (e) {
      return false;
    }
  },
  method: function method(value) {
    return typeof value === 'function';
  },
  idcard: function idcard(value) {
    return typeof value === 'string' && !!value.match(pattern.idcard);
  },
  'url-https': function urlHttps(value) {
    return this.url(value) && value.startsWith('https://');
  },
  'url-scheme': function urlScheme(value) {
    return value.startsWith('://');
  },
  'url-web': function urlWeb(value) {
    return false;
  } };var


RuleValidator = /*#__PURE__*/function () {

  function RuleValidator(message) {_classCallCheck(this, RuleValidator);
    this._message = message;
  }_createClass(RuleValidator, [{ key: "validateRule", value: function () {var _validateRule = _asyncToGenerator( /*#__PURE__*/_regenerator.default.mark(function _callee(

      fieldKey, fieldValue, value, data, allData) {var result, rules, hasRequired, message, i, rule, vt, now, resultExpr;return _regenerator.default.wrap(function _callee$(_context) {while (1) {switch (_context.prev = _context.next) {case 0:
                result = null;

                rules = fieldValue.rules;

                hasRequired = rules.findIndex(function (item) {
                  return item.required;
                });if (!(
                hasRequired < 0)) {_context.next = 8;break;}if (!(
                value === null || value === undefined)) {_context.next = 6;break;}return _context.abrupt("return",
                result);case 6:if (!(

                typeof value === 'string' && !value.length)) {_context.next = 8;break;}return _context.abrupt("return",
                result);case 8:



                message = this._message;if (!(

                rules === undefined)) {_context.next = 11;break;}return _context.abrupt("return",
                message['default']);case 11:


                i = 0;case 12:if (!(i < rules.length)) {_context.next = 35;break;}
                rule = rules[i];
                vt = this._getValidateType(rule);

                Object.assign(rule, {
                  label: fieldValue.label || "[\"".concat(fieldKey, "\"]") });if (!


                RuleValidatorHelper[vt]) {_context.next = 20;break;}
                result = RuleValidatorHelper[vt](rule, value, message);if (!(
                result != null)) {_context.next = 20;break;}return _context.abrupt("break", 35);case 20:if (!




                rule.validateExpr) {_context.next = 26;break;}
                now = Date.now();
                resultExpr = rule.validateExpr(value, allData, now);if (!(
                resultExpr === false)) {_context.next = 26;break;}
                result = this._getMessage(rule, rule.errorMessage || this._message['default']);return _context.abrupt("break", 35);case 26:if (!




                rule.validateFunction) {_context.next = 32;break;}_context.next = 29;return (
                  this.validateFunction(rule, value, data, allData, vt));case 29:result = _context.sent;if (!(
                result !== null)) {_context.next = 32;break;}return _context.abrupt("break", 35);case 32:i++;_context.next = 12;break;case 35:





                if (result !== null) {
                  result = message.TAG + result;
                }return _context.abrupt("return",

                result);case 37:case "end":return _context.stop();}}}, _callee, this);}));function validateRule(_x, _x2, _x3, _x4, _x5) {return _validateRule.apply(this, arguments);}return validateRule;}() }, { key: "validateFunction", value: function () {var _validateFunction = _asyncToGenerator( /*#__PURE__*/_regenerator.default.mark(function _callee2(


      rule, value, data, allData, vt) {var result, callbackMessage, res;return _regenerator.default.wrap(function _callee2$(_context2) {while (1) {switch (_context2.prev = _context2.next) {case 0:
                result = null;_context2.prev = 1;

                callbackMessage = null;_context2.next = 5;return (
                  rule.validateFunction(rule, value, allData || data, function (message) {
                    callbackMessage = message;
                  }));case 5:res = _context2.sent;
                if (callbackMessage || typeof res === 'string' && res || res === false) {
                  result = this._getMessage(rule, callbackMessage || res, vt);
                }_context2.next = 12;break;case 9:_context2.prev = 9;_context2.t0 = _context2["catch"](1);

                result = this._getMessage(rule, _context2.t0.message, vt);case 12:return _context2.abrupt("return",

                result);case 13:case "end":return _context2.stop();}}}, _callee2, this, [[1, 9]]);}));function validateFunction(_x6, _x7, _x8, _x9, _x10) {return _validateFunction.apply(this, arguments);}return validateFunction;}() }, { key: "_getMessage", value: function _getMessage(


    rule, message, vt) {
      return formatMessage(rule, message || rule.errorMessage || this._message[vt] || message['default']);
    } }, { key: "_getValidateType", value: function _getValidateType(

    rule) {
      // TODO
      var result = '';
      if (rule.required) {
        result = 'required';
      } else if (rule.format) {
        result = 'format';
      } else if (rule.arrayType) {
        result = 'arrayTypeFormat';
      } else if (rule.range) {
        result = 'range';
      } else if (rule.maximum || rule.minimum) {
        result = 'rangeNumber';
      } else if (rule.maxLength || rule.minLength) {
        result = 'rangeLength';
      } else if (rule.pattern) {
        result = 'pattern';
      } else if (rule.validateFunction) {
        result = 'validateFunction';
      }
      return result;
    } }]);return RuleValidator;}();


var RuleValidatorHelper = {
  required: function required(rule, value, message) {
    if (rule.required && isEmptyValue(value, rule.format || typeof value)) {
      return formatMessage(rule, rule.errorMessage || message.required);
    }

    return null;
  },

  range: function range(rule, value, message) {var
    range = rule.range,errorMessage = rule.errorMessage;

    var list = new Array(range.length);
    for (var i = 0; i < range.length; i++) {
      var item = range[i];
      if (types.object(item) && item.value !== undefined) {
        list[i] = item.value;
      } else {
        list[i] = item;
      }
    }

    var result = false;
    if (Array.isArray(value)) {
      result = new Set(value.concat(list)).size === list.length;
    } else {
      if (list.indexOf(value) > -1) {
        result = true;
      }
    }

    if (!result) {
      return formatMessage(rule, errorMessage || message['enum']);
    }

    return null;
  },

  rangeNumber: function rangeNumber(rule, value, message) {
    if (!types.number(value)) {
      return formatMessage(rule, rule.errorMessage || message.pattern.mismatch);
    }var

    minimum = rule.minimum,maximum = rule.maximum,exclusiveMinimum = rule.exclusiveMinimum,exclusiveMaximum = rule.exclusiveMaximum;
    var min = exclusiveMinimum ? value <= minimum : value < minimum;
    var max = exclusiveMaximum ? value >= maximum : value > maximum;

    if (minimum !== undefined && min) {
      return formatMessage(rule, rule.errorMessage || message['number'][exclusiveMinimum ? 'exclusiveMinimum' : 'minimum']);
    } else if (maximum !== undefined && max) {
      return formatMessage(rule, rule.errorMessage || message['number'][exclusiveMaximum ? 'exclusiveMaximum' : 'maximum']);
    } else if (minimum !== undefined && maximum !== undefined && (min || max)) {
      return formatMessage(rule, rule.errorMessage || message['number'].range);
    }

    return null;
  },

  rangeLength: function rangeLength(rule, value, message) {
    if (!types.string(value) && !types.array(value)) {
      return formatMessage(rule, rule.errorMessage || message.pattern.mismatch);
    }

    var min = rule.minLength;
    var max = rule.maxLength;
    var val = value.length;

    if (min !== undefined && val < min) {
      return formatMessage(rule, rule.errorMessage || message['length'].minLength);
    } else if (max !== undefined && val > max) {
      return formatMessage(rule, rule.errorMessage || message['length'].maxLength);
    } else if (min !== undefined && max !== undefined && (val < min || val > max)) {
      return formatMessage(rule, rule.errorMessage || message['length'].range);
    }

    return null;
  },

  pattern: function pattern(rule, value, message) {
    if (!types['pattern'](rule.pattern, value)) {
      return formatMessage(rule, rule.errorMessage || message.pattern.mismatch);
    }

    return null;
  },

  format: function format(rule, value, message) {
    var customTypes = Object.keys(types);
    var format = FORMAT_MAPPING[rule.format] ? FORMAT_MAPPING[rule.format] : rule.format || rule.arrayType;

    if (customTypes.indexOf(format) > -1) {
      if (!types[format](value)) {
        return formatMessage(rule, rule.errorMessage || message.typeError);
      }
    }

    return null;
  },

  arrayTypeFormat: function arrayTypeFormat(rule, value, message) {
    if (!Array.isArray(value)) {
      return formatMessage(rule, rule.errorMessage || message.typeError);
    }

    for (var i = 0; i < value.length; i++) {
      var element = value[i];
      var formatResult = this.format(rule, element, message);
      if (formatResult !== null) {
        return formatResult;
      }
    }

    return null;
  } };var


SchemaValidator = /*#__PURE__*/function (_RuleValidator) {_inherits(SchemaValidator, _RuleValidator);var _super = _createSuper(SchemaValidator);

  function SchemaValidator(schema, options) {var _this;_classCallCheck(this, SchemaValidator);
    _this = _super.call(this, SchemaValidator.message);

    _this._schema = schema;
    _this._options = options || null;return _this;
  }_createClass(SchemaValidator, [{ key: "updateSchema", value: function updateSchema(

    schema) {
      this._schema = schema;
    } }, { key: "validate", value: function () {var _validate = _asyncToGenerator( /*#__PURE__*/_regenerator.default.mark(function _callee3(

      data, allData) {var result;return _regenerator.default.wrap(function _callee3$(_context3) {while (1) {switch (_context3.prev = _context3.next) {case 0:
                result = this._checkFieldInSchema(data);if (
                result) {_context3.next = 5;break;}_context3.next = 4;return (
                  this.invokeValidate(data, false, allData));case 4:result = _context3.sent;case 5:return _context3.abrupt("return",

                result.length ? result[0] : null);case 6:case "end":return _context3.stop();}}}, _callee3, this);}));function validate(_x11, _x12) {return _validate.apply(this, arguments);}return validate;}() }, { key: "validateAll", value: function () {var _validateAll = _asyncToGenerator( /*#__PURE__*/_regenerator.default.mark(function _callee4(


      data, allData) {var result;return _regenerator.default.wrap(function _callee4$(_context4) {while (1) {switch (_context4.prev = _context4.next) {case 0:
                result = this._checkFieldInSchema(data);if (
                result) {_context4.next = 5;break;}_context4.next = 4;return (
                  this.invokeValidate(data, true, allData));case 4:result = _context4.sent;case 5:return _context4.abrupt("return",

                result);case 6:case "end":return _context4.stop();}}}, _callee4, this);}));function validateAll(_x13, _x14) {return _validateAll.apply(this, arguments);}return validateAll;}() }, { key: "validateUpdate", value: function () {var _validateUpdate = _asyncToGenerator( /*#__PURE__*/_regenerator.default.mark(function _callee5(


      data, allData) {var result;return _regenerator.default.wrap(function _callee5$(_context5) {while (1) {switch (_context5.prev = _context5.next) {case 0:
                result = this._checkFieldInSchema(data);if (
                result) {_context5.next = 5;break;}_context5.next = 4;return (
                  this.invokeValidateUpdate(data, false, allData));case 4:result = _context5.sent;case 5:return _context5.abrupt("return",

                result.length ? result[0] : null);case 6:case "end":return _context5.stop();}}}, _callee5, this);}));function validateUpdate(_x15, _x16) {return _validateUpdate.apply(this, arguments);}return validateUpdate;}() }, { key: "invokeValidate", value: function () {var _invokeValidate = _asyncToGenerator( /*#__PURE__*/_regenerator.default.mark(function _callee6(


      data, all, allData) {var result, schema, key, value, errorMessage;return _regenerator.default.wrap(function _callee6$(_context6) {while (1) {switch (_context6.prev = _context6.next) {case 0:
                result = [];
                schema = this._schema;_context6.t0 = _regenerator.default.keys(
                schema);case 3:if ((_context6.t1 = _context6.t0()).done) {_context6.next = 15;break;}key = _context6.t1.value;
                value = schema[key];_context6.next = 8;return (
                  this.validateRule(key, value, data[key], data, allData));case 8:errorMessage = _context6.sent;if (!(
                errorMessage != null)) {_context6.next = 13;break;}
                result.push({
                  key: key,
                  errorMessage: errorMessage });if (

                all) {_context6.next = 13;break;}return _context6.abrupt("break", 15);case 13:_context6.next = 3;break;case 15:return _context6.abrupt("return",


                result);case 16:case "end":return _context6.stop();}}}, _callee6, this);}));function invokeValidate(_x17, _x18, _x19) {return _invokeValidate.apply(this, arguments);}return invokeValidate;}() }, { key: "invokeValidateUpdate", value: function () {var _invokeValidateUpdate = _asyncToGenerator( /*#__PURE__*/_regenerator.default.mark(function _callee7(


      data, all, allData) {var result, key, errorMessage;return _regenerator.default.wrap(function _callee7$(_context7) {while (1) {switch (_context7.prev = _context7.next) {case 0:
                result = [];_context7.t0 = _regenerator.default.keys(
                data);case 2:if ((_context7.t1 = _context7.t0()).done) {_context7.next = 13;break;}key = _context7.t1.value;_context7.next = 6;return (
                  this.validateRule(key, this._schema[key], data[key], data, allData));case 6:errorMessage = _context7.sent;if (!(
                errorMessage != null)) {_context7.next = 11;break;}
                result.push({
                  key: key,
                  errorMessage: errorMessage });if (

                all) {_context7.next = 11;break;}return _context7.abrupt("break", 13);case 11:_context7.next = 2;break;case 13:return _context7.abrupt("return",


                result);case 14:case "end":return _context7.stop();}}}, _callee7, this);}));function invokeValidateUpdate(_x20, _x21, _x22) {return _invokeValidateUpdate.apply(this, arguments);}return invokeValidateUpdate;}() }, { key: "_checkFieldInSchema", value: function _checkFieldInSchema(


    data) {
      var keys = Object.keys(data);
      var keys2 = Object.keys(this._schema);
      if (new Set(keys.concat(keys2)).size === keys2.length) {
        return '';
      }

      var noExistFields = keys.filter(function (key) {return keys2.indexOf(key) < 0;});
      var errorMessage = formatMessage({
        field: JSON.stringify(noExistFields) },
      SchemaValidator.message.TAG + SchemaValidator.message['defaultInvalid']);
      return [{
        key: 'invalid',
        errorMessage: errorMessage }];

    } }]);return SchemaValidator;}(RuleValidator);


function Message() {
  return {
    TAG: "",
    default: '验证错误',
    defaultInvalid: '提交的字段{field}在数据库中并不存在',
    validateFunction: '验证无效',
    required: '{label}必填',
    'enum': '{label}超出范围',
    timestamp: '{label}格式无效',
    whitespace: '{label}不能为空',
    typeError: '{label}类型无效',
    date: {
      format: '{label}日期{value}格式无效',
      parse: '{label}日期无法解析,{value}无效',
      invalid: '{label}日期{value}无效' },

    length: {
      minLength: '{label}长度不能少于{minLength}',
      maxLength: '{label}长度不能超过{maxLength}',
      range: '{label}必须介于{minLength}和{maxLength}之间' },

    number: {
      minimum: '{label}不能小于{minimum}',
      maximum: '{label}不能大于{maximum}',
      exclusiveMinimum: '{label}不能小于等于{minimum}',
      exclusiveMaximum: '{label}不能大于等于{maximum}',
      range: '{label}必须介于{minimum}and{maximum}之间' },

    pattern: {
      mismatch: '{label}格式不匹配' } };


}


SchemaValidator.message = new Message();var _default =

SchemaValidator;exports.default = _default;

/***/ })
]]);
//# sourceMappingURL=../../.sourcemap/mp-weixin/common/vendor.js.map